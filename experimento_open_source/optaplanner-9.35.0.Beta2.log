
Projeto: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 87 Método: assertThat(updatedSolver.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 88 Método: assertThat(updatedSolver.getStatus().getConditions())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 92 Método: assertThat(updatedSolver.getStatus().getInputMessageAddress())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 94 Método: assertThat(updatedSolver.getStatus().getOutputMessageAddress())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 103 Método: assertThat(configMapData.get(ConfigMapDependentResource.SOLVER_MESSAGE_INPUT_KEY))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 105 Método: assertThat(configMapData.get(ConfigMapDependentResource.SOLVER_MESSAGE_OUTPUT_KEY))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 113 Método: assertThat(deployments)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 114 Método: assertThat(deployments.get(0).getMetadata().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 138 Método: assertThat(updatedSolver.getStatus().getConditions().get(0).getStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 154 Método: assertThat(scaledObject.getSpec().getScaleTargetRef().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 155 Método: assertThat(scaledObject.getSpec().getTriggers())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 157 Método: assertThat(trigger.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 158 Método: assertThat(trigger.getMetadata().getQueueName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 159 Método: assertThat(trigger.getAuthenticationRef().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 162 Método: assertThat(secretTargetRefs)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 163 Método: assertThat(secretTargetRefs)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 188 Método: assertThat(updatedSolver.getStatus().getConditions())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 235 Método: assertThat(updatedSolver.getStatus().getConditions().get(0).getStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 244 Método: assertThat(deployments)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 246 Método: assertThat(resolvedPodTemplateSpec.getMetadata().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 247 Método: assertThat(resolvedPodTemplateSpec.getMetadata().getLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 248 Método: assertThat(resolvedPodTemplateSpec.getSpec().getContainers())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 249 Método: assertThat(resolvedPodTemplateSpec.getSpec().getContainers().get(0).getEnv())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 252 Método: assertThat(resolvedPodTemplateSpec.getSpec().getContainers().get(0).getResources().getRequests())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 263 Método: softly.assertThat(secretTargetRef.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 264 Método: softly.assertThat(secretTargetRef.getKey())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 271 Método: softly.assertThat(condition.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 272 Método: softly.assertThat(condition.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 273 Método: softly.assertThat(condition.getLastTransitionTime())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/OptaPlannerSolverReconcilerTest.java linha: 274 Método: softly.assertThat(condition.getObservedGeneration())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/model/AbstractKubernetesCustomResourceTest.java linha: 23 Método: assertThat(returned)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-operator/src/test/java/org/optaplanner/operator/impl/solver/model/AbstractKubernetesCustomResourceTest.java linha: 24 Método: assertThat(returned)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 38 Método: assertThat(a.getDistanceTo(b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 39 Método: assertThat(a.getDistanceTo(c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 40 Método: assertThat(a.getDistanceTo(d))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 41 Método: assertThat(b.getDistanceTo(a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 42 Método: assertThat(b.getDistanceTo(c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 43 Método: assertThat(b.getDistanceTo(d))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 44 Método: assertThat(c.getDistanceTo(a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 45 Método: assertThat(c.getDistanceTo(b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 46 Método: assertThat(c.getDistanceTo(d))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 47 Método: assertThat(d.getDistanceTo(a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 48 Método: assertThat(d.getDistanceTo(b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/domain/location/segmented/RoadSegmentLocationTest.java linha: 49 Método: assertThat(d.getDistanceTo(c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/persistence/VehicleRoutingSolutionFileIOTest.java linha: 44 Método: assertThat(deserializedDepotSegmentLocation.getHubTravelDistanceMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/persistence/VehicleRoutingSolutionFileIOTest.java linha: 45 Método: assertThat(deserializedDepotSegmentLocation.getNearbyTravelDistanceMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/persistence/VehicleRoutingSolutionFileIOTest.java linha: 46 Método: assertThat(deserializedCustomerSegmentLocation.getHubTravelDistanceMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/persistence/VehicleRoutingSolutionFileIOTest.java linha: 47 Método: assertThat(deserializedCustomerSegmentLocation.getNearbyTravelDistanceMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/persistence/VehicleRoutingSolutionFileIOTest.java linha: 48 Método: assertThat(deserializedRoadSegmentLocation.getHubTravelDistanceMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/persistence/VehicleRoutingSolutionFileIOTest.java linha: 68 Método: assertThat(identityMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/vehiclerouting/app/VehicleRoutingMultiThreadedReproducibilityTest.java linha: 73 Método: assertThat(previousBestSolution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/taskassigning/domain/solver/TaskDifficultyComparatorTest.java linha: 67 Método: assertThat(input)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/taskassigning/domain/solver/TaskDifficultyComparatorTest.java linha: 69 Método: assertThat(input)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 56 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 58 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 60 Método: assertThat(tree.getConsecutiveSequences())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 61 Método: assertThat(breakList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 62 Método: assertThat(breakList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 81 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 83 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 85 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 86 Método: assertThat(sequenceList.get(1).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 87 Método: assertThat(breakList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 101 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 103 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 105 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 106 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 111 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 112 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 113 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 116 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 117 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 118 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 121 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 122 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 123 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 142 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 144 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 146 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 147 Método: assertThat(sequenceList.get(1).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 148 Método: assertThat(breakList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 167 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 168 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 169 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 191 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 193 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 195 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 196 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 197 Método: assertThat(sequenceList.get(1).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 198 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 199 Método: assertThat(breakList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 227 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 229 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 230 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 254 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 255 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 256 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 262 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 263 Método: assertThat(sequenceList.get(0).getCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 264 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 297 Método: assertThat(tree.getConsecutiveSequences())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 301 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 339 Método: assertThat(tree.getConsecutiveSequences())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 343 Método: assertThat(tree.getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 379 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 383 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 385 Método: assertThat(sequenceList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 386 Método: assertThat(sequenceIterator.next().getItems())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 387 Método: assertThat(sequenceIterator.next().getItems())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 389 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/ConsecutiveSetTreeTest.java linha: 390 Método: assertThat(breakIterator.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 81 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 83 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 84 Método: assertThat(clusterList.get(0).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 86 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 87 Método: assertThat(clusterList.get(1).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 89 Método: assertThat(clusterList.get(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 90 Método: assertThat(clusterList.get(2).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 107 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 109 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 124 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 126 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 127 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 150 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 152 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 153 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 205 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 207 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 208 Método: assertThat(clusterList.get(0).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 210 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 211 Método: assertThat(clusterList.get(1).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 213 Método: assertThat(clusterList.get(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 214 Método: assertThat(clusterList.get(2).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 225 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 227 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 228 Método: assertThat(clusterList.get(0).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 230 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 231 Método: assertThat(clusterList.get(1).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 233 Método: assertThat(clusterList.get(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 234 Método: assertThat(clusterList.get(2).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 244 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 246 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 247 Método: assertThat(clusterList.get(0).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 249 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 250 Método: assertThat(clusterList.get(1).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 252 Método: assertThat(clusterList.get(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 253 Método: assertThat(clusterList.get(2).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 259 Método: assertThat(clusterList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 261 Método: assertThat(clusterList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 262 Método: assertThat(clusterList.get(0).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 264 Método: assertThat(clusterList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 265 Método: assertThat(clusterList.get(1).hasOverlap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 277 Método: assertThat(breakList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 279 Método: assertThat(breakList.get(i).getPreviousIntervalCluster())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 280 Método: assertThat(breakList.get(i).getNextIntervalCluster())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 281 Método: assertThat(breakList.get(i).getPreviousIntervalClusterEnd())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 282 Método: assertThat(breakList.get(i).getNextIntervalClusterStart())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 283 Método: assertThat(breakList.get(i).getLength())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 404 Método: assertThat(tree.getConsecutiveIntervalData().getIntervalClusters())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/impl/IntervalTreeTest.java linha: 408 Método: assertThat(tree.getConsecutiveIntervalData().getBreaks())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/experimental/ExperimentalConstraintCollectorsTest.java linha: 133 Método: assertThat(actualResult)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/OpenDataFilesTest.java linha: 74 Método: assertThat(originalScore)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/OpenDataFilesTest.java linha: 85 Método: Assertions.fail("Failed to write solution.", ex)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/OpenDataFilesTest.java linha: 89 Método: assertThat(roundTripScore)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 15 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 16 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 17 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 18 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 19 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 20 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 21 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 22 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 23 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 24 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 25 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 26 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 35 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 36 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 37 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 38 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 39 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 40 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 41 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 42 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 52 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 53 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 54 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 55 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 56 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 57 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 58 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 59 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 60 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 61 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 62 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 63 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 74 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 75 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 76 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 77 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 78 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 79 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 80 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 81 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 92 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 93 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 94 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 95 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 96 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 97 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 98 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/persistence/StringDataGeneratorTest.java linha: 99 Método: assertThat(generator.generateNextValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/business/AlphaNumericStringComparatorTest.java linha: 33 Método: softly.assertThat(a)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/business/AlphaNumericStringComparatorTest.java linha: 34 Método: softly.assertThat(b)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/business/AlphaNumericStringComparatorTest.java linha: 40 Método: softly.assertThat(comparator.compare(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/business/AlphaNumericStringComparatorTest.java linha: 41 Método: softly.assertThat(comparator.compare(b, a))
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 167 Método: Assertions.fail("Test does not support constraint streams.")
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 191 Método: Assertions.fail("Test does not support constraint streams.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 204 Método: assertThat(bestSolution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 207 Método: assertThat(bestScore)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 214 Método: assertThat(constraintMatchTotals)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 215 Método: assertThat(constraintMatchTotals.values().stream().map(ConstraintMatchTotal::getScore).reduce(Score::add).orElse(bestScore.zero()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/SolverSmokeTest.java linha: 220 Método: assertThat(scoreExplanation.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/AbstractPhaseTest.java linha: 38 Método: assertThat(bestSolution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/common/app/AbstractPhaseTest.java linha: 68 Método: assertThat(solutionManager.update(bestSolution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/optional/solver/tracking/NQueensAbstractTrackingTest.java linha: 11 Método: assertThat(recorded.get(i).getColumnIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/optional/solver/tracking/NQueensAbstractTrackingTest.java linha: 12 Método: assertThat(recorded.get(i).getRowIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/optional/solver/tracking/NQueensConstructionHeuristicTrackingTest.java linha: 48 Método: assertThat(bestSolution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/optional/solver/tracking/NQueensLocalSearchTrackingTest.java linha: 55 Método: assertThat(bestSolution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/app/NQueensExhaustiveSearchTest.java linha: 26 Método: assertThat(bestSolution.getScore().score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 115 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 116 Método: assertThat(solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 117 Método: assertThat(solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 119 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 122 Método: assertThat(solverConfig.getTerminationConfig())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 124 Método: assertThat(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 125 Método: assertThat(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 135 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 136 Método: assertThat(solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 137 Método: assertThat(solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 139 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 142 Método: assertThat(solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 144 Método: assertThat(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 145 Método: assertThat(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 157 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 158 Método: assertThat(solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 159 Método: assertThat(solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 161 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 164 Método: assertThat(solverConfig.getTerminationConfig().getMinutesSpentLimit().longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 166 Método: assertThat(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 167 Método: assertThat(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 178 Método: assertThat(solverConfig.getEnvironmentMode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 179 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 185 Método: assertThat(solverConfig.getDomainAccessType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 186 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 193 Método: assertThat(solverConfig.getDaemon())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 194 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 201 Método: assertThat(solverConfig.getMoveThreadCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 202 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 214 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 216 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 227 Método: assertThat(terminationConfig.getSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 228 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 235 Método: assertThat(terminationConfig.getUnimprovedSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 236 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 243 Método: assertThat(terminationConfig.getBestScoreLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 244 Método: assertThat(context.getBean(SolverFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 254 Método: assertThat(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 256 Método: assertThat(scoreManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 259 Método: assertThat(((DefaultSolverFactory) solverFactory).getScoreDirectorFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 263 Método: assertThat(solverManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 265 Método: assertThat(((DefaultSolverManager<TestdataSpringSolution, Long>) solverManager).getSolverFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 286 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 287 Método: assertThat(solution.getScore().score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 307 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 308 Método: assertThat(solution.getScore().score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 365 Método: assertThat(((DefaultConstraintVerifier) constraintVerifier).getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 367 Método: assertThat(((DefaultConstraintVerifier) constraintVerifier).isDroolsAlphaNetworkCompilationEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 396 Método: assertThat(((DefaultConstraintVerifier) constraintVerifier).getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 436 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 437 Método: assertThat(solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 438 Método: assertThat(solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 441 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 444 Método: assertThat(solverConfig.getTerminationConfig())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 446 Método: assertThat(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 447 Método: assertThat(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 458 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 459 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 469 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 470 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 498 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 512 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-spring-integration/optaplanner-spring-boot-autoconfigure/src/test/java/org/optaplanner/spring/boot/autoconfigure/OptaPlannerAutoConfigurationTest.java linha: 526 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 43 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 66 Método: assertThat(model)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 68 Método: assertThat(model)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 69 Método: assertThat(model)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 71 Método: assertThat(model)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 85 Método: assertThat(constraints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/devui-integration-test/src/test/java/org/optaplanner/quarkus/it/devui/OptaPlannerDevUITest.java linha: 86 Método: assertThat(constraints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/drl-integration-test/src/test/java/org/optaplanner/quarkus/drl/it/OptaPlannerTestResourceTest.java linha: 30 Método: Assertions.assertEquals("0", result.get("score"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/drl-integration-test/src/test/java/org/optaplanner/quarkus/drl/it/OptaPlannerTestResourceTest.java linha: 31 Método: Assertions.assertNotNull(result.get("entity.0.fullValue"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/drl-integration-test/src/test/java/org/optaplanner/quarkus/drl/it/OptaPlannerTestResourceTest.java linha: 32 Método: Assertions.assertNotNull(result.get("entity.1.fullValue"))
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/drl-integration-test/src/test/java/org/optaplanner/quarkus/drl/it/OptaPlannerTestResourceTest.java linha: 33 Método: Assertions.assertNotEquals(result.get("entity.0.fullValue"), result.get("entity.1.fullValue"), "Both entities have the same value. Maybe property reactive is set to ALWAYS?")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 40 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 41 Método: assertThat(solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 42 Método: assertThat(solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 45 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 48 Método: assertThat(solverConfig.getTerminationConfig().getSecondsSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 49 Método: assertThat(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorChainedXMLNoneTest.java linha: 50 Método: assertThat(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 40 Método: assertNotNull(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 41 Método: assertEquals(DomainAccessType.GIZMO, solverConfig.getDomainAccessType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 42 Método: assertEquals(TestdataQuarkusSolution.class, solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 43 Método: assertEquals(Collections.singletonList(TestdataQuarkusEntity.class), solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 44 Método: assertEquals(TestdataQuarkusConstraintProvider.class, solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 47 Método: assertEquals(3L, solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 48 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLPropertyTest.java linha: 49 Método: assertNotNull(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 39 Método: assertNotNull(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 40 Método: assertEquals(TestdataQuarkusSolution.class, solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 41 Método: assertEquals(DomainAccessType.GIZMO, solverConfig.getDomainAccessType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 42 Método: assertEquals(Collections.singletonList(TestdataQuarkusEntity.class), solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 43 Método: assertEquals(TestdataQuarkusConstraintProvider.class, solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 46 Método: assertEquals(2L, solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 47 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLDefaultTest.java linha: 48 Método: assertNotNull(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 48 Método: assertEquals(EnvironmentMode.FULL_ASSERT, solverConfig.getEnvironmentMode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 49 Método: assertTrue(solverConfig.getDaemon())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 50 Método: assertEquals("2", solverConfig.getMoveThreadCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 51 Método: assertEquals(DomainAccessType.REFLECTION, solverConfig.getDomainAccessType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 52 Método: assertEquals(null, solverConfig.getScoreDirectorFactoryConfig().getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 55 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 60 Método: assertEquals(Duration.ofHours(4), solverConfig.getTerminationConfig().getSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 61 Método: assertEquals(Duration.ofHours(5), solverConfig.getTerminationConfig().getUnimprovedSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesTest.java linha: 62 Método: assertEquals(SimpleScore.of(0).toString(), solverConfig.getTerminationConfig().getBestScoreLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGeneratedGizmoSupplierTest.java linha: 69 Método: assertThat(gizmoBeanFactory.newInstance(clazz))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGeneratedGizmoSupplierTest.java linha: 73 Método: assertThat(gizmoBeanFactory.newInstance(clazz))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 39 Método: assertNotNull(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 40 Método: assertEquals(TestdataQuarkusSolution.class, solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 41 Método: assertEquals(DomainAccessType.GIZMO, solverConfig.getDomainAccessType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 42 Método: assertEquals(Collections.singletonList(TestdataQuarkusEntity.class), solverConfig.getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 43 Método: assertEquals(TestdataQuarkusConstraintProvider.class, solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 46 Método: assertNull(solverConfig.getTerminationConfig().getSecondsSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 47 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorXMLNoneTest.java linha: 48 Método: assertNotNull(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/rest/OptaPlannerProcessorHotReloadTest.java linha: 29 Método: Assertions.assertEquals("secondsSpentLimit=2", resp)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/rest/OptaPlannerProcessorHotReloadTest.java linha: 33 Método: Assertions.assertEquals("secondsSpentLimit=9", resp)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorPlanningIdTest.java linha: 44 Método: assertNotNull(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorInterfaceEntityTest.java linha: 48 Método: assertNotNull(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorInterfaceEntityTest.java linha: 50 Método: assertEquals(entityList.size(), solution.getEntityList().size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorInterfaceEntityTest.java linha: 52 Método: assertNotSame(entityList.get(i), solution.getEntityList().get(i))
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorInvalidTest.java linha: 55 Método: fail("Build should fail")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 55 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 56 Método: assertNotNull(scoreManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 58 Método: assertSame(((DefaultSolverFactory<?>) solverFactory).getScoreDirectorFactory(), ((DefaultSolutionManager<?, ?>) solutionManager).getScoreDirectorFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 60 Método: assertNotNull(solverManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 62 Método: assertSame(solverFactory, ((DefaultSolverManager<TestDataKitchenSinkSolution, Long>) solverManager).getSolverFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 76 Método: assertNotNull(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 77 Método: assertEquals(1, solution.getPlanningEntityProperty().testGetIntVariable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorGizmoKitchenSinkTest.java linha: 78 Método: assertEquals("A", solution.getPlanningEntityProperty().testGetStringVariable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 52 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 53 Método: assertSame(((DefaultSolverFactory<TestdataQuarkusSolution>) solverFactory).getScoreDirectorFactory(), ((DefaultSolutionManager<TestdataQuarkusSolution, SimpleScore>) solutionManager).getScoreDirectorFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 55 Método: assertNotNull(solverManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 57 Método: assertSame(solverFactory, ((DefaultSolverManager<TestdataQuarkusSolution, Long>) solverManager).getSolverFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 58 Método: assertNotNull(solutionManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 72 Método: assertNotNull(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolveTest.java linha: 73 Método: assertTrue(solution.getScore().score() >= 0)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorPrivateConstructorTest.java linha: 41 Método: Assertions.assertEquals(solution.score.score(), 0)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorOverridePropertiesAtRuntimeTest.java linha: 109 Método: assertEquals("7", solverConfigProperties.get("termination.bestScoreLimit"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorOverridePropertiesAtRuntimeTest.java linha: 110 Método: assertEquals("3", solverConfigProperties.get("moveThreadCount"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorOverridePropertiesAtRuntimeTest.java linha: 122 Método: assertEquals("10", solverManagerProperties.get("parallelSolverCount"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/constraints/OptaPlannerProcessorConstraintProviderTest.java linha: 35 Método: assertEquals(TestdataQuarkusConstraintProvider.class, solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/constraints/OptaPlannerProcessorConstraintProviderTest.java linha: 37 Método: assertNotNull(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/constraints/OptaPlannerProcessorConstraintsDrlTest.java linha: 41 Método: assertEquals(Collections.singletonList(CONSTRAINTS_DRL), solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/constraints/OptaPlannerProcessorConstraintsDrlTest.java linha: 43 Método: assertNotNull(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/constraints/OptaPlannerProcessorConstraintsDrlDefaultTest.java linha: 37 Método: assertEquals(Collections.singletonList("constraints.drl"), solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/constraints/OptaPlannerProcessorConstraintsDrlDefaultTest.java linha: 39 Método: assertNotNull(solverFactory.buildSolver())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 55 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 57 Método: assertSame(((DefaultSolverFactory<TestdataQuarkusSolution>) solverFactory).getScoreDirectorFactory(), ((DefaultSolutionManager<TestdataQuarkusSolution, SimpleScore>) solutionManager).getScoreDirectorFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 59 Método: assertNotNull(solverManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 61 Método: assertSame(solverFactory, ((DefaultSolverManager<TestdataQuarkusSolution, Long>) solverManager).getSolverFactory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 62 Método: assertNotNull(scoreManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 76 Método: assertNotNull(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 77 Método: assertTrue(solution.getScore().score() >= 0)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorExtendedSolutionSolveTest.java linha: 78 Método: assertEquals("Extra Data", solution.getExtraData())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesBavetTest.java linha: 39 Método: assertEquals(ConstraintStreamImplType.BAVET, solverConfig.getScoreDirectorFactoryConfig().getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/OptaPlannerProcessorSolverPropertiesBavetTest.java linha: 42 Método: assertNotNull(solverFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessorTest.java linha: 27 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessorTest.java linha: 41 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessorTest.java linha: 55 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/deployment/OptaPlannerProcessorTest.java linha: 75 Método: assertThat(scoreDirectorFactoryConfig.getScoreDrlList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/verifier/OptaPlannerConstraintVerifierDroolsStreamImplTest.java linha: 36 Método: Assertions.assertEquals(ConstraintStreamImplType.DROOLS, ((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/verifier/OptaPlannerConstraintVerifierDroolsStreamImplTest.java linha: 39 Método: Assertions.assertEquals(!ConfigUtils.isNativeImage(), ((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).isDroolsAlphaNetworkCompilationEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus/deployment/src/test/java/org/optaplanner/quarkus/verifier/OptaPlannerConstraintVerifierBavetStreamImplTest.java linha: 38 Método: Assertions.assertEquals(ConstraintStreamImplType.BAVET, ((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).getConstraintStreamImplType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/integration-test/src/test/java/org/optaplanner/quarkus/benchmark/it/OptaPlannerBenchmarkTestResourceTest.java linha: 29 Método: Assertions.assertNotNull(benchmarkResultDirectory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/integration-test/src/test/java/org/optaplanner/quarkus/benchmark/it/OptaPlannerBenchmarkTestResourceTest.java linha: 31 Método: Assertions.assertTrue(Files.isDirectory(benchmarkResultDirectoryPath))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/integration-test/src/test/java/org/optaplanner/quarkus/benchmark/it/OptaPlannerBenchmarkTestResourceTest.java linha: 34 Método: Assertions.assertTrue(Files.isRegularFile(benchmarkResultPath))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/integration-test/src/test/java/org/optaplanner/quarkus/benchmark/it/OptaPlannerBenchmarkTestResourceTest.java linha: 36 Método: Assertions.assertTrue(xmlPath.getBoolean("plannerBenchmarkResult.solverBenchmarkResult.singleBenchmarkResult.subSingleBenchmarkResult.succeeded"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 41 Método: Assertions.assertEquals(TestdataQuarkusSolution.class, solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 42 Método: Assertions.assertEquals(2, solverConfig.getEntityClassList().size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 43 Método: Assertions.assertTrue(solverConfig.getEntityClassList().contains(TestdataQuarkusEntity.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 44 Método: Assertions.assertTrue(solverConfig.getEntityClassList().contains(TestdataQuarkusOtherEntity.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 45 Método: Assertions.assertEquals(5, plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getSolverConfig().getTerminationConfig().getMillisecondsSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 47 Método: Assertions.assertEquals(List.of(TestdataQuarkusEntity.class), plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getSolverConfig().getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 51 Método: Assertions.assertEquals(TestdataQuarkusSolution.class, childBenchmarkConfig.getSolverConfig().getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 53 Método: Assertions.assertNull(childBenchmarkConfig.getSolverConfig().getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 54 Método: Assertions.assertEquals(TestdataQuarkusConstraintProvider.class, childBenchmarkConfig.getSolverConfig().getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 59 Método: Assertions.assertEquals(TestdataQuarkusConstraintProvider.class, childBenchmarkConfig.getSolverConfig().getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 61 Método: Assertions.assertNull(childBenchmarkConfig.getSolverConfig().getEntityClassList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorInheritedSolverBenchmarkTest.java linha: 62 Método: Assertions.assertEquals(TestdataQuarkusConstraintProvider.class, childBenchmarkConfig.getSolverConfig().getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorPhasesTest.java linha: 33 Método: Assertions.assertEquals(2, plannerBenchmarkConfig.getSolverBenchmarkConfigList().get(0).getSolverConfig().getPhaseConfigList().size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorPhasesTest.java linha: 35 Método: Assertions.assertEquals(3, plannerBenchmarkConfig.getSolverBenchmarkConfigList().get(1).getSolverConfig().getPhaseConfigList().size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorMissingSpentLimitPerBenchmarkTest.java linha: 34 Método: Assertions.assertThrows(IllegalStateException.class, () -> {
    new OptaPlannerBenchmarkRecorder().benchmarkConfigSupplier(benchmarkConfig).get();
})
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorMissingSpentLimitPerBenchmarkTest.java linha: 37 Método: Assertions.assertEquals("The following " + SolverBenchmarkConfig.class.getSimpleName() + " do not " + "have termination configured: [First Fit and Local Search without Termination]. " + "At least one of the properties " + "quarkus.optaplanner.benchmark.solver.termination.spent-limit, " + "quarkus.optaplanner.benchmark.solver.termination.best-score-limit, " + "quarkus.optaplanner.benchmark.solver.termination.unimproved-spent-limit " + "is required if termination is not configured in a solver benchmark and the " + "inherited solver benchmark config.", exception.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorMissingSpentLimitTest.java linha: 28 Método: Assertions.assertThrows(IllegalStateException.class, () -> {
    new OptaPlannerBenchmarkRecorder().benchmarkConfigSupplier(new PlannerBenchmarkConfig()).get();
})
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-quarkus-integration/optaplanner-quarkus-benchmark/deployment/src/test/java/org/optaplanner/benchmark/quarkus/OptaPlannerBenchmarkProcessorMissingSpentLimitTest.java linha: 31 Método: Assertions.assertEquals("At least one of the properties quarkus.optaplanner.benchmark.solver.termination.spent-limit, quarkus.optaplanner.benchmark.solver.termination.best-score-limit, quarkus.optaplanner.benchmark.solver.termination.unimproved-spent-limit is required if termination is not configured in the inherited solver benchmark config and solverBenchmarkBluePrint is used.", exception.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/DrlScoreDirectorTest.java linha: 31 Método: assertThat(director.getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/DrlScoreDirectorTest.java linha: 32 Método: assertThat(director.getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/DrlScoreDirectorTest.java linha: 39 Método: assertThat(director.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 27 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 31 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 33 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 58 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 59 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 61 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 63 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 65 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 91 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 94 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 97 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftLongScoreHolderImplTest.java linha: 100 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 30 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 35 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 38 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 76 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 79 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 83 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 86 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 89 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 118 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 122 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 126 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 130 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftBigDecimalScoreHolderImplTest.java linha: 134 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 37 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 38 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 40 Método: assertThat(findConstraintMatchTotal(scoreHolder, "scoreRule1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 63 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 66 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 75 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleLongScoreHolderImplTest.java linha: 78 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 29 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 33 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 35 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 69 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 71 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 74 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 76 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 78 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 106 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 109 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 112 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 115 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableScoreHolderImplTest.java linha: 118 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 39 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 40 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 42 Método: assertThat(findConstraintMatchTotal(scoreHolder, "scoreRule1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 65 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 68 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 77 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleBigDecimalScoreHolderImplTest.java linha: 80 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 29 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 34 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 37 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 63 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 65 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 68 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 71 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 74 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 100 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 104 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 108 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftBigDecimalScoreHolderImplTest.java linha: 112 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 29 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 33 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 35 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 69 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 71 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 74 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 76 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 78 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 106 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 109 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 112 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 115 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableLongScoreHolderImplTest.java linha: 118 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 27 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 31 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 33 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 67 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 68 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 70 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 72 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 74 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 102 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 105 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 108 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 111 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftScoreHolderImplTest.java linha: 114 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 31 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 37 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 41 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 80 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 83 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 87 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 91 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 95 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 123 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 128 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 133 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 138 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/BendableBigDecimalScoreHolderImplTest.java linha: 143 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 27 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 31 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 33 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 58 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 59 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 61 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 63 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 65 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 91 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 94 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 97 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardSoftScoreHolderImplTest.java linha: 100 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 27 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 31 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 33 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 67 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 68 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 71 Método: assertThat(findConstraintMatchTotal(scoreHolder, "hard1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 73 Método: assertThat(scoreHolder.getIndictmentMap().get(OTHER_JUSTIFICATION).getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 75 Método: assertThat(scoreHolder.getIndictmentMap().get(UNDO_JUSTIFICATION))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 103 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 106 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 109 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 112 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/HardMediumSoftLongScoreHolderImplTest.java linha: 115 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 37 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 38 Método: assertThat(scoreHolder.extractScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 40 Método: assertThat(findConstraintMatchTotal(scoreHolder, "scoreRule1").getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 63 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 66 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 75 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/SimpleScoreHolderImplTest.java linha: 78 Método: assertThat(scoreHolder.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-drl/src/test/java/org/optaplanner/constraint/drl/holder/AbstractScoreHolderTest.java linha: 94 Método: assertThat(buildScoreHolder(true).getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-drools/src/test/java/org/optaplanner/constraint/streams/drools/ScoreDirectorFactoryFactoryTest.java linha: 27 Método: assertThat(uncastScoreDirectorFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-drools/src/test/java/org/optaplanner/constraint/streams/drools/ScoreDirectorFactoryFactoryTest.java linha: 30 Método: assertThat(scoreDirectorFactory.isDroolsAlphaNetworkCompilationEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-drools/src/test/java/org/optaplanner/constraint/streams/drools/ScoreDirectorFactoryFactoryTest.java linha: 43 Método: assertThat(uncastScoreDirectorFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-drools/src/test/java/org/optaplanner/constraint/streams/drools/ScoreDirectorFactoryFactoryTest.java linha: 46 Método: assertThat(scoreDirectorFactory.isDroolsAlphaNetworkCompilationEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractSolutionManagerTest.java linha: 51 Método: softly.assertThat(scoreExplanation.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractSolutionManagerTest.java linha: 53 Método: softly.assertThat(scoreExplanation.getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractSolutionManagerTest.java linha: 55 Método: softly.assertThat(scoreExplanation.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractSolutionManagerTest.java linha: 58 Método: softly.assertThat(constraintJustificationList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractSolutionManagerTest.java linha: 60 Método: softly.assertThat(scoreExplanation.getJustificationList(DefaultConstraintJustification.class))
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractConstraintStreamTest.java linha: 87 Método: fail("The assertableMatch (" + assertableMatch + ") is lacking," + " it's not in the constraintMatchSet (" + constraintMatchTotal.getConstraintMatchSet() + ").")
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractConstraintStreamTest.java linha: 100 Método: fail("The constraintMatch (" + constraintMatch + ") is in excess," + " it's not in the assertableMatches (" + Arrays.toString(assertableMatches) + ").")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractConstraintStreamTest.java linha: 106 Método: assertThat(score.score())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractConstraintStreamTest.java linha: 154 Método: Assertions.fail("Expected number of justifications (" + justificationList.size() + ") does not match actual (1; " + justification + ").")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1642 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1651 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1658 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1661 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1668 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1672 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1674 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1692 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1711 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1731 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1747 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1763 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1782 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1802 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1818 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1834 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1853 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1873 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1889 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1908 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1928 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1946 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1955 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1962 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1965 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1972 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1976 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1978 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 1998 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2019 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2041 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2059 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2077 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2098 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2120 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2138 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2156 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2177 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2199 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2217 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2238 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/bi/AbstractBiConstraintStreamTest.java linha: 2260 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1350 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1359 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1371 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1374 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1381 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1385 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1387 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1407 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1428 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1450 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1468 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1486 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1507 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1529 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1547 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1565 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1586 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1608 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1626 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1647 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1669 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1689 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1698 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1710 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1713 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1720 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1724 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1726 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1748 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1771 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1796 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1816 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1836 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1859 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1884 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1904 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1924 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1947 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1972 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 1992 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 2015 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/quad/AbstractQuadConstraintStreamTest.java linha: 2040 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 28 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 29 Método: softly.assertThat(joiner.matches(BigInteger.ONE, BigDecimal.ZERO))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 40 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 41 Método: softly.assertThat(joiner.matches(BigInteger.ONE, BigInteger.ZERO, BigDecimal.ZERO))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 52 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 53 Método: softly.assertThat(joiner.matches(BigInteger.ONE, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ZERO))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 66 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 68 Método: softly.assertThat(joiner.matches(BigInteger.ONE, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ZERO))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 80 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 81 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 82 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 93 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 94 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 95 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 107 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 108 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 109 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 122 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 124 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 126 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 138 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 139 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 140 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 151 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 152 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 153 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 165 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 166 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 167 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 180 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 182 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 184 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 196 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 197 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 198 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 209 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 210 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 211 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 223 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 224 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 225 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 238 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 240 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 242 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 254 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 255 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 256 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 267 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 268 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 269 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 281 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 282 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 283 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 296 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 298 Método: softly.assertThat(joiner.matches(BigInteger.TEN, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 300 Método: softly.assertThat(joiner.matches(BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigInteger.ZERO, BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 351 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 355 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 359 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 363 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 5L), Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 367 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), Interval.ofBigDecimal(3L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 371 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 375 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 379 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 383 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 389 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), Interval.ofBigDecimal(5L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 393 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(5L, 7L), Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 400 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 404 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 421 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), Interval.ofBigInt(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 425 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), Interval.ofBigInt(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 429 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), Interval.ofBigInt(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 433 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 5L), Interval.ofBigInt(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 437 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), Interval.ofBigInt(3L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 441 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), Interval.ofBigInt(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 445 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), Interval.ofBigInt(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 449 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), Interval.ofBigInt(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 453 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), Interval.ofBigInt(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 459 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), Interval.ofBigInt(5L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 463 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(5L, 7L), Interval.ofBigInt(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 470 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), Interval.ofBigInt(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 474 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), Interval.ofBigInt(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 496 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), "Ignored Arg", Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 501 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 506 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 511 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 5L), "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 516 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", Interval.ofBigDecimal(3L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 521 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 526 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 531 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 536 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 543 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", Interval.ofBigDecimal(5L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 548 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(5L, 7L), "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 556 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 561 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 585 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 591 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 597 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 603 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 5L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 609 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 615 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 621 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 627 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 633 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 641 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(5L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 647 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(5L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 656 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 662 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 686 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 693 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 700 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 5L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 707 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 5L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 714 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 5L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 721 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 728 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 735 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 742 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 751 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(5L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 758 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(5L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 768 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(1L, 3L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(3L, 7L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinersTest.java linha: 775 Método: softly.assertThat(joiner.matches(Interval.ofBigInt(3L, 7L), "Ignored Arg", "Ignored Arg", "Ignored Arg", Interval.ofBigDecimal(1L, 3L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 1968 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 1977 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 1984 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 1987 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 1995 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 1999 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2001 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2019 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2038 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2055 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2071 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2087 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2106 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2125 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2141 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2157 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2176 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2196 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2212 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2231 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2251 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2269 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2278 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2285 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2288 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2296 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2300 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2302 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2322 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2343 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2362 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2380 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2398 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2419 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2440 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2458 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2476 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2497 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2519 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2537 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2558 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2580 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2641 Método: assertThat(zeroWeightMonitorCount.getAndSet(0L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2642 Método: assertThat(oneWeightMonitorCount.getAndSet(0L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2649 Método: assertThat(zeroWeightMonitorCount.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2650 Método: assertThat(oneWeightMonitorCount.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2683 Método: assertThat(monitorCount.getAndSet(0L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/uni/AbstractUniConstraintStreamTest.java linha: 2690 Método: assertThat(monitorCount.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1628 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1637 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1649 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1652 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1659 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1663 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1665 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1684 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1704 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1725 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1742 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1759 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1779 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1800 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1817 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1834 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1854 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1875 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1892 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1912 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1933 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1952 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1961 Método: assertThat(scoreDirector.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1973 Método: assertThat(constraintMatchTotalMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1976 Método: assertThat(constraintMatchTotal.getConstraintMatchSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1983 Método: softly.assertThat(justification)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1987 Método: softly.assertThat(castJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 1989 Método: softly.assertThat(constraintMatch.getIndictedObjectList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2010 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2032 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2055 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2074 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2093 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2115 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2138 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2157 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2176 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2198 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2221 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2240 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2262 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/tri/AbstractTriConstraintStreamTest.java linha: 2285 Método: assertThat(scoreDirector.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 23 Método: assertThat(EQUAL.matches(1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 24 Método: assertThat(EQUAL.matches(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 25 Método: assertThat(EQUAL.matches(1, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 26 Método: assertThat(EQUAL.matches(null, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 31 Método: assertThat(LESS_THAN.matches(1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 32 Método: assertThat(LESS_THAN.matches(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 33 Método: assertThat(LESS_THAN.matches(2, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 38 Método: assertThat(LESS_THAN_OR_EQUAL.matches(1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 39 Método: assertThat(LESS_THAN_OR_EQUAL.matches(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 40 Método: assertThat(LESS_THAN_OR_EQUAL.matches(2, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 45 Método: assertThat(GREATER_THAN.matches(1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 46 Método: assertThat(GREATER_THAN.matches(2, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 47 Método: assertThat(GREATER_THAN.matches(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 52 Método: assertThat(GREATER_THAN_OR_EQUAL.matches(1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 53 Método: assertThat(GREATER_THAN_OR_EQUAL.matches(2, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 54 Método: assertThat(GREATER_THAN_OR_EQUAL.matches(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 60 Método: assertThat(CONTAINING.matches(collection, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 61 Método: assertThat(CONTAINING.matches(collection, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 68 Método: assertThat(INTERSECTING.matches(left, right))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 69 Método: assertThat(INTERSECTING.matches(right, left))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 70 Método: assertThat(INTERSECTING.matches(left, Collections.emptySet()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 77 Método: assertThat(DISJOINT.matches(first, second))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 78 Método: assertThat(DISJOINT.matches(second, first))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 80 Método: assertThat(DISJOINT.matches(first, third))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 81 Método: assertThat(DISJOINT.matches(third, first))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 83 Método: assertThat(DISJOINT.matches(Collections.emptyList(), Collections.emptySet()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/JoinerTypeTest.java linha: 84 Método: assertThat(DISJOINT.matches(first, Collections.emptySet()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractFactChangePropagationTest.java linha: 45 Método: assertThat(solvedEntity.getChainedObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractFactChangePropagationTest.java linha: 46 Método: assertThat(solvedEntity.getAnchor().getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/AbstractFactChangePropagationTest.java linha: 47 Método: assertThat(solution.getScore().isFeasible())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 16 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 28 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 32 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 36 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 40 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 53 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 57 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 61 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 65 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 78 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 82 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 86 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftScoreInlinerTest.java linha: 90 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 19 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 30 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 34 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 38 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 42 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 54 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 58 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 62 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 66 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 78 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 82 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 86 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 90 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 102 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 106 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 110 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableBigDecimalScoreInlinerTest.java linha: 114 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 17 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 29 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 33 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 37 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 41 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 54 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 58 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 62 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 66 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 79 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 83 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 87 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 91 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 104 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 108 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 112 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftScoreInlinerTest.java linha: 116 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 16 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 27 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 31 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 35 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 39 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 51 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 55 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 59 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 63 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 75 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 79 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 83 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 87 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 99 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 103 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 107 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableScoreInlinerTest.java linha: 111 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 16 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 28 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 32 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 36 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 40 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 53 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 57 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 61 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 65 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 78 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 82 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 86 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftLongScoreInlinerTest.java linha: 90 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 17 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 29 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 33 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 37 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 41 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 54 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 58 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 62 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 66 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 79 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 83 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 87 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 91 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 104 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 108 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 112 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftLongScoreInlinerTest.java linha: 116 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 19 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 31 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 35 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 39 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 43 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 56 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 60 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 64 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 68 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 81 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 85 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 89 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardSoftBigDecimalScoreInlinerTest.java linha: 93 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 19 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 31 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 35 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 39 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 43 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 56 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 60 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 64 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 68 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 81 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 85 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 89 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 93 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 107 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 112 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 117 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/HardMediumSoftBigDecimalScoreInlinerTest.java linha: 122 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleLongScoreInlinerTest.java linha: 16 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleLongScoreInlinerTest.java linha: 28 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleLongScoreInlinerTest.java linha: 32 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleLongScoreInlinerTest.java linha: 36 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleLongScoreInlinerTest.java linha: 40 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleBigDecimalScoreInlinerTest.java linha: 19 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleBigDecimalScoreInlinerTest.java linha: 31 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleBigDecimalScoreInlinerTest.java linha: 35 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleBigDecimalScoreInlinerTest.java linha: 39 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleBigDecimalScoreInlinerTest.java linha: 43 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleScoreInlinerTest.java linha: 16 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleScoreInlinerTest.java linha: 28 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleScoreInlinerTest.java linha: 32 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleScoreInlinerTest.java linha: 36 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/SimpleScoreInlinerTest.java linha: 40 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 16 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 27 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 31 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 35 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 39 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 51 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 55 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 59 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 63 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 75 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 79 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 83 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 87 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 99 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 103 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 107 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-common/src/test/java/org/optaplanner/constraint/streams/common/inliner/BendableLongScoreInlinerTest.java linha: 111 Método: assertThat(scoreInliner.extractScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 18 Método: softly.assertThat(policy.isSubPillarEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 19 Método: softly.assertThat(policy.getEntityComparator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 20 Método: softly.assertThat(policy.getMinimumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 21 Método: softly.assertThat(policy.getMaximumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 29 Método: softly.assertThat(policy.isSubPillarEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 30 Método: softly.assertThat(policy.getEntityComparator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 31 Método: softly.assertThat(policy.getMinimumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 32 Método: softly.assertThat(policy.getMaximumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 40 Método: softly.assertThat(policy.isSubPillarEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 41 Método: softly.assertThat(policy.getEntityComparator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 42 Método: softly.assertThat(policy.getMinimumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 43 Método: softly.assertThat(policy.getMaximumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 51 Método: softly.assertThat(policy.isSubPillarEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 52 Método: softly.assertThat(policy.getEntityComparator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 53 Método: softly.assertThat(policy.getMinimumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 54 Método: softly.assertThat(policy.getMaximumSubPillarSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 76 Método: assertThat(policy)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 78 Método: assertThat(policy2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 80 Método: assertThat(policy3)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 82 Método: assertThat(policy4)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 89 Método: assertThat(policy)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 91 Método: assertThat(policy2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/entity/pillar/SubPillarConfigPolicyTest.java linha: 93 Método: assertThat(policy3)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/common/nearby/NearbySelectionConfigTest.java linha: 94 Método: assertThat(NearbyRandomFactory.create(nearbySelectionConfig).buildNearbyRandom(false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/common/nearby/NearbySelectionConfigTest.java linha: 185 Método: assertThat(NearbyRandomFactory.create(nearbySelectionConfig).buildNearbyRandom(true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/common/nearby/NearbySelectionConfigTest.java linha: 196 Método: assertThat(NearbyRandomFactory.create(nearbySelectionConfig).buildNearbyRandom(true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/common/nearby/NearbySelectionConfigTest.java linha: 207 Método: assertThat(NearbyRandomFactory.create(nearbySelectionConfig).buildNearbyRandom(true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/common/nearby/NearbySelectionConfigTest.java linha: 222 Método: assertThat(NearbyRandomFactory.create(nearbySelectionConfig).buildNearbyRandom(true).getClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/heuristic/selector/common/nearby/NearbySelectionConfigTest.java linha: 230 Método: assertThat(NearbyRandomFactory.create(nearbySelectionConfig).buildNearbyRandom(true))
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 97 Método: Assertions.fail("Environment mode not covered: " + environmentMode)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 127 Método: Assertions.fail("Environment mode not covered: " + environmentMode)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 155 Método: Assertions.fail("Environment mode not covered: " + environmentMode)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 188 Método: softly.assertThat(listener.getScores())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 206 Método: softly.assertThat(listener.getScores())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 220 Método: softly.assertThat(random.nextInt())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/EnvironmentModeTest.java linha: 231 Método: softly.assertThat(random.nextInt())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 69 Método: assertThat(jaxbString)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 76 Método: assertThat(solverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 77 Método: assertThat(solverConfig.getPhaseConfigList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 80 Método: assertThat(solverConfig.getEnvironmentMode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 81 Método: assertThat(solverConfig.getSolutionClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 82 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 102 Método: assertThat(solverConfig.getSolutionClass().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 128 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 130 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getEasyScoreCalculatorClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 137 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 139 Método: assertThat(solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 146 Método: assertThat(solverConfig.getTerminationConfig())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 148 Método: assertThat(solverConfig.getTerminationConfig().getSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigTest.java linha: 157 Método: assertThat(inheritedSolverConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigMultiThreadedTest.java linha: 41 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigMultiThreadedTest.java linha: 42 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigMultiThreadedTest.java linha: 71 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigMultiThreadedTest.java linha: 72 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/SolverConfigMultiThreadedTest.java linha: 73 Método: assertThat(MockThreadFactory.hasBeenCalled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 15 Método: assertThat(terminationConfig.getMinutesSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 17 Método: assertThat(terminationConfig.getMinutesSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 24 Método: assertThat(terminationConfig.getUnimprovedMinutesSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 26 Método: assertThat(terminationConfig.getUnimprovedMinutesSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 43 Método: assertThat(child.getSecondsSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 63 Método: assertThat(child.getSecondsSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 83 Método: assertThat(child.getSecondsSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/solver/termination/TerminationConfigTest.java linha: 84 Método: assertThat(child.getMinutesSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 23 Método: assertThat(ConfigUtils.<Integer>mergeProperty(null, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 24 Método: assertThat(ConfigUtils.<Integer>mergeProperty(1, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 25 Método: assertThat(ConfigUtils.<Integer>mergeProperty(null, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 26 Método: assertThat(ConfigUtils.<Integer>mergeProperty(1, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 27 Método: assertThat(ConfigUtils.<Integer>mergeProperty(1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 32 Método: assertThat(ConfigUtils.<Integer>meldProperty(null, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 33 Método: assertThat(ConfigUtils.<Integer>meldProperty(1, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 34 Método: assertThat(ConfigUtils.<Integer>meldProperty(null, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 35 Método: assertThat(ConfigUtils.<Integer>meldProperty(1, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 40 Método: assertThat(ConfigUtils.ceilDivide(19, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 41 Método: assertThat(ConfigUtils.ceilDivide(20, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 42 Método: assertThat(ConfigUtils.ceilDivide(21, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 44 Método: assertThat(ConfigUtils.ceilDivide(19, -2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 45 Método: assertThat(ConfigUtils.ceilDivide(20, -2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 46 Método: assertThat(ConfigUtils.ceilDivide(21, -2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 48 Método: assertThat(ConfigUtils.ceilDivide(-19, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 49 Método: assertThat(ConfigUtils.ceilDivide(-20, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 50 Método: assertThat(ConfigUtils.ceilDivide(-21, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 52 Método: assertThat(ConfigUtils.ceilDivide(-19, -2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 53 Método: assertThat(ConfigUtils.ceilDivide(-20, -2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 54 Método: assertThat(ConfigUtils.ceilDivide(-21, -2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 80 Método: assertThat(bean.primitiveBoolean)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 81 Método: assertThat(bean.objectBoolean)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 82 Método: assertThat(bean.primitiveInt)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 83 Método: assertThat(bean.objectInteger)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 84 Método: assertThat(bean.primitiveLong)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 85 Método: assertThat(bean.objectLong)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 86 Método: assertThat((double) bean.primitiveFloat)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 87 Método: assertThat(bean.objectFloat)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 88 Método: assertThat(bean.primitiveDouble)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 89 Método: assertThat(bean.objectDouble)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 90 Método: assertThat(bean.bigDecimal)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 91 Método: assertThat(bean.string)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 92 Método: assertThat(bean.configUtilsTestBeanEnum)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 101 Método: assertThat(bean.string)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 191 Método: assertThat(ConfigUtils.newInstance(this, "testProperty", StaticInnerClass.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 245 Método: assertThat(ConfigUtils.abbreviate(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 246 Método: assertThat(ConfigUtils.abbreviate(Collections.emptyList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 247 Método: assertThat(ConfigUtils.abbreviate(Arrays.asList("A", "B", "C")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 248 Método: assertThat(ConfigUtils.abbreviate(Arrays.asList("A", "B", "C", "D")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 253 Método: assertThat(ConfigUtils.getDeclaredMembers(ClassWithSyntheticFieldParent.ClassWithSyntheticField.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 256 Método: assertThat(ConfigUtils.getAllMembers(ClassWithSyntheticFieldParent.ClassWithSyntheticField.class, PlanningScore.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 260 Método: assertThat(ConfigUtils.getDeclaredMembers(ClassWithBridgeMethod.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/config/util/ConfigUtilsTest.java linha: 263 Método: assertThat(ConfigUtils.getAllMembers(ClassWithBridgeMethod.class, PlanningScore.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/scope/ExhaustiveSearchPhaseScopeTest.java linha: 25 Método: assertThat(phase.getExpandableNodeQueue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/BlackBoxExhaustiveSearchPhaseTest.java linha: 427 Método: assertThat(listener.getWorkingSolutions())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 121 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 124 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 127 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 130 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 131 Método: assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 151 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 154 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 157 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 160 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 161 Método: assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 178 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/DefaultExhaustiveSearchPhaseTest.java linha: 179 Método: assertThat(solution.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/node/comparator/AbstractNodeComparatorTest.java linha: 44 Método: softly.assertThat(comparator.compare(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/exhaustivesearch/node/comparator/AbstractNodeComparatorTest.java linha: 47 Método: softly.assertThat(comparator.compare(b, a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 12 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_DOWN/ANY/ONLY_UP", 3).getTrendLevels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 21 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_UP/ONLY_UP/ONLY_UP", 3).isOnlyUp())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 22 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_UP/ANY/ONLY_UP", 3).isOnlyUp())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 23 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_UP/ONLY_UP/ONLY_DOWN", 3).isOnlyUp())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 28 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_DOWN/ONLY_DOWN/ONLY_DOWN", 3).isOnlyDown())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 29 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_DOWN/ANY/ONLY_DOWN", 3).isOnlyDown())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/trend/InitializingScoreTrendTest.java linha: 30 Método: assertThat(InitializingScoreTrend.parseTrend("ONLY_DOWN/ONLY_DOWN/ONLY_UP", 3).isOnlyDown())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 25 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 29 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 33 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 35 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 38 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 41 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 44 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 46 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 55 Método: assertThat(indictment.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 61 Método: assertThat(indictment.getJustificationList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 65 Método: assertThat(constraintJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 68 Método: assertThat(indictment.getJustificationList(DefaultConstraintJustification.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 71 Método: assertThat(constraintJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 79 Método: assertThat(indictment.getJustificationList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 83 Método: assertThat(firstConstraintJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 87 Método: assertThat(secondConstraintJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 90 Método: assertThat(indictment.getJustificationList(DefaultConstraintJustification.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 93 Método: assertThat(firstConstraintJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 96 Método: assertThat(indictment.getJustificationList(TestConstraintJustification.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultIndictmentTest.java linha: 99 Método: assertThat(secondConstraintJustification.getFacts())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 22 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 26 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 29 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 33 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 36 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 38 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/constraint/DefaultConstraintMatchTotalTest.java linha: 40 Método: assertThat(constraintMatchTotal.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/easy/EasyScoreDirectorTest.java linha: 25 Método: assertThat(director.isConstraintMatchEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/easy/EasyScoreDirectorSemanticsTest.java linha: 49 Método: assertThat(scoreCalculator.getStringProperty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/easy/EasyScoreDirectorSemanticsTest.java linha: 50 Método: assertThat(scoreCalculator.getIntProperty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/easy/EasyScoreDirectorFactoryTest.java linha: 33 Método: assertThat(director.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 32 Método: assertThat(score1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 41 Método: assertThat(score2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 44 Método: assertThat(scoreDirector1.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 52 Método: assertThat(scoreDirector2.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 53 Método: assertThat(scoreDirector1.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 60 Método: assertThat(scoreDirector1.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 61 Método: assertThat(scoreDirector2.calculateScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 76 Método: assertThat(score1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 85 Método: assertThat(score2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 91 Método: assertThat(score3)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 107 Método: assertThat(score1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/AbstractScoreDirectorSemanticsTest.java linha: 115 Método: assertThat(score2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreDirectorTest.java linha: 65 Método: assertThat(b1.getNextEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreDirectorTest.java linha: 71 Método: assertThat(b1.getNextEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreDirectorTest.java linha: 97 Método: assertThat(director.getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/incremental/IncrementalScoreDirectorTest.java linha: 106 Método: assertThat(director.isConstraintMatchEnabled())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactoryTest.java linha: 39 Método: assertThat(scoreCalculator.getStringProperty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactoryTest.java linha: 40 Método: assertThat(scoreCalculator.getIntProperty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactoryTest.java linha: 62 Método: assertThat(assertionScoreCalculator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 26 Método: assertThat(new HardSoftBigDecimalScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 31 Método: assertThat(new HardSoftBigDecimalScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 36 Método: assertThat(new HardSoftBigDecimalScoreDefinition().getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 47 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 50 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftBigDecimalScoreDefinitionTest.java linha: 54 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 16 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 22 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 27 Método: assertThat(new BendableLongScoreDefinition(1, 1).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 28 Método: assertThat(new BendableLongScoreDefinition(3, 4).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 29 Método: assertThat(new BendableLongScoreDefinition(4, 3).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 30 Método: assertThat(new BendableLongScoreDefinition(0, 5).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 31 Método: assertThat(new BendableLongScoreDefinition(5, 0).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 36 Método: assertThat(new BendableLongScoreDefinition(1, 1).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 39 Método: assertThat(new BendableLongScoreDefinition(3, 4).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 42 Método: assertThat(new BendableLongScoreDefinition(4, 3).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 45 Método: assertThat(new BendableLongScoreDefinition(0, 5).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 47 Método: assertThat(new BendableLongScoreDefinition(5, 0).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 53 Método: assertThat(new BendableLongScoreDefinition(1, 1).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 54 Método: assertThat(new BendableLongScoreDefinition(3, 4).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 55 Método: assertThat(new BendableLongScoreDefinition(4, 3).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 56 Método: assertThat(new BendableLongScoreDefinition(0, 5).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 57 Método: assertThat(new BendableLongScoreDefinition(5, 0).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 77 Método: assertThat(bendableLongScore.hardLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 78 Método: assertThat(bendableLongScore.softLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 83 Método: assertThat(bendableLongScore.softScore(i - hardLevelSize))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 81 Método: assertThat(bendableLongScore.hardScore(i))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 94 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 95 Método: assertThat(optimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 96 Método: assertThat(optimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 97 Método: assertThat(optimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 98 Método: assertThat(optimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 99 Método: assertThat(optimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 108 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 109 Método: assertThat(optimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 110 Método: assertThat(optimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 111 Método: assertThat(optimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 112 Método: assertThat(optimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 113 Método: assertThat(optimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 122 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 123 Método: assertThat(pessimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 124 Método: assertThat(pessimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 125 Método: assertThat(pessimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 126 Método: assertThat(pessimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 127 Método: assertThat(pessimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 136 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 137 Método: assertThat(pessimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 138 Método: assertThat(pessimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 139 Método: assertThat(pessimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 140 Método: assertThat(pessimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 141 Método: assertThat(pessimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 149 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 152 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableLongScoreDefinitionTest.java linha: 155 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 26 Método: assertThat(new HardMediumSoftBigDecimalScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 31 Método: assertThat(new HardMediumSoftBigDecimalScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 37 Método: assertThat(new HardMediumSoftBigDecimalScoreDefinition().getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 48 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 51 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftBigDecimalScoreDefinitionTest.java linha: 55 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 26 Método: assertThat(new HardMediumSoftScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 31 Método: assertThat(new HardMediumSoftScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 37 Método: assertThat(new HardMediumSoftScoreDefinition().getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 46 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 47 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 48 Método: assertThat(optimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 49 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 58 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 59 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 60 Método: assertThat(optimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 61 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 70 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 71 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 72 Método: assertThat(pessimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 73 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 82 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 83 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 84 Método: assertThat(pessimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 85 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 93 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 96 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftScoreDefinitionTest.java linha: 99 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 26 Método: assertThat(new HardSoftScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 31 Método: assertThat(new HardSoftScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 36 Método: assertThat(new HardSoftScoreDefinition().getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 45 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 46 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 47 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 56 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 57 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 58 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 67 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 68 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 69 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 78 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 79 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 80 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 88 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 91 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftScoreDefinitionTest.java linha: 94 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 26 Método: assertThat(new SimpleScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 31 Método: assertThat(new SimpleScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 40 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 41 Método: assertThat(optimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 50 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 51 Método: assertThat(optimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 60 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 61 Método: assertThat(pessimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 70 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 71 Método: assertThat(pessimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 79 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 82 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleScoreDefinitionTest.java linha: 85 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 26 Método: assertThat(new HardMediumSoftLongScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 31 Método: assertThat(new HardMediumSoftLongScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 37 Método: assertThat(new HardMediumSoftLongScoreDefinition().getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 46 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 47 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 48 Método: assertThat(optimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 49 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 58 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 59 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 60 Método: assertThat(optimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 61 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 70 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 71 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 72 Método: assertThat(pessimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 73 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 82 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 83 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 84 Método: assertThat(pessimisticBound.mediumScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 85 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 93 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 96 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardMediumSoftLongScoreDefinitionTest.java linha: 99 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 26 Método: assertThat(new SimpleLongScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 31 Método: assertThat(new SimpleLongScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 40 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 41 Método: assertThat(optimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 50 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 51 Método: assertThat(optimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 60 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 61 Método: assertThat(pessimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 70 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 71 Método: assertThat(pessimisticBound.score())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 79 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 82 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleLongScoreDefinitionTest.java linha: 85 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 16 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 22 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 28 Método: assertThat(new BendableBigDecimalScoreDefinition(1, 1).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 29 Método: assertThat(new BendableBigDecimalScoreDefinition(3, 4).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 30 Método: assertThat(new BendableBigDecimalScoreDefinition(4, 3).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 31 Método: assertThat(new BendableBigDecimalScoreDefinition(0, 5).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 32 Método: assertThat(new BendableBigDecimalScoreDefinition(5, 0).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 37 Método: assertThat(new BendableBigDecimalScoreDefinition(1, 1).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 40 Método: assertThat(new BendableBigDecimalScoreDefinition(3, 4).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 43 Método: assertThat(new BendableBigDecimalScoreDefinition(4, 3).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 46 Método: assertThat(new BendableBigDecimalScoreDefinition(0, 5).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 48 Método: assertThat(new BendableBigDecimalScoreDefinition(5, 0).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 54 Método: assertThat(new BendableBigDecimalScoreDefinition(1, 1).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 55 Método: assertThat(new BendableBigDecimalScoreDefinition(3, 4).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 56 Método: assertThat(new BendableBigDecimalScoreDefinition(4, 3).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 57 Método: assertThat(new BendableBigDecimalScoreDefinition(0, 5).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 58 Método: assertThat(new BendableBigDecimalScoreDefinition(5, 0).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 80 Método: assertThat(bendableScore.hardLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 81 Método: assertThat(bendableScore.softLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 86 Método: assertThat(bendableScore.softScore(i - hardLevelSize))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 84 Método: assertThat(bendableScore.hardScore(i))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 100 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 103 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableBigDecimalScoreDefinitionTest.java linha: 106 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 26 Método: assertThat(new SimpleBigDecimalScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 31 Método: assertThat(new SimpleBigDecimalScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 41 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 44 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/SimpleBigDecimalScoreDefinitionTest.java linha: 47 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 15 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 21 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 26 Método: assertThat(new HardSoftLongScoreDefinition().getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 31 Método: assertThat(new HardSoftLongScoreDefinition().getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 36 Método: assertThat(new HardSoftLongScoreDefinition().getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 45 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 46 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 47 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 56 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 57 Método: assertThat(optimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 58 Método: assertThat(optimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 67 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 68 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 69 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 78 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 79 Método: assertThat(pessimisticBound.hardScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 80 Método: assertThat(pessimisticBound.softScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 88 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 91 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/HardSoftLongScoreDefinitionTest.java linha: 94 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 16 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 22 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 27 Método: assertThat(new BendableScoreDefinition(1, 1).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 28 Método: assertThat(new BendableScoreDefinition(3, 4).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 29 Método: assertThat(new BendableScoreDefinition(4, 3).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 30 Método: assertThat(new BendableScoreDefinition(0, 5).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 31 Método: assertThat(new BendableScoreDefinition(5, 0).getLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 36 Método: assertThat(new BendableScoreDefinition(1, 1).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 39 Método: assertThat(new BendableScoreDefinition(3, 4).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 42 Método: assertThat(new BendableScoreDefinition(4, 3).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 45 Método: assertThat(new BendableScoreDefinition(0, 5).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 47 Método: assertThat(new BendableScoreDefinition(5, 0).getLevelLabels())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 53 Método: assertThat(new BendableScoreDefinition(1, 1).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 54 Método: assertThat(new BendableScoreDefinition(3, 4).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 55 Método: assertThat(new BendableScoreDefinition(4, 3).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 56 Método: assertThat(new BendableScoreDefinition(0, 5).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 57 Método: assertThat(new BendableScoreDefinition(5, 0).getFeasibleLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 77 Método: assertThat(bendableScore.hardLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 78 Método: assertThat(bendableScore.softLevelsSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 83 Método: assertThat(bendableScore.softScore(i - hardLevelSize))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 81 Método: assertThat(bendableScore.hardScore(i))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 94 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 95 Método: assertThat(optimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 96 Método: assertThat(optimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 97 Método: assertThat(optimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 98 Método: assertThat(optimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 99 Método: assertThat(optimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 108 Método: assertThat(optimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 109 Método: assertThat(optimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 110 Método: assertThat(optimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 111 Método: assertThat(optimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 112 Método: assertThat(optimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 113 Método: assertThat(optimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 122 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 123 Método: assertThat(pessimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 124 Método: assertThat(pessimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 125 Método: assertThat(pessimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 126 Método: assertThat(pessimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 127 Método: assertThat(pessimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 136 Método: assertThat(pessimisticBound.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 137 Método: assertThat(pessimisticBound.hardScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 138 Método: assertThat(pessimisticBound.hardScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 139 Método: assertThat(pessimisticBound.softScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 140 Método: assertThat(pessimisticBound.softScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 141 Método: assertThat(pessimisticBound.softScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 149 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, zeroDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 152 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, oneDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/score/buildin/BendableScoreDefinitionTest.java linha: 155 Método: assertThat(scoreDefinition.divideBySanitizedDivisor(dividend, tenDivisor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 85 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 87 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 89 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 90 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 93 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 94 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 98 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 99 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 100 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 102 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 105 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 106 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 108 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 110 Método: assertThat(recordingEntitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 111 Método: assertThat(replayingEntitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 112 Método: assertThat(recordingEntitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 113 Método: assertThat(replayingEntitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 114 Método: assertThat(recordingEntitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/mimic/MimicReplayingEntitySelectorTest.java linha: 115 Método: assertThat(replayingEntitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ShufflingEntitySelectorTest.java linha: 15 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ShufflingEntitySelectorTest.java linha: 21 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SelectedCountLimitEntitySelectorTest.java linha: 143 Método: assertThat(entitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SelectedCountLimitEntitySelectorTest.java linha: 150 Método: assertThat(entitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SelectedCountLimitEntitySelectorTest.java linha: 158 Método: assertThat(entitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SelectedCountLimitEntitySelectorTest.java linha: 160 Método: assertThat(entitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SelectedCountLimitEntitySelectorTest.java linha: 162 Método: assertThat(entitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 69 Método: assertThat(entitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 70 Método: assertThat(entitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 71 Método: assertThat(entitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 73 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 75 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 77 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 79 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 81 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 83 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 97 Método: assertThat(entitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 104 Método: assertThat(entitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/ProbabilityEntitySelectorTest.java linha: 129 Método: assertThat(entitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/CachingEntitySelectorTest.java linha: 119 Método: assertThat(cachingEntitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/CachingEntitySelectorTest.java linha: 121 Método: assertThat(cachingEntitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/CachingEntitySelectorTest.java linha: 132 Método: assertThat(cachingEntitySelector.iterator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/CachingEntitySelectorTest.java linha: 137 Método: assertThat(cachingEntitySelector.iterator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SortingEntitySelectorTest.java linha: 113 Método: assertThat(entitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/decorator/SortingEntitySelectorTest.java linha: 120 Método: assertThat(entitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 425 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector1.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 427 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector1.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 429 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector2.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 431 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector2.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 433 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector1.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 435 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector1.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 437 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector1.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/pillar/DefaultPillarSelectorTest.java linha: 439 Método: Assertions.assertThat(pillarSupplyManager.getActiveCount(pillarSelector1.getPillarDemand()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 35 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 37 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 39 Método: assertThat(entitySelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 49 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 51 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 53 Método: assertThat(entitySelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 63 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 76 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 78 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 80 Método: assertThat(entitySelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 90 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 92 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 94 Método: assertThat(entitySelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 104 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 117 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 119 Método: assertThat(((ShufflingEntitySelector<TestdataSolution>) entitySelector).getChildEntitySelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 121 Método: assertThat(entitySelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 131 Método: assertThat(entitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 133 Método: assertThat(((ShufflingEntitySelector<TestdataSolution>) entitySelector).getChildEntitySelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 135 Método: assertThat(entitySelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 170 Método: assertThat(resultingEntitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/entity/EntitySelectorFactoryTest.java linha: 185 Método: assertThat(resultingEntitySelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 57 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 59 Método: assertThat(valueSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 72 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 75 Método: assertThat(valueSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 88 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 103 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 105 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 107 Método: assertThat(valueSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 120 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 123 Método: assertThat(valueSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 136 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 151 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 152 Método: assertThat(((ShufflingValueSelector) valueSelector).getChildValueSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 154 Método: assertThat(valueSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 167 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 168 Método: assertThat(((ShufflingValueSelector) valueSelector).getChildValueSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 170 Método: assertThat(valueSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 194 Método: assertThat(resultingValueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 207 Método: assertThat(resultingValueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 237 Método: assertThat(resultingValueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/ValueSelectorFactoryTest.java linha: 292 Método: assertThat(valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 87 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 89 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 91 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 92 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 95 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 96 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 100 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 101 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 102 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 104 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 107 Método: assertThat(recordingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 108 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 110 Método: assertThat(replayingIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 112 Método: assertThat(recordingValueSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 113 Método: assertThat(replayingValueSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 114 Método: assertThat(recordingValueSelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 115 Método: assertThat(replayingValueSelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 116 Método: assertThat(recordingValueSelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/mimic/MimicReplayingValueSelectorTest.java linha: 117 Método: assertThat(replayingValueSelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 54 Método: assertThat(filter.accept(scoreDirector, a0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 55 Método: assertThat(filter.accept(scoreDirector, a1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 56 Método: assertThat(filter.accept(scoreDirector, a2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 57 Método: assertThat(filter.accept(scoreDirector, a3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 59 Método: assertThat(filter.accept(scoreDirector, b0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 60 Método: assertThat(filter.accept(scoreDirector, b1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 61 Método: assertThat(filter.accept(scoreDirector, b2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 63 Método: assertThat(filter.accept(scoreDirector, c0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 64 Método: assertThat(filter.accept(scoreDirector, c1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 65 Método: assertThat(filter.accept(scoreDirector, c2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/decorator/MovableChainedTrailingValueFilterTest.java linha: 73 Método: assertThat(((GenuineVariableDescriptor<TestdataPinnedChainedSolution>) variableDescriptor).getMovableChainedTrailingValueFilter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/SubChainSelectorFactoryTest.java linha: 29 Método: assertThat(subChainSelector.maximumSubChainSize)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/SubChainSelectorFactoryTest.java linha: 30 Método: assertThat(subChainSelector.minimumSubChainSize)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/SubChainSelectorFactoryTest.java linha: 31 Método: assertThat(subChainSelector.randomSelection)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 122 Método: assertThat(selector.calculateSubChainSelectionSize(new SubChain(Arrays.asList(a1, a2, a3, a4))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 546 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 554 Método: assertThat(count)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 558 Método: assertThat(subChainCountMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 559 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 560 Método: assertThat(subChainSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 561 Método: assertThat(subChainSelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 562 Método: assertThat(subChainSelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/value/chained/DefaultSubChainSelectorTest.java linha: 566 Método: assertThat(iterator)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/SelectorTestUtils.java linha: 180 Método: fail("Chain assertion failed for chainedEntity (" + chainedEntity + ").\n" + "Expected: " + chainedObject + "\n" + "Actual:   " + chainedEntity.getChainedObject() + "\n" + "Expected chain: " + Arrays.toString(chainedObjects) + "\n" + "Actual chain:   " + Arrays.toString(Arrays.copyOf(chainedObjects, i)) + " ... [" + chainedEntity.getChainedObject() + ", " + chainedEntity + "] ...")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 22 Método: assertThat(nearbyRandom.nextInt(new TestRandom(0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 23 Método: assertThat(nearbyRandom.nextInt(new TestRandom(2.0 / 100.0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 24 Método: assertThat(nearbyRandom.nextInt(new TestRandom(2.0 / 100.0 + 2.0 / 100.0 + 2.0 / 10000.0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 25 Método: assertThat(nearbyRandom.nextInt(new TestRandom(2.0 / 100.0 + 2.0 / 100.0 + 2.0 / 10000.0 + 2.0 / 100.0 + 4.0 / 10000.0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 28 Método: assertThat(nearbyRandom.nextInt(new TestRandom(0), 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 29 Método: assertThat(nearbyRandom.nextInt(new TestRandom(2.0 / 10.0), 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 39 Método: assertThat(nearbyRandom.nextInt(random, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/LinearDistributionNearbyRandomTest.java linha: 41 Método: assertThat(nearbyRandom.nextInt(random, 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 26 Método: assertThat(nearbyRandom.nextInt(random, 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 27 Método: assertThat(nearbyRandom.nextInt(random, 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 28 Método: assertThat(nearbyRandom.nextInt(random, 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 39 Método: assertThat(nearbyRandom.nextInt(random, 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 40 Método: assertThat(nearbyRandom.nextInt(random, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 42 Método: assertThat(nearbyRandom.nextInt(random, 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/ParabolicDistributionNearbyRandomTest.java linha: 43 Método: assertThat(nearbyRandom.nextInt(random, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 29 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 30 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 31 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 32 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 33 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 34 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 35 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 36 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 37 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 38 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 39 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 40 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 41 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 42 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 43 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 44 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 63 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 64 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 65 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 66 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 67 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 68 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 69 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 70 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 71 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 72 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 73 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 74 Método: assertThat(nearbyDistanceMatrix.getDestination(c, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 75 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 76 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 77 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 78 Método: assertThat(nearbyDistanceMatrix.getDestination(d, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 96 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 97 Método: assertThat(nearbyDistanceMatrix.getDestination(a, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 99 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/NearbyDistanceMatrixTest.java linha: 100 Método: assertThat(nearbyDistanceMatrix.getDestination(b, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 48 Método: assertThat(nearbyRandom.nextInt(random, 100))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 50 Método: assertThat(nearbyRandom.nextInt(random, 1000))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 52 Método: assertThat(nearbyRandom.nextInt(random, 10000))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 54 Método: assertThat(nearbyRandom.nextInt(random, 20))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 56 Método: assertThat(nearbyRandom.nextInt(random, 7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 60 Método: assertThat(nearbyRandom.nextInt(random, 700))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 62 Método: assertThat(nearbyRandom.nextInt(random, 170))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 64 Método: assertThat(nearbyRandom.nextInt(random, 70))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 69 Método: assertThat(nearbyRandom.nextInt(random, 700))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 71 Método: assertThat(nearbyRandom.nextInt(random, 700))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 81 Método: assertThat(nearbyRandom.nextInt(random, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 84 Método: assertThat(nearbyRandom.nextInt(random, 10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 85 Método: assertThat(nearbyRandom.nextInt(random, 11))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 86 Método: assertThat(nearbyRandom.nextInt(random, 20))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 87 Método: assertThat(nearbyRandom.nextInt(random, 19))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 91 Método: assertThat(nearbyRandom.nextInt(random, 21))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 92 Método: assertThat(nearbyRandom.nextInt(random, 22))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 95 Método: assertThat(nearbyRandom.nextInt(random, 200))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 96 Método: assertThat(nearbyRandom.nextInt(random, 300))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 97 Método: assertThat(nearbyRandom.nextInt(random, 1000))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 101 Método: assertThat(nearbyRandom.nextInt(random, 199))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 102 Método: assertThat(nearbyRandom.nextInt(random, 198))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 103 Método: assertThat(nearbyRandom.nextInt(random, 197))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 106 Método: assertThat(nearbyRandom.nextInt(random, 5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 107 Método: assertThat(nearbyRandom.nextInt(random, 6))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BlockDistributionNearbyRandomTest.java linha: 108 Método: assertThat(nearbyRandom.nextInt(random, 4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BetaDistributionNearbyRandomTest.java linha: 25 Método: assertThat(nearbyRandom.nextInt(new TestRandom(0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BetaDistributionNearbyRandomTest.java linha: 26 Método: assertThat(nearbyRandom.nextInt(new TestRandom(1.0 / 500.0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BetaDistributionNearbyRandomTest.java linha: 27 Método: assertThat(nearbyRandom.nextInt(new TestRandom(2.0 / 500.0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/nearby/BetaDistributionNearbyRandomTest.java linha: 28 Método: assertThat(nearbyRandom.nextInt(new TestRandom(3.0 / 500.0), 500))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/decorator/ComparatorSelectionSorterTest.java linha: 24 Método: assertThat(arrayToSort)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/common/decorator/ComparatorSelectionSorterTest.java linha: 30 Método: assertThat(arrayToSort)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 38 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 41 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 42 Método: assertThat(((CachingMoveSelector<TestdataSolution>) moveSelector).getChildMoveSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 56 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 59 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 60 Método: assertThat(((CachingMoveSelector<TestdataSolution>) moveSelector).getChildMoveSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 74 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 75 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 88 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 91 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 92 Método: assertThat(((CachingMoveSelector<TestdataSolution>) moveSelector).getChildMoveSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 106 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 109 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 110 Método: assertThat(((CachingMoveSelector<TestdataSolution>) moveSelector).getChildMoveSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 124 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 125 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 138 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 140 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 141 Método: assertThat(((ShufflingMoveSelector<TestdataSolution>) moveSelector).getChildMoveSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 155 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 157 Método: assertThat(moveSelector.getCacheType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 158 Método: assertThat(((ShufflingMoveSelector) moveSelector).getChildMoveSelector())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 209 Método: assertThat(sortingMoveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 222 Método: assertThat(sortingMoveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 272 Método: assertThat(minimumCacheType)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/MoveSelectorFactoryTest.java linha: 273 Método: assertThat(randomSelection)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 47 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 51 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 55 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 59 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 87 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 88 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 93 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 94 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 103 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 104 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 105 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 111 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 112 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 113 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 158 Método: assertThat(move.getPillar())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 159 Método: assertThat(move.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 168 Método: assertThat(move.getVariableName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 175 Método: assertThat(move.getVariableName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 190 Método: assertThat(new PillarChangeMove<>(Arrays.asList(a, b), variableDescriptor, v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 191 Método: assertThat(new PillarChangeMove<>(Arrays.asList(a, b), variableDescriptor, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 192 Método: assertThat(new PillarChangeMove<>(Arrays.asList(c, d, e), variableDescriptor, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 194 Método: assertThat(new PillarChangeMove<>(Arrays.asList(c, d, e), variableDescriptor, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarChangeMoveTest.java linha: 195 Método: assertThat(new PillarChangeMove<>(Arrays.asList(d), variableDescriptor, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingSwapMoveTest.java linha: 275 Método: assertThat(move.getLeftSubChain().getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingSwapMoveTest.java linha: 276 Método: assertThat(move.getRightSubChain().getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingSwapMoveTest.java linha: 298 Método: assertThat(new SubChainReversingSwapMove<>(variableDescriptor, inverseVariableSupply, new SubChain(Arrays.asList(a2, a3, a4)), new SubChain(Arrays.asList(b1, b2, b3))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingSwapMoveTest.java linha: 301 Método: assertThat(new SubChainReversingSwapMove<>(variableDescriptor, inverseVariableSupply, new SubChain(Arrays.asList(a1, a2)), new SubChain(Arrays.asList(a4, a5))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingSwapMoveTest.java linha: 304 Método: assertThat(new SubChainReversingSwapMove<>(variableDescriptor, inverseVariableSupply, new SubChain(Arrays.asList(a3)), new SubChain(Arrays.asList(b2))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveTest.java linha: 185 Método: assertThat(move.getLeftSubChain().getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveTest.java linha: 186 Método: assertThat(move.getRightSubChain().getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveTest.java linha: 208 Método: assertThat(new SubChainSwapMove<>(variableDescriptor, inverseVariableSupply, new SubChain(Arrays.asList(a2, a3, a4)), new SubChain(Arrays.asList(b1, b2, b3))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveTest.java linha: 211 Método: assertThat(new SubChainSwapMove<>(variableDescriptor, inverseVariableSupply, new SubChain(Arrays.asList(a1, a2)), new SubChain(Arrays.asList(a4, a5))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveTest.java linha: 214 Método: assertThat(new SubChainSwapMove<>(variableDescriptor, inverseVariableSupply, new SubChain(Arrays.asList(a3)), new SubChain(Arrays.asList(b2))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveSelectorFactoryTest.java linha: 34 Método: assertThat(selector.leftSubChainSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveSelectorFactoryTest.java linha: 35 Método: assertThat(selector.rightSubChainSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveSelectorFactoryTest.java linha: 36 Método: assertThat(selector.variableDescriptor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainSwapMoveSelectorFactoryTest.java linha: 37 Método: assertThat(selector.randomSelection)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 55 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a2, b0).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 57 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, b1, a1).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 59 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a1, a2).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 61 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a3, a0).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 63 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a1, a1).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 65 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a2, a0).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 247 Método: assertThat(move.getLeftEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 248 Método: assertThat(move.getRightValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 278 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a1, b0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 280 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a1, b1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 282 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, b1, a0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 284 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a1, a3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 286 Método: assertThat(new TailChainSwapMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a2, a0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 316 Método: assertThat(move.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 319 Método: assertThat(move.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/TailChainSwapMoveTest.java linha: 322 Método: assertThat(undoMove.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingChangeMoveTest.java linha: 245 Método: assertThat(move.getSubChain().getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingChangeMoveTest.java linha: 246 Método: assertThat(move.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingChangeMoveTest.java linha: 268 Método: assertThat(new SubChainReversingChangeMove<>(new SubChain(Arrays.asList(a2, a3, a4)), variableDescriptor, inverseVariableSupply, b0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingChangeMoveTest.java linha: 271 Método: assertThat(new SubChainReversingChangeMove<>(new SubChain(Arrays.asList(a1, a2, a3, a4, a5)), variableDescriptor, inverseVariableSupply, b3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingChangeMoveTest.java linha: 274 Método: assertThat(new SubChainReversingChangeMove<>(new SubChain(Arrays.asList(a1, a2, a3)), variableDescriptor, inverseVariableSupply, a5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainReversingChangeMoveTest.java linha: 277 Método: assertThat(new SubChainReversingChangeMove<>(new SubChain(Arrays.asList(a3)), variableDescriptor, inverseVariableSupply, b2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorTest.java linha: 64 Método: assertThat(testedSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorTest.java linha: 68 Método: assertThat(testedSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorTest.java linha: 72 Método: assertThat(testedSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorTest.java linha: 76 Método: assertThat(testedSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorTest.java linha: 90 Método: assertThat(testedSelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorTest.java linha: 94 Método: assertThat(testedSelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 66 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 73 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 81 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 88 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 130 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 136 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 143 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 149 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 156 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 162 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 169 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 171 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 173 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 208 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 213 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 219 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 224 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 230 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 235 Método: assertThat(undoMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 287 Método: assertThat(move.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 288 Método: assertThat(move.getValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 323 Método: assertThat(new KOptMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a2, new Object[] { b0, c1 }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/KOptMoveTest.java linha: 325 Método: assertThat(new KOptMove<>(variableDescriptor, inverseVariableSupply, anchorVariableSupply, a2, new Object[] { b2, c2 }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 43 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 77 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 111 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 143 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 164 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 204 Método: softly.assertThat(move.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMoveTest.java linha: 205 Método: softly.assertThat(move.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorFactoryTest.java linha: 35 Método: assertThat(selector.subChainSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorFactoryTest.java linha: 36 Método: assertThat(selector.valueSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveSelectorFactoryTest.java linha: 37 Método: assertThat(selector.randomSelection)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java linha: 172 Método: assertThat(move.getSubChain().getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java linha: 173 Método: assertThat(move.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java linha: 195 Método: assertThat(new SubChainChangeMove<>(new SubChain(Arrays.asList(a2, a3, a4)), variableDescriptor, inverseVariableSupply, b0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java linha: 198 Método: assertThat(new SubChainChangeMove<>(new SubChain(Arrays.asList(a1, a2, a3, a4, a5)), variableDescriptor, inverseVariableSupply, b3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java linha: 201 Método: assertThat(new SubChainChangeMove<>(new SubChain(Arrays.asList(a1, a2, a3)), variableDescriptor, inverseVariableSupply, a5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java linha: 204 Método: assertThat(new SubChainChangeMove<>(new SubChain(Arrays.asList(a3)), variableDescriptor, inverseVariableSupply, b2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 67 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 68 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 69 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 70 Método: softly.assertThat(b1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 81 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 82 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 83 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 84 Método: softly.assertThat(b1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 126 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 127 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 128 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 129 Método: softly.assertThat(b1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 130 Método: softly.assertThat(b2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 144 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 145 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 146 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 147 Método: softly.assertThat(b1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 148 Método: softly.assertThat(b2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 185 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 186 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 187 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 188 Método: softly.assertThat(a4.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 199 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 200 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 201 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 202 Método: softly.assertThat(a4.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 214 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 215 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 216 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 217 Método: softly.assertThat(a4.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 228 Método: softly.assertThat(a1.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 229 Método: softly.assertThat(a2.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 230 Método: softly.assertThat(a3.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 231 Método: softly.assertThat(a4.getUnchainedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 278 Método: softly.assertThat(move.getLeftEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedSwapMoveTest.java linha: 279 Método: softly.assertThat(move.getRightEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/OriginalListChangeIteratorTest.java linha: 53 Método: assertThat(listChangeIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 37 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 2, e1, 1, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 39 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 2, e1, 0, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 41 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 0, 3, e1, 1, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 43 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 0, 3, e1, 2, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 45 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 2, e2, 0, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 57 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 58 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 69 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 70 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 82 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 83 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 94 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 95 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 107 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 121 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 152 Método: assertThat(move.getSourceEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 153 Método: assertThat(move.getFromIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 154 Método: assertThat(move.getSubListSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 155 Método: assertThat(move.getDestinationEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 156 Método: assertThat(move.getDestinationIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 157 Método: assertThat(move.isReversing())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 170 Método: assertThat(moveTwoEntities.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 171 Método: assertThat(moveTwoEntities.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 173 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 3, e2, 0, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 175 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 3, e2, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 177 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 3, e3, 0, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 179 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 2, e2, 0, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 181 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 2, 4, e2, 0, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 183 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e3, 1, 3, e2, 0, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 185 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 3, e2, 0, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 196 Método: assertThat(moveOneEntity.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 197 Método: assertThat(moveOneEntity.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 205 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 1, 3, e1, 0, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 206 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 0, 1, e2, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveTest.java linha: 207 Método: assertThat(new SubListChangeMove<>(variableDescriptor, e1, 0, 1, e2, 1, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 38 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e1, 2, 5, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 40 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 5, e1, 1, 2, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 42 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 1, e1, 4, 5, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 44 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e1, 3, 5, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 46 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 2, 5, e1, 0, 2, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 48 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 5, e2, 0, 1, false).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 60 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 61 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 72 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 73 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 85 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 86 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 97 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 98 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 109 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 123 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 157 Método: assertThat(leftSubList.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 158 Método: assertThat(leftSubList.getFromIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 159 Método: assertThat(leftSubList.getToIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 161 Método: assertThat(rightSubList.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 162 Método: assertThat(rightSubList.getFromIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 163 Método: assertThat(rightSubList.getToIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 164 Método: assertThat(move.isReversing())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 177 Método: assertThat(moveTwoEntities.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 178 Método: assertThat(moveTwoEntities.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 180 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e2, 0, 1, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 182 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e2, 0, 2, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 184 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e2, 1, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 186 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e3, 0, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 188 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 1, 4, e2, 0, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 190 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 1, 3, e2, 0, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 192 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e3, 0, 3, e2, 0, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 194 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 3, e2, 0, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 205 Método: assertThat(moveOneEntity.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 206 Método: assertThat(moveOneEntity.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 209 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 2, e1, 3, 4, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 217 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 1, 4, e1, 0, 1, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 219 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 1, e2, 1, 6, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveTest.java linha: 221 Método: assertThat(new SubListSwapMove<>(variableDescriptor, e1, 0, 1, e2, 1, 6, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveSelectorFactoryTest.java linha: 30 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveSelectorFactoryTest.java linha: 31 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveSelectorFactoryTest.java linha: 32 Método: assertThat(selector.isSelectReversingMoveToo())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListChangeMoveSelectorFactoryTest.java linha: 49 Método: assertThat(selector.isSelectReversingMoveToo())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/OriginalListSwapIteratorTest.java linha: 47 Método: assertThat(listSwapIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/RandomSubListSelectorTest.java linha: 52 Método: assertThat(subListCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 37 Método: assertThat(triangleElement.getIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 38 Método: assertThat(triangleElement.getLevel())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 39 Método: assertThat(triangleElement.getIndexOnLevel())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 46 Método: assertThat(subListCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 54 Método: assertThat(subListCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 61 Método: assertThat(first.getIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 62 Método: assertThat(first.getLevel())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 63 Método: assertThat(first.getIndexOnLevel())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 67 Método: assertThat(last.getIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 68 Método: assertThat(last.getLevel())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangleElementFactoryTest.java linha: 69 Método: assertThat(last.getIndexOnLevel())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/RandomSubListChangeMoveSelectorTest.java linha: 52 Método: assertThat(subListCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/RandomSubListChangeMoveSelectorTest.java linha: 283 Método: assertThat(subListCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSelectorFactoryTest.java linha: 41 Método: assertThat(subListSelector.getMinimumSubListSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSelectorFactoryTest.java linha: 42 Método: assertThat(subListSelector.getMaximumSubListSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListTest.java linha: 12 Método: assertThat(new SubList("B", 3, 9))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListTest.java linha: 13 Método: assertThat(new SubList("A", 9, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListTest.java linha: 14 Método: assertThat(new SubList("A", 9, 9))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListTest.java linha: 15 Método: assertThat(new SubList("A", 3, 3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListTest.java linha: 16 Método: assertThat(new SubList("A", 3, 9))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListTest.java linha: 21 Método: assertThat(new SubList("A", 2, 5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 45 Método: assertThat(new ListChangeMove<>(variableDescriptor, e1, 1, e1, 1).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 47 Método: assertThat(new ListChangeMove<>(variableDescriptor, e1, 0, e1, 1).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 49 Método: assertThat(new ListChangeMove<>(variableDescriptor, e1, 0, e1, 2).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 51 Método: assertThat(new ListChangeMove<>(variableDescriptor, e1, 0, e2, 0).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 63 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 64 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 75 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 76 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 106 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 111 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 115 Método: assertThat(e.getValueList().indexOf(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 116 Método: assertThat(variableDescriptor.getElement(e, destinationIndex))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 118 Método: assertThat(e.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 128 Método: assertThat(undoUndoMove)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 130 Método: assertThat(e.getValueList().indexOf(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 131 Método: assertThat(variableDescriptor.getElement(e, sourceIndex))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 132 Método: assertThat(e.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 169 Método: assertThat(move.getSourceEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 170 Método: assertThat(move.getSourceIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 171 Método: assertThat(move.getMovedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 172 Método: assertThat(move.getDestinationEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 173 Método: assertThat(move.getDestinationIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 184 Método: assertThat(moveTwoEntities.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 185 Método: assertThat(moveTwoEntities.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 195 Método: assertThat(moveOneEntity.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 196 Método: assertThat(moveOneEntity.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 204 Método: assertThat(new ListChangeMove<>(variableDescriptor, e1, 1, e1, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListChangeMoveTest.java linha: 205 Método: assertThat(new ListChangeMove<>(variableDescriptor, e1, 0, e2, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListUnassignMoveTest.java linha: 33 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListUnassignMoveTest.java linha: 48 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListUnassignMoveTest.java linha: 59 Método: assertThat(new ListUnassignMove<>(variableDescriptor, e1, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 34 Método: assertThat(new ListSwapMove<>(variableDescriptor, e1, 1, e1, 1).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 36 Método: assertThat(new ListSwapMove<>(variableDescriptor, e1, 0, e1, 1).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 38 Método: assertThat(new ListSwapMove<>(variableDescriptor, e1, 0, e2, 0).isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 50 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 51 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 62 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 63 Método: assertThat(e2.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 69 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 73 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 110 Método: assertThat(move.getLeftEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 111 Método: assertThat(move.getLeftIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 112 Método: assertThat(move.getLeftValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 113 Método: assertThat(move.getRightEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 114 Método: assertThat(move.getRightIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 115 Método: assertThat(move.getRightValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 126 Método: assertThat(moveTwoEntities.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 127 Método: assertThat(moveTwoEntities.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 137 Método: assertThat(moveOneEntity.getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 138 Método: assertThat(moveOneEntity.getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 146 Método: assertThat(new ListSwapMove<>(variableDescriptor, e1, 0, e1, 1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListSwapMoveTest.java linha: 147 Método: assertThat(new ListSwapMove<>(variableDescriptor, e1, 1, e2, 0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangularNumbersTest.java linha: 38 Método: assertThat(TriangularNumbers.nthTriangle(n))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangularNumbersTest.java linha: 44 Método: assertThat(TriangularNumbers.triangularRoot(nthTriangularNumber))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/TriangularNumbersTest.java linha: 61 Método: assertThat(TriangularNumbers.triangularRoot(x))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 53 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 60 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 85 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 92 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 116 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 123 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 147 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 154 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 186 Método: assertThat(move.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 187 Método: assertThat(move.getFirstEdgeStartpoint())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 188 Método: assertThat(move.getFirstEdgeEndpoint())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 189 Método: assertThat(move.getSecondEdgeStartpoint())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/TwoOptListMoveTest.java linha: 190 Método: assertThat(move.getSecondEdgeEndpoint())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 63 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 65 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 71 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 93 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 95 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 101 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 130 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 133 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 140 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 167 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 170 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 177 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 207 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 210 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 221 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 253 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 256 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 263 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 291 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 294 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 302 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 332 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptListMoveTest.java linha: 353 Método: assertThat(kOptListMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 44 Método: assertThat(KOptUtils.getRemovedEdgeList(kOptDescriptor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 67 Método: assertThat(KOptUtils.getAddedEdgeList(kOptDescriptor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 90 Método: assertThat(cycle.cycleCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 94 Método: assertThat(cycle.indexToCycleIdentifier)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 113 Método: assertThat(cycleInfo.cycleCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 118 Método: assertThat(cycleInfo.indexToCycleIdentifier)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 141 Método: assertThat(cycleInfo.cycleCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 147 Método: assertThat(cycleInfo.indexToCycleIdentifier)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 155 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 158 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 166 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 169 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 177 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 180 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 188 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 191 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 196 Método: assertThat(KOptUtils.getPureKOptMoveTypes(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 197 Método: assertThat(KOptUtils.getPureKOptMoveTypes(3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 198 Método: assertThat(KOptUtils.getPureKOptMoveTypes(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 199 Método: assertThat(KOptUtils.getPureKOptMoveTypes(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 200 Método: assertThat(KOptUtils.getPureKOptMoveTypes(6))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 201 Método: assertThat(KOptUtils.getPureKOptMoveTypes(7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/kopt/KOptUtilsTest.java linha: 202 Método: assertThat(KOptUtils.getPureKOptMoveTypes(8))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveSelectorFactoryTest.java linha: 30 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveSelectorFactoryTest.java linha: 31 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveSelectorFactoryTest.java linha: 32 Método: assertThat(selector.isSelectReversingMoveToo())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/SubListSwapMoveSelectorFactoryTest.java linha: 49 Método: assertThat(selector.isSelectReversingMoveToo())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 35 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 46 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 55 Método: assertThat(e1.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 80 Método: assertThat(move.getMovedValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 81 Método: assertThat(move.getDestinationEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 82 Método: assertThat(move.getDestinationIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/list/ListAssignMoveTest.java linha: 90 Método: assertThat(new ListAssignMove<>(variableDescriptor, v1, e1, 15))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveSelectorFactoryTest.java linha: 32 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveSelectorFactoryTest.java linha: 54 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveSelectorFactoryTest.java linha: 56 Método: assertThat(((UnionMoveSelector) moveSelector).getChildMoveSelectorList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveSelectorFactoryTest.java linha: 67 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveSelectorFactoryTest.java linha: 89 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveSelectorFactoryTest.java linha: 91 Método: assertThat(((UnionMoveSelector) moveSelector).getChildMoveSelectorList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 33 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 55 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 67 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 89 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 91 Método: assertThat(((UnionMoveSelector) moveSelector).getChildMoveSelectorList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 103 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 128 Método: assertThat(moveSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveSelectorFactoryTest.java linha: 130 Método: assertThat(((UnionMoveSelector) moveSelector).getChildMoveSelectorList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 49 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 52 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 55 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 58 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 61 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 64 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 70 Método: assertThat(acMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 73 Método: assertThat(acMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 79 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 82 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 85 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 88 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 95 Método: assertThat(abzMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 99 Método: assertThat(abzMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 103 Método: assertThat(abzMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 107 Método: assertThat(abzMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 111 Método: assertThat(abzMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 140 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 141 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 146 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 147 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 152 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 153 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 155 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 156 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 165 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 166 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 167 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 169 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 170 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 171 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 177 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 178 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 179 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 181 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 182 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 183 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 193 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 194 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 195 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 196 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 198 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 199 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 200 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 201 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 211 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 212 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 213 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 214 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 216 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 217 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 218 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 219 Método: assertThat(z.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 264 Método: assertThat(move.getLeftPillar())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 265 Método: assertThat(move.getRightPillar())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 277 Método: assertThat(move.getVariableNameList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 284 Método: assertThat(move.getVariableNameList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 303 Método: assertThat(new PillarSwapMove<>(variableDescriptorList, Arrays.asList(a, b), Arrays.asList(c, d, e)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 305 Método: assertThat(new PillarSwapMove<>(variableDescriptorList, Arrays.asList(b), Arrays.asList(c)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarSwapMoveTest.java linha: 307 Método: assertThat(new PillarSwapMove<>(variableDescriptorList, Arrays.asList(f, g), Arrays.asList(c, d, e)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 42 Método: assertThat(aMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 45 Método: assertThat(aMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 48 Método: assertThat(aMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 70 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 74 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 78 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 117 Método: assertThat(move.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 118 Método: assertThat(move.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 128 Método: assertThat(primaryMove.getVariableName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 136 Método: assertThat(secondaryMove.getVariableName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 148 Método: assertThat(new ChangeMove<>(variableDescriptor, a, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 149 Método: assertThat(new ChangeMove<>(variableDescriptor, a, v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 150 Método: assertThat(new ChangeMove<>(variableDescriptor, a, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 151 Método: assertThat(new ChangeMove<>(variableDescriptor, b, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 152 Método: assertThat(new ChangeMove<>(variableDescriptor, b, v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 153 Método: assertThat(new ChangeMove<>(variableDescriptor, b, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 170 Método: assertThat(new ChangeMove<>(variableDescriptor, a, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 171 Método: assertThat(new ChangeMove<>(variableDescriptor, a, v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 172 Método: assertThat(new ChangeMove<>(variableDescriptor, a, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 173 Método: assertThat(new ChangeMove<>(variableDescriptor, b, null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 174 Método: assertThat(new ChangeMove<>(variableDescriptor, b, v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 175 Método: assertThat(new ChangeMove<>(variableDescriptor, b, v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMoveTest.java linha: 176 Método: assertThat(new ChangeMove<>(variableDescriptor, c, v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 49 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 52 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 55 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 58 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 61 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 64 Método: assertThat(abMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 70 Método: assertThat(acMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 73 Método: assertThat(acMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 79 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 82 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 85 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 88 Método: assertThat(bcMove.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 115 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 116 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 121 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 122 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 127 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 128 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 130 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 131 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 139 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 140 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 145 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 146 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 151 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 152 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 154 Método: assertThat(a.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 155 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 163 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 164 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 169 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 170 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 175 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 176 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 178 Método: assertThat(b.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 179 Método: assertThat(c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 218 Método: assertThat(move.getLeftEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 219 Método: assertThat(move.getRightEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 250 Método: assertThat(new SwapMove<>(variableDescriptorList, a, a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 251 Método: assertThat(new SwapMove<>(variableDescriptorList, a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 252 Método: assertThat(new SwapMove<>(variableDescriptorList, a, c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 253 Método: assertThat(new SwapMove<>(variableDescriptorList, b, c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 254 Método: assertThat(new SwapMove<>(variableDescriptorList, c, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 272 Método: assertThat(new SwapMove<>(variableDescriptorList, a, a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 273 Método: assertThat(new SwapMove<>(variableDescriptorList, a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 274 Método: assertThat(new SwapMove<>(variableDescriptorList, a, c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 275 Método: assertThat(new SwapMove<>(variableDescriptorList, b, c))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/SwapMoveTest.java linha: 276 Método: assertThat(new SwapMove<>(variableDescriptorList, c, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarDemandTest.java linha: 38 Método: Assertions.assertThat(pillarDemand)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarDemandTest.java linha: 42 Método: Assertions.assertThat(samePillarDemand)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarDemandTest.java linha: 46 Método: Assertions.assertThat(samePillarDemandCopiedList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/PillarDemandTest.java linha: 52 Método: Assertions.assertThat(samePillarDemandCopiedSelector)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/composite/CartesianProductMoveSelectorTest.java linha: 104 Método: assertThat(emptyFirst || emptySecond)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/NoChangeMoveTest.java linha: 14 Método: assertThat(new NoChangeMove<>().isMoveDoable(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/NoChangeMoveTest.java linha: 19 Método: assertThat(new NoChangeMove<>().createUndoMove(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/NoChangeMoveTest.java linha: 25 Método: assertThat(new NoChangeMove<>().getPlanningEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/NoChangeMoveTest.java linha: 30 Método: assertThat(new NoChangeMove<>().getPlanningValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 112 Método: assertThat(rebasedChildMoves)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 114 Método: assertThat(rebasedA.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 115 Método: assertThat(rebasedA.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 117 Método: assertThat(rebasedB.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 118 Método: assertThat(rebasedB.getToPlanningValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 123 Método: assertThat(CompositeMove.buildMove(new ArrayList<>()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 125 Método: assertThat(CompositeMove.buildMove())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 133 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 137 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 146 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 148 Método: assertThat(((CompositeMove<TestdataSolution>) move).getMoves()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 150 Método: assertThat(((CompositeMove<TestdataSolution>) move).getMoves()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 154 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 156 Método: assertThat(((CompositeMove<TestdataSolution>) move).getMoves()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 158 Método: assertThat(((CompositeMove<TestdataSolution>) move).getMoves()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 170 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 175 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 180 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 185 Método: assertThat(move.isMoveDoable(scoreDirector))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 194 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 198 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 199 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 200 Método: assertThat(move)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 219 Método: assertThat(e1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 220 Método: assertThat(e2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 226 Método: assertThat(e1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 227 Método: assertThat(e2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 231 Método: assertThat(e1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/move/CompositeMoveTest.java linha: 232 Método: assertThat(e2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/thread/OrderByMoveIndexBlockingQueueTest.java linha: 166 Método: assertThat(result.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/heuristic/thread/OrderByMoveIndexBlockingQueueTest.java linha: 172 Método: assertThat(result.isMoveDoable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 43 Método: assertThat(element.getIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 44 Método: assertThat(element.getIndexHistory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 49 Método: assertThat(element.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 50 Método: assertThat(element.getEntityHistory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 54 Método: assertThat(element.getPrevious())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 55 Método: assertThat(element.getPreviousHistory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 60 Método: assertThat(element.getPrevious())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 61 Método: assertThat(element.getPreviousHistory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 65 Método: assertThat(element.getNext())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 66 Método: assertThat(element.getNextHistory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 71 Método: assertThat(element.getNext())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 72 Método: assertThat(element.getNextHistory())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 183 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 207 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 244 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 285 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 327 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 328 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 370 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 371 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 410 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 441 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 474 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 516 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 517 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 559 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 560 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 605 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 642 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 683 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 728 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 729 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 782 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 783 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 817 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 818 Método: assertThat(bob.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 855 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 912 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/ListVariableListenerTest.java linha: 965 Método: assertThat(ann.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 84 Método: assertThat(a.getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 85 Método: assertThat(a.getThirdShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 91 Método: assertThat(a.getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 92 Método: assertThat(a.getThirdShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 98 Método: assertThat(c.getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 99 Método: assertThat(c.getSecondShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 100 Método: assertThat(c.getThirdShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 106 Método: assertThat(c.getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 107 Método: assertThat(c.getSecondShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 108 Método: assertThat(c.getThirdShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 139 Método: assertThat(a.getComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 140 Método: assertThat(a.getReverseComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 146 Método: assertThat(a.getComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 147 Método: assertThat(a.getReverseComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 153 Método: assertThat(a.getComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 154 Método: assertThat(a.getReverseComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 160 Método: assertThat(a.getComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 161 Método: assertThat(a.getReverseComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 167 Método: assertThat(a.getComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 168 Método: assertThat(a.getReverseComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 177 Método: assertThat(c.getComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 178 Método: assertThat(c.getReverseComposedCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/custom/CustomVariableListenerTest.java linha: 222 Método: assertThat(b.getComposedCodeLog())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptorTest.java linha: 19 Método: assertThat(variableDescriptor.isReinitializable(new TestdataEntity("a", new TestdataValue())))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptorTest.java linha: 20 Método: assertThat(variableDescriptor.isReinitializable(new TestdataEntity("b", null)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptorTest.java linha: 26 Método: assertThat(variableDescriptor.isReinitializable(new TestdataNullableEntity("a", new TestdataValue())))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptorTest.java linha: 27 Método: assertThat(variableDescriptor.isReinitializable(new TestdataNullableEntity("b", null)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptorTest.java linha: 33 Método: assertThat(variableDescriptor.isReinitializable(new TestdataListEntity("a", new TestdataListValue())))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptorTest.java linha: 34 Método: assertThat(variableDescriptor.isReinitializable(new TestdataListEntity("b", new ArrayList<>())))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/ListVariableDescriptorTest.java linha: 20 Método: assertThat(TestdataListEntity.buildVariableDescriptorForValueList().getElementType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/ListVariableDescriptorTest.java linha: 29 Método: assertThat(listVariableDescriptor.acceptsValueType(TestdataListValue.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/descriptor/ListVariableDescriptorTest.java linha: 30 Método: assertThat(listVariableDescriptor.acceptsValueType(List.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 41 Método: assertThat(supply.getInverseSingleton(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 42 Método: assertThat(supply.getInverseSingleton(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 43 Método: assertThat(supply.getInverseSingleton(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 53 Método: assertThat(supply.getInverseSingleton(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 60 Método: assertThat(supply.getInverseSingleton(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 61 Método: assertThat(supply.getInverseSingleton(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 69 Método: assertThat(supply.getInverseSingleton(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 76 Método: assertThat(supply.getInverseSingleton(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 86 Método: assertThat(supply.getInverseSingleton(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 87 Método: assertThat(supply.getInverseSingleton(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 88 Método: assertThat(supply.getInverseSingleton(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 98 Método: assertThat(supply.getInverseSingleton(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 99 Método: assertThat(supply.getInverseSingleton(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonListInverseVariableSupplyTest.java linha: 100 Método: assertThat(supply.getInverseSingleton(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonInverseVariableListenerTest.java linha: 56 Método: assertThat(b1.getNextEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonInverseVariableListenerTest.java linha: 61 Método: assertThat(b1.getNextEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 31 Método: assertThat(v1.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 32 Método: assertThat(v2.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 33 Método: assertThat(v3.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 78 Método: assertThat(v1.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 79 Método: assertThat(v2.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 80 Método: assertThat(v3.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 91 Método: assertThat(element.getEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/SingletonListInverseVariableListenerTest.java linha: 92 Método: assertThat(inverseVariableListener.getInverseSingleton(element))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedCollectionInverseVariableSupplyTest.java linha: 41 Método: assertThat((Collection<TestdataEntity>) supply.getInverseCollection(val1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedCollectionInverseVariableSupplyTest.java linha: 42 Método: assertThat((Collection<TestdataEntity>) supply.getInverseCollection(val2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedCollectionInverseVariableSupplyTest.java linha: 43 Método: assertThat((Collection<TestdataEntity>) supply.getInverseCollection(val3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedCollectionInverseVariableSupplyTest.java linha: 49 Método: assertThat((Collection<TestdataEntity>) supply.getInverseCollection(val1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedCollectionInverseVariableSupplyTest.java linha: 50 Método: assertThat((Collection<TestdataEntity>) supply.getInverseCollection(val2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedCollectionInverseVariableSupplyTest.java linha: 51 Método: assertThat((Collection<TestdataEntity>) supply.getInverseCollection(val3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 41 Método: assertThat(supply.getInverseSingleton(a0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 42 Método: assertThat(supply.getInverseSingleton(a1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 43 Método: assertThat(supply.getInverseSingleton(a2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 44 Método: assertThat(supply.getInverseSingleton(a3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 45 Método: assertThat(supply.getInverseSingleton(b0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 46 Método: assertThat(supply.getInverseSingleton(b1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 52 Método: assertThat(supply.getInverseSingleton(a2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/ExternalizedSingletonInverseVariableSupplyTest.java linha: 53 Método: assertThat(supply.getInverseSingleton(b1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/CollectionInverseVariableListenerTest.java linha: 48 Método: assertThat(val1.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/CollectionInverseVariableListenerTest.java linha: 49 Método: assertThat(val2.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/CollectionInverseVariableListenerTest.java linha: 50 Método: assertThat(val3.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/CollectionInverseVariableListenerTest.java linha: 56 Método: assertThat(val1.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/CollectionInverseVariableListenerTest.java linha: 57 Método: assertThat(val2.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/inverserelation/CollectionInverseVariableListenerTest.java linha: 58 Método: assertThat(val3.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 66 Método: assertThat(a1.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 67 Método: assertThat(a2.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 68 Método: assertThat(a3.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 69 Método: assertThat(b1.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 77 Método: assertThat(a1.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 78 Método: assertThat(a2.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 79 Método: assertThat(a3.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/AnchorVariableListenerTest.java linha: 80 Método: assertThat(b1.getAnchor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 45 Método: assertThat(supply.getAnchor(a1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 46 Método: assertThat(supply.getAnchor(a2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 47 Método: assertThat(supply.getAnchor(a3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 48 Método: assertThat(supply.getAnchor(b1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 56 Método: assertThat(supply.getAnchor(a1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 57 Método: assertThat(supply.getAnchor(a2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 58 Método: assertThat(supply.getAnchor(a3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/anchor/ExternalizedAnchorVariableSupplyTest.java linha: 59 Método: assertThat(supply.getAnchor(b1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/IndexVariableListenerTest.java linha: 93 Método: assertThat(element.getIndex())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/IndexVariableListenerTest.java linha: 94 Método: assertThat(indexVariableListener.getIndex(element))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 41 Método: assertThat(supply.getIndex(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 42 Método: assertThat(supply.getIndex(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 43 Método: assertThat(supply.getIndex(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 53 Método: assertThat(supply.getIndex(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 61 Método: assertThat(supply.getIndex(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 62 Método: assertThat(supply.getIndex(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 63 Método: assertThat(supply.getIndex(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 70 Método: assertThat(supply.getIndex(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 71 Método: assertThat(supply.getIndex(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 78 Método: assertThat(supply.getIndex(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 85 Método: assertThat(supply.getIndex(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 86 Método: assertThat(supply.getIndex(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 96 Método: assertThat(supply.getIndex(v1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 97 Método: assertThat(supply.getIndex(v2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/index/ExternalizedIndexVariableSupplyTest.java linha: 98 Método: assertThat(supply.getIndex(v3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 51 Método: assertThat(supply2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 73 Método: assertThat(supply1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 77 Método: assertThat(supply2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 101 Método: assertThat(supply1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 105 Método: assertThat(supply2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 123 Método: assertThat(registry.getAll())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 131 Método: assertThat(registry.get(entityDescriptor))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 139 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x6A")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 142 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x5B")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 145 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x3C")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 148 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x1D")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 150 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x2E")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 153 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x4F")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/VariableListenerSupportTest.java linha: 155 Método: assertThat(registry.get(entityDescriptor.getVariableDescriptor("x0G")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/violation/ShadowVariablesAssertTest.java linha: 35 Método: assertThat(snapshot.createShadowVariablesViolationMessage(10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/variable/listener/support/violation/ShadowVariablesAssertTest.java linha: 46 Método: assertThat(snapshot.createShadowVariablesViolationMessage(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/score/descriptor/ScoreDescriptorTest.java linha: 18 Método: assertThat(scoreDefinition)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/score/descriptor/ScoreDescriptorTest.java linha: 19 Método: assertThat(scoreDefinition.getScoreClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/score/descriptor/ScoreDescriptorTest.java linha: 27 Método: assertThat((SimpleScore) solutionDescriptor.getScore(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/score/descriptor/ScoreDescriptorTest.java linha: 31 Método: assertThat((SimpleScore) solutionDescriptor.getScore(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 42 Método: assertThat(GizmoSolutionClonerImplementor.DEBUG)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 173 Método: assertThat(comparator.compare(Animal.class, Animal.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 174 Método: assertThat(comparator.compare(Robot.class, Robot.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 175 Método: assertThat(comparator.compare(Zebra.class, Zebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 176 Método: assertThat(comparator.compare(RobotZebra.class, RobotZebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 181 Método: assertThat(comparator.compare(Zebra.class, Animal.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 182 Método: assertThat(comparator.compare(Zebra.class, Robot.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 183 Método: assertThat(comparator.compare(Animal.class, Zebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 184 Método: assertThat(comparator.compare(Robot.class, Zebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 187 Método: assertThat(comparator.compare(RobotZebra.class, Animal.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 188 Método: assertThat(comparator.compare(RobotZebra.class, Robot.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 189 Método: assertThat(comparator.compare(RobotZebra.class, Zebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 190 Método: assertThat(comparator.compare(Animal.class, RobotZebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 191 Método: assertThat(comparator.compare(Robot.class, RobotZebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/GizmoSolutionClonerTest.java linha: 192 Método: assertThat(comparator.compare(Zebra.class, RobotZebra.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 89 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 91 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 92 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 95 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 96 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 106 Método: assertThat(cloneB)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 136 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 137 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 138 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 141 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 142 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 148 Método: assertThat(cloneA)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 150 Método: assertThat(a.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 153 Método: assertThat(cloneA.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 182 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 184 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 185 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 188 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 189 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 199 Método: assertThat(cloneB)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 232 Método: assertThat(TestdataAccessModifierSolution.getStaticFinalField())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 233 Método: assertThat(TestdataAccessModifierSolution.getStaticField())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 235 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 237 Método: assertThat(clone.getFinalField())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 238 Método: assertThat(clone.getReadOnlyField())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 239 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 240 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 243 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 244 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 254 Método: assertThat(cloneB)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 288 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 290 Método: assertThat(clone.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 291 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 292 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 295 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 296 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 302 Método: assertThat(cloneA.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 304 Método: assertThat(cloneB.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 306 Método: assertThat(cloneC.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 308 Método: assertThat(cloneD.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 310 Método: assertThat(cloneB)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 341 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 343 Método: assertThat(clone.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 344 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 345 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 348 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 349 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 355 Método: assertThat(cloneA.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 357 Método: assertThat(cloneB.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 359 Método: assertThat(cloneC.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 361 Método: assertThat(cloneD.getExtraObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 363 Método: assertThat(cloneB)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 372 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 380 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 388 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 396 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 397 Método: assertThat(cloneEntity.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 399 Método: assertThat(cloneEntity.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 400 Método: assertThat(cloneEntity.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 402 Método: assertThat(value.getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 401 Método: assertThat(cloneEntity.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 426 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 428 Método: assertThat(clone.getChainedAnchorList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 429 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 432 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 433 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 451 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 454 Método: assertThat(cloneEntity.getChainedObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 486 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 488 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 491 Método: assertThat(cloneAnchorList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 492 Método: assertThat(cloneAnchorList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 497 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 498 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 519 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 522 Método: assertThat(cloneEntity.getNextEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 528 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 531 Método: assertThat(cloneEntity.getChainedObject())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 532 Método: assertThat(cloneEntity.getNextEntity())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 563 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 564 Método: assertThat(clone.getValueSet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 565 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 568 Método: assertThat(cloneEntitySet)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 569 Método: assertThat(cloneEntitySet)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 570 Método: assertThat(((SortedSet<?>) cloneEntitySet).comparator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 572 Método: assertThat(cloneEntitySet)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 592 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 643 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 645 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 646 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 649 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 650 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 656 Método: assertThat(cloneA.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 657 Método: assertThat(cloneA.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 658 Método: assertThat(cloneA.getEntityList().get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 659 Método: assertThat(cloneA.getEntityList().get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 660 Método: assertThat(cloneA.getEntitySet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 661 Método: assertThat(cloneA.getEntitySet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 662 Método: assertThat(cloneA.getStringToEntityMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 663 Método: assertThat(cloneA.getStringToEntityMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 664 Método: assertThat(cloneA.getStringToEntityMap().get("b"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 665 Método: assertThat(cloneA.getStringToEntityMap().get("c"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 666 Método: assertThat(cloneA.getEntityToStringMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 667 Método: assertThat(cloneA.getEntityToStringMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 668 Método: assertThat(cloneA.getEntityToStringMap().get(cloneB))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 669 Método: assertThat(cloneA.getEntityToStringMap().get(cloneC))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 671 Método: assertThat(cloneA.getStringToEntityListMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 672 Método: assertThat(cloneA.getStringToEntityListMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 674 Método: assertThat(entityListOfMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 675 Método: assertThat(entityListOfMap.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 676 Método: assertThat(entityListOfMap.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 679 Método: assertThat(cloneB.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 680 Método: assertThat(cloneB.getEntitySet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 681 Método: assertThat(cloneB.getStringToEntityMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 682 Método: assertThat(cloneB.getEntityToStringMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 683 Método: assertThat(cloneB.getStringToEntityListMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 686 Método: assertThat(cloneC.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 687 Método: assertThat(cloneC.getEntityList().get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 688 Método: assertThat(cloneC.getEntityList().get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 689 Método: assertThat(cloneC.getEntitySet())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 690 Método: assertThat(cloneC.getStringToEntityMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 691 Método: assertThat(cloneC.getStringToEntityMap().get("a"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 692 Método: assertThat(cloneC.getStringToEntityMap().get("c"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 693 Método: assertThat(cloneC.getEntityToStringMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 694 Método: assertThat(cloneC.getStringToEntityListMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 699 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 731 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 733 Método: assertThat(clone.getValues())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 734 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 737 Método: assertThat(cloneEntities)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 738 Método: assertThat(cloneEntities.length)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 744 Método: assertThat(cloneA.getEntities())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 745 Método: assertThat(cloneA.getEntities().length)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 746 Método: assertThat(cloneA.getEntities()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 747 Método: assertThat(cloneA.getEntities()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 750 Método: assertThat(cloneB.getEntities().length)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 753 Método: assertThat(cloneC.getEntities().length)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 754 Método: assertThat(cloneC.getEntities()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 755 Método: assertThat(cloneC.getEntities()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 760 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 803 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 805 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 806 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 809 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 810 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 821 Método: assertThat(cloneGeneralShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 822 Método: assertThat(cloneGeneralShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 823 Método: assertThat(cloneGeneralShadowVariableList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 824 Método: assertThat(cloneGeneralShadowVariableList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 832 Método: assertThat(b.getShadowVariableMap().get("shadow key b1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 834 Método: assertThat(cloneB.getShadowVariableMap().get("shadow key b1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 837 Método: assertThat(cloneA.getUnannotatedCopiedTestdataVariousTypes())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 839 Método: assertThat(cloneA.getSameValueAsUnannotatedClonedTestdataVariousTypes())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 844 Método: assertThat(clonedUnannotatedTypes)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 849 Método: assertThat(clonedAnnotatedTypes)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 855 Método: softly.assertThat(clonedAnnotatedClonedTypes)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 856 Método: softly.assertThat(clonedAnnotatedClonedTypes)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 863 Método: softly.assertThat(cloned.booleanValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 864 Método: softly.assertThat(cloned.byteValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 865 Método: softly.assertThat(cloned.charValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 866 Método: softly.assertThat(cloned.shortValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 867 Método: softly.assertThat(cloned.intValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 868 Método: softly.assertThat(cloned.longValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 869 Método: softly.assertThat(cloned.floatValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 870 Método: softly.assertThat(cloned.doubleValue)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 874 Método: softly.assertThat(cloned.booleanRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 875 Método: softly.assertThat(cloned.byteRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 876 Método: softly.assertThat(cloned.charRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 877 Método: softly.assertThat(cloned.shortRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 878 Método: softly.assertThat(cloned.intRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 879 Método: softly.assertThat(cloned.longRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 880 Método: softly.assertThat(cloned.floatRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 881 Método: softly.assertThat(cloned.doubleRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 882 Método: softly.assertThat(cloned.bigInteger)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 883 Método: softly.assertThat(cloned.bigDecimal)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 884 Método: softly.assertThat(cloned.uuidRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 885 Método: softly.assertThat(cloned.stringRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 889 Método: softly.assertThat(cloned.deepClonedListRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 890 Método: softly.assertThat(cloned.deepClonedListRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 895 Método: softly.assertThat(cloned.shallowClonedListRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 896 Método: softly.assertThat(cloned.shallowClonedListRef)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 904 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 907 Método: assertThat(cloneEntity.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 914 Método: assertThat(cloneShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 915 Método: assertThat(cloneShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 917 Método: assertThat(cloneShadowVariableList.get(i))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 912 Método: assertThat(cloneShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 926 Método: assertThat(cloneShadowVariableMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 927 Método: assertThat(cloneShadowVariableMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 929 Método: assertThat(cloneShadowVariableMap.get(key))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 924 Método: assertThat(cloneShadowVariableMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 978 Método: assertThat(clone)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 980 Método: assertThat(clone.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 981 Método: assertThat(clone.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 984 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 985 Método: assertThat(cloneEntityList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 996 Método: assertThat(cloneGeneralShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 997 Método: assertThat(cloneGeneralShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 998 Método: assertThat(cloneGeneralShadowVariableList.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 999 Método: assertThat(cloneGeneralShadowVariableList.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1007 Método: assertThat(b.getShadowVariableMap().get("shadow key b1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1009 Método: assertThat(cloneB.getShadowVariableMap().get("shadow key b1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1020 Método: assertThat(clonedSolution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1025 Método: softly.assertThat(clonedEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1026 Método: softly.assertThat(clonedEntity.getSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1034 Método: assertThat(cloneEntity)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1037 Método: assertThat(cloneEntity.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1044 Método: assertThat(cloneShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1045 Método: assertThat(cloneShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1047 Método: assertThat(cloneShadowVariableList.get(i))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1042 Método: assertThat(cloneShadowVariableList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1056 Método: assertThat(cloneShadowVariableMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1057 Método: assertThat(cloneShadowVariableMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1059 Método: assertThat(cloneShadowVariableMap.get(key))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1054 Método: assertThat(cloneShadowVariableMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1068 Método: assertThat(cloneStringListToStringMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1069 Método: assertThat(cloneStringListToStringMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1071 Método: assertThat(cloneStringListToStringMap.get(key))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1066 Método: assertThat(cloneStringListToStringMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1080 Método: assertThat(cloneStringToStringListMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1081 Método: assertThat(cloneStringToStringListMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1083 Método: assertThat(cloneStringToStringListMap.get(key))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/cloner/AbstractSolutionClonerTest.java linha: 1078 Método: assertThat(cloneStringToStringListMap)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/mutation/MutationCounterTest.java linha: 47 Método: assertThat(mutationCounter.countMutations(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/mutation/MutationCounterTest.java linha: 80 Método: assertThat(mutationCounter.countMutations(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/mutation/MutationCounterTest.java linha: 113 Método: assertThat(mutationCounter.countMutations(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/mutation/MutationCounterTest.java linha: 152 Método: assertThat(mutationCounter.countMutations(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 66 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 67 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 75 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 76 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 120 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 121 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 123 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 124 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 150 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 151 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 153 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 154 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 160 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 161 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 162 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 163 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 170 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 171 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 172 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 173 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 180 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 182 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 184 Método: assertThat(solutionDescriptor.findEntityDescriptor(TestdataGenericEntity.class).getVariableDescriptorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 201 Método: assertThat(solutionDescriptor.getScoreDefinition())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 202 Método: assertThat(solutionDescriptor.getScoreDefinition().getScoreClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 203 Método: assertThat(solutionDescriptor.getConstraintConfigurationMemberAccessor().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 205 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 207 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 208 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 209 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 226 Método: assertThat(solutionDescriptor.getConstraintConfigurationMemberAccessor().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 228 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 230 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 231 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 232 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 249 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 251 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 252 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 253 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 271 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 273 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 274 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 275 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 293 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 294 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 295 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 296 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 315 Método: assertThat(solutionDescriptor.getConstraintConfigurationMemberAccessor().getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 317 Método: assertThat(solutionDescriptor.getProblemFactMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 319 Método: assertThat(solutionDescriptor.getProblemFactCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 320 Método: assertThat(solutionDescriptor.getEntityMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 321 Método: assertThat(solutionDescriptor.getEntityCollectionMemberAccessorMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 342 Método: assertThat(solutionDescriptor.countUninitialized(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 345 Método: assertThat(solutionDescriptor.countUninitialized(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 348 Método: assertThat(solutionDescriptor.countUninitialized(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 358 Método: assertThat(solutionDescriptor.countUninitialized(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 362 Método: assertThat(valueList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 368 Método: assertThat(solutionDescriptor.countUninitialized(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 378 Método: softly.assertThat(solutionDescriptor.getEntityCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 379 Método: softly.assertThat(solutionDescriptor.getGenuineVariableCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 380 Método: softly.assertThat(solutionDescriptor.getMaximumValueCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 381 Método: softly.assertThat(solutionDescriptor.getProblemScale(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 392 Método: softly.assertThat(solutionDescriptor.getEntityCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 393 Método: softly.assertThat(solutionDescriptor.getGenuineVariableCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 394 Método: softly.assertThat(solutionDescriptor.getMaximumValueCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 395 Método: softly.assertThat(solutionDescriptor.getProblemScale(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 420 Método: softly.assertThat(solutionDescriptor.getEntityCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 421 Método: softly.assertThat(solutionDescriptor.getGenuineVariableCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 422 Método: softly.assertThat(solutionDescriptor.getMaximumValueCount(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptorTest.java linha: 423 Método: softly.assertThat(solutionDescriptor.getProblemScale(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 27 Método: assertThat(entityDescriptor.hasEffectiveMovableEntitySelectionFilter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 30 Método: assertThat(movableEntitySelectionFilter)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 32 Método: assertThat(movableEntitySelectionFilter.accept(scoreDirector, new TestdataPinnedEntity("e1", null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 34 Método: assertThat(movableEntitySelectionFilter.accept(scoreDirector, new TestdataPinnedEntity("e2", null, true, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 47 Método: assertThat(parentEntityDescriptor.hasEffectiveMovableEntitySelectionFilter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 50 Método: assertThat(parentMovableEntitySelectionFilter)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 52 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataPinnedEntity("e1", null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 54 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataPinnedEntity("e2", null, true, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 56 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e3", null, false, false, null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 58 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e4", null, true, false, null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 60 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e5", null, false, true, null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 62 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e6", null, false, false, null, true, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 64 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e7", null, false, false, null, false, true)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 66 Método: assertThat(parentMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e8", null, true, true, null, true, true)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 78 Método: assertThat(childEntityDescriptor.hasEffectiveMovableEntitySelectionFilter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 81 Método: assertThat(childMovableEntitySelectionFilter)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 84 Método: assertThat(childMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e3", null, false, false, null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 86 Método: assertThat(childMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e4", null, true, false, null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 88 Método: assertThat(childMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e5", null, false, true, null, false, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 90 Método: assertThat(childMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e6", null, false, false, null, true, false)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 92 Método: assertThat(childMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e7", null, false, false, null, false, true)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 94 Método: assertThat(childMovableEntitySelectionFilter.accept(scoreDirector, new TestdataExtendedPinnedEntity("e8", null, true, true, null, true, true)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/entity/descriptor/EntityDescriptorTest.java linha: 123 Método: assertThat(entityDescriptor.extractEntities(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionBeanPropertyMemberAccessorTest.java linha: 16 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionBeanPropertyMemberAccessorTest.java linha: 17 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionBeanPropertyMemberAccessorTest.java linha: 18 Método: assertThat(memberAccessor.getAnnotation(PlanningVariable.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionBeanPropertyMemberAccessorTest.java linha: 23 Método: assertThat(memberAccessor.executeGetter(e1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionBeanPropertyMemberAccessorTest.java linha: 25 Método: assertThat(e1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 27 Método: assertThat(memberAccessor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 29 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 30 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 35 Método: assertThat(memberAccessor.executeGetter(e1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 37 Método: assertThat(e1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 46 Método: assertThat(memberAccessor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 48 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 49 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 54 Método: assertThat(memberAccessor.executeGetter(s1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 56 Método: assertThat(memberAccessor.executeGetter(s1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 65 Método: assertThat(memberAccessor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 67 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 68 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 73 Método: assertThat(memberAccessor.executeGetter(s1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 75 Método: assertThat(memberAccessor.executeGetter(s1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 84 Método: assertThat(memberAccessor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 86 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 87 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 92 Método: assertThat(memberAccessor.executeGetter(s1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 94 Método: assertThat(memberAccessor.executeGetter(s1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/MemberAccessorFactoryTest.java linha: 108 Método: assertThat(memberAccessor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionFieldMemberAccessorTest.java linha: 16 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionFieldMemberAccessorTest.java linha: 17 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionFieldMemberAccessorTest.java linha: 18 Método: assertThat(memberAccessor.getAnnotation(PlanningVariable.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionFieldMemberAccessorTest.java linha: 23 Método: assertThat(memberAccessor.executeGetter(e1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/ReflectionFieldMemberAccessorTest.java linha: 25 Método: assertThat(e1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 42 Método: assertThat(memberAccessor.executeGetter(entity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 44 Método: assertThat(memberAccessor.supportSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 47 Método: assertThat(entity.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 49 Método: assertThat(memberAccessor.getDeclaringClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 50 Método: assertThat(memberAccessor.getGenericType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 51 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 52 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorFactoryTest.java linha: 53 Método: assertThat(memberAccessor.getSpeedNote())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 23 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 24 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 25 Método: assertThat(memberAccessor.getSpeedNote())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 26 Método: assertThat(memberAccessor.getDeclaringClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 27 Método: assertThat(memberAccessor.supportSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 28 Método: assertThat(memberAccessor.getAnnotation(PlanningVariable.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 33 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 37 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 44 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 45 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 46 Método: assertThat(memberAccessor.getSpeedNote())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 47 Método: assertThat(memberAccessor.getDeclaringClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 48 Método: assertThat(memberAccessor.supportSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 49 Método: assertThat(memberAccessor.getAnnotation(PlanningId.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 52 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 59 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 60 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 61 Método: assertThat(memberAccessor.getSpeedNote())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 62 Método: assertThat(memberAccessor.getDeclaringClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 63 Método: assertThat(memberAccessor.supportSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 64 Método: assertThat(memberAccessor.getAnnotation(PlanningVariable.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 69 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 73 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 80 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 81 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 82 Método: assertThat(memberAccessor.getSpeedNote())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 83 Método: assertThat(memberAccessor.getDeclaringClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 84 Método: assertThat(memberAccessor.supportSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 87 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 90 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 99 Método: assertThat(memberAccessor1.getClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 131 Método: assertThat(memberAccessor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 132 Método: assertThat(memberAccessor.getType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 133 Método: assertThat(memberAccessor.getSpeedNote())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 134 Método: assertThat(memberAccessor.getDeclaringClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 135 Método: assertThat(memberAccessor.supportSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 136 Método: assertThat(memberAccessor.getAnnotation(PlanningPin.class))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 139 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberAccessorImplementorTest.java linha: 142 Método: assertThat(memberAccessor.executeGetter(testdataEntity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 72 Método: assertThat(fieldMemberDescriptor.getDeclaringClassName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 76 Método: assertThat(methodMemberDescriptor.getDeclaringClassName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 83 Método: assertThat(fieldMemberDescriptor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 87 Método: assertThat(getterMethodMemberDescriptor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 91 Método: assertThat(readMethodMemberDescriptor.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 97 Método: assertThat(fieldMemberDescriptor.getSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 101 Método: assertThat(getterMethodMemberDescriptorWithoutSetter.getSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 105 Método: assertThat(getterMethodMemberDescriptorWithSetter.getSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 110 Método: assertThat(readMethodMemberDescriptor.getSetter())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 116 Método: assertThat(fieldMemberDescriptor.getTypeName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 120 Método: assertThat(getterMethodMemberDescriptor.getTypeName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/common/accessor/gizmo/GizmoMemberDescriptorTest.java linha: 124 Método: assertThat(genericFieldMemberDescriptor.getTypeName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpManagerTest.java linha: 19 Método: assertThat(lookUpManager.<Object>lookUpWorkingObject(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpManagerTest.java linha: 32 Método: assertThat(lookUpManager.lookUpWorkingObject(new TestdataObjectIntegerId(0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpManagerTest.java linha: 33 Método: assertThat(lookUpManager.lookUpWorkingObject(new TestdataObjectIntegerId(1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/ClassAndPlanningIdComparatorTest.java linha: 42 Método: assertThat(result)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrNoneTest.java linha: 28 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrNoneTest.java linha: 37 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrNoneTest.java linha: 92 Método: assertThat(lookUpManager.lookUpWorkingObject(new TestdataObjectIntegerId(1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrNoneTest.java linha: 107 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyImmutableTest.java linha: 85 Método: assertThat(lookUpManager.lookUpWorkingObject(externalObject))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyEqualityTest.java linha: 26 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyEqualityTest.java linha: 33 Método: assertThat(lookUpManager.lookUpWorkingObject(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyEqualityTest.java linha: 84 Método: assertThat(lookUpManager.lookUpWorkingObject(new TestdataObjectEquals(1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyEqualityTest.java linha: 98 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrFailTest.java linha: 28 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrFailTest.java linha: 37 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrFailTest.java linha: 93 Método: assertThat(lookUpManager.lookUpWorkingObject(new TestdataObjectIntegerId(1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/lookup/LookUpStrategyIdOrFailTest.java linha: 107 Método: assertThat(lookUpManager.lookUpWorkingObjectOrReturnNull(object))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 24 Método: assertThat(firstWeightDescriptor.getConstraintPackage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 26 Método: assertThat(firstWeightDescriptor.getConstraintName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 30 Método: assertThat(secondWeightDescriptor.getConstraintPackage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 31 Método: assertThat(secondWeightDescriptor.getConstraintName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 40 Método: assertThat(solutionDescriptor.getConstraintConfigurationMemberAccessor().executeGetter(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 42 Método: assertThat(firstWeightDescriptor.createExtractor().apply(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 43 Método: assertThat(secondWeightDescriptor.createExtractor().apply(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 55 Método: assertThat(firstWeightDescriptor.getConstraintPackage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 57 Método: assertThat(firstWeightDescriptor.getConstraintName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 61 Método: assertThat(secondWeightDescriptor.getConstraintPackage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 62 Método: assertThat(secondWeightDescriptor.getConstraintName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 66 Método: assertThat(thirdWeightDescriptor.getConstraintPackage())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 68 Método: assertThat(thirdWeightDescriptor.getConstraintName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 79 Método: assertThat(solutionDescriptor.getConstraintConfigurationMemberAccessor().executeGetter(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 81 Método: assertThat(firstWeightDescriptor.createExtractor().apply(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 82 Método: assertThat(secondWeightDescriptor.createExtractor().apply(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/constraintweight/descriptor/ConstraintWeightDescriptorTest.java linha: 83 Método: assertThat(thirdWeightDescriptor.createExtractor().apply(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 14 Método: assertThat(new DoubleValueRange(0.0, 10.0).contains(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 15 Método: assertThat(new DoubleValueRange(0.0, 10.0).contains(10.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 16 Método: assertThat(new DoubleValueRange(0.0, 10.0).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 17 Método: assertThat(new DoubleValueRange(100.0, 120.0).contains(100.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 18 Método: assertThat(new DoubleValueRange(100.0, 120.0).contains(99.9))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 19 Método: assertThat(new DoubleValueRange(-5.3, 25.2).contains(-5.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primdouble/DoubleValueRangeTest.java linha: 20 Método: assertThat(new DoubleValueRange(-5.3, 25.2).contains(-5.4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 16 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0"), new BigDecimal("10")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 17 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.0")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 18 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-15.00"), new BigDecimal("25.07")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 19 Método: assertThat(new BigDecimalValueRange(new BigDecimal("7.0"), new BigDecimal("7.0")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 21 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0.0"), new BigDecimal("10.0"), new BigDecimal("2.0")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 23 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-1.0"), new BigDecimal("9.0"), new BigDecimal("2.0")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 25 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.4"), new BigDecimal("5.1")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 31 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0"), new BigDecimal("10")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 32 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.0")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 34 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-5"), new BigDecimal("25")).get(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 36 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-5.00"), new BigDecimal("25.00")).get(6L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 39 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0.0"), new BigDecimal("10.0"), new BigDecimal("2.0")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 41 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-1.0"), new BigDecimal("9.0"), new BigDecimal("2.0")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 43 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.4"), new BigDecimal("5.1")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 49 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0"), new BigDecimal("10")).contains(new BigDecimal("3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 50 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0"), new BigDecimal("10")).contains(new BigDecimal("10")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 52 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0"), new BigDecimal("10")).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 53 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.0")).contains(new BigDecimal("100.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 55 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.0")).contains(new BigDecimal("99.9")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 57 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-5.3"), new BigDecimal("25.2")).contains(new BigDecimal("-5.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 59 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-5.3"), new BigDecimal("25.2")).contains(new BigDecimal("-5.4")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 62 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0.0"), new BigDecimal("10.0"), new BigDecimal("2.0")).contains(new BigDecimal("2.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 64 Método: assertThat(new BigDecimalValueRange(new BigDecimal("0.0"), new BigDecimal("10.0"), new BigDecimal("2.0")).contains(new BigDecimal("3.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 66 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-1.0"), new BigDecimal("9.0"), new BigDecimal("2.0")).contains(new BigDecimal("1.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 68 Método: assertThat(new BigDecimalValueRange(new BigDecimal("-1.0"), new BigDecimal("9.0"), new BigDecimal("2.0")).contains(new BigDecimal("2.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 70 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.4"), new BigDecimal("5.1")).contains(new BigDecimal("115.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/bigdecimal/BigDecimalValueRangeTest.java linha: 72 Método: assertThat(new BigDecimalValueRange(new BigDecimal("100.0"), new BigDecimal("120.4"), new BigDecimal("5.1")).contains(new BigDecimal("115.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 14 Método: assertThat(new IntValueRange(0, 10).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 15 Método: assertThat(new IntValueRange(100, 120).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 16 Método: assertThat(new IntValueRange(-15, 25).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 17 Método: assertThat(new IntValueRange(7, 7).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 18 Método: assertThat(new IntValueRange(-1000, Integer.MAX_VALUE - 100).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 20 Método: assertThat(new IntValueRange(0, 10, 2).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 21 Método: assertThat(new IntValueRange(-1, 9, 2).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 22 Método: assertThat(new IntValueRange(100, 120, 5).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 27 Método: assertThat(new IntValueRange(0, 10).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 28 Método: assertThat(new IntValueRange(100, 120).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 29 Método: assertThat(new IntValueRange(-5, 25).get(1L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 30 Método: assertThat(new IntValueRange(-5, 25).get(6L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 31 Método: assertThat(new IntValueRange(-1000, Integer.MAX_VALUE - 100).get(1004L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 33 Método: assertThat(new IntValueRange(0, 10, 2).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 34 Método: assertThat(new IntValueRange(-1, 9, 2).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 35 Método: assertThat(new IntValueRange(100, 120, 5).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 40 Método: assertThat(new IntValueRange(0, 10).contains(3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 41 Método: assertThat(new IntValueRange(0, 10).contains(10))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 42 Método: assertThat(new IntValueRange(0, 10).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 43 Método: assertThat(new IntValueRange(100, 120).contains(100))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 44 Método: assertThat(new IntValueRange(100, 120).contains(99))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 45 Método: assertThat(new IntValueRange(-5, 25).contains(-4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 46 Método: assertThat(new IntValueRange(-5, 25).contains(-20))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 48 Método: assertThat(new IntValueRange(0, 10, 2).contains(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 49 Método: assertThat(new IntValueRange(0, 10, 2).contains(3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 50 Método: assertThat(new IntValueRange(-1, 9, 2).contains(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 51 Método: assertThat(new IntValueRange(-1, 9, 2).contains(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 52 Método: assertThat(new IntValueRange(100, 120, 5).contains(115))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primint/IntValueRangeTest.java linha: 53 Método: assertThat(new IntValueRange(100, 120, 5).contains(114))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 18 Método: assertThat(new ListValueRange<>(Arrays.asList(0, 2, 5, 10)).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 19 Método: assertThat(new ListValueRange<>(Arrays.asList(100, 120, 5, 7, 8)).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 20 Método: assertThat(new ListValueRange<>(Arrays.asList(-15, 25, 0)).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 21 Método: assertThat(new ListValueRange<>(Arrays.asList("b", "z", "a")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 22 Método: assertThat(new ListValueRange<>(Collections.emptyList()).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 27 Método: assertThat(new ListValueRange<>(Arrays.asList(0, 2, 5, 10)).get(2L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 28 Método: assertThat(new ListValueRange<>(Arrays.asList(100, -120)).get(1L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 29 Método: assertThat(new ListValueRange<>(Arrays.asList("b", "z", "a", "c", "g", "d")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 34 Método: assertThat(new ListValueRange<>(Arrays.asList(0, 2, 5, 10)).contains(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 35 Método: assertThat(new ListValueRange<>(Arrays.asList(0, 2, 5, 10)).contains(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 36 Método: assertThat(new ListValueRange<>(Arrays.asList(0, 2, 5, 10)).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 37 Método: assertThat(new ListValueRange<>(Arrays.asList(100, 120, 5, 7, 8)).contains(7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 38 Método: assertThat(new ListValueRange<>(Arrays.asList(100, 120, 5, 7, 8)).contains(9))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 39 Método: assertThat(new ListValueRange<>(Arrays.asList(-15, 25, 0)).contains(-15))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 40 Método: assertThat(new ListValueRange<>(Arrays.asList(-15, 25, 0)).contains(-14))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 41 Método: assertThat(new ListValueRange<>(Arrays.asList("b", "z", "a")).contains("a"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/collection/ListValueRangeTest.java linha: 42 Método: assertThat(new ListValueRange<>(Arrays.asList("b", "z", "a")).contains("n"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 18 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(0, 2, 5, 10))).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 19 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(100, 120, 5, 7, 8))).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 21 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(-15, 25, 0))).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 22 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList("b", "z", "a"))).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 24 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Collections.emptyList())).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 29 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(0, 2, 5, 10))).get(2L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 31 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(0, 2, 5, 10))).get(4L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 32 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList("b", "z", "a", "c", "g", "d"))).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 34 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList("b", "z", "a", "c", "g", "d"))).get(6L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 40 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(0, 2, 5, 10))).contains(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 41 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(0, 2, 5, 10))).contains(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 42 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList(0, 2, 5, 10))).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 43 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList("b", "z", "a"))).contains("a"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 45 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList("b", "z", "a"))).contains("n"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/NullableCountableValueRangeTest.java linha: 47 Método: assertThat(new NullableCountableValueRange<>(new ListValueRange<>(Arrays.asList("b", "z", "a"))).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/EmptyValueRangeTest.java linha: 16 Método: assertThat(new EmptyValueRange<Integer>().getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/EmptyValueRangeTest.java linha: 27 Método: assertThat(new EmptyValueRange<Integer>().contains(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/EmptyValueRangeTest.java linha: 28 Método: assertThat(new EmptyValueRange<Integer>().contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 29 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 30 Método: assertThat(createValueRange(Arrays.asList("a", "b"), Arrays.asList("c"), Arrays.asList("d")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 31 Método: assertThat(createValueRange(Collections.emptyList()).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 36 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).get(2L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 37 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).get(4L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 38 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).get(6L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 39 Método: assertThat(createValueRange(Arrays.asList("a", "b"), Arrays.asList("c"), Arrays.asList("d")).get(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 44 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).contains(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 45 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).contains(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 46 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).contains(-15))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 47 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).contains(-14))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 48 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).contains(-1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 49 Método: assertThat(createValueRange(Arrays.asList(0, 2, 5, 10), Arrays.asList(-15, 25, -1)).contains(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 50 Método: assertThat(createValueRange(Arrays.asList("a", "b"), Arrays.asList("c"), Arrays.asList("d")).contains("c"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/composite/CompositeCountableValueRangeTest.java linha: 51 Método: assertThat(createValueRange(Arrays.asList("a", "b"), Arrays.asList("c"), Arrays.asList("d")).contains("n"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 31 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 32 Método: assertThat(new TemporalValueRange<>(from, to, 7, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 33 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.WEEKS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 37 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 38 Método: assertThat(new TemporalValueRange<>(from, to, 2, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 39 Método: assertThat(new TemporalValueRange<>(from, to, 5, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 42 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 46 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 47 Método: assertThat(new TemporalValueRange<>(from, to, 2, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 48 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 52 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 53 Método: assertThat(new TemporalValueRange<>(from, to, 2, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 56 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 60 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 61 Método: assertThat(new TemporalValueRange<>(from, to, 2, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 64 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 68 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 69 Método: assertThat(new TemporalValueRange<>(from, to, 2, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 72 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 75 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.YEARS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 82 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 83 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 84 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 85 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 86 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 90 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 94 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MONTHS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 97 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.DAYS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 100 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 103 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 106 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 113 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 114 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 115 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).get(6))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 119 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 120 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).get(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 124 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.YEARS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 125 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.YEARS).get(23))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 132 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 134 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 136 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).get(16265165))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 141 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 143 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 145 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).get(271085))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 150 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 152 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 154 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).get(4517))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 159 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.DAYS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 161 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.DAYS).get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 163 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.DAYS).get(187))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 168 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MONTHS).get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 170 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MONTHS).get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 172 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MONTHS).get(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 180 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).contains(LocalDate.of(2016, 6, 30)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 181 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).contains(LocalDate.of(2015, 7, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 182 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).contains(LocalDate.of(2016, 7, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 183 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).contains(LocalDate.of(2016, 7, 3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 184 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).contains(LocalDate.of(2016, 9, 7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 185 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.DAYS).contains(LocalDate.of(2016, 9, 8)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 189 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2016, 6, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 190 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2016, 7, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 191 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2016, 8, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 192 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2016, 9, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 193 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2016, 7, 7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 197 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 1, 30)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 198 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 1, 31)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 199 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 200 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 27)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 201 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 28)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 202 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 206 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 1, 30)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 207 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 1, 31)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 208 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 209 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 27)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 210 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 28)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 211 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 212 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 30)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 213 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 31)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 214 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 4, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 218 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 1, 30)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 219 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 1, 31)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 220 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 221 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 27)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 222 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 2, 28)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 223 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 224 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 30)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 225 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 3, 31)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 226 Método: assertThat(new TemporalValueRange<>(from, to, 1, ChronoUnit.MONTHS).contains(LocalDate.of(2017, 4, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 233 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).contains(LocalDateTime.of(2016, 7, 6, 23, 59, 59)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 235 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).contains(LocalDateTime.of(2016, 7, 7, 1, 1, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 237 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).contains(LocalDateTime.of(2016, 7, 7, 6, 1, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 239 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.HOURS).contains(LocalDateTime.of(2016, 7, 7, 7, 7, 7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 244 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).contains(LocalDateTime.of(2016, 7, 7, 0, 59, 59)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 246 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).contains(LocalDateTime.of(2016, 7, 7, 1, 1, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 248 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).contains(LocalDateTime.of(2016, 7, 7, 7, 6, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 250 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.MINUTES).contains(LocalDateTime.of(2016, 7, 7, 7, 7, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 255 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).contains(LocalDateTime.of(2016, 7, 7, 1, 0, 59)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 257 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).contains(LocalDateTime.of(2016, 7, 7, 1, 1, 1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 259 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).contains(LocalDateTime.of(2016, 7, 7, 7, 7, 6)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 261 Método: assertThat(new TemporalValueRange<>(fromTime, toTime, 1, ChronoUnit.SECONDS).contains(LocalDateTime.of(2016, 7, 7, 7, 7, 7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 349 Método: assertThat(it.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 358 Método: assertThat(temporalValueRange.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 359 Método: assertThat(temporalValueRange.get(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 360 Método: assertThat(temporalValueRange.get(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 361 Método: assertThat(temporalValueRange.get(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 362 Método: assertThat(temporalValueRange.get(3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 363 Método: assertThat(temporalValueRange.get(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 364 Método: assertThat(temporalValueRange.get(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 381 Método: assertThat(range.getSize() * increment)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 382 Método: assertThat(range.contains(from))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 383 Método: assertThat(range.contains(to))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 393 Método: assertThat(range.getSize() * increment)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 394 Método: assertThat(range.contains(from))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 395 Método: assertThat(range.contains(to))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 405 Método: assertThat(range.getSize() * increment)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 406 Método: assertThat(range.contains(from))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 407 Método: assertThat(range.contains(to))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 479 Método: assertThat((to.getValue() - from.getValue()) % 10)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/temporal/TemporalValueRangeTest.java linha: 493 Método: assertThat(range.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 14 Método: assertThat(new LongValueRange(0L, 10L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 15 Método: assertThat(new LongValueRange(100L, 120L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 16 Método: assertThat(new LongValueRange(-15L, 25L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 17 Método: assertThat(new LongValueRange(7L, 7L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 18 Método: assertThat(new LongValueRange(-1000L, Long.MAX_VALUE - 3000L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 20 Método: assertThat(new LongValueRange(0L, 10L, 2L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 21 Método: assertThat(new LongValueRange(-1L, 9L, 2L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 22 Método: assertThat(new LongValueRange(100L, 120L, 5L).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 27 Método: assertThat((long) new LongValueRange(0L, 10L).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 28 Método: assertThat((long) new LongValueRange(100L, 120L).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 29 Método: assertThat((long) new LongValueRange(-5L, 25L).get(1L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 30 Método: assertThat((long) new LongValueRange(-5L, 25L).get(6L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 31 Método: assertThat((long) new LongValueRange(-1000L, Long.MAX_VALUE - 3000L).get(1004L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 33 Método: assertThat((long) new LongValueRange(0L, 10L, 2L).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 34 Método: assertThat((long) new LongValueRange(-1L, 9L, 2L).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 35 Método: assertThat((long) new LongValueRange(100L, 120L, 5L).get(3L).intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 40 Método: assertThat(new LongValueRange(0L, 10L).contains(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 41 Método: assertThat(new LongValueRange(0L, 10L).contains(10L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 42 Método: assertThat(new LongValueRange(0L, 10L).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 43 Método: assertThat(new LongValueRange(100L, 120L).contains(100L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 44 Método: assertThat(new LongValueRange(100L, 120L).contains(99L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 45 Método: assertThat(new LongValueRange(-5L, 25L).contains(-4L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 46 Método: assertThat(new LongValueRange(-5L, 25L).contains(-20L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 48 Método: assertThat(new LongValueRange(0L, 10L, 2L).contains(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 49 Método: assertThat(new LongValueRange(0L, 10L, 2L).contains(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 50 Método: assertThat(new LongValueRange(-1L, 9L, 2L).contains(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 51 Método: assertThat(new LongValueRange(-1L, 9L, 2L).contains(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 52 Método: assertThat(new LongValueRange(100L, 120L, 5L).contains(115L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primlong/LongValueRangeTest.java linha: 53 Método: assertThat(new LongValueRange(100L, 120L, 5L).contains(114L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 16 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 17 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 18 Método: assertThat(new BigIntegerValueRange(new BigInteger("-15"), new BigInteger("25")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 19 Método: assertThat(new BigIntegerValueRange(new BigInteger("7"), new BigInteger("7")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 21 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10"), new BigInteger("2")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 23 Método: assertThat(new BigIntegerValueRange(new BigInteger("-1"), new BigInteger("9"), new BigInteger("2")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 25 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120"), new BigInteger("5")).getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 31 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 32 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 34 Método: assertThat(new BigIntegerValueRange(new BigInteger("-5"), new BigInteger("25")).get(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 36 Método: assertThat(new BigIntegerValueRange(new BigInteger("-5"), new BigInteger("25")).get(6L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 38 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10"), new BigInteger("2")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 40 Método: assertThat(new BigIntegerValueRange(new BigInteger("-1"), new BigInteger("9"), new BigInteger("2")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 42 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120"), new BigInteger("5")).get(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 48 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10")).contains(new BigInteger("3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 49 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10")).contains(new BigInteger("10")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 51 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10")).contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 52 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120")).contains(new BigInteger("100")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 54 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120")).contains(new BigInteger("99")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 56 Método: assertThat(new BigIntegerValueRange(new BigInteger("-5"), new BigInteger("25")).contains(new BigInteger("-4")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 58 Método: assertThat(new BigIntegerValueRange(new BigInteger("-5"), new BigInteger("25")).contains(new BigInteger("-20")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 61 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10"), new BigInteger("2")).contains(new BigInteger("2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 63 Método: assertThat(new BigIntegerValueRange(new BigInteger("0"), new BigInteger("10"), new BigInteger("2")).contains(new BigInteger("3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 65 Método: assertThat(new BigIntegerValueRange(new BigInteger("-1"), new BigInteger("9"), new BigInteger("2")).contains(new BigInteger("1")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 67 Método: assertThat(new BigIntegerValueRange(new BigInteger("-1"), new BigInteger("9"), new BigInteger("2")).contains(new BigInteger("2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 69 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120"), new BigInteger("5")).contains(new BigInteger("115")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/biginteger/BigIntegerValueRangeTest.java linha: 71 Método: assertThat(new BigIntegerValueRange(new BigInteger("100"), new BigInteger("120"), new BigInteger("5")).contains(new BigInteger("114")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primboolean/BooleanValueRangeTest.java linha: 17 Método: assertThat(new BooleanValueRange().getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primboolean/BooleanValueRangeTest.java linha: 22 Método: assertThat(new BooleanValueRange().get(0L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primboolean/BooleanValueRangeTest.java linha: 23 Método: assertThat(new BooleanValueRange().get(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primboolean/BooleanValueRangeTest.java linha: 28 Método: assertThat(new BooleanValueRange().contains(Boolean.FALSE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primboolean/BooleanValueRangeTest.java linha: 29 Método: assertThat(new BooleanValueRange().contains(Boolean.TRUE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/domain/valuerange/buildin/primboolean/BooleanValueRangeTest.java linha: 30 Método: assertThat(new BooleanValueRange().contains(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 54 Método: assertThat(objects[j])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 55 Método: assertThat(objects[j])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 56 Método: assertThat(objects[i])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 64 Método: assertThat(objects[i])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 65 Método: assertThat(objects[i])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 74 Método: assertThat(objects[j])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 75 Método: assertThat(objects[i])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 83 Método: assertThat(objects[i])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 100 Método: softly.assertThat(comparator.compare(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 103 Método: softly.assertThat(comparator.compare(b, a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 123 Método: softly.assertThat(comparator.compare(a, b))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 126 Método: softly.assertThat(comparator.compare(b, a))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 170 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 172 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 173 Método: assertThat(iterator.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 180 Método: assertThat(iterator)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 183 Método: fail("The iterator with hasNext() (" + false + ") is expected to throw a " + NoSuchElementException.class.getSimpleName() + " when calling next().")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 196 Método: assertThat(o)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 203 Método: assertThat(codeAssertable.getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 211 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 212 Método: assertThat(array)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 223 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 224 Método: assertThat(Streams.stream(iterator).map(PlannerAssert::codeIfNotNull).limit(codes.length))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 230 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 231 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 239 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 243 Método: assertThat(listIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 251 Método: assertThat(listIterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 256 Método: softly.assertThat(collection)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 257 Método: softly.assertThat(collection)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 265 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 266 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 268 Método: assertThat(selector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 276 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 277 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 279 Método: assertThat(selector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 286 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 287 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 288 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 290 Método: assertThat(selector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 295 Método: assertThat(selector.iterator())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 296 Método: assertThat(selector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 297 Método: assertThat(selector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 299 Método: assertThat(selector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 351 Método: assertThat(entitySelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 352 Método: assertThat(entitySelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 354 Método: assertThat(entitySelector.getSize())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 400 Método: assertThat(valueSelector.isCountable())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 401 Método: assertThat(valueSelector.isNeverEnding())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 403 Método: assertThat(valueSelector.getSize(entity))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 412 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 413 Método: assertThat(solution.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testdata/util/PlannerAssert.java linha: 419 Método: assertThat(singletonList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/testutil/TestRandom.java linha: 213 Método: assertThat(lastRequestedIntBound)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 24 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 26 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 28 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 37 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 39 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 48 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 50 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 52 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 61 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 63 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/decider/forager/DefaultConstructionHeuristicForagerTest.java linha: 65 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 37 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 40 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 43 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 46 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 47 Método: assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 67 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 70 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 73 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 76 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 77 Método: assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 93 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/DefaultConstructionHeuristicPhaseTest.java linha: 94 Método: assertThat(solution.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerFactoryTest.java linha: 45 Método: assertThat(placerConfig.getEntitySelectorConfig().getEntityClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerFactoryTest.java linha: 46 Método: assertThat(placerConfig.getMoveSelectorConfigList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerFactoryTest.java linha: 63 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedValuePlacerFactoryTest.java linha: 46 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PlacementAssertions.java linha: 16 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PlacementAssertions.java linha: 18 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PlacementAssertions.java linha: 23 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PlacementAssertions.java linha: 28 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PlacementAssertions.java linha: 30 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PlacementAssertions.java linha: 35 Método: assertThat(iterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedValuePlacerTest.java linha: 55 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedValuePlacerTest.java linha: 62 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedValuePlacerTest.java linha: 69 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedValuePlacerTest.java linha: 85 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerTest.java linha: 39 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerTest.java linha: 47 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerTest.java linha: 55 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerTest.java linha: 70 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 59 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 66 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 73 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 80 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 88 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 136 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 143 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 150 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 157 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 164 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 207 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 215 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/QueuedEntityPlacerTest.java linha: 223 Método: assertThat(placementIterator)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerFactoryTest.java linha: 26 Método: assertThat(placerConfig.getMoveSelectorConfig())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerFactoryTest.java linha: 30 Método: assertThat(changeMoveSelectorConfig.getEntitySelectorConfig().getEntityClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerFactoryTest.java linha: 31 Método: assertThat(changeMoveSelectorConfig.getEntitySelectorConfig().getMimicSelectorRef())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/constructionheuristic/placer/entity/PooledEntityPlacerFactoryTest.java linha: 33 Método: assertThat(changeMoveSelectorConfig.getValueSelectorConfig().getVariableName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/GenericJaxbIOTest.java linha: 32 Método: assertThat(marshalledObject)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/GenericJaxbIOTest.java linha: 38 Método: softly.assertThat(assertThatNullPointerException().isThrownBy(() -> xmlIO.write(null, new StringWriter())))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/GenericJaxbIOTest.java linha: 39 Método: softly.assertThat(assertThatNullPointerException().isThrownBy(() -> xmlIO.write(new DummyJaxbClass(1, ""), null)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbCustomPropertiesAdapterTest.java linha: 38 Método: assertThat(testBean.customProperties)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbCustomPropertiesAdapterTest.java linha: 47 Método: assertThat(jaxbCustomPropertiesAdapter.marshal(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbCustomPropertiesAdapterTest.java linha: 48 Método: assertThat(jaxbCustomPropertiesAdapter.unmarshal(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbOffsetDateTimeAdapterTest.java linha: 17 Método: assertThat(offsetDateTime)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbOffsetDateTimeAdapterTest.java linha: 22 Método: assertThat(jaxbOffsetDateTimeAdapter.unmarshal(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbOffsetDateTimeAdapterTest.java linha: 29 Método: assertThat(offsetDateTimeString)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbDurationAdapterTest.java linha: 16 Método: assertThat(duration)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbDurationAdapterTest.java linha: 21 Método: assertThat(jaxbDurationAdapter.unmarshal(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/io/jaxb/adapter/JaxbDurationAdapterTest.java linha: 27 Método: assertThat(durationString)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 38 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 52 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 66 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 91 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 106 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 121 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 156 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 170 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 184 Método: assertThat(extractSingleton(finalistPodium.getFinalistList()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/finalist/StrategicOscillationByLevelFinalistPodiumTest.java linha: 212 Método: assertThat(finalistPodium.getFinalistList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 42 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 44 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 46 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 48 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 50 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 53 Método: assertThat(pickedScope)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 74 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 76 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 78 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 80 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 82 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 85 Método: assertThat(pickedScope)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 105 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 107 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 109 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 111 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 114 Método: assertThat(pickedScope)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 134 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 136 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 138 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 140 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 143 Método: assertThat(pickedScope)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 164 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 166 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 168 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 170 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 172 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 175 Método: assertThat(pickedScope)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 196 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 198 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 200 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 202 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 204 Método: assertThat(forager.isQuitEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/forager/AcceptedLocalSearchForagerTest.java linha: 207 Método: assertThat(pickedScope)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 41 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 42 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 43 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 44 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 45 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 47 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 54 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 55 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 56 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 57 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 58 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 60 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 67 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 68 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 69 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 70 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 71 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 73 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 80 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 81 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 82 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 83 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 84 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 86 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 93 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 94 Método: assertThat(acceptor.isAccepted(moveScope1Again))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 95 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 96 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 97 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 99 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 125 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 126 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 127 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 128 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 129 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 130 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 131 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 132 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v0, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 133 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v0, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 134 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v1, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 135 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v1, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 136 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v1, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 137 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v2, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 138 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v2, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 139 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, v3, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 145 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 146 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 147 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 148 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 149 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 150 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 151 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 152 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v0, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 153 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v0, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 154 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v1, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 155 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v1, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 156 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v1, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 157 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v2, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 158 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v2, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 159 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, v3, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 165 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 166 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 167 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 168 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 169 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 170 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 171 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 172 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v0, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 173 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v0, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 174 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v1, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 175 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v1, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 176 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v1, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 177 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v2, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 178 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v2, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 179 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, v3, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 185 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 186 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 187 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 188 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 189 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 190 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 191 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v0, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 192 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v0, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 193 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v0, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 194 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v1, v2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 195 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v1, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 196 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v1, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 197 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v2, v3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 198 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v2, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 199 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, v3, v4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 227 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -120, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 228 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -20, v0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 229 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -120, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 230 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -20, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 231 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -120, v0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/ValueTabuAcceptorTest.java linha: 232 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -20, v0, v1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/EntityRatioTabuSizeStrategyTest.java linha: 19 Método: assertThat(new EntityRatioTabuSizeStrategy(0.1).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/EntityRatioTabuSizeStrategyTest.java linha: 20 Método: assertThat(new EntityRatioTabuSizeStrategy(0.5).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/EntityRatioTabuSizeStrategyTest.java linha: 22 Método: assertThat(new EntityRatioTabuSizeStrategy(0.1051).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/EntityRatioTabuSizeStrategyTest.java linha: 23 Método: assertThat(new EntityRatioTabuSizeStrategy(0.1049).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/EntityRatioTabuSizeStrategyTest.java linha: 25 Método: assertThat(new EntityRatioTabuSizeStrategy(0.0000001).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/EntityRatioTabuSizeStrategyTest.java linha: 26 Método: assertThat(new EntityRatioTabuSizeStrategy(0.9999999).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/FixedTabuSizeStrategyTest.java linha: 14 Método: assertThat(new FixedTabuSizeStrategy(5).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/FixedTabuSizeStrategyTest.java linha: 15 Método: assertThat(new FixedTabuSizeStrategy(17).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/ValueRatioTabuSizeStrategyTest.java linha: 19 Método: assertThat(new ValueRatioTabuSizeStrategy(0.1).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/ValueRatioTabuSizeStrategyTest.java linha: 20 Método: assertThat(new ValueRatioTabuSizeStrategy(0.5).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/ValueRatioTabuSizeStrategyTest.java linha: 22 Método: assertThat(new ValueRatioTabuSizeStrategy(0.1051).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/ValueRatioTabuSizeStrategyTest.java linha: 23 Método: assertThat(new ValueRatioTabuSizeStrategy(0.1049).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/ValueRatioTabuSizeStrategyTest.java linha: 25 Método: assertThat(new ValueRatioTabuSizeStrategy(0.0000001).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/size/ValueRatioTabuSizeStrategyTest.java linha: 26 Método: assertThat(new ValueRatioTabuSizeStrategy(0.9999999).determineTabuSize(stepScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 41 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 42 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 43 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 44 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 45 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 47 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 54 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 55 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 56 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 57 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 58 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 60 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 67 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 68 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 69 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 70 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 71 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 73 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 80 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 81 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 82 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 83 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 84 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 86 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 93 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 94 Método: assertThat(acceptor.isAccepted(moveScope1Again))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 95 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 96 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 97 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 99 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 125 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 126 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 127 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 128 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 129 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 130 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 131 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 132 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e0, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 133 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e0, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 134 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e1, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 135 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e1, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 136 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e1, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 137 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e2, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 138 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e2, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 139 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, e3, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 145 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 146 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 147 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 148 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 149 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 150 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 151 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 152 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e0, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 153 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e0, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 154 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e1, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 155 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e1, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 156 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e1, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 157 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e2, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 158 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e2, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 159 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, e3, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 165 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 166 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 167 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 168 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 169 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 170 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 171 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 172 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e0, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 173 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e0, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 174 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e1, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 175 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e1, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 176 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e1, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 177 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e2, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 178 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e2, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 179 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, e3, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 185 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 186 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 187 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 188 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 189 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 190 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 191 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e0, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 192 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e0, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 193 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e0, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 194 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e1, e2)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 195 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e1, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 196 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e1, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 197 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e2, e3)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 198 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e2, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 199 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, e3, e4)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 227 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -120, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 228 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -20, e0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 229 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -120, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 230 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -20, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 231 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -120, e0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/tabu/EntityTabuAcceptorTest.java linha: 232 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -20, e0, e1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 34 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 35 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 36 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 37 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 38 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 40 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 50 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 51 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 52 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 53 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 54 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 56 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 66 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 67 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 68 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -701)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 69 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 70 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 72 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 82 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 83 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 84 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -701)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 85 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 86 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 88 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 98 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 99 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 100 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 101 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 102 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 104 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 114 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 115 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 116 Método: assertThat(acceptor.isAccepted(moveScope5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 117 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 118 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 120 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 146 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 147 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 148 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 149 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 150 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 152 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 162 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 163 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 164 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 165 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 166 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 168 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 178 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 179 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 180 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, 1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 181 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 182 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 183 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 185 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 195 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 196 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 197 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 198 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 200 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 210 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 211 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 212 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 213 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 214 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 216 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 226 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 227 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 228 Método: assertThat(acceptor.isAccepted(moveScope5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 229 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 230 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 232 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 258 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 259 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 260 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 261 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 262 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 264 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 274 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 275 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 276 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 277 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 278 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 280 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 290 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 291 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 292 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, 1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 293 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 294 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 295 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 297 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 307 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 308 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 309 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 310 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 312 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 322 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 323 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 324 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 325 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 326 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 328 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 338 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 339 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 340 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 341 Método: assertThat(acceptor.isAccepted(moveScope5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 342 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 343 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/stepcountinghillclimbing/StepCountingHillClimbingAcceptorTest.java linha: 345 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 37 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 38 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 39 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 40 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 41 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 43 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 56 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 57 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 58 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 59 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 60 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 61 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -901)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 74 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 75 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 76 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 77 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -801)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 78 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 79 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 109 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 113 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 116 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 119 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 122 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 151 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -8)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 152 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 153 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 154 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -9)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 167 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -10)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 168 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 169 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -9)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 170 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 171 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -8)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 184 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -9)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 185 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -8)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 186 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -7)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/greatdeluge/GreatDelugeAcceptorTest.java linha: 187 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/AcceptorFactoryTest.java linha: 53 Método: assertThat(acceptor)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/AcceptorFactoryTest.java linha: 55 Método: assertThat(compositeAcceptor.acceptorList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/AcceptorFactoryTest.java linha: 69 Método: assertThat(compositeAcceptor.acceptorList.get(position))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 37 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 39 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1200)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 41 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1200)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 42 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 54 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 56 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 58 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 70 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 71 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -801)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 72 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -1200)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 73 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/simulatedannealing/SimulatedAnnealingAcceptorTest.java linha: 74 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 34 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 35 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 36 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 37 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 38 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 40 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 50 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 51 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 52 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 53 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 54 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 56 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 66 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 67 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 68 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 69 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 70 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 72 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 82 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 83 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 84 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -501)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 85 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 86 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 88 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 98 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 99 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 100 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 101 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 102 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -701)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 104 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 114 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 115 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 116 Método: assertThat(acceptor.isAccepted(moveScope5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 117 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 118 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 120 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 147 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 148 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 149 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 150 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 151 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 153 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 163 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 164 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 165 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 166 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 167 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1001)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 169 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 179 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 180 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 181 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -701)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 182 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope2, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 183 Método: assertThat(acceptor.isAccepted(moveScope2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 185 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 195 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 196 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 197 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -701)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 198 Método: assertThat(acceptor.isAccepted(moveScope3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 199 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope3, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 201 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 211 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 212 Método: assertThat(acceptor.isAccepted(moveScope4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 213 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 214 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 215 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope4, -401)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 217 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 227 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 228 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 229 Método: assertThat(acceptor.isAccepted(moveScope5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 230 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 231 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope5, -600)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/lateacceptance/LateAcceptanceAcceptorTest.java linha: 233 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -301)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 31 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 32 Método: assertThat(acceptor.isAccepted(moveScope0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 33 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -800)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 34 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 35 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 37 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 47 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 48 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -2000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 49 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -700)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 50 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -1000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 51 Método: assertThat(acceptor.isAccepted(moveScope1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 52 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -500)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 53 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope1, -501)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/hillclimbing/HillClimbingAcceptorTest.java linha: 55 Método: assertThat(acceptor.isAccepted(buildMoveScope(stepScope0, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/composite/CompositeAcceptorTest.java linha: 54 Método: assertThat(isCompositeAccepted(true, true, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/composite/CompositeAcceptorTest.java linha: 55 Método: assertThat(isCompositeAccepted(false, true, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/composite/CompositeAcceptorTest.java linha: 56 Método: assertThat(isCompositeAccepted(true, false, true))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/composite/CompositeAcceptorTest.java linha: 57 Método: assertThat(isCompositeAccepted(true, true, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/decider/acceptor/composite/CompositeAcceptorTest.java linha: 58 Método: assertThat(isCompositeAccepted(false, false, false))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 46 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 49 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 52 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 55 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 77 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 80 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 83 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 86 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 104 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 105 Método: assertThat(solution.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 127 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 130 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 133 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 136 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 159 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 162 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 165 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 168 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 187 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 188 Método: assertThat(solution.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 199 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/localsearch/DefaultLocalSearchPhaseTest.java linha: 210 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/phase/NoChangePhaseTest.java linha: 35 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/phase/NoChangePhaseTest.java linha: 38 Método: assertThat(solvedE1.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/phase/NoChangePhaseTest.java linha: 41 Método: assertThat(solvedE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/phase/NoChangePhaseTest.java linha: 44 Método: assertThat(solvedE3.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/phase/NoChangePhaseTest.java linha: 45 Método: assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 62 Método: assertThat(((PartitionedSearchPhaseScope) phaseScope).getPartCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 107 Método: assertThat(solution.getEntityList().size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 143 Método: assertThat(solver.terminateEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 144 Método: assertThat(solver.isTerminateEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 147 Método: assertThat(executor.awaitTermination(1, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 148 Método: assertThat(solutionFuture.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseTest.java linha: 194 Método: assertThat(bestSolution.get().getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 26 Método: assertThat(mockResolveActiveThreadCount(PartitionedSearchPhaseConfig.ACTIVE_THREAD_COUNT_AUTO, availableCpuCount))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 32 Método: assertThat(createDefaultPartitionedSearchPhaseFactory().resolveActiveThreadCount(PartitionedSearchPhaseConfig.ACTIVE_THREAD_COUNT_UNLIMITED))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 52 Método: assertThat(partitionedSearchPhase.isAssertStepScoreFromScratch())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 53 Método: assertThat(partitionedSearchPhase.isAssertExpectedStepScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 54 Método: assertThat(partitionedSearchPhase.isAssertShadowVariablesAreNotStaleAfterStep())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 60 Método: assertThat(partitionedSearchPhase.isAssertStepScoreFromScratch())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 61 Método: assertThat(partitionedSearchPhase.isAssertExpectedStepScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/DefaultPartitionedSearchPhaseFactoryTest.java linha: 62 Método: assertThat(partitionedSearchPhase.isAssertShadowVariablesAreNotStaleAfterStep())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 40 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 48 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 56 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 57 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 71 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 72 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 73 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 79 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 82 Método: assertThat(it)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 99 Método: assertThat(it)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 100 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 101 Método: assertThat(it)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 102 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 103 Método: assertThat(it)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 123 Método: assertThat(it)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 124 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 125 Método: assertThat(it)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/partitionedsearch/queue/PartitionQueueTest.java linha: 126 Método: assertThat(it.next())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 20 Método: assertThat(bestSolutionHolder.take())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 26 Método: assertThat(bestSolutionHolder.take().getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 27 Método: assertThat(bestSolutionHolder.take())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 31 Método: assertThat(bestSolutionHolder.take().getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 35 Método: assertThat(bestSolutionHolder.take().getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 47 Método: assertThat(problemChange1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 48 Método: assertThat(problemChange2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 57 Método: assertThat(problemChange2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 58 Método: assertThat(problemChange3)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 59 Método: assertThat(problemChange4)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/BestSolutionHolderTest.java linha: 74 Método: assertThat(problemChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 18 Método: assertThat(mockMoveThreadCountResolverAuto(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 19 Método: assertThat(mockMoveThreadCountResolverAuto(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 20 Método: assertThat(mockMoveThreadCountResolverAuto(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 21 Método: assertThat(mockMoveThreadCountResolverAuto(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 22 Método: assertThat(mockMoveThreadCountResolverAuto(6))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 23 Método: assertThat(mockMoveThreadCountResolverAuto(100))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 28 Método: assertThat(mockMoveThreadCountResolverAuto(-1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 45 Método: assertThat(resolveMoveThreadCount("2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 55 Método: assertThat(resolveMoveThreadCount(SolverConfig.MOVE_THREAD_COUNT_NONE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 74 Método: softly.assertThat(solutionDescriptor1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 75 Método: softly.assertThat(scoreDirectorFactory1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 76 Método: softly.assertThat(scoreDirectorFactory1.getSolutionDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 83 Método: softly.assertThat(solutionDescriptor2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverFactoryTest.java linha: 84 Método: softly.assertThat(scoreDirectorFactory2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 65 Método: assertThat(consumedSolutions)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 66 Método: assertThat(consumedSolutions.get(0).getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 67 Método: assertThat(consumedSolutions.get(1).getEntityList())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 70 Método: fail("Exception during consumption.", error.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 85 Método: assertThat(futureProblemChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 89 Método: assertThat(finalBestSolutionRef.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 90 Método: assertThat(futureProblemChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 110 Método: assertThat(futureProblemChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 123 Método: assertThat(futureProblemChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/ConsumerSupportTest.java linha: 128 Método: assertThat(futureProblemChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 24 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 25 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 28 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 29 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 32 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 33 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 36 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 37 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 40 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 41 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 44 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedStepCountTerminationTest.java linha: 45 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 59 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 60 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 61 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 62 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 71 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 72 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 75 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 76 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 77 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 78 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 81 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 82 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 112 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 113 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 114 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 115 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 124 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 125 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 126 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 127 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 136 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentScoreDifferenceThresholdTerminationTest.java linha: 137 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 19 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 20 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 22 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 23 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 25 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 26 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 28 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 29 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 31 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 32 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 34 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/StepCountTerminationTest.java linha: 35 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 33 Método: assertThat(termination)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 35 Método: assertThat(((TimeMillisSpentTermination<?>) termination).getTimeMillisSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 48 Método: assertThat(termination)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 50 Método: assertThat(((TimeMillisSpentTermination<?>) termination).getTimeMillisSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 63 Método: assertThat(termination)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 65 Método: assertThat(((UnimprovedTimeMillisSpentTermination<?>) termination).getUnimprovedTimeMillisSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 79 Método: assertThat(termination)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 81 Método: assertThat(((UnimprovedTimeMillisSpentTermination<?>) termination).getUnimprovedTimeMillisSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 88 Método: assertThat(TerminationFactory.<TestdataSolution>create(new TerminationConfig()).buildTerminationFromList(Collections.singletonList(termination)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 104 Método: assertThat(resultingTermination)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 107 Método: assertThat(andCompositeTermination.terminationList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 121 Método: assertThat(resultingTermination)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 124 Método: assertThat(andCompositeTermination.terminationList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 134 Método: assertThat(terminationList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 138 Método: assertThat(timeMillisSpentTermination.getTimeMillisSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 153 Método: assertThat(terminationList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TerminationFactoryTest.java linha: 165 Método: assertThat(terminationList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 23 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 24 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 26 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 27 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 29 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 30 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 32 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 33 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 35 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 36 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 38 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 39 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 50 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 51 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 53 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 54 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 56 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 57 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 59 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 60 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 62 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 63 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 65 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/ScoreCalculationCountTerminationTest.java linha: 66 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 29 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 30 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 32 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 33 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 35 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 36 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 38 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 39 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 41 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 42 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 44 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 45 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 58 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 59 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 61 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 62 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 64 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 65 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 67 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 68 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 70 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 71 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 73 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 74 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreFeasibleTerminationTest.java linha: 86 Método: assertThat(termination.calculateFeasibilityTimeGradient(BendableScore.of(new int[] { -10, -100 }, new int[] { -50, -60, -70 }), BendableScore.of(new int[] { -4, -40 }, new int[] { -50, -60, -70 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 33 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 34 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 38 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 39 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 51 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 52 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 56 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/UnimprovedTimeMillisSpentTerminationTest.java linha: 57 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 27 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 31 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 35 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 39 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 53 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 57 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 61 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 65 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 80 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 85 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 90 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 95 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 100 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 105 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 120 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 125 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 130 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 135 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 140 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/OrCompositeTerminationTest.java linha: 145 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 35 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 36 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 38 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 39 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 41 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 42 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 44 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 45 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 47 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 48 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 50 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 51 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 65 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 66 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 68 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 69 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 71 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 72 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 74 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 75 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 77 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 78 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 80 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 81 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 91 Método: assertThat(termination.calculateTimeGradient(SimpleScore.of(0), SimpleScore.of(10), SimpleScore.of(0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 93 Método: assertThat(termination.calculateTimeGradient(SimpleScore.of(0), SimpleScore.of(10), SimpleScore.of(6)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 95 Método: assertThat(termination.calculateTimeGradient(SimpleScore.of(0), SimpleScore.of(10), SimpleScore.of(10)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 97 Método: assertThat(termination.calculateTimeGradient(SimpleScore.of(0), SimpleScore.of(10), SimpleScore.of(11)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 100 Método: assertThat(termination.calculateTimeGradient(SimpleScore.of(-10), SimpleScore.of(30), SimpleScore.of(0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 102 Método: assertThat(termination.calculateTimeGradient(SimpleScore.of(10), SimpleScore.of(40), SimpleScore.of(20)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 113 Método: assertThat(termination.calculateTimeGradient(SimpleBigDecimalScore.of(new BigDecimal("0.00")), SimpleBigDecimalScore.of(new BigDecimal("10.00")), SimpleBigDecimalScore.of(new BigDecimal("0.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 116 Método: assertThat(termination.calculateTimeGradient(SimpleBigDecimalScore.of(new BigDecimal("0.00")), SimpleBigDecimalScore.of(new BigDecimal("10.00")), SimpleBigDecimalScore.of(new BigDecimal("6.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 119 Método: assertThat(termination.calculateTimeGradient(SimpleBigDecimalScore.of(new BigDecimal("0.00")), SimpleBigDecimalScore.of(new BigDecimal("10.00")), SimpleBigDecimalScore.of(new BigDecimal("10.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 122 Método: assertThat(termination.calculateTimeGradient(SimpleBigDecimalScore.of(new BigDecimal("0.00")), SimpleBigDecimalScore.of(new BigDecimal("10.00")), SimpleBigDecimalScore.of(new BigDecimal("11.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 125 Método: assertThat(termination.calculateTimeGradient(SimpleBigDecimalScore.of(new BigDecimal("-10.00")), SimpleBigDecimalScore.of(new BigDecimal("30.00")), SimpleBigDecimalScore.of(new BigDecimal("0.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 128 Método: assertThat(termination.calculateTimeGradient(SimpleBigDecimalScore.of(new BigDecimal("10.00")), SimpleBigDecimalScore.of(new BigDecimal("40.00")), SimpleBigDecimalScore.of(new BigDecimal("20.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 142 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-14, -340)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 146 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-10, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 150 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-20, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 154 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-10, -900)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 158 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-90, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 163 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-10, -300), HardSoftScore.of(-10, -300), HardSoftScore.of(-10, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 166 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-20, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 169 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-10, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 174 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-10, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-10, -340)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 177 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-10, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-20, -340)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 180 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-10, -400), HardSoftScore.of(-10, -300), HardSoftScore.of(-0, -340)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 185 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -300), HardSoftScore.of(-10, -300), HardSoftScore.of(-14, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 188 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -300), HardSoftScore.of(-10, -300), HardSoftScore.of(-14, -400)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 191 Método: assertThat(termination.calculateTimeGradient(HardSoftScore.of(-20, -300), HardSoftScore.of(-10, -300), HardSoftScore.of(-14, -0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 204 Método: assertThat(termination.calculateTimeGradient(HardSoftBigDecimalScore.of(new BigDecimal("0.00"), new BigDecimal("0.00")), HardSoftBigDecimalScore.of(new BigDecimal("10.00"), new BigDecimal("10.00")), HardSoftBigDecimalScore.of(new BigDecimal("0.00"), new BigDecimal("0.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 208 Método: assertThat(termination.calculateTimeGradient(HardSoftBigDecimalScore.of(new BigDecimal("0.00"), new BigDecimal("0.00")), HardSoftBigDecimalScore.of(new BigDecimal("10.00"), new BigDecimal("10.00")), HardSoftBigDecimalScore.of(new BigDecimal("6.00"), new BigDecimal("6.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 212 Método: assertThat(termination.calculateTimeGradient(HardSoftBigDecimalScore.of(new BigDecimal("0.00"), new BigDecimal("0.00")), HardSoftBigDecimalScore.of(new BigDecimal("10.00"), new BigDecimal("10.00")), HardSoftBigDecimalScore.of(new BigDecimal("10.00"), new BigDecimal("10.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 216 Método: assertThat(termination.calculateTimeGradient(HardSoftBigDecimalScore.of(new BigDecimal("0.00"), new BigDecimal("0.00")), HardSoftBigDecimalScore.of(new BigDecimal("10.00"), new BigDecimal("10.00")), HardSoftBigDecimalScore.of(new BigDecimal("11.00"), new BigDecimal("11.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 220 Método: assertThat(termination.calculateTimeGradient(HardSoftBigDecimalScore.of(new BigDecimal("-10.00"), new BigDecimal("-10.00")), HardSoftBigDecimalScore.of(new BigDecimal("30.00"), new BigDecimal("30.00")), HardSoftBigDecimalScore.of(new BigDecimal("0.00"), new BigDecimal("0.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 224 Método: assertThat(termination.calculateTimeGradient(HardSoftBigDecimalScore.of(new BigDecimal("10.00"), new BigDecimal("10.00")), HardSoftBigDecimalScore.of(new BigDecimal("40.00"), new BigDecimal("40.00")), HardSoftBigDecimalScore.of(new BigDecimal("20.00"), new BigDecimal("20.00"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 240 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -14 }, new int[] { -340 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 245 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -400 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 250 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -20 }, new int[] { -300 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 255 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -900 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 260 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -90 }, new int[] { -300 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 266 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -300 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 270 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -20 }, new int[] { -400 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 274 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -300 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 280 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -10 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -340 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 284 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -10 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -20 }, new int[] { -340 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 288 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -10 }, new int[] { -400 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -0 }, new int[] { -340 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 294 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -14 }, new int[] { -300 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 298 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -14 }, new int[] { -400 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 302 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -20 }, new int[] { -300 }), BendableScore.of(new int[] { -10 }, new int[] { -300 }), BendableScore.of(new int[] { -14 }, new int[] { -0 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BestScoreTerminationTest.java linha: 318 Método: assertThat(termination.calculateTimeGradient(BendableScore.of(new int[] { -10, -100 }, new int[] { -50, -60, -70 }), BendableScore.of(new int[] { 0, 0 }, new int[] { 0, 0, -10 }), BendableScore.of(new int[] { -4, -40 }, new int[] { -50, -60, -70 })))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 27 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 31 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 35 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 39 Método: assertThat(compositeTermination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 53 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 57 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 61 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 65 Método: assertThat(compositeTermination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 80 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 85 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 90 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 95 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 100 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 105 Método: assertThat(compositeTermination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 120 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 125 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 130 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 135 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 140 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/AndCompositeTerminationTest.java linha: 145 Método: assertThat(compositeTermination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 20 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 21 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 23 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 24 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 26 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 27 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 29 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 30 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 32 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 33 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 35 Método: assertThat(termination.isSolverTerminated(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 36 Método: assertThat(termination.calculateSolverTimeGradient(solverScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 45 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 46 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 48 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 49 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 51 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 52 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 54 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 55 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 57 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 58 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 60 Método: assertThat(termination.isPhaseTerminated(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/TimeMillisSpentTerminationTest.java linha: 61 Método: assertThat(termination.calculatePhaseTimeGradient(phaseScope))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 22 Método: assertThat(basicPlumbingTermination.waitForRestartSolverDecision())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 26 Método: assertThat(basicPlumbingTermination.waitForRestartSolverDecision())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 27 Método: assertThat(count)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 34 Método: assertThat(basicPlumbingTermination.waitForRestartSolverDecision())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 35 Método: assertThat(count)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 42 Método: assertThat(basicPlumbingTermination.waitForRestartSolverDecision())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 46 Método: assertThat(basicPlumbingTermination.waitForRestartSolverDecision())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 47 Método: assertThat(count)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 53 Método: assertThat(basicPlumbingTermination.waitForRestartSolverDecision())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/termination/BasicPlumbingTerminationTest.java linha: 54 Método: assertThat(count)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 113 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 114 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 128 Método: assertThat(meterRegistry.getMeters().stream().map(Meter::getId))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 137 Método: assertThat(meterRegistry.getMeters().stream().map(Meter::getId))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 164 Método: assertThat(meterRegistry.getMeters().stream().map(Meter::getId))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 190 Método: assertThat(meterRegistry.getMeters().stream().map(Meter::getId))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 199 Método: assertThat(meterRegistry.getMeters().stream().map(Meter::getId))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 226 Método: assertThat(meterRegistry.getMeters().stream().map(Meter::getId))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 264 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.SOLVE_DURATION.getMeterId(), "ACTIVE_TASKS"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 265 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.SOLVE_DURATION.getMeterId(), "DURATION").longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 273 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 274 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 276 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.SOLVE_DURATION.getMeterId(), "DURATION"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 277 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.SOLVE_DURATION.getMeterId(), "ACTIVE_TASKS"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 278 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.ERROR_COUNT.getMeterId(), "COUNT"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 344 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.BEST_SCORE.getMeterId() + ".hard.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 357 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.BEST_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 353 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.BEST_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 349 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.BEST_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 365 Método: assertThat(step.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 367 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 368 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.BEST_SCORE.getMeterId() + ".hard.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 370 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.BEST_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 451 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".hard.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 477 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 472 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 467 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 462 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 457 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 487 Método: assertThat(step.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 489 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 490 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".hard.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 492 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.STEP_SCORE.getMeterId() + ".soft.score", "VALUE").intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 532 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.SOLVE_DURATION.getMeterId(), "ACTIVE_TASKS"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 533 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.SOLVE_DURATION.getMeterId(), "DURATION"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 534 Método: assertThat(meterRegistry.getMeasurement(SolverMetric.ERROR_COUNT.getMeterId(), "COUNT"))
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 541 Método: fail("All phases should be skipped because there are no movable entities.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 550 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 551 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 559 Método: fail("All phases should be skipped because there are no movable entities.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 568 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 569 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 585 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 586 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 602 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 603 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 610 Método: fail("All phases should be skipped because there are no movable entities.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 619 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 620 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 628 Método: fail("All phases should be skipped because there are no movable entities.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 638 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 639 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 658 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 659 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 679 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 680 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 718 Método: assertThat(bestSolution.get().getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 743 Método: assertThat(score.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 744 Método: assertThat(score.isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 748 Método: softly.assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 749 Método: softly.assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 754 Método: softly.assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 755 Método: softly.assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 775 Método: assertThat(score.initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 776 Método: assertThat(score.isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 780 Método: softly.assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 781 Método: softly.assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 786 Método: softly.assertThat(solution.getScore().initScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 787 Método: softly.assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 804 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 805 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 824 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 825 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 870 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/DefaultSolverTest.java linha: 871 Método: assertThat(solution.getScore().isSolutionInitialized())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 93 Método: assertThat(solverScope.getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 94 Método: assertThat(solverScope.getBestScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 90 Método: assertThat(solverScope.getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 91 Método: assertThat(solverScope.getBestScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 148 Método: assertThat(solverScope.getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 149 Método: assertThat(solverScope.getBestScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 145 Método: assertThat(solverScope.getBestSolution())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/solver/recaller/BestSolutionRecallerTest.java linha: 146 Método: assertThat(solverScope.getBestScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 16 Método: assertThat(set.add("s1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 17 Método: assertThat(set.add("s1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 18 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 19 Método: assertThat(set.add("s1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 20 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 21 Método: assertThat(set.remove("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 22 Método: assertThat(set.remove("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 23 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 24 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 31 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 32 Método: assertThat(set.add("s3"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 33 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 34 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 35 Método: assertThat(set.add("s4"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 36 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 37 Método: assertThat(set.add("s3"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 38 Método: assertThat(set.add("s4"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 39 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 40 Método: assertThat(set.remove("s4"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 41 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 42 Método: assertThat(set.add("s3"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 43 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 44 Método: assertThat(set.add("s5"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 45 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 46 Método: assertThat(set.add("s3"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 47 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 48 Método: assertThat(set.add("s6"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 49 Método: assertThat(set.add("s2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 50 Método: assertThat(set.add("s3"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 51 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 60 Método: assertThat(set.addAll(Arrays.asList("s1", "s2", "s3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 61 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 62 Método: assertThat(set.addAll(Arrays.asList("s1", "s3", "s4", "s5")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 63 Método: assertThat(set.addAll(Arrays.asList("s1", "s2", "s4")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 64 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 71 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 72 Método: assertThat(set.addAll(Arrays.asList("s6", "s7", "s2", "s3", "s8", "s9")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 73 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 74 Método: assertThat(set.remove("s1"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 75 Método: assertThat(set.remove("s5"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 76 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 77 Método: assertThat(set.addAll(Arrays.asList("s1", "s2", "s10")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/ListBasedScalingOrderedSetTest.java linha: 78 Método: assertThat(set)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 14 Método: softly.assertThat(result)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 15 Método: softly.assertThat(mutableLong.longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 19 Método: softly.assertThat(result2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 20 Método: softly.assertThat(mutableLong.longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 29 Método: softly.assertThat(mutableLong1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 31 Método: softly.assertThat(mutableLong1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 33 Método: softly.assertThat(mutableLong1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 36 Método: softly.assertThat(mutableLong1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 39 Método: softly.assertThat(mutableLong2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 49 Método: softly.assertThat(mutableLong.intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 50 Método: softly.assertThat(mutableLong.longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 51 Método: softly.assertThat(mutableLong.floatValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableLongTest.java linha: 52 Método: softly.assertThat(mutableLong.doubleValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 14 Método: softly.assertThat(result)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 15 Método: softly.assertThat(mutableInt.intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 19 Método: softly.assertThat(result2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 20 Método: softly.assertThat(mutableInt.intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 29 Método: softly.assertThat(mutableInt1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 31 Método: softly.assertThat(mutableInt1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 33 Método: softly.assertThat(mutableInt1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 36 Método: softly.assertThat(mutableInt1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 39 Método: softly.assertThat(mutableInt2)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 49 Método: softly.assertThat(mutableInt.intValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 50 Método: softly.assertThat(mutableInt.longValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 51 Método: softly.assertThat(mutableInt.floatValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/impl/util/MutableIntTest.java linha: 52 Método: softly.assertThat(mutableInt.doubleValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 15 Método: assertThat(HardMediumSoftScore.ofHard(-147))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 16 Método: assertThat(HardMediumSoftScore.ofMedium(-258))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 17 Método: assertThat(HardMediumSoftScore.ofSoft(-369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 22 Método: assertThat(HardMediumSoftScore.parseScore("-147hard/-258medium/-369soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 24 Método: assertThat(HardMediumSoftScore.parseScore("-7init/-147hard/-258medium/-369soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 26 Método: assertThat(HardMediumSoftScore.parseScore("-147hard/-258medium/*soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 28 Método: assertThat(HardMediumSoftScore.parseScore("-147hard/*medium/-369soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 34 Método: assertThat(HardMediumSoftScore.of(0, 0, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 35 Método: assertThat(HardMediumSoftScore.of(0, 0, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 36 Método: assertThat(HardMediumSoftScore.of(0, -258, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 37 Método: assertThat(HardMediumSoftScore.of(0, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 38 Método: assertThat(HardMediumSoftScore.of(-147, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 39 Método: assertThat(HardMediumSoftScore.ofUninitialized(-7, 0, -258, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 40 Método: assertThat(HardMediumSoftScore.ofUninitialized(-7, -147, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 46 Método: assertThat(HardMediumSoftScore.of(0, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 47 Método: assertThat(HardMediumSoftScore.of(-147, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 48 Método: assertThat(HardMediumSoftScore.ofUninitialized(-7, -147, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 59 Método: assertThat(HardMediumSoftScore.of(-147, -258, -369).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 77 Método: assertThat(HardMediumSoftScore.of(20, -20, -4000).add(HardMediumSoftScore.of(-1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 79 Método: assertThat(HardMediumSoftScore.ofUninitialized(-70, 20, -20, -4000).add(HardMediumSoftScore.ofUninitialized(-7, -1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 86 Método: assertThat(HardMediumSoftScore.of(20, -20, -4000).subtract(HardMediumSoftScore.of(-1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 88 Método: assertThat(HardMediumSoftScore.ofUninitialized(-70, 20, -20, -4000).subtract(HardMediumSoftScore.ofUninitialized(-7, -1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 95 Método: assertThat(HardMediumSoftScore.of(5, -5, 5).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 96 Método: assertThat(HardMediumSoftScore.of(1, -1, 1).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 97 Método: assertThat(HardMediumSoftScore.of(4, -4, 4).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 98 Método: assertThat(HardMediumSoftScore.ofUninitialized(-7, 4, -5, 6).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 104 Método: assertThat(HardMediumSoftScore.of(25, -25, 25).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 105 Método: assertThat(HardMediumSoftScore.of(21, -21, 21).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 106 Método: assertThat(HardMediumSoftScore.of(24, -24, 24).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 107 Método: assertThat(HardMediumSoftScore.ofUninitialized(-14, 8, -10, 12).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 113 Método: assertThat(HardMediumSoftScore.of(3, -4, 5).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 114 Método: assertThat(HardMediumSoftScore.of(9, 16, 25).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 115 Método: assertThat(HardMediumSoftScore.ofUninitialized(-7, 3, -4, 5).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 121 Método: assertThat(HardMediumSoftScore.of(3, -4, 5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 122 Método: assertThat(HardMediumSoftScore.of(-3, 4, -5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 127 Método: assertThat(HardMediumSoftScore.of(3, 4, 5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 128 Método: assertThat(HardMediumSoftScore.of(3, -4, 5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 129 Método: assertThat(HardMediumSoftScore.of(-3, 4, -5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 130 Método: assertThat(HardMediumSoftScore.of(-3, -4, -5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 137 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 138 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoft/HardMediumSoftScoreTest.java linha: 140 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 15 Método: assertThat(SimpleScore.parseScore("-147"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 16 Método: assertThat(SimpleScore.parseScore("-7init/-147"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 17 Método: assertThat(SimpleScore.parseScore("*"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 22 Método: assertThat(SimpleScore.of(0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 23 Método: assertThat(SimpleScore.of(-147).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 24 Método: assertThat(SimpleScore.ofUninitialized(-7, -147).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 25 Método: assertThat(SimpleScore.ofUninitialized(-7, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 30 Método: assertThat(SimpleScore.of(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 31 Método: assertThat(SimpleScore.of(-147))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 32 Método: assertThat(SimpleScore.ofUninitialized(-7, -147))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 42 Método: assertThat(SimpleScore.of(-147).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 47 Método: assertThat(SimpleScore.of(20).add(SimpleScore.of(-1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 49 Método: assertThat(SimpleScore.ofUninitialized(-70, 20).add(SimpleScore.ofUninitialized(-7, -1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 55 Método: assertThat(SimpleScore.of(20).subtract(SimpleScore.of(-1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 57 Método: assertThat(SimpleScore.ofUninitialized(-70, 20).subtract(SimpleScore.ofUninitialized(-7, -1)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 63 Método: assertThat(SimpleScore.of(5).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 64 Método: assertThat(SimpleScore.of(1).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 65 Método: assertThat(SimpleScore.of(4).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 66 Método: assertThat(SimpleScore.ofUninitialized(-7, 4).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 71 Método: assertThat(SimpleScore.of(25).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 72 Método: assertThat(SimpleScore.of(21).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 73 Método: assertThat(SimpleScore.of(24).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 74 Método: assertThat(SimpleScore.ofUninitialized(-14, 8).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 79 Método: assertThat(SimpleScore.of(5).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 80 Método: assertThat(SimpleScore.of(25).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 81 Método: assertThat(SimpleScore.ofUninitialized(-7, 5).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 86 Método: assertThat(SimpleScore.of(5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 87 Método: assertThat(SimpleScore.of(-5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 92 Método: assertThat(SimpleScore.of(5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 93 Método: assertThat(SimpleScore.of(-5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 100 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 101 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simple/SimpleScoreTest.java linha: 103 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 17 Método: assertThat(HardMediumSoftBigDecimalScore.ofHard(new BigDecimal("-147.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 19 Método: assertThat(HardMediumSoftBigDecimalScore.ofMedium(new BigDecimal("-3.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 21 Método: assertThat(HardMediumSoftBigDecimalScore.ofSoft(new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 27 Método: assertThat(HardMediumSoftBigDecimalScore.parseScore("-147.2hard/-3.2medium/-258.3soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 29 Método: assertThat(HardMediumSoftBigDecimalScore.parseScore("-7init/-147.2hard/-3.2medium/-258.3soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 36 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("0.0"), new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 38 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("0.0"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 40 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("-3.20"), new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 42 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("-3.20"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 44 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("-3.20"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 46 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("0.0"), new BigDecimal("0.0"), new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 49 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-147.2"), new BigDecimal("-3.20"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 56 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("-3.20"), new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 58 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("-3.20"), new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 61 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-147.2"), new BigDecimal("-3.20"), new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 76 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("-3.20"), new BigDecimal("-258.3")).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 102 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("20"), new BigDecimal("-32"), new BigDecimal("-20")).add(HardMediumSoftBigDecimalScore.of(new BigDecimal("-1"), new BigDecimal("27"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 106 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-70, new BigDecimal("20"), new BigDecimal("-20"), new BigDecimal("-20")).add(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-1"), new BigDecimal("-12"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 117 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("20"), new BigDecimal("-30"), new BigDecimal("-20")).subtract(HardMediumSoftBigDecimalScore.of(new BigDecimal("-1"), new BigDecimal("2"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 122 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-70, new BigDecimal("20"), new BigDecimal("-32"), new BigDecimal("-20")).subtract(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-1"), new BigDecimal("-10"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 133 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("5.0"), new BigDecimal("-4.0"), new BigDecimal("-5.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 137 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("1.0"), new BigDecimal("-2.0"), new BigDecimal("-1.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 141 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("-8.0"), new BigDecimal("-4.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 145 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("4.3"), new BigDecimal("2.0"), new BigDecimal("-5.2")).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 154 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("25.0"), new BigDecimal("-50.0"), new BigDecimal("-25.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 158 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("21.0"), new BigDecimal("-10.5"), new BigDecimal("-21.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 162 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("24.0"), new BigDecimal("12.0"), new BigDecimal("-24.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 165 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-14, new BigDecimal("8.6"), new BigDecimal("-50.6"), new BigDecimal("-10.4")).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 174 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("-8.0"), new BigDecimal("5.0")).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 178 Método: assertThat(HardMediumSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-4.0"), new BigDecimal("-3.0"), new BigDecimal("5.0")).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 187 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("25.0"), new BigDecimal("-5.0")).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 191 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("3.0"), new BigDecimal("5.0")).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 199 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("25.0"), new BigDecimal("5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 203 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("25.0"), new BigDecimal("-5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 207 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("3.0"), new BigDecimal("5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 211 Método: assertThat(HardMediumSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("-3.0"), new BigDecimal("-5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 222 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 223 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftbigdecimal/HardMediumSoftBigDecimalScoreTest.java linha: 226 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 15 Método: assertThat(HardMediumSoftLongScore.ofHard(-147L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 16 Método: assertThat(HardMediumSoftLongScore.ofMedium(-258L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 17 Método: assertThat(HardMediumSoftLongScore.ofSoft(-369L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 22 Método: assertThat(HardMediumSoftLongScore.parseScore("-147hard/-258medium/-369soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 24 Método: assertThat(HardMediumSoftLongScore.parseScore("-7init/-147hard/-258medium/-369soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 26 Método: assertThat(HardMediumSoftLongScore.parseScore("-147hard/-258medium/*soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 28 Método: assertThat(HardMediumSoftLongScore.parseScore("-147hard/*medium/-369soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 34 Método: assertThat(HardMediumSoftLongScore.of(0L, 0L, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 35 Método: assertThat(HardMediumSoftLongScore.of(0L, 0L, -369L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 36 Método: assertThat(HardMediumSoftLongScore.of(0L, -258L, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 37 Método: assertThat(HardMediumSoftLongScore.of(0L, -258L, -369L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 38 Método: assertThat(HardMediumSoftLongScore.of(-147L, -258L, -369L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 39 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-7, 0L, -258L, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 40 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-7, -147L, -258L, -369L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 46 Método: assertThat(HardMediumSoftLongScore.of(0L, -258L, -369L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 47 Método: assertThat(HardMediumSoftLongScore.of(-147L, -258L, -369L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 48 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-7, -147L, -258L, -369L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 59 Método: assertThat(HardMediumSoftLongScore.of(-147L, -258L, -369L).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 77 Método: assertThat(HardMediumSoftLongScore.of(20L, -20L, -4000L).add(HardMediumSoftLongScore.of(-1L, -300L, 4000L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 79 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-70, 20L, -20L, -4000L).add(HardMediumSoftLongScore.ofUninitialized(-7, -1L, -300L, 4000L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 86 Método: assertThat(HardMediumSoftLongScore.of(20L, -20L, -4000L).subtract(HardMediumSoftLongScore.of(-1L, -300L, 4000L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 88 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-70, 20L, -20L, -4000L).subtract(HardMediumSoftLongScore.ofUninitialized(-7, -1L, -300L, 4000L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 95 Método: assertThat(HardMediumSoftLongScore.of(5L, -5L, 5L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 96 Método: assertThat(HardMediumSoftLongScore.of(1L, -1L, 1L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 97 Método: assertThat(HardMediumSoftLongScore.of(4L, -4L, 4L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 98 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-7, 4L, -5L, 6L).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 104 Método: assertThat(HardMediumSoftLongScore.of(25L, -25L, 25L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 105 Método: assertThat(HardMediumSoftLongScore.of(21L, -21L, 21L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 106 Método: assertThat(HardMediumSoftLongScore.of(24L, -24L, 24L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 107 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-14, 8L, -10L, 12L).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 113 Método: assertThat(HardMediumSoftLongScore.of(3L, -4L, 5L).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 114 Método: assertThat(HardMediumSoftLongScore.of(9L, 16L, 25L).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 115 Método: assertThat(HardMediumSoftLongScore.ofUninitialized(-7, 3L, -4L, 5L).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 121 Método: assertThat(HardMediumSoftLongScore.of(3L, -4L, 5L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 122 Método: assertThat(HardMediumSoftLongScore.of(-3L, 4L, -5L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 127 Método: assertThat(HardMediumSoftLongScore.of(3L, 4L, 5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 128 Método: assertThat(HardMediumSoftLongScore.of(3L, -4L, 5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 129 Método: assertThat(HardMediumSoftLongScore.of(-3L, 4L, -5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 130 Método: assertThat(HardMediumSoftLongScore.of(-3L, -4L, -5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 137 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 138 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardmediumsoftlong/HardMediumSoftLongScoreTest.java linha: 140 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 20 Método: assertThat(BendableScore.ofHard(1, 2, 0, -147))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 21 Método: assertThat(BendableScore.ofSoft(1, 2, 0, -258))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 22 Método: assertThat(BendableScore.ofSoft(1, 2, 1, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 23 Método: assertThat(BendableScore.ofHard(3, 0, 2, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 24 Método: assertThat(BendableScore.ofSoft(0, 3, 2, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 29 Método: assertThat(scoreDefinitionHSS.parseScore("[-147]hard/[-258/-369]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 31 Método: assertThat(scoreDefinitionHHH.parseScore("[-147/-258/-369]hard/[]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 33 Método: assertThat(scoreDefinitionSSS.parseScore("[]hard/[-147/-258/-369]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 35 Método: assertThat(scoreDefinitionSSS.parseScore("-7init/[]hard/[-147/-258/-369]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 37 Método: assertThat(scoreDefinitionHSS.parseScore("[-147]hard/[-258/*]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 39 Método: assertThat(scoreDefinitionHSS.parseScore("[-147]hard/[*/-369]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 45 Método: assertThat(scoreDefinitionHSS.createScore(0, 0, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 46 Método: assertThat(scoreDefinitionHSS.createScore(0, 0, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 47 Método: assertThat(scoreDefinitionHSS.createScore(0, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 48 Método: assertThat(scoreDefinitionHSS.createScore(-147, 0, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 49 Método: assertThat(scoreDefinitionHSS.createScore(-147, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 50 Método: assertThat(scoreDefinitionHHH.createScore(-147, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 51 Método: assertThat(scoreDefinitionSSS.createScore(-147, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 52 Método: assertThat(scoreDefinitionSSS.createScoreUninitialized(-7, -147, -258, -369).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 58 Método: assertThat(scoreDefinitionHSS.createScore(0, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 59 Método: assertThat(scoreDefinitionHSS.createScore(-147, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 60 Método: assertThat(scoreDefinitionHHH.createScore(-147, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 61 Método: assertThat(scoreDefinitionSSS.createScore(-147, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 62 Método: assertThat(scoreDefinitionSSS.createScoreUninitialized(-7, -147, -258, -369))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 64 Método: assertThat(new BendableScoreDefinition(0, 0).createScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 75 Método: assertThat(initializedScore.hardOrSoftScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 76 Método: assertThat(initializedScore.hardOrSoftScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 77 Método: assertThat(initializedScore.hardOrSoftScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 82 Método: assertThat(scoreDefinitionHSS.createScore(-147, -258, -369).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 101 Método: assertThat(scoreDefinitionHSS.createScore(20, -20, -4000).add(scoreDefinitionHSS.createScore(-1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 103 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-70, 20, -20, -4000).add(scoreDefinitionHSS.createScoreUninitialized(-7, -1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 110 Método: assertThat(scoreDefinitionHSS.createScore(20, -20, -4000).subtract(scoreDefinitionHSS.createScore(-1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 112 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-70, 20, -20, -4000).subtract(scoreDefinitionHSS.createScoreUninitialized(-7, -1, -300, 4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 119 Método: assertThat(scoreDefinitionHSS.createScore(5, -5, 5).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 120 Método: assertThat(scoreDefinitionHSS.createScore(1, -1, 1).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 121 Método: assertThat(scoreDefinitionHSS.createScore(4, -4, 4).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 122 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, 4, -5, 6).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 128 Método: assertThat(scoreDefinitionHSS.createScore(25, -25, 25).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 129 Método: assertThat(scoreDefinitionHSS.createScore(21, -21, 21).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 130 Método: assertThat(scoreDefinitionHSS.createScore(24, -24, 24).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 131 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-14, 8, -10, 12).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 137 Método: assertThat(scoreDefinitionHSS.createScore(3, -4, 5).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 138 Método: assertThat(scoreDefinitionHSS.createScore(9, 16, 25).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 139 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, 3, -4, 5).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 145 Método: assertThat(scoreDefinitionHSS.createScore(3, -4, 5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 146 Método: assertThat(scoreDefinitionHSS.createScore(-3, 4, -5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 151 Método: assertThat(scoreDefinitionHSS.createScore(3, 4, 5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 152 Método: assertThat(scoreDefinitionHSS.createScore(3, -4, 5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 153 Método: assertThat(scoreDefinitionHSS.createScore(-3, 4, -5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 154 Método: assertThat(scoreDefinitionHSS.createScore(-3, -4, -5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 161 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 162 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 164 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 230 Método: assertThat(scoreDefinitionHHSSS.createScore(20, -20, -4000, 0, 0).add(scoreDefinitionHHSSS.createScore(-1, -300, 4000, 0, 0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 237 Método: assertThat(scoreDefinitionHHSSS.createScore(20, -20, -4000, 0, 0).subtract(scoreDefinitionHHSSS.createScore(-1, -300, 4000, 0, 0)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 244 Método: assertThat(scoreDefinitionHHSSS.createScore(5, -5, 5, 0, 0).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 246 Método: assertThat(scoreDefinitionHHSSS.createScore(1, -1, 1, 0, 0).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 248 Método: assertThat(scoreDefinitionHHSSS.createScore(4, -4, 4, 0, 0).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 254 Método: assertThat(scoreDefinitionHHSSS.createScore(25, -25, 25, 0, 0).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 256 Método: assertThat(scoreDefinitionHHSSS.createScore(21, -21, 21, 0, 0).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 258 Método: assertThat(scoreDefinitionHHSSS.createScore(24, -24, 24, 0, 0).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 264 Método: assertThat(scoreDefinitionHHSSS.createScore(3, -4, 5, 0, 0).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 266 Método: assertThat(scoreDefinitionHHSSS.createScore(9, 16, 25, 0, 0).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 272 Método: assertThat(scoreDefinitionHHSSS.createScore(3, -4, 5, 0, 0).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 274 Método: assertThat(scoreDefinitionHHSSS.createScore(-3, 4, -5, 0, 0).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 280 Método: assertThat(scoreDefinitionHHSSS.createScore(3, 4, 5, 0, 0).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 282 Método: assertThat(scoreDefinitionHHSSS.createScore(3, -4, 5, 0, 0).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 284 Método: assertThat(scoreDefinitionHHSSS.createScore(-3, 4, -5, 0, 0).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreTest.java linha: 286 Método: assertThat(scoreDefinitionHHSSS.createScore(-3, -4, -5, 0, 0).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 17 Método: assertThat(SimpleBigDecimalScore.parseScore("-147.2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 18 Método: assertThat(SimpleBigDecimalScore.parseScore("-7init/-147.2"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 24 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 25 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("-147.2")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 26 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("-147.2")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 28 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 33 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("0.0")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 34 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("-147.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 35 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("-147.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 45 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("-147.2")).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 51 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("20")).add(SimpleBigDecimalScore.of(new BigDecimal("-1"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 53 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-70, new BigDecimal("20")).add(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("-1"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 60 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("20")).subtract(SimpleBigDecimalScore.of(new BigDecimal("-1"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 62 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-70, new BigDecimal("20")).subtract(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("-1"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 69 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("5.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 71 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("1.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 73 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("4.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 75 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("4.3")).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 81 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("25.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 83 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("21.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 85 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("24.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 87 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-14, new BigDecimal("8.6")).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 93 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("5.0")).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 95 Método: assertThat(SimpleBigDecimalScore.ofUninitialized(-7, new BigDecimal("5.0")).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 101 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("5.0")).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 103 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("-5.0")).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 109 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 111 Método: assertThat(SimpleBigDecimalScore.of(new BigDecimal("-5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 119 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 120 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplebigdecimal/SimpleBigDecimalScoreTest.java linha: 122 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 18 Método: assertThat(BendableLongScore.ofHard(1, 2, 0, -147L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 19 Método: assertThat(BendableLongScore.ofSoft(1, 2, 0, -258L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 20 Método: assertThat(BendableLongScore.ofSoft(1, 2, 1, -369L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 25 Método: assertThat(scoreDefinitionHSS.parseScore("[-5432109876]hard/[-9876543210/-3456789012]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 27 Método: assertThat(scoreDefinitionHSS.parseScore("-7init/[-5432109876]hard/[-9876543210/-3456789012]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 29 Método: assertThat(scoreDefinitionHSS.parseScore("[-5432109876]hard/[-9876543210/*]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 31 Método: assertThat(scoreDefinitionHSS.parseScore("[-5432109876]hard/[*/-3456789012]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 37 Método: assertThat(scoreDefinitionHSS.createScore(0L, 0L, -3456789012L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 38 Método: assertThat(scoreDefinitionHSS.createScore(0L, -9876543210L, -3456789012L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 40 Método: assertThat(scoreDefinitionHSS.createScore(-5432109876L, 0L, -0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 41 Método: assertThat(scoreDefinitionHSS.createScore(-5432109876L, -9876543210L, -3456789012L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 43 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, -5432109876L, -9876543210L, -3456789012L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 49 Método: assertThat(scoreDefinitionHSS.createScore(0L, -9876543210L, -3456789012L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 51 Método: assertThat(scoreDefinitionHSS.createScore(-5432109876L, -9876543210L, -3456789012L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 53 Método: assertThat(new BendableLongScoreDefinition(2, 1).createScore(-5432109876L, -9876543210L, -3456789012L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 55 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, -5432109876L, -9876543210L, -3456789012L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 57 Método: assertThat(new BendableLongScoreDefinition(0, 0).createScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 68 Método: assertThat(initializedScore.hardOrSoftScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 69 Método: assertThat(initializedScore.hardOrSoftScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 70 Método: assertThat(initializedScore.hardOrSoftScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 75 Método: assertThat(scoreDefinitionHSS.createScore(-5432109876L, -9876543210L, -3456789012L).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 93 Método: assertThat(scoreDefinitionHSS.createScore(1111111111L, -20L, -9876543210L).add(scoreDefinitionHSS.createScore(2222222222L, -300L, 9876543210L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 96 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-70, 1111111111L, -20L, -9876543210L).add(scoreDefinitionHSS.createScoreUninitialized(-7, 2222222222L, -300L, 9876543210L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 103 Método: assertThat(scoreDefinitionHSS.createScore(3333333333L, -20L, -5555555555L).subtract(scoreDefinitionHSS.createScore(1111111111L, -300L, 3333333333L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 106 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-70, 3333333333L, -20L, -5555555555L).subtract(scoreDefinitionHSS.createScoreUninitialized(-7, 1111111111L, -300L, 3333333333L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 113 Método: assertThat(scoreDefinitionHSS.createScore(5000000000L, -5000000000L, 5000000000L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 115 Método: assertThat(scoreDefinitionHSS.createScore(1L, -1L, 1L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 117 Método: assertThat(scoreDefinitionHSS.createScore(4L, -4L, 4L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 119 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, 4L, -5L, 6L).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 125 Método: assertThat(scoreDefinitionHSS.createScore(25000000000L, -25000000000L, 25000000000L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 127 Método: assertThat(scoreDefinitionHSS.createScore(21L, -21L, 21L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 129 Método: assertThat(scoreDefinitionHSS.createScore(24L, -24L, 24L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 131 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-14, 8L, -10L, 12L).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 137 Método: assertThat(scoreDefinitionHSS.createScore(300000L, -400000L, 500000L).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 139 Método: assertThat(scoreDefinitionHSS.createScore(90000000000L, 160000000000L, 250000000000L).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 141 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, 3L, -4L, 5L).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 147 Método: assertThat(scoreDefinitionHSS.createScore(3000000000L, -4000000000L, 5000000000L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 149 Método: assertThat(scoreDefinitionHSS.createScore(-3000000000L, 4000000000L, -5000000000L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 155 Método: assertThat(scoreDefinitionHSS.createScore(3000000000L, 4000000000L, 5000000000L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 157 Método: assertThat(scoreDefinitionHSS.createScore(3000000000L, -4000000000L, 5000000000L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 159 Método: assertThat(scoreDefinitionHSS.createScore(-3000000000L, 4000000000L, -5000000000L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 161 Método: assertThat(scoreDefinitionHSS.createScore(-3000000000L, -4000000000L, -5000000000L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 169 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 170 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 172 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 236 Método: assertThat(scoreDefinitionHHSSS.createScore(20000000000L, -20000000000L, -4000000000000L, 0L, 0L).add(scoreDefinitionHHSSS.createScore(-1000000000L, -300000000000L, 4000000000000L, 0L, 0L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 243 Método: assertThat(scoreDefinitionHHSSS.createScore(20000000000L, -20000000000L, -4000000000000L, 0L, 0L).subtract(scoreDefinitionHHSSS.createScore(-1000000000L, -300000000000L, 4000000000000L, 0L, 0L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 250 Método: assertThat(scoreDefinitionHHSSS.createScore(5000000000L, -5000000000L, 5000000000L, 0L, 0L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 252 Método: assertThat(scoreDefinitionHHSSS.createScore(1, -1, 1, 0, 0).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 254 Método: assertThat(scoreDefinitionHHSSS.createScore(4, -4, 4, 0, 0).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 260 Método: assertThat(scoreDefinitionHHSSS.createScore(25000000000L, -25000000000L, 25000000000L, 0L, 0L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 262 Método: assertThat(scoreDefinitionHHSSS.createScore(21, -21, 21, 0, 0).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 264 Método: assertThat(scoreDefinitionHHSSS.createScore(24, -24, 24, 0, 0).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 270 Método: assertThat(scoreDefinitionHHSSS.createScore(200000L, -400000L, 500000L, 0L, 0L).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 272 Método: assertThat(scoreDefinitionHHSSS.createScore(9L, 16L, 25L, 0L, 0L).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 278 Método: assertThat(scoreDefinitionHHSSS.createScore(3000000000L, -4000000000L, 5000000000L, 0L, 0L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 280 Método: assertThat(scoreDefinitionHHSSS.createScore(-3L, 4L, -5L, 0L, 0L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 286 Método: assertThat(scoreDefinitionHHSSS.createScore(3000000000L, 4000000000L, 5000000000L, 0L, 0L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 288 Método: assertThat(scoreDefinitionHHSSS.createScore(3000000000L, -4000000000L, 5000000000L, 0L, 0L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 290 Método: assertThat(scoreDefinitionHHSSS.createScore(-3L, 4L, -5L, 0L, 0L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablelong/BendableLongScoreTest.java linha: 292 Método: assertThat(scoreDefinitionHHSSS.createScore(-3L, -4L, -5L, 0L, 0L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 15 Método: assertThat(HardSoftScore.ofHard(-147))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 16 Método: assertThat(HardSoftScore.ofSoft(-258))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 21 Método: assertThat(HardSoftScore.parseScore("-147hard/-258soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 22 Método: assertThat(HardSoftScore.parseScore("-7init/-147hard/-258soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 24 Método: assertThat(HardSoftScore.parseScore("-147hard/*soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 29 Método: assertThat(HardSoftScore.of(0, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 30 Método: assertThat(HardSoftScore.of(0, -258).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 31 Método: assertThat(HardSoftScore.of(-147, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 32 Método: assertThat(HardSoftScore.of(-147, -258).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 33 Método: assertThat(HardSoftScore.ofUninitialized(-7, 0, 0).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 34 Método: assertThat(HardSoftScore.ofUninitialized(-7, 0, -258).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 35 Método: assertThat(HardSoftScore.ofUninitialized(-7, -147, -258).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 40 Método: assertThat(HardSoftScore.of(0, -258))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 41 Método: assertThat(HardSoftScore.of(-147, -258))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 42 Método: assertThat(HardSoftScore.ofUninitialized(-7, -147, -258))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 52 Método: assertThat(HardSoftScore.of(-147, -258).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 69 Método: assertThat(HardSoftScore.of(20, -20).add(HardSoftScore.of(-1, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 71 Método: assertThat(HardSoftScore.ofUninitialized(-70, 20, -20).add(HardSoftScore.ofUninitialized(-7, -1, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 77 Método: assertThat(HardSoftScore.of(20, -20).subtract(HardSoftScore.of(-1, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 79 Método: assertThat(HardSoftScore.ofUninitialized(-70, 20, -20).subtract(HardSoftScore.ofUninitialized(-7, -1, -300)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 85 Método: assertThat(HardSoftScore.of(5, -5).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 86 Método: assertThat(HardSoftScore.of(1, -1).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 87 Método: assertThat(HardSoftScore.of(4, -4).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 88 Método: assertThat(HardSoftScore.ofUninitialized(-7, 4, -5).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 94 Método: assertThat(HardSoftScore.of(25, -25).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 95 Método: assertThat(HardSoftScore.of(21, -21).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 96 Método: assertThat(HardSoftScore.of(24, -24).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 97 Método: assertThat(HardSoftScore.ofUninitialized(-14, 8, -10).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 102 Método: assertThat(HardSoftScore.of(-4, 5).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 103 Método: assertThat(HardSoftScore.of(16, 25).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 104 Método: assertThat(HardSoftScore.ofUninitialized(-7, 4, 5).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 109 Método: assertThat(HardSoftScore.of(-4, 5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 110 Método: assertThat(HardSoftScore.of(4, -5).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 115 Método: assertThat(HardSoftScore.of(4, 5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 116 Método: assertThat(HardSoftScore.of(-4, 5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 117 Método: assertThat(HardSoftScore.of(4, -5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 118 Método: assertThat(HardSoftScore.of(-4, -5).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 125 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 126 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScoreTest.java linha: 128 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 17 Método: assertThat(HardSoftBigDecimalScore.ofHard(new BigDecimal("-147.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 19 Método: assertThat(HardSoftBigDecimalScore.ofSoft(new BigDecimal("-3.2")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 25 Método: assertThat(HardSoftBigDecimalScore.parseScore("-147.2hard/-258.3soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 27 Método: assertThat(HardSoftBigDecimalScore.parseScore("-7init/-147.2hard/-258.3soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 33 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 34 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 36 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 38 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 40 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("0.0"), new BigDecimal("0.0")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 42 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("0.0"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 44 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-147.2"), new BigDecimal("-258.3")).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 50 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("0.0"), new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 52 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 54 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-147.2"), new BigDecimal("-258.3")))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 65 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-147.2"), new BigDecimal("-258.3")).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 86 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("20"), new BigDecimal("-20")).add(HardSoftBigDecimalScore.of(new BigDecimal("-1"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 89 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-70, new BigDecimal("20"), new BigDecimal("-20")).add(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-1"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 96 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("20"), new BigDecimal("-20")).subtract(HardSoftBigDecimalScore.of(new BigDecimal("-1"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 99 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-70, new BigDecimal("20"), new BigDecimal("-20")).subtract(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-1"), new BigDecimal("-300"))))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 106 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("5.0"), new BigDecimal("-5.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 108 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("1.0"), new BigDecimal("-1.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 110 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("-4.0")).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 112 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("4.3"), new BigDecimal("-5.2")).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 118 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("25.0"), new BigDecimal("-25.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 120 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("21.0"), new BigDecimal("-21.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 122 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("24.0"), new BigDecimal("-24.0")).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 124 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-14, new BigDecimal("8.6"), new BigDecimal("-10.4")).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 130 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("5.0")).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 132 Método: assertThat(HardSoftBigDecimalScore.ofUninitialized(-7, new BigDecimal("-4.0"), new BigDecimal("5.0")).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 138 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("-5.0")).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 140 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("5.0")).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 146 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 148 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("4.0"), new BigDecimal("-5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 150 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 152 Método: assertThat(HardSoftBigDecimalScore.of(new BigDecimal("-4.0"), new BigDecimal("-5.0")).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 160 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 161 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftbigdecimal/HardSoftBigDecimalScoreTest.java linha: 163 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 54 Método: assertThat(BendableBigDecimalScore.ofHard(1, 2, 0, BigDecimal.valueOf(-147)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 56 Método: assertThat(BendableBigDecimalScore.ofSoft(1, 2, 0, BigDecimal.valueOf(-258)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 58 Método: assertThat(BendableBigDecimalScore.ofSoft(1, 2, 1, BigDecimal.valueOf(-369)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 64 Método: assertThat(scoreDefinitionHSS.parseScore("[-147]hard/[-258/-369]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 66 Método: assertThat(scoreDefinitionHSS.parseScore("-7init/[-147]hard/[-258/-369]soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 73 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(0), BigDecimal.valueOf(0), BigDecimal.valueOf(-369)).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 76 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(0), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 79 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(-147), BigDecimal.valueOf(0), BigDecimal.valueOf(0)).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 82 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(-147), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 85 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, BigDecimal.valueOf(-147), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 92 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(0), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 95 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(-147), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 98 Método: assertThat(new BendableBigDecimalScoreDefinition(2, 1).createScore(BigDecimal.valueOf(-147), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 101 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, BigDecimal.valueOf(-147), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 104 Método: assertThat(new BendableBigDecimalScoreDefinition(0, 0).createScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 116 Método: assertThat(initializedScore.hardOrSoftScore(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 117 Método: assertThat(initializedScore.hardOrSoftScore(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 118 Método: assertThat(initializedScore.hardOrSoftScore(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 123 Método: assertThat(scoreDefinitionHSS.createScore(BigDecimal.valueOf(-147), BigDecimal.valueOf(-258), BigDecimal.valueOf(-369)).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 143 Método: assertThat(scoreDefinitionHSS.createScore(PLUS_20, MINUS_20, MINUS_4000).add(scoreDefinitionHSS.createScore(MINUS_ONE, MINUS_300, PLUS_4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 146 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-70, PLUS_20, MINUS_20, MINUS_4000).add(scoreDefinitionHSS.createScoreUninitialized(-7, MINUS_ONE, MINUS_300, PLUS_4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 153 Método: assertThat(scoreDefinitionHSS.createScore(PLUS_20, MINUS_20, MINUS_4000).subtract(scoreDefinitionHSS.createScore(MINUS_ONE, MINUS_300, PLUS_4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 156 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-70, PLUS_20, MINUS_20, MINUS_4000).subtract(scoreDefinitionHSS.createScoreUninitialized(-7, MINUS_ONE, MINUS_300, PLUS_4000)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 163 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, new BigDecimal("4.3"), new BigDecimal("-5.2"), new BigDecimal("-6.1")).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 172 Método: assertThat(scoreDefinitionHSS.createScore(PLUS_25, MINUS_25, PLUS_25).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 174 Método: assertThat(scoreDefinitionHSS.createScore(PLUS_21, MINUS_21, PLUS_21).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 176 Método: assertThat(scoreDefinitionHSS.createScore(PLUS_24, MINUS_24, PLUS_24).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 178 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-14, new BigDecimal("8.6"), new BigDecimal("-10.4"), new BigDecimal("-12.2")).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 189 Método: assertThat(scoreDefinitionHSS.createScore(THREE, MINUS_FOUR, FIVE).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 191 Método: assertThat(scoreDefinitionHSS.createScore(NINE, PLUS_16, PLUS_25).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 193 Método: assertThat(scoreDefinitionHSS.createScoreUninitialized(-7, THREE, MINUS_FOUR, FIVE).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 200 Método: assertThat(scoreDefinitionHSS.createScore(THREE, MINUS_FOUR, FIVE).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 202 Método: assertThat(scoreDefinitionHSS.createScore(MINUS_THREE, FOUR, MINUS_FIVE).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 208 Método: assertThat(scoreDefinitionHSS.createScore(THREE, FOUR, FIVE).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 210 Método: assertThat(scoreDefinitionHSS.createScore(THREE, MINUS_FOUR, FIVE).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 212 Método: assertThat(scoreDefinitionHSS.createScore(MINUS_THREE, FOUR, MINUS_FIVE).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 214 Método: assertThat(scoreDefinitionHSS.createScore(MINUS_THREE, MINUS_FOUR, MINUS_FIVE).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 222 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 223 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 225 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 297 Método: assertThat(scoreDefinitionHHSSS.createScore(PLUS_20, MINUS_20, MINUS_4000, ZERO, ZERO).add(scoreDefinitionHHSSS.createScore(MINUS_ONE, MINUS_300, PLUS_4000, ZERO, ZERO)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 304 Método: assertThat(scoreDefinitionHHSSS.createScore(PLUS_20, MINUS_20, MINUS_4000, ZERO, ZERO).subtract(scoreDefinitionHHSSS.createScore(MINUS_ONE, MINUS_300, PLUS_4000, ZERO, ZERO)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 311 Método: assertThat(scoreDefinitionHHSSS.createScore(PLUS_25, MINUS_25, PLUS_25, ZERO, ZERO).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 313 Método: assertThat(scoreDefinitionHHSSS.createScore(PLUS_21, MINUS_21, PLUS_21, ZERO, ZERO).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 315 Método: assertThat(scoreDefinitionHHSSS.createScore(PLUS_24, MINUS_24, PLUS_24, ZERO, ZERO).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 323 Método: assertThat(scoreDefinitionHHSSS.createScore(THREE, MINUS_FOUR, FIVE, ZERO, ZERO).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 325 Método: assertThat(scoreDefinitionHHSSS.createScore(NINE, PLUS_16, PLUS_25, ZERO, ZERO).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 331 Método: assertThat(scoreDefinitionHHSSS.createScore(THREE, MINUS_FOUR, FIVE, ZERO, ZERO).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 333 Método: assertThat(scoreDefinitionHHSSS.createScore(MINUS_THREE, FOUR, MINUS_FIVE, ZERO, ZERO).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 339 Método: assertThat(scoreDefinitionHHSSS.createScore(THREE, FOUR, FIVE, ZERO, ZERO).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 341 Método: assertThat(scoreDefinitionHHSSS.createScore(THREE, MINUS_FOUR, FIVE, ZERO, ZERO).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 343 Método: assertThat(scoreDefinitionHHSSS.createScore(MINUS_THREE, FOUR, MINUS_FIVE, ZERO, ZERO).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/bendablebigdecimal/BendableBigDecimalScoreTest.java linha: 345 Método: assertThat(scoreDefinitionHHSSS.createScore(MINUS_THREE, MINUS_FOUR, MINUS_FIVE, ZERO, ZERO).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 15 Método: assertThat(HardSoftLongScore.ofHard(-147L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 16 Método: assertThat(HardSoftLongScore.ofSoft(-258L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 21 Método: assertThat(HardSoftLongScore.parseScore("-147hard/-258soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 22 Método: assertThat(HardSoftLongScore.parseScore("-7init/-147hard/-258soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 24 Método: assertThat(HardSoftLongScore.parseScore("-147hard/*soft"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 29 Método: assertThat(HardSoftLongScore.of(0L, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 30 Método: assertThat(HardSoftLongScore.of(0L, -258L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 31 Método: assertThat(HardSoftLongScore.of(-147L, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 32 Método: assertThat(HardSoftLongScore.of(-147L, -258L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 33 Método: assertThat(HardSoftLongScore.ofUninitialized(-7, 0L, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 34 Método: assertThat(HardSoftLongScore.ofUninitialized(-7, 0L, -258L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 35 Método: assertThat(HardSoftLongScore.ofUninitialized(-7, -147L, -258L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 40 Método: assertThat(HardSoftLongScore.of(0L, -258L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 41 Método: assertThat(HardSoftLongScore.of(-147L, -258L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 42 Método: assertThat(HardSoftLongScore.ofUninitialized(-7, -147L, -258L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 52 Método: assertThat(HardSoftLongScore.of(-147L, -258L).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 70 Método: assertThat(HardSoftLongScore.of(20L, -20L).add(HardSoftLongScore.of(-1L, -300L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 72 Método: assertThat(HardSoftLongScore.ofUninitialized(-70, 20L, -20L).add(HardSoftLongScore.ofUninitialized(-7, -1L, -300L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 79 Método: assertThat(HardSoftLongScore.of(20L, -20L).subtract(HardSoftLongScore.of(-1L, -300L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 81 Método: assertThat(HardSoftLongScore.ofUninitialized(-70, 20L, -20L).subtract(HardSoftLongScore.ofUninitialized(-7, -1L, -300L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 88 Método: assertThat(HardSoftLongScore.of(5L, -5L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 89 Método: assertThat(HardSoftLongScore.of(1L, -1L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 90 Método: assertThat(HardSoftLongScore.of(4L, -4L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 91 Método: assertThat(HardSoftLongScore.ofUninitialized(-7, 4L, -5L).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 97 Método: assertThat(HardSoftLongScore.of(25L, -25L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 98 Método: assertThat(HardSoftLongScore.of(21L, -21L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 99 Método: assertThat(HardSoftLongScore.of(24L, -24L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 100 Método: assertThat(HardSoftLongScore.ofUninitialized(-14, 8L, -10L).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 106 Método: assertThat(HardSoftLongScore.of(-4L, 5L).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 107 Método: assertThat(HardSoftLongScore.of(16L, 25L).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 108 Método: assertThat(HardSoftLongScore.ofUninitialized(-7, -4L, 5L).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 114 Método: assertThat(HardSoftLongScore.of(4L, -5L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 115 Método: assertThat(HardSoftLongScore.of(-4L, 5L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 120 Método: assertThat(HardSoftLongScore.of(4L, 5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 121 Método: assertThat(HardSoftLongScore.of(4L, -5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 122 Método: assertThat(HardSoftLongScore.of(-4L, 5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 123 Método: assertThat(HardSoftLongScore.of(-4L, -5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 130 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 131 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/hardsoftlong/HardSoftLongScoreTest.java linha: 133 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 15 Método: assertThat(SimpleLongScore.parseScore("-147"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 16 Método: assertThat(SimpleLongScore.parseScore("-7init/-147"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 17 Método: assertThat(SimpleLongScore.parseScore("*"))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 22 Método: assertThat(SimpleLongScore.of(0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 23 Método: assertThat(SimpleLongScore.of(-147L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 24 Método: assertThat(SimpleLongScore.ofUninitialized(-7, -147L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 25 Método: assertThat(SimpleLongScore.ofUninitialized(-7, 0L).toShortString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 30 Método: assertThat(SimpleLongScore.of(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 31 Método: assertThat(SimpleLongScore.of(-147L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 32 Método: assertThat(SimpleLongScore.ofUninitialized(-7, -147L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 42 Método: assertThat(SimpleLongScore.of(-147L).withInitScore(-7))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 47 Método: assertThat(SimpleLongScore.of(20L).add(SimpleLongScore.of(-1L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 49 Método: assertThat(SimpleLongScore.ofUninitialized(-70, 20L).add(SimpleLongScore.ofUninitialized(-7, -1L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 55 Método: assertThat(SimpleLongScore.of(20L).subtract(SimpleLongScore.of(-1L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 57 Método: assertThat(SimpleLongScore.ofUninitialized(-70, 20L).subtract(SimpleLongScore.ofUninitialized(-7, -1L)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 63 Método: assertThat(SimpleLongScore.of(5L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 64 Método: assertThat(SimpleLongScore.of(1L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 65 Método: assertThat(SimpleLongScore.of(4L).multiply(1.2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 66 Método: assertThat(SimpleLongScore.ofUninitialized(-7, 4L).multiply(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 71 Método: assertThat(SimpleLongScore.of(25L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 72 Método: assertThat(SimpleLongScore.of(21L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 73 Método: assertThat(SimpleLongScore.of(24L).divide(5.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 74 Método: assertThat(SimpleLongScore.ofUninitialized(-14, 8L).divide(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 79 Método: assertThat(SimpleLongScore.of(5L).power(2.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 80 Método: assertThat(SimpleLongScore.of(25L).power(0.5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 81 Método: assertThat(SimpleLongScore.ofUninitialized(-7, 5L).power(3.0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 86 Método: assertThat(SimpleLongScore.of(5L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 87 Método: assertThat(SimpleLongScore.of(-5L).negate())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 92 Método: assertThat(SimpleLongScore.of(5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 93 Método: assertThat(SimpleLongScore.of(-5L).abs())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 100 Método: softly.assertThat(manualZero.zero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 101 Método: softly.assertThat(manualZero.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScoreTest.java linha: 103 Método: softly.assertThat(manualOne.isZero())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/AbstractScoreTest.java linha: 11 Método: assertThat(score.isFeasible())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/buildin/AbstractScoreTest.java linha: 17 Método: assertThat(score.isFeasible())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/stream/ConstraintCollectorsTest.java linha: 3952 Método: assertThat(actualResult)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/stream/ConstraintCollectorsTest.java linha: 3960 Método: assertThat(actualResult)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/stream/ConstraintCollectorsTest.java linha: 3968 Método: assertThat(actualResult)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/stream/ConstraintCollectorsTest.java linha: 3976 Método: assertThat(actualResult)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 24 Método: assertThat(scoreManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 26 Método: assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 28 Método: assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 35 Método: assertThat(scoreManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 38 Método: assertThat(scoreExplanation)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 40 Método: softly.assertThat(scoreExplanation.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 41 Método: softly.assertThat(scoreExplanation.getSummary())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 42 Método: softly.assertThat(scoreExplanation.getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/score/ScoreManagerTest.java linha: 44 Método: softly.assertThat(scoreExplanation.getIndictmentMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/solution/cloner/CustomSolutionClonerTest.java linha: 26 Método: assertThat(solved.isClonedByCustomCloner())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/ValueRangeFactoryTest.java linha: 24 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 32 Método: softly.assertThat(result.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 36 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 52 Método: softly.assertThat(result.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 56 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 72 Método: softly.assertThat(result.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 76 Método: assertThat(solution)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 80 Método: softly.assertThat(entity.getNumberValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 81 Método: softly.assertThat(entity.getIntegerValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 82 Método: softly.assertThat(entity.getLongValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 83 Método: softly.assertThat(entity.getBigIntegerValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/domain/valuerange/AnonymousValueRangeFactoryTest.java linha: 84 Método: softly.assertThat(entity.getBigDecimalValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 24 Método: assertThat(SolutionManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 27 Método: softly.assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 28 Método: softly.assertThat(solution.getEntityList().get(0).getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 32 Método: softly.assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 33 Método: softly.assertThat(solution.getEntityList().get(0).getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 42 Método: assertThat(SolutionManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 45 Método: softly.assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 46 Método: softly.assertThat(solution.getEntityList().get(0).getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 50 Método: softly.assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 51 Método: softly.assertThat(solution.getEntityList().get(0).getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 60 Método: assertThat(SolutionManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 63 Método: softly.assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 64 Método: softly.assertThat(solution.getEntityList().get(0).getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 68 Método: softly.assertThat(solution.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 69 Método: softly.assertThat(solution.getEntityList().get(0).getFirstShadow())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 78 Método: assertThat(solutionManager)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 81 Método: assertThat(scoreExplanation)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 83 Método: softly.assertThat(scoreExplanation.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 84 Método: softly.assertThat(scoreExplanation.getSummary())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 85 Método: softly.assertThat(scoreExplanation.getConstraintMatchTotalMap())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolutionManagerTest.java linha: 87 Método: softly.assertThat(scoreExplanation.getIndictmentMap())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 94 Método: fail("Cyclic barrier failed.")
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 110 Método: fail("Cyclic barrier failed.")
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 115 Método: fail("Cyclic barrier failed.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 127 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 128 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 129 Método: assertThat(solverManager.getSolverStatus(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 130 Método: assertThat(solverJob2.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 133 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 134 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 135 Método: assertThat(solverManager.getSolverStatus(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 136 Método: assertThat(solverJob2.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 140 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 141 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 142 Método: assertThat(solverManager.getSolverStatus(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 143 Método: assertThat(solverJob2.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 164 Método: assertThat(exceptionCount.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 165 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 166 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 189 Método: assertThat(errorInConsumer.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 192 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 193 Método: assertThat(solverJob1.getSolverStatus())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 204 Método: fail("Solving failed.")
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 271 Método: fail("No skip ahead occurred: both e2 and e3 are null in a best solution event.")
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 268 Método: fail("Latch failed.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 281 Método: assertThat(bestSolutionCount)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 283 Método: assertThat(finalBestSolutionCount.get())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 285 Método: fail("Error in the best solution consumer.", consumptionError.get())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 318 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 319 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 320 Método: assertThat(solverManager.getSolverStatus(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 321 Método: assertThat(solverJob2.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 322 Método: assertThat(solverManager.getSolverStatus(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 323 Método: assertThat(solverJob3.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 327 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 328 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 329 Método: assertThat(solverManager.getSolverStatus(2L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 330 Método: assertThat(solverJob2.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 331 Método: assertThat(solverManager.getSolverStatus(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 332 Método: assertThat(solverJob3.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 336 Método: assertThat(solverManager.getSolverStatus(1L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 337 Método: assertThat(solverJob1.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 340 Método: assertThat(solverManager.getSolverStatus(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 341 Método: assertThat(solverJob3.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 345 Método: assertThat(solverManager.getSolverStatus(3L))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 346 Método: assertThat(solverJob3.getSolverStatus())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 470 Método: assertThat(consumedSolution)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 483 Método: fail("Unexpected number of received best solutions (" + bestSolutions.size() + "). Should be either 1 or 2.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 491 Método: assertThat(entity.getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 492 Método: assertThat(entity.getValue().getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 494 Método: assertThat(entity.getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 495 Método: assertThat(entity.getValue().getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 500 Método: assertThat(entity.getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 501 Método: assertThat(entity.getValue().getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 503 Método: assertThat(entity.getCode())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 504 Método: assertThat(entity.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 544 Método: assertThat(futureChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 545 Método: assertThat(bestSolution.get().getValueList())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 574 Método: fail("CountDownLatch failed.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 603 Método: assertThat(futureChange)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 604 Método: assertThat(bestSolution.get().getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 624 Método: assertThat(result)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 625 Método: assertThat(solverJob.isTerminatedEarly())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 637 Método: fail("CountDownLatch failed.")
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 654 Método: assertThat(result)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java linha: 655 Método: assertThat(solverJob.isTerminatedEarly())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 45 Método: assertThat(solver)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 54 Método: assertThat(solver)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 78 Método: assertThat(solver)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 90 Método: assertThat(solver)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 104 Método: assertThat(solver)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 134 Método: assertThat(solver)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 144 Método: assertThat(scoreDirectorFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-core-impl/src/test/java/org/optaplanner/core/api/solver/SolverFactoryTest.java linha: 153 Método: assertThat(score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 14 Método: assertThat(tupleList.size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 15 Método: assertThat(tupleList.first())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 16 Método: assertThat(tupleList.last())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 19 Método: assertThat(entryA.getElement().getFactA())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 20 Método: assertThat(tupleList.size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 21 Método: assertThat(tupleList.first())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 22 Método: assertThat(entryA.previous)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 23 Método: assertThat(entryA.next)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 24 Método: assertThat(tupleList.last())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 27 Método: assertThat(entryB.getElement().getFactA())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 28 Método: assertThat(tupleList.size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 29 Método: assertThat(tupleList.first())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 30 Método: assertThat(entryA.previous)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 31 Método: assertThat(entryA.next)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 32 Método: assertThat(entryB.previous)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 33 Método: assertThat(entryB.next)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 34 Método: assertThat(tupleList.last())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 37 Método: assertThat(tupleList.size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 38 Método: assertThat(tupleList.first())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 39 Método: assertThat(entryB.previous)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 40 Método: assertThat(entryB.next)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 41 Método: assertThat(tupleList.last())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 44 Método: assertThat(tupleList.size())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 45 Método: assertThat(tupleList.first())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/collection/TupleListTest.java linha: 46 Método: assertThat(tupleList.last())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 18 Método: softly.assertThat(getTuples(indexer))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 19 Método: softly.assertThat(indexer.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 27 Método: assertThat(indexer.size(NoneIndexProperties.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 29 Método: assertThat(indexer.size(NoneIndexProperties.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 31 Método: softly.assertThat(indexer.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 32 Método: softly.assertThat(getTuples(indexer))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 42 Método: softly.assertThat(indexer.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 43 Método: softly.assertThat(getTuples(indexer))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 48 Método: softly.assertThat(indexer.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 49 Método: softly.assertThat(getTuples(indexer))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/NoneIndexerTest.java linha: 64 Método: assertThat(getTuples(indexer))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsIndexerTest.java linha: 22 Método: assertThat(getTuples(indexer, "F", 40))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsIndexerTest.java linha: 29 Método: assertThat(indexer.size(new ManyIndexProperties("F", 40)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsIndexerTest.java linha: 31 Método: assertThat(indexer.size(new ManyIndexProperties("F", 40)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsIndexerTest.java linha: 58 Método: assertThat(getTuples(indexer, "F", 40))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsIndexerTest.java linha: 59 Método: assertThat(getTuples(indexer, "F", 30))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsIndexerTest.java linha: 60 Método: assertThat(getTuples(indexer, "F", 20))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 22 Método: assertThat(getTuples(indexer, "F", 40))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 29 Método: assertThat(indexer.size(new ManyIndexProperties("F", 40)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 31 Método: assertThat(indexer.size(new ManyIndexProperties("F", 40)))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 58 Método: assertThat(getTuples(indexer, "F", 40))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 59 Método: assertThat(getTuples(indexer, "F", 35))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 60 Método: assertThat(getTuples(indexer, "F", 30))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/common/index/EqualsAndComparisonIndexerTest.java linha: 61 Método: assertThat(getTuples(indexer, "F", 20))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/NodeSharingTest.java linha: 24 Método: assertThat(stream1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/NodeSharingTest.java linha: 29 Método: assertThat(filteredStream1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/NodeSharingTest.java linha: 40 Método: assertThat(stream1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/NodeSharingTest.java linha: 45 Método: assertThat(filteredStream1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/NodeSharingTest.java linha: 58 Método: assertThat(stream1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/NodeSharingTest.java linha: 63 Método: assertThat(filteredStream1)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/core/optaplanner-constraint-streams-bavet/src/test/java/org/optaplanner/constraint/streams/bavet/ScoreDirectorFactoryFactoryTest.java linha: 44 Método: assertThat(scoreDirectorFactory)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/report/BenchmarkReportConfigTest.java linha: 24 Método: assertThat(reportConfig.getLocale())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/report/BenchmarkReportConfigTest.java linha: 25 Método: assertThat(reportConfig.getSolverRankingType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/report/BenchmarkReportConfigTest.java linha: 26 Método: assertThat(reportConfig.getSolverRankingComparatorClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/report/BenchmarkReportConfigTest.java linha: 28 Método: assertThat(reportConfig.getSolverRankingWeightFactoryClass())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/PlannerBenchmarkConfigTest.java linha: 42 Método: assertThat(jaxbBenchmarkConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/PlannerBenchmarkConfigTest.java linha: 57 Método: assertThat(jaxbString)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/PlannerBenchmarkConfigTest.java linha: 93 Método: assertThat(configured)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 17 Método: assertThat(problemBenchmarksConfig.determineProblemStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 20 Método: assertThat(problemBenchmarksConfig.determineProblemStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 24 Método: assertThat(ProblemStatisticType.defaultList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 27 Método: assertThat(problemBenchmarksConfig.determineProblemStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 31 Método: assertThat(problemBenchmarksConfig.determineProblemStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 35 Método: assertThat(problemBenchmarksConfig.determineProblemStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 41 Método: assertThat(problemBenchmarksConfig.determineSingleStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 43 Método: assertThat(problemBenchmarksConfig.determineSingleStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/config/ProblemBenchmarksConfigTest.java linha: 45 Método: assertThat(problemBenchmarksConfig.determineSingleStatisticTypeList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/xsd/XsdAggregatorTest.java linha: 44 Método: assertThat(plannerBenchmarkConfig)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 90 Método: assertThat(mergedResult.getAggregation())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 93 Método: assertThat(mergedSolverBenchmarkResultList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 94 Método: assertThat(mergedSolverBenchmarkResultList.get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 95 Método: assertThat(mergedSolverBenchmarkResultList.get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 96 Método: assertThat(mergedSolverBenchmarkResultList.get(2).getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 97 Método: assertThat(mergedProblemBenchmarkResultList)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 98 Método: assertThat(mergedProblemBenchmarkResultList.get(0).getProblemProvider().getProblemName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 99 Método: assertThat(mergedProblemBenchmarkResultList.get(1).getProblemProvider().getProblemName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 136 Método: assertThat(jaxbString.trim())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 159 Método: assertThat(aggregatedPlannerBenchmarkResult.getSolverBenchmarkResultList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 160 Método: assertThat(aggregatedPlannerBenchmarkResult.getUnifiedProblemBenchmarkResultList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/result/PlannerBenchmarkResultTest.java linha: 161 Método: assertThat(aggregatedPlannerBenchmarkResult.getFailureCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/report/MillisecondDurationNumberFormatFactoryTest.java linha: 50 Método: assertThat(result)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/stepscore/StepScoreSubSingleStatisticTest.java linha: 29 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/scorecalculationspeed/ScoreCalculationSpeedSubSingleStatisticTest.java linha: 29 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/memoryuse/MemoryUseSubSingleStatisticTest.java linha: 28 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/bestscore/BestScoreSubSingleStatisticTest.java linha: 29 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/subsingle/pickedmovetypestepscore/PickedMoveTypeStepScoreSubSingleStatisticTest.java linha: 32 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/subsingle/pickedmovetypebestscore/PickedMoveTypeBestScoreSubSingleStatisticTest.java linha: 32 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/subsingle/constraintmatchtotalstepscore/ConstraintMatchTotalStepScoreSubSingleStatisticTest.java linha: 32 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/subsingle/constraintmatchtotalbestscore/ConstraintMatchTotalBestScoreSubSingleStatisticTest.java linha: 32 Método: assertions.assertThat(outputPoints)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/AbstractSubSingleStatisticTest.java linha: 78 Método: fail("Failed serializing statistic.", e)
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/AbstractSubSingleStatisticTest.java linha: 86 Método: fail("Failed deserializing statistic.", e)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/AbstractSubSingleStatisticTest.java linha: 90 Método: assertThat(deserialized.getStatisticType())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 26 Método: assertThat(StatisticUtils.determineStandardDeviationDoubles(subSingleBenchmarkResultList, SimpleScore.of(0), subSingleBenchmarkResultList.size()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 36 Método: assertThat(StatisticUtils.determineStandardDeviationDoubles(subSingleBenchmarkResultList, SimpleScore.of(-3), subSingleBenchmarkResultList.size()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 53 Método: assertThat(StatisticUtils.determineStandardDeviationDoubles(subSingleBenchmarkResultList, averageScore, subSingleBenchmarkResultList.size()))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 60 Método: assertThat(StatisticUtils.getStandardDeviationString(null))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 61 Método: assertThat(StatisticUtils.getStandardDeviationString(new double[] { 2.0 }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 62 Método: assertThat(StatisticUtils.getStandardDeviationString(new double[] { Math.sqrt(2.0) }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 63 Método: assertThat(StatisticUtils.getStandardDeviationString(new double[] { 160338212.294 }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 64 Método: assertThat(StatisticUtils.getStandardDeviationString(new double[] { 2000000000.0 }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/StatisticUtilsTest.java linha: 65 Método: assertThat(StatisticUtils.getStandardDeviationString(new double[] { 20000000000.0 }))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/movecountperstep/MoveCountPerStepSubSingleStatisticTest.java linha: 29 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/statistic/bestsolutionmutation/BestSolutionMutationSubSingleStatisticTest.java linha: 29 Método: assertions.assertThat(outputPoints)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 93 Método: assertThat(sbc3.getName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 99 Método: assertThat(names)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 106 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(-1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 107 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(0))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 108 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(1))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 109 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(2))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 110 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(3))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 111 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(4))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 112 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(5))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 113 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(6))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 114 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCountAutomatically(17))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 120 Método: assertThat(benchmarkFactory.resolveParallelBenchmarkCount())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/DefaultPlannerBenchmarkFactoryTest.java linha: 139 Método: assertThat(benchmarkFactory.calculateWarmUpTimeMillisSpentLimit())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 29 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 34 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 39 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 44 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 49 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 54 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 60 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 61 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 67 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 68 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 74 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 75 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 81 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 82 Método: assertThat(scoreDifferencePercentage.getPercentageLevels()[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 99 Método: assertThat(levels[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 100 Método: assertThat(levels[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 117 Método: assertThat(levels[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 118 Método: assertThat(levels[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 130 Método: assertThat(levels[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 131 Método: assertThat(levels[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 134 Método: assertThat(levels[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 135 Método: assertThat(levels[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 147 Método: assertThat(levels[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 148 Método: assertThat(levels[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 151 Método: assertThat(levels[0])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/measurement/ScoreDifferencePercentageTest.java linha: 152 Método: assertThat(levels[1])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/SolverBenchmarkFactoryTest.java linha: 88 Método: assertThat(solverBenchmarkFactory.getSolverMetrics(problemBenchmarksConfig))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/impl/SolverBenchmarkFactoryTest.java linha: 101 Método: assertThat(solverBenchmarkFactory.getSolverMetrics(problemBenchmarksConfig))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 56 Método: assertThat(benchmarkFactory.buildPlannerBenchmark(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 60 Método: assertThat(benchmarkFactory.buildPlannerBenchmark(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 72 Método: assertThat(benchmarkFactory.buildPlannerBenchmark(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 77 Método: assertThat(benchmarkFactory.buildPlannerBenchmark(solution))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 111 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 112 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 122 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 123 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 165 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 166 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 176 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 177 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 189 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 190 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 204 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 205 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 217 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 218 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 229 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 230 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 248 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 249 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 264 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 265 Método: assertThat(plannerBenchmark.benchmark())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 296 Método: assertThat(plannerBenchmark)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 297 Método: assertThat(plannerBenchmark.getPlannerBenchmarkResult().getSolverBenchmarkResultList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-benchmark/src/test/java/org/optaplanner/benchmark/api/PlannerBenchmarkFactoryTest.java linha: 298 Método: assertThat(plannerBenchmark.getPlannerBenchmarkResult().getUnifiedProblemBenchmarkResultList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 104 Método: assertEquals(expectedWeight, matchTotal.getScore().toLevelNumbers()[scoreLevel])
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 98 Método: assertEquals(expectedWeight, BigDecimal.ZERO)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 96 Método: assertEquals(expectedWeight, BigInteger.ZERO)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 94 Método: assertEquals(expectedWeight, 0D)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 92 Método: assertEquals(expectedWeight, 0F)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 90 Método: assertEquals(expectedWeight, 0L)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 88 Método: assertEquals(expectedWeight, 0)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 86 Método: assertEquals(expectedWeight, (short) 0)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/main/java/org/optaplanner/test/impl/score/AbstractScoreVerifier.java linha: 84 Método: assertEquals(expectedWeight, (byte) 0)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/test/java/org/optaplanner/test/api/solver/change/MockProblemChangeDirectorTest.java linha: 62 Método: softAssertions.assertThat(testdataSolution.getEntityList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/test/java/org/optaplanner/test/api/solver/change/MockProblemChangeDirectorTest.java linha: 63 Método: softAssertions.assertThat(testdataSolution.getValueList())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/test/java/org/optaplanner/test/api/solver/change/MockProblemChangeDirectorTest.java linha: 64 Método: softAssertions.assertThat(changedWorkingEntity.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-test/src/test/java/org/optaplanner/test/api/solver/change/MockProblemChangeDirectorTest.java linha: 65 Método: softAssertions.assertThat(changedWorkingEntity.getEntityGroup())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jsonb/src/test/java/org/optaplanner/persistence/jsonb/api/score/AbstractScoreJsonbAdapterTest.java linha: 29 Método: assertThat(output.getScore())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jsonb/src/test/java/org/optaplanner/persistence/jsonb/api/score/AbstractScoreJsonbAdapterTest.java linha: 41 Método: fail("Regular expression match failed." + newLine + "Expected regular expression: " + regex + newLine + "Actual string: " + jsonString)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jsonb/src/test/java/org/optaplanner/persistence/jsonb/api/OptaPlannerJsonbConfigTest.java linha: 24 Método: assertThat(output.getBendableScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jsonb/src/test/java/org/optaplanner/persistence/jsonb/api/OptaPlannerJsonbConfigTest.java linha: 25 Método: assertThat(output.getHardSoftScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/AbstractScoreJpaTest.java linha: 31 Método: assertThat(id)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/AbstractScoreJpaTest.java linha: 56 Método: assertThat(jpaEntity.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jpa/src/test/java/org/optaplanner/persistence/jpa/impl/AbstractScoreJpaTest.java linha: 72 Método: assertThat(jpaEntity.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/impl/domain/solution/JaxbSolutionFileIOTest.java linha: 41 Método: assertThat(copy)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/impl/domain/solution/JaxbSolutionFileIOTest.java linha: 48 Método: assertThat(copyE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/impl/domain/solution/JaxbSolutionFileIOTest.java linha: 49 Método: assertThat(copy.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/AbstractScoreJaxbAdapterTest.java linha: 46 Método: assertThat(output.getScore())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/AbstractScoreJaxbAdapterTest.java linha: 60 Método: fail(String.format("Regular expression match failed.%nExpected regular expression: %s%n" + "Actual string: %s", regex, xmlString))
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/PolymorphicScoreJaxbAdapterTest.java linha: 24 Método: assertThat(adaptedScore.getScoreClassName())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/PolymorphicScoreJaxbAdapterTest.java linha: 25 Método: assertThat(adaptedScore.getScoreString())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jaxb/src/test/java/org/optaplanner/persistence/jaxb/api/score/PolymorphicScoreJaxbAdapterTest.java linha: 37 Método: assertThat(dummyRootElement.score)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/impl/domain/solution/JacksonSolutionFileIOTest.java linha: 42 Método: assertThat(copy)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/impl/domain/solution/JacksonSolutionFileIOTest.java linha: 49 Método: assertThat(copyE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/impl/domain/solution/JacksonSolutionFileIOTest.java linha: 50 Método: assertThat(copy.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/score/AbstractScoreJacksonRoundTripTest.java linha: 30 Método: assertThat(output.getScore())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/score/AbstractScoreJacksonRoundTripTest.java linha: 42 Método: fail("Regular expression match failed.\nExpected regular expression: " + regex + "\nActual string: " + jsonString)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/OptaPlannerJacksonModuleTest.java linha: 31 Método: assertThat(output.getBendableScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/OptaPlannerJacksonModuleTest.java linha: 32 Método: assertThat(output.getHardSoftScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/OptaPlannerJacksonModuleTest.java linha: 33 Método: assertThat(output.getPolymorphicScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/OptaPlannerJacksonModuleTest.java linha: 37 Método: assertThat(output.getBendableScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/OptaPlannerJacksonModuleTest.java linha: 38 Método: assertThat(output.getHardSoftScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-jackson/src/test/java/org/optaplanner/persistence/jackson/api/OptaPlannerJacksonModuleTest.java linha: 39 Método: assertThat(output.getPolymorphicScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-xstream/src/test/java/org/optaplanner/persistence/xstream/impl/domain/solution/XStreamSolutionFileIOTest.java linha: 45 Método: assertThat(copy)
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-xstream/src/test/java/org/optaplanner/persistence/xstream/impl/domain/solution/XStreamSolutionFileIOTest.java linha: 52 Método: assertThat(copyE2.getValue())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-xstream/src/test/java/org/optaplanner/persistence/xstream/impl/domain/solution/XStreamSolutionFileIOTest.java linha: 53 Método: assertThat(copy.getScore())
Assert sem descrição: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-xstream/src/test/java/org/optaplanner/persistence/xstream/api/score/AbstractScoreXStreamConverterTest.java linha: 27 Método: assertThat(output.getScore())
Assert com mensagem: /home/vitor-otto/opensource/optaplanner-9.35.0.Beta2/optaplanner-persistence/optaplanner-persistence-xstream/src/test/java/org/optaplanner/persistence/xstream/api/score/AbstractScoreXStreamConverterTest.java linha: 39 Método: fail("Regular expression match failed.\nExpected regular expression: " + regex + "\nActual string: " + xmlString)
Total asserts: 5214
Asserts sem descrição: 5177
Asserts com descrição: 34
Assertion Roulette: 4742
