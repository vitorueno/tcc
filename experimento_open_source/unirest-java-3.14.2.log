
Projeto: /home/vitor-otto/opensource/unirest-java-3.14.2

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AsyncTest.java linha: 42 Método: assertEquals("Hey Ma", body)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 51 Método: assertEquals("hi", result)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 62 Método: assertEquals("hi", result)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 72 Método: assertEquals("hi", i)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 82 Método: assertEquals("hi", new String(i))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 92 Método: assertEquals("hi", i)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 104 Método: assertEquals("text/html", i)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 116 Método: assertEquals(HttpStatus.IM_A_TEAPOT, i.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 117 Método: assertEquals("Tip me over and pour me out", i.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 128 Método: assertEquals(HttpStatus.IM_A_TEAPOT, raw.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 129 Método: assertEquals("Tip me over and pour me out", raw.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RawResponseTest.java linha: 141 Método: assertEquals("Klingon-32", encoding)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 44 Método: client.assertThat(HttpMethod.GET, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 72 Método: client.assertThat(GET, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 80 Método: client.assertThat(GET, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 130 Método: assertNull(Unirest.post(path).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 131 Método: assertEquals("bar", Unirest.post(path).body("foo").asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 154 Método: client.assertThat(POST, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 164 Método: client.assertThat(POST, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 163 Método: assertThrows(UnirestAssertion.class, () -> client.assertThat(POST, path).hadBody("I'm a big ol beat"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 173 Método: client.assertThat(POST, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 181 Método: client.assertThat(POST, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 181 Método: assertThrows(UnirestAssertion.class, () -> client.assertThat(POST, path).hadField("nope", "buddy"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 182 Método: client.assertThat(POST, path)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 182 Método: assertThrows(UnirestAssertion.class, () -> client.assertThat(POST, path).hadField("hey", "nope"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 189 Método: assertEquals(null, Unirest.get(path).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 201 Método: assertEquals(400, res.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 202 Método: assertEquals("wtf", res.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 203 Método: assertEquals("boo", res.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 205 Método: assertEquals("Hi", Unirest.get(otherPath).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 213 Método: assertEquals("Hey Buddy", Unirest.get(path).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 215 Método: assertEquals("Yeaaaah Buddy", Unirest.get(path).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/MockClientInterceptorIssueTest.java linha: 74 Método: assertEquals("Call Result", response.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/MockClientInterceptorIssueTest.java linha: 75 Método: assertSame(response, interceptor.response)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/MultipleExpectsTest.java linha: 108 Método: assertEquals("two", result)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/Base.java linha: 59 Método: assertEquals(message, e.getMessage(), "Wrong Error Message")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/Base.java linha: 57 Método: fail("Expected exception but got none.")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/Base.java linha: 66 Método: fail("Expected exception but got none.")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ErrorTest.java linha: 45 Método: assertEquals("Boo!", err.say)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/BodyMatchingTest.java linha: 86 Método: assertEquals("cool", result)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/MetricsTest.java linha: 49 Método: assertTrue(wasCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 51 Método: assertEquals("http://localhost/get/cheese/passed?fruit=apples", sum.getUrl())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 52 Método: assertEquals("http://localhost/get/{params}/passed", sum.getRawPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 53 Método: assertEquals(HttpMethod.GET, sum.getHttpMethod())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 62 Método: assertEquals(BAD_REQUEST, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 63 Método: assertEquals("oh noes", response.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 72 Método: assertEquals(BAD_REQUEST, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 73 Método: assertEquals("", response.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 81 Método: assertEquals("Hello World", Unirest.get(path).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 90 Método: assertEquals("Hello World", new String(body))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 98 Método: assertEquals("apple", Unirest.get(path).asJson().getBody().getObject().getString("fruit"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 107 Método: assertEquals("apple", Unirest.get(path).asJson().getBody().getObject().getString("fruit"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 117 Método: assertEquals("apple", pojo.fruit)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 130 Método: assertEquals("derp", pojo)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 144 Método: assertEquals("derp", pojo)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 154 Método: assertEquals("foo", rez.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 155 Método: assertEquals("grover", rez.getHeaders().getFirst("monster"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 165 Método: assertEquals(null, rez.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 166 Método: assertEquals("grover", rez.getHeaders().getFirst("monster"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 178 Método: assertEquals(400, httpResponse.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 179 Método: assertEquals("Bad Request", httpResponse.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 193 Método: assertEquals(400, httpResponse.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 194 Método: assertEquals("howdy", httpResponse.getBody().getObject().getString("message"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 208 Método: assertEquals(400, httpResponse.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/ExpectedResponseTest.java linha: 209 Método: assertEquals("Pears", httpResponse.getBody().fruit)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 41 Método: assertSame(client, Unirest.primaryInstance().config().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 42 Método: assertSame(client, Unirest.primaryInstance().config().getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 46 Método: assertFalse(Unirest.primaryInstance().config().getClient() instanceof MockClient)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 47 Método: assertFalse(Unirest.primaryInstance().config().getAsyncClient() instanceof MockClient)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 54 Método: assertSame(client, i.config().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 55 Método: assertSame(client, i.config().getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 59 Método: assertFalse(i.config().getClient() instanceof MockClient)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/RegistrationTest.java linha: 60 Método: assertFalse(i.config().getAsyncClient() instanceof MockClient)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/unirest/MockResponseTest.java linha: 37 Método: assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/unirest/MockResponseTest.java linha: 38 Método: assertEquals("Hi Mom", response.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/unirest/MockResponseTest.java linha: 46 Método: assertEquals("application/xml", response.getHeaders().getFirst("Accept"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/unirest/MockResponseTest.java linha: 54 Método: assertEquals(400, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/unirest/MockResponseTest.java linha: 55 Método: assertEquals("Hi Mom", response.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/unirest/MockResponseTest.java linha: 73 Método: assertEquals("Transformed!", response.mapError(TransformedError.class).message)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 73 Método: JSONAssert.assertEquals("{\"text\":\"foo\",\"nmbr\":42,\"another\":{\"text\":\"bar\",\"nmbr\":666}}", json, true)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 85 Método: assertEquals("foo", test.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 86 Método: assertEquals(42, test.nmbr.intValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 87 Método: assertEquals("bar", test.another.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 88 Método: assertEquals(666, test.another.nmbr.intValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 89 Método: assertEquals(null, test.another.another)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 99 Método: assertEquals("foo", test.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 100 Método: assertEquals(42, test.nmbr.intValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 101 Método: assertEquals("bar", test.another.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 102 Método: assertEquals(666, test.another.nmbr.intValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 103 Método: assertEquals(null, test.another.another)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 116 Método: assertEquals("{\"text\":null,\"nmbr\":null,\"another\":null}", om.writeValue(testMe))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 54 Método: fail(r.getStatus() + " request failed " + r.getBody())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 66 Método: fail(r.getStatus() + " request failed " + r.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 80 Método: assertEquals(200, response)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 92 Método: assertEquals(200, response)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 104 Método: assertEquals(200, response)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 119 Método: assertEquals(200, response)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 134 Método: assertThrows(UnirestException.class, request::asEmpty)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 148 Método: assertThrows(UnirestException.class, request::asEmpty)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 156 Método: assertEquals(200, response)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 226 Método: assertThrows(Exception.class, () -> Unirest.get(url).asEmptyAsync().get())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 228 Método: fail("Expected wrong exception type \n Expected: " + exClass + "\n but got " + e.getCause().getClass())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 230 Método: assertEquals(error, e.getMessage(), "Wrong Error Message")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 234 Método: assertThrows(Exception.class, () -> Unirest.get(url).asEmpty())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 236 Método: fail("Expected wrong exception type \n Expected: " + exClass + "\n but got " + e.getCause().getClass())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 238 Método: assertEquals(error, e.getMessage(), "Wrong Error Message")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 242 Método: Assertions.assertEquals(200, Unirest.get(url).asEmpty().getStatus())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 249 Método: fail(e.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 247 Método: Assertions.assertEquals(200, Unirest.get(url).asEmptyAsync().get().getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorThing.java linha: 47 Método: assertEquals(s, message)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/JsonPatchTest.java linha: 155 Método: JSONAssert.assertEquals(expected, patch, true)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 53 Método: assertTrue(r.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 54 Método: assertTrue(r.getParsingError().get().getMessage().contains("jackson"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 55 Método: assertEquals("not json", r.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 82 Método: assertEquals("{\"message\":\"boom!\"}", e)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 113 Método: assertNull(error)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 130 Método: assertNull(error.merp)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 131 Método: Assertions.assertEquals("{\"message\":\"boom!\"}", request.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 142 Método: assertEquals(400, e.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 149 Método: assertTrue(errorCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ErrorParsingTest.java linha: 164 Método: assertEquals("boom!", e.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheInterceptorTest.java linha: 51 Método: assertThrows(ExecutionException.class, () -> Unirest.get(MockServer.GET).asStringAsync().get())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheInterceptorTest.java linha: 52 Método: assertEquals("java.io.IOException: " + "Something horrible happened", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ExampleCertificateTest.java linha: 67 Método: assertEquals(200, response.getStatusLine().getStatusCode())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ExampleCertificateTest.java linha: 104 Método: fail(r.getStatus() + " request failed " + r.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 77 Método: assertTrue(Unirest.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 80 Método: assertFalse(Unirest.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 83 Método: assertTrue(Unirest.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 94 Método: assertFalse(Unirest.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 97 Método: assertTrue(Unirest.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 102 Método: assertSame(Unirest.primaryInstance(), Unirest.primaryInstance())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 103 Método: assertNotSame(Unirest.primaryInstance(), Unirest.spawnInstance())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 104 Método: assertNotSame(Unirest.spawnInstance(), Unirest.spawnInstance())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 114 Método: assertTrue(ManagementFactory.getThreadMXBean().getThreadCount() <= startingCount + 10)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 122 Método: assertEquals(1, reference.config().getDefaultHeaders().size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 123 Método: assertEquals("bar", reference.config().getDefaultHeaders().get("foo").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/LifeCycleTest.java linha: 125 Método: assertEquals(0, reference.config().getDefaultHeaders().size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 52 Método: assertSame(first, Unirest.config().getAsyncClient().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 59 Método: assertNotSame(first, second)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 62 Método: assertSame(second, Unirest.config().getAsyncClient().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 71 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 77 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 83 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 91 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 109 Método: assertNotEquals(c, Unirest.config().getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 110 Método: assertEquals(i, Unirest.config().getInterceptor().get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheBehaviorTest.java linha: 111 Método: assertEquals(4000, Unirest.config().getConnectionTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheClientTest.java linha: 107 Método: assertTrue(requestConfigUsed)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheClientTest.java linha: 114 Método: assertEquals(200, result.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheClientTest.java linha: 115 Método: assertEquals("Howdy Ho!", result.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheClientTest.java linha: 120 Método: assertTrue(requestConfigUsed)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheClientTest.java linha: 121 Método: assertTrue(interceptorCalled)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestObjectMapperTest.java linha: 47 Método: JSONAssert.assertEquals(expectStr, actualStr, true)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 114 Método: Assertions.assertEquals(1, request.getHeaders().size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 115 Método: Assertions.assertEquals("Marco", request.getHeaders().get("name").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 116 Método: Assertions.assertEquals("Marco", request.getHeaders().get("NAme").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 117 Método: Assertions.assertEquals("Marco", request.getHeaders().get("Name").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 123 Método: Assertions.assertEquals(1, request.getHeaders().size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 124 Método: Assertions.assertEquals("Marco", request.getHeaders().get("name").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 125 Método: Assertions.assertEquals("John", request.getHeaders().get("name").get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 126 Método: Assertions.assertEquals("Marco", request.getHeaders().get("NAme").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 127 Método: Assertions.assertEquals("John", request.getHeaders().get("NAme").get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 128 Método: Assertions.assertEquals("Marco", request.getHeaders().get("Name").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 129 Método: Assertions.assertEquals("John", request.getHeaders().get("Name").get(1))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 269 Método: assertNotNull(header, "Authorization Header Missing")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 271 Método: assertEquals("user2" + ":" + "pass2", new String(Base64.getDecoder().decode(credentials)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RedirectHandlingTest.java linha: 52 Método: Assertions.assertEquals(301, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RedirectHandlingTest.java linha: 69 Método: Assertions.assertEquals(301, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 100 Método: Assertions.assertEquals("ABC123", response.getCookies().getNamed("JSESSIONID").getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 101 Método: Assertions.assertEquals("ruby", response.getCookies().getNamed("color").getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 110 Método: Assertions.assertEquals("फनकी", response.getCookies().getNamed("nepali").getUrlDecodedValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 119 Método: Assertions.assertEquals("1=2;3=4", response.getCookies().getNamed("odd").getUrlDecodedValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 129 Método: Assertions.assertEquals("blue", back.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 130 Método: Assertions.assertEquals("localhost", back.getDomain())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 131 Método: Assertions.assertEquals("/get", back.getPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 132 Método: Assertions.assertTrue(back.isHttpOnly())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 133 Método: Assertions.assertFalse(back.isSecure())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 134 Método: Assertions.assertEquals(42, back.getMaxAge())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 141 Método: assertNotNull(r1.getCookies().getNamed("color"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 147 Método: assertNotNull(r1.getCookies().getNamed("color"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 202 Método: Assertions.assertEquals("bar", cookie.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 234 Método: assertNotNull(r1.getCookies().getNamed("color"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 241 Método: assertNotNull(r1.getCookies().getNamed("color"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 253 Método: Assertions.assertEquals("bar", r1.getCookies().getNamed("foo").getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieTest.java linha: 268 Método: assertNotNull(response.getCookies().getNamed("cookie_name"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestMonitor.java linha: 84 Método: assertEquals(spidey.length(), stat.total, "Wrong Expected Length")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestMonitor.java linha: 85 Método: assertTrue(stat.timesCalled > 1)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestMonitor.java linha: 90 Método: assertEquals(spidey.length(), stat.total, "Wrong Expected Length")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestMonitor.java linha: 91 Método: assertTrue(stat.timesCalled > 1)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ResponseHeaderTest.java linha: 50 Método: Assertions.assertEquals("text/plain;charset=utf-8", h.getFirst("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ResponseHeaderTest.java linha: 51 Método: Assertions.assertEquals("JSESSIONID=ABC123; Path=/", h.getFirst("Set-Cookie"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ResponseHeaderTest.java linha: 52 Método: Assertions.assertEquals("Thu, 01 Jan 1970 00:00:00 GMT", h.getFirst("Expires"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ResponseHeaderTest.java linha: 53 Método: Assertions.assertEquals(Lists.newArrayList("oranges", "grapes"), h.get("zed"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ResponseHeaderTest.java linha: 54 Método: Assertions.assertEquals("apples", h.getFirst("alpha"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/VerbTest.java linha: 74 Método: Assertions.assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/VerbTest.java linha: 75 Método: Assertions.assertEquals("text/plain;charset=utf-8", response.getHeaders().getFirst("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/DefectTest.java linha: 70 Método: Assertions.assertEquals(true, body.getBoolean("gzipped"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/DefectTest.java linha: 71 Método: Assertions.assertEquals("gzip", body.getJSONObject("headers").getString("Accept-Encoding"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MultiPartFormPostingTest.java linha: 142 Método: assertEquals(2, body.getAllFilesByInput("file").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MultiPartFormPostingTest.java linha: 450 Método: assertEquals(expected, body)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 42 Método: assertEquals("blue", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 43 Método: assertEquals("localhost", c.getDomain())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 44 Método: assertEquals("/get", c.getPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 45 Método: assertEquals(ZonedDateTime.of(2020, 1, 5, 15, 0, 20, 0, ZoneId.of("GMT")), c.getExpiration())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 47 Método: assertTrue(c.isHttpOnly())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 48 Método: assertFalse(c.isSecure())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 49 Método: assertEquals(42, c.getMaxAge())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 50 Método: assertNull(c.getSameSite())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 56 Método: assertEquals(ZonedDateTime.of(2020, 1, 5, 15, 0, 20, 0, ZoneId.of("GMT")), c.getExpiration())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 64 Método: assertEquals(v, c.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 71 Método: assertEquals(Cookie.SameSite.Strict, c.getSameSite())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 78 Método: assertTrue(c.isSecure())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 79 Método: assertEquals("color=blue;Secure", c.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 92 Método: assertEquals(jetty.getValue(), unirest.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 99 Método: assertEquals("color=blue", c.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 106 Método: assertEquals("", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 107 Método: assertTrue(c.isHttpOnly())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 108 Método: assertEquals(".admin.virginia.edu", c.getDomain())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 115 Método: assertEquals(" woh ", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 122 Método: assertEquals("", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 129 Método: assertEquals("===", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 136 Método: assertEquals("\"", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CookieParsingTest.java linha: 143 Método: assertEquals("\"foo", c.getValue())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 169 Método: assertFalse(headers.containsKey(s), "Should Have No Header " + s)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 181 Método: assertTrue(headers.containsKey(key), String.format("Expect header of '%s' but none was present", key))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 182 Método: assertTrue(headers.get(key).contains(value), "Expected Header Value Failed expected: " + value + " But Got: " + headers.get(key))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 187 Método: assertTrue(params.containsKey(key), String.format("Expect param of '%s' but none was present", key))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 188 Método: assertTrue(params.get(key).contains(value), "Expected Query or Form value: " + value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 219 Método: assertEquals(content, getFileByInput(input).body)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 225 Método: assertNotNull(raw, "Authorization Header Missing")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 227 Método: assertEquals(username + ":" + password, new String(Base64.getDecoder().decode(credentials)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 232 Método: assertEquals(s, queryString)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 237 Método: Assertions.assertEquals(get, method)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 242 Método: assertEquals(value, routeParams.get(name))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 247 Método: assertEquals(s, url)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 252 Método: assertTrue(contentType.endsWith(charset.toString()), "Expected Content Type With Charset: " + charset.toString())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 256 Método: Assertions.assertNotNull(jsonPatches, "Asserting JSONPatch but no patch object present")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 257 Método: Assertions.assertTrue(jsonPatches.getOperations().contains(new JsonPatchItem(op, path, value)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 266 Método: assertEquals(i, status)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 275 Método: assertEquals(b, isProxied)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 280 Método: assertEquals(size, headers.get(foo).size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 285 Método: assertEquals(o, body)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 299 Método: assertEquals(1, h.size(), "Expected exactly 1 Content-Type header")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 301 Método: assertEquals("multipart/form-data", parts.get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 302 Método: assertTrue(parts.get(1).startsWith("boundary="))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 303 Método: assertEquals("charset=UTF-8", parts.get(2))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 313 Método: assertNotNull(c, "expected a cookie to be passed to the server but got none. Name: " + name)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 314 Método: assertEquals(value, c)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 319 Método: assertNull(cookies.get(name), "Cookie should not have been passed but it was! ")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 340 Método: assertEquals(content, body)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 345 Método: assertEquals(type, this.fileType)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 354 Método: assertEquals(s, fileName)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 359 Método: assertEquals(expected, this.size)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 363 Método: assertTrue(this.size > 0)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CallbackFutureTest.java linha: 101 Método: assertTrue(wasCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CallbackFutureTest.java linha: 126 Método: assertTrue(wasCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PagingTest.java linha: 47 Método: Assertions.assertEquals(10, result.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PagingTest.java linha: 60 Método: Assertions.assertEquals(10, result.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PagingTest.java linha: 72 Método: Assertions.assertEquals(1, result.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 45 Método: assertEquals("Bad Request", response.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 55 Método: assertNull(res.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 56 Método: Assertions.assertEquals(200, res.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 57 Método: Assertions.assertEquals("json;charset=utf-8", res.getHeaders().getFirst("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 65 Método: assertNull(res.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 66 Método: Assertions.assertEquals(200, res.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 67 Método: Assertions.assertEquals("json;charset=utf-8", res.getHeaders().getFirst("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 76 Método: assertNull(res.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 77 Método: Assertions.assertEquals(200, res.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsEmptyTest.java linha: 78 Método: Assertions.assertEquals("json;charset=utf-8", res.getHeaders().getFirst("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 44 Método: Assertions.assertEquals(HttpStatus.OK, i.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 45 Método: Assertions.assertEquals("{}", i.getBody().toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 53 Método: Assertions.assertEquals("{\"f\":1,\"a\":[2,3,4]}", i.getBody().toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 61 Método: Assertions.assertEquals("{\n" + "  \"f\": 1,\n" + "  \"a\": [\n" + "    2,\n" + "    3,\n" + "    4\n" + "  ]\n" + "}", i.getBody().toPrettyString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 105 Método: Assertions.assertEquals(HttpStatus.BAD_REQUEST, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 106 Método: assertNull(response.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 107 Método: Assertions.assertTrue(response.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 109 Método: Assertions.assertEquals("You did something bad", ex.getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 110 Método: Assertions.assertEquals("kong.unirest.json.JSONException: Invalid JSON", response.getParsingError().get().getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 119 Método: assertEquals(HttpStatus.BAD_REQUEST, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 120 Método: assertNull(response.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 121 Método: assertTrue(response.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 122 Método: assertEquals("kong.unirest.json.JSONException: Invalid JSON", response.getParsingError().get().getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 139 Método: Assertions.assertEquals("{\"test\":\"it's a && b || c + 1!?\"}", test.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsJsonTest.java linha: 156 Método: Assertions.assertEquals("bar", body.getObject().getJSONObject("params").getJSONArray("foo").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 116 Método: assertThrows(UnirestException.class, () -> Unirest.get(MockServer.HOST + "/{method}").routeParam("method222", "get").queryString("name", "Mark").asEmpty())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 121 Método: Assertions.assertEquals("Can't find route parameter name \"method222\"", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 126 Método: assertThrows(UnirestException.class, () -> Unirest.get(MockServer.HOST + "/{method}").queryString("name", "Mark").asEmpty())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 130 Método: Assertions.assertEquals("java.lang.IllegalArgumentException: Illegal character in path at index 22: http://localhost:4567/{method}?name=Mark", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 175 Método: assertEquals("http://localhost:4567/get/cheese/passed?fruit=apples", sum.getUrl())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 176 Método: assertEquals("http://localhost:4567/get/{params}/passed", sum.getRawPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 177 Método: assertEquals(HttpMethod.GET, sum.getHttpMethod())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 189 Método: assertEquals("http://localhost:4567/get/cheese/passed?fruit=apples", sum.getUrl())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 190 Método: assertEquals("http://localhost:4567/get/{params}/passed", sum.getRawPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 191 Método: assertEquals(HttpMethod.GET, sum.getHttpMethod())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 59 Método: assertEquals(MockServer.GET, interceptor.reqSum.getUrl())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 87 Método: assertThrows(UnirestException.class, () -> Unirest.get(MockServer.GET).asEmpty())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 88 Método: Assertions.assertEquals("java.io.IOException: " + "Something horrible happened", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 98 Método: Assertions.assertEquals(542, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 99 Método: Assertions.assertEquals("Something horrible happened", response.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 111 Método: Assertions.assertEquals(542, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 112 Método: Assertions.assertEquals("Something horrible happened", response.getStatusText())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 132 Método: assertEquals(newHashSet("file=spidey.jpg", "fruit=apples"), values)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 55 Método: fail("should not have been called")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 57 Método: assertNotNull(captured)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 67 Método: fail("should not have been called")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 69 Método: assertNotNull(captured)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 70 Método: Assertions.assertEquals(400, captured.getStatus())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 81 Método: fail("should not have been called")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 83 Método: assertNotNull(captured)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 84 Método: Assertions.assertEquals(200, captured.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 85 Método: Assertions.assertTrue(captured.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 86 Método: Assertions.assertEquals("not what you expect", captured.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 96 Método: Assertions.assertEquals(400, error.httpResponse.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 106 Método: Assertions.assertEquals(400, error.httpResponse.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 128 Método: Assertions.assertTrue(response.isSuccess())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 137 Método: Assertions.assertFalse(response.isSuccess())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PostRequestHandlersTest.java linha: 148 Método: Assertions.assertFalse(response.isSuccess())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HostsHeaderTest.java linha: 53 Método: Assertions.assertEquals(200, s.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BodyLogSummaryTest.java linha: 47 Método: assertEquals("GET http://somewhere/beans?fruit=apple\n" + "Accept=image/raw\n" + "===================================", log)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BodyLogSummaryTest.java linha: 62 Método: assertEquals("POST http://somewhere/beans?fruit=apple\n" + "Accept=image/raw\n" + "===================================\n" + "this is the body", log)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BodyLogSummaryTest.java linha: 78 Método: assertEquals("POST http://somewhere/beans?fruit=apple\n" + "Accept=image/raw\n" + "===================================\n" + "{\"muppet\":\"Gonzo\"}", log)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BodyLogSummaryTest.java linha: 94 Método: assertEquals("POST http://somewhere/beans?fruit=apple\n" + "Accept=image/raw\n" + "===================================\n" + "{\"bar\":\"zip\"}", log)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BodyLogSummaryTest.java linha: 111 Método: assertEquals("POST http://somewhere/beans?fruit=apple\n" + "Accept=image/raw\n" + "===================================\n" + "album=77&band=Talking+Heads", log)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BodyLogSummaryTest.java linha: 127 Método: assertEquals("POST http://localhost:4567/raw\n" + "Accept=image/raw\n" + "===================================\n" + "--5798a3ff-ed92-4e9e-a9fe-bd7853cea758\n" + "Content-Disposition: form-data; name:\"album\"\n" + "77\n" + "\n" + "--0ad6dbf7-c5b6-453e-a28c-4a3a8fab7017\n" + "Content-Disposition: form-data; name:\"band\"\n" + "Talking Heads\n" + "\n" + "--453a52b3-2811-4bf6-8950-6395efe72ef7\n" + "Content-Disposition: form-data; name=\"file\"; filename=\"null\"\n" + "Content-Type: application/octet-stream\n" + "<BINARY DATA>\n", body)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ShutDownHooksTest.java linha: 72 Método: assertEquals(expected, threads.stream().filter(t -> "Unirest Apache Client Shutdown Hook".equals(t.getName())).count())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ShutDownHooksTest.java linha: 73 Método: assertEquals(expected, threads.stream().filter(t -> "Unirest Apache Async Client Shutdown Hook".equals(t.getName())).count())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 185 Método: assertThrows(UnirestConfigException.class, () -> Unirest.post(MockServer.POST).body(new Foo("die")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 186 Método: Assertions.assertEquals("No Object Mapper Configured. Please config one with Unirest.config().setObjectMapper", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 198 Método: assertEquals("{\"body\": \"sample\"}", value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 211 Método: assertEquals("{\"body\": \"sample\"}", value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 224 Método: assertEquals("{\"body\":\"sample\"}", value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 237 Método: assertEquals("{\"body\":\"sample\"}", value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 250 Método: assertEquals("[\"body\",\"sample\"]", value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 50 Método: Assertions.assertEquals(429, Unirest.get(MockServer.GET).asEmpty().getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 51 Método: Assertions.assertEquals(429, Unirest.get(MockServer.GET).asString().getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 52 Método: Assertions.assertEquals(429, Unirest.get(MockServer.GET).asBytes().getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 53 Método: assertEquals(429, Unirest.get(MockServer.GET).asObject(RequestCapture.class).getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 95 Método: assertEquals(o, cap)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 102 Método: assertEquals("Hi Mom", cap)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 109 Método: Assertions.assertEquals("Hi Mom", cap.getObject().getString("message"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 116 Método: assertEquals("Hi Mom", new String(cap))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 131 Método: assertTrue(cap.exists())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 142 Método: Assertions.assertEquals(429, resp.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 154 Método: Assertions.assertEquals(429, Unirest.get(MockServer.GET).asEmpty().getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RetryTest.java linha: 166 Método: Assertions.assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UploadProgressTest.java linha: 102 Método: assertEquals(1, stat.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UploadProgressTest.java linha: 103 Método: assertEquals(asList(19L), stat.progress)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UploadProgressTest.java linha: 104 Método: assertEquals(19L, stat.total)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MockServer.java linha: 328 Método: assertEquals(i, timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 53 Método: assertEquals("bar", r.get("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 65 Método: assertEquals("bar", r.get("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 79 Método: Assertions.assertEquals(200, r.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 80 Método: Assertions.assertTrue(r.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 81 Método: Assertions.assertEquals(ohNoes, r.getParsingError().get().getCause())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 82 Método: Assertions.assertEquals("call me ishmael", r.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 96 Método: Assertions.assertEquals(200, r.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 97 Método: Assertions.assertTrue(r.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 98 Método: Assertions.assertEquals(ohNoes, r.getParsingError().get().getCause())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ObjectFunctionalTest.java linha: 99 Método: Assertions.assertEquals("call me ishmael", r.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ProxyTest.java linha: 59 Método: assertTrue(JankyProxy.wasUsed())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ProxyTest.java linha: 74 Método: assertTrue(JankyProxy.wasUsed())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ProxyTest.java linha: 88 Método: assertTrue(JankyProxy.wasUsed())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ProxyTest.java linha: 101 Método: assertTrue(JankyProxy.wasUsed())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ProxyTest.java linha: 115 Método: assertTrue(JankyProxy.wasUsed())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ProxyTest.java linha: 133 Método: assertTrue(JankyProxy.wasUsed())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TimeoutTest.java linha: 55 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TimeoutTest.java linha: 66 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TimeoutTest.java linha: 85 Método: assertTrue(higherConcurrencyTime < smallerConcurrencyTime)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsGenericTypeTest.java linha: 112 Método: assertEquals(3, someTees.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsGenericTypeTest.java linha: 113 Método: assertEquals("foo", someTees.get(0).bar)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsGenericTypeTest.java linha: 114 Método: assertEquals("bar", someTees.get(1).bar)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsGenericTypeTest.java linha: 115 Método: assertEquals("baz", someTees.get(2).bar)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 45 Método: assertEquals("Hi Mom", body)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 52 Método: Assertions.assertEquals(200, i.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 53 Método: Assertions.assertEquals("", i.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 64 Método: Assertions.assertEquals(200, i.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 75 Método: Assertions.assertEquals(200, i.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 116 Método: Assertions.assertEquals("ěščřžýáíé", Unirest.get(MockServer.GET).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 125 Método: Assertions.assertEquals("ěščřžýáíé", r.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 138 Método: Assertions.assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 139 Método: Assertions.assertEquals("šžýáíé", response.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 149 Método: Assertions.assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsStringTest.java linha: 150 Método: Assertions.assertEquals("šžýáíé", response.getBody())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BddTest.java linha: 73 Método: assertTrue(status, "Expected a async call but it never responded")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BddTest.java linha: 81 Método: assertFalse(status, "Should have failed")
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BddTest.java linha: 82 Método: assertEquals(message, fail)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BddTest.java linha: 97 Método: Assertions.assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsBytesTest.java linha: 81 Método: assertEquals("howdy", r)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsBytesTest.java linha: 91 Método: assertEquals("howdy", r.bar)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 67 Método: assertEquals(200, status)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 87 Método: assertEquals(null, error)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 88 Método: assertEquals(200, status)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 89 Método: assertTrue(test.toFile().exists())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 105 Método: assertEquals(null, error)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 106 Método: assertEquals(200, status)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 107 Método: assertTrue(test.toFile().exists())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/ConsumerTest.java linha: 121 Método: assertEquals(200, status)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GenericMappingTest.java linha: 43 Método: assertEquals(123456, body)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GenericMappingTest.java linha: 55 Método: Assertions.assertEquals(123456, response.getBody().intValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GenericMappingTest.java linha: 56 Método: Assertions.assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GenericMappingTest.java linha: 57 Método: Assertions.assertEquals("cheddar", response.getHeaders().getFirst("cheese"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 47 Método: assertEquals(2, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 57 Método: assertEquals(1, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 58 Método: assertEquals(r1, r2)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 68 Método: assertEquals(1, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 69 Método: assertEquals(r1, r2)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 76 Método: assertSame(Unirest.get(MockServer.GET).asString(), Unirest.get(MockServer.GET).asString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 81 Método: assertNotSame(Unirest.get(MockServer.GET).asString(), Unirest.get(MockServer.GET).asObject(RequestCapture.class))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 86 Método: assertEquals(2, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 93 Método: assertNull(Unirest.get(MockServer.GET).asEmpty().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 94 Método: assertNull(Unirest.get(MockServer.GET).asEmpty().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 95 Método: assertNotNull(Unirest.get(MockServer.GET).asObject(RequestCapture.class).getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 96 Método: assertNotNull(Unirest.get(MockServer.GET).asObject(RequestCapture.class).getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 97 Método: assertNotNull(Unirest.get(MockServer.GET).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 98 Método: assertNotNull(Unirest.get(MockServer.GET).asString().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 99 Método: assertNotNull(Unirest.get(MockServer.GET).asJson().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 100 Método: assertNotNull(Unirest.get(MockServer.GET).asJson().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 101 Método: assertNotNull(Unirest.get(MockServer.GET).asBytes().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 102 Método: assertNotNull(Unirest.get(MockServer.GET).asBytes().getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 104 Método: assertEquals(5, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 121 Método: assertEquals(10, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 125 Método: assertEquals(11, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 138 Método: assertEquals(1, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 144 Método: assertEquals(2, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 152 Método: Assertions.assertNotEquals(response1.getBody().getObject().getString("requestId"), response2.getBody().getObject().getString("requestId"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 156 Método: assertEquals(2, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 165 Método: Assertions.assertEquals(response1.getBody().getObject().getString("requestId"), response2.getBody().getObject().getString("requestId"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 169 Método: assertEquals(1, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingTest.java linha: 181 Método: Assertions.assertEquals(200, r.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GZipTest.java linha: 42 Método: Assertions.assertFalse(result.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GZipTest.java linha: 43 Método: Assertions.assertEquals("", result.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GZipTest.java linha: 56 Método: Assertions.assertEquals(0, resp.getHeaders().get("Content-Encoding").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/GZipTest.java linha: 70 Método: Assertions.assertEquals(0, resp.getHeaders().get("Content-Encoding").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 53 Método: assertEquals(2, metric.routes.get(GET).size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 54 Método: assertEquals(1, metric.routes.get("http://localhost:4567/get/foo/passed?fruit=orange").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 66 Método: assertEquals(1, metric.routes.get("http://localhost:4567/get/{params}/passed").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 78 Método: assertEquals(2, metric.routes.get("GET").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 79 Método: assertEquals(1, metric.routes.get("DELETE").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 87 Método: assertEquals(1, metric.routes.get(GET).size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 101 Método: assertEquals(1L, metric.countResponses(200))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 102 Método: assertEquals(2L, metric.countResponses(301))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 103 Método: assertEquals(1L, metric.countResponses(400))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 112 Método: assertEquals(1L, metric.countResponses(200))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 122 Método: assertEquals(1L, metric.countResponses(200))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 136 Método: assertEquals("Something horrible happened", metric.routes.get(GET).get(0).e.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 149 Método: assertEquals("Connection refused", metric.routes.get("http://localhost:0000").get(0).e.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 150 Método: assertEquals(1, metric.routes.get("http://localhost:0000").size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 165 Método: assertTrue(exTime > 0L)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 177 Método: assertEquals("localhost:4567", map.get("host()"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 178 Método: assertEquals("/sparkle/joy/yippy", map.get("uri()"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 179 Método: assertEquals("http://localhost:4567/sparkle/joy/yippy", map.get("url()"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 180 Método: assertEquals("", map.get("contextPath()"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 181 Método: assertEquals("/sparkle/joy/yippy", map.get("pathInfo()"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/MetricsTest.java linha: 182 Método: assertEquals("food=hamberders&colour=red", map.get("queryString()"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 48 Método: assertSame(Unirest.get(MockServer.GET).asString(), Unirest.get(MockServer.GET).asString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 53 Método: assertNotSame(Unirest.get(MockServer.GET).asString(), Unirest.get(MockServer.GET).asObject(RequestCapture.class))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 58 Método: assertEquals(2, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 62 Método: assertSame(Unirest.get(MockServer.GET).asString(), Unirest.get(MockServer.GET).asString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 67 Método: assertEquals(3, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 74 Método: assertSame(Unirest.get(MockServer.GET).asString(), Unirest.get(MockServer.POST).asString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CachingAlternativeTest.java linha: 79 Método: assertEquals(1, MockServer.timesCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 45 Método: assertTrue(Unirest.config().getObjectMapper() instanceof JsonObjectMapper)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 57 Método: assertEquals("bar", f.bar)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 64 Método: Assertions.assertEquals(200, i.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 65 Método: Assertions.assertEquals(null, i.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 119 Método: assertTrue(mapper.readWasCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 120 Método: assertTrue(mapper.writeWasCalled)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 158 Método: assertNull(request.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 159 Método: Assertions.assertTrue(request.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 160 Método: Assertions.assertEquals("kong.unirest.UnirestException: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'You': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n" + " at [Source: (String)\"You did something bad\"; line: 1, column: 4]", request.getParsingError().get().getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 162 Método: Assertions.assertEquals("You did something bad", request.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 171 Método: assertNull(request.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 172 Método: Assertions.assertTrue(request.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 173 Método: Assertions.assertEquals("kong.unirest.UnirestException: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'You': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n" + " at [Source: (String)\"You did something bad\"; line: 1, column: 4]", request.getParsingError().get().getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 175 Método: Assertions.assertEquals("You did something bad", request.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 183 Método: assertNull(request.getBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 184 Método: Assertions.assertTrue(request.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 185 Método: Assertions.assertEquals("kong.unirest.UnirestException: com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'You': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n" + " at [Source: (String)\"You did something bad\"; line: 1, column: 4]", request.getParsingError().get().getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 187 Método: Assertions.assertEquals("You did something bad", request.getParsingError().get().getOriginalBody())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsObjectTest.java linha: 203 Método: assertEquals(Arrays.asList(1, 2, 3), error.foo)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 69 Método: assertEquals(test.toFile().getPath(), result.getPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 86 Método: assertEquals(test.toFile().getPath(), result.getPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 99 Método: Assertions.assertEquals(test.toFile().getPath(), r.getBody().getPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 114 Método: assertTrue(com.google.common.io.Files.equal(f1, f2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 125 Método: Assertions.assertTrue(f2.getParsingError().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 126 Método: assertTrue(f2.getParsingError().get().getCause().getCause() instanceof FileAlreadyExistsException)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 139 Método: assertEquals(f1, f2)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/AsFileTest.java linha: 154 Método: assertEquals(f1, f2)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CustomClientTest.java linha: 55 Método: Assertions.assertEquals(mock, Unirest.get("http://localhost/getme").asEmpty())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ClientFactoryTest.java linha: 48 Método: assertTrue(ManagementFactory.getThreadMXBean().getThreadCount() < startingCount + 10)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BodyTest.java linha: 43 Método: assertEquals("Tron", part.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BodyTest.java linha: 53 Método: assertNull(b.getField("Movie"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ParamPartTest.java linha: 37 Método: assertFalse(part.isFile())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ParamPartTest.java linha: 42 Método: assertEquals("band=Talking+Heads", part.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ParamPartTest.java linha: 47 Método: assertEquals("Talking Heads", part.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ParamPartTest.java linha: 52 Método: assertEquals("application/x-www-form-urlencoded; charset=UTF-8", part.getContentType())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ParamPartTest.java linha: 57 Método: assertEquals(String.class, part.getPartType())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UniByteArrayBodyTest.java linha: 37 Método: assertFalse(bytes.isFile())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UniByteArrayBodyTest.java linha: 42 Método: assertEquals("[binary data length=0]", bytes.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 57 Método: assertEquals("zombo.com", host.getHostName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 58 Método: assertNull(host.getAddress())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 59 Método: assertEquals(-1, host.getPort())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 60 Método: assertEquals("http", host.getSchemeName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 67 Método: assertEquals("zombo.com", host.getHostName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 68 Método: assertNull(host.getAddress())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 69 Método: assertEquals(8080, host.getPort())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 70 Método: assertEquals("http", host.getSchemeName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 78 Método: assertEquals("zombo.com", host.getHostName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 86 Método: assertEquals("homestarrunner.com", host.getHostName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 87 Método: assertEquals(InetAddress.getByName("127.0.0.1"), host.getAddress())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/BaseApacheClientTest.java linha: 94 Método: assertNull(host)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/UtilTest.java linha: 41 Método: assertTrue(fooCast.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/UtilTest.java linha: 42 Método: assertEquals(foo, fooCast.get())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/UtilTest.java linha: 43 Método: assertFalse(Util.tryCast("foo", Foo.class).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/UtilTest.java linha: 44 Método: assertFalse(Util.tryCast(null, Foo.class).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/UtilTest.java linha: 45 Método: assertTrue(Util.tryCast(new Bar(), Foo.class).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/SecurityConfigTest.java linha: 44 Método: assertEquals(88, manager.getMaxTotal())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/SecurityConfigTest.java linha: 45 Método: assertEquals(42, manager.getDefaultMaxPerRoute())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/ContentTypeTest.java linha: 55 Método: assertEquals(apache.toString(), unirest.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/apache/ContentTypeTest.java linha: 59 Método: assertEquals(apache.toString(), org.apache.http.entity.ContentType.parse(unirest.toString()).toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 37 Método: assertEquals(p, o)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 50 Método: assertEquals(q, w)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 51 Método: assertNotEquals(q, e)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 64 Método: assertEquals(q, w)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 65 Método: assertNotEquals(q, e)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 70 Método: assertEquals("http://somwhere/fruit", new Path("/fruit", "http://somwhere").toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PathTest.java linha: 75 Método: assertEquals("http://somwhere/fruit", new Path("http://somwhere/fruit", "http://elsewhere/rocks").toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 51 Método: assertSame(cache.wrap(client).request(new HttpRequestNoBody(config, GET, "/"), null, Object.class), cache.wrap(client).request(new HttpRequestNoBody(config, GET, "/"), null, Object.class))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 56 Método: assertEquals(1, client.invokes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 61 Método: assertSame(cache.wrapAsync(client).request(new HttpRequestNoBody(config, GET, "/"), null, null, Empty.class), cache.wrapAsync(client).request(new HttpRequestNoBody(config, GET, "/"), null, null, Empty.class))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 66 Método: assertEquals(1, client.invokes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 72 Método: assertNotSame(cache.wrap(client).request(new HttpRequestNoBody(config, GET, "/"), null, Object.class), cache.wrapAsync(client).request(new HttpRequestNoBody(config, GET, "/"), null, null, Object.class))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 77 Método: assertEquals(2, client.invokes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 82 Método: assertNotSame(cache.wrap(client).request(new HttpRequestNoBody(config, GET, "/"), r -> new StringResponse(new TestRawResponse(config), ""), String.class), cache.wrap(client).request(new HttpRequestNoBody(config, GET, "/"), r -> new BasicResponse(new TestRawResponse(config), ""), Empty.class))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CacheManagerTest.java linha: 87 Método: assertEquals(2, client.invokes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UnibodyStringTest.java linha: 39 Método: assertFalse(body.isFile())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UnibodyStringTest.java linha: 44 Método: assertEquals("Hi Mom", body.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UnibodyStringTest.java linha: 49 Método: assertEquals("Hi Mom", body.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UnibodyStringTest.java linha: 54 Método: assertEquals(String.class, body.getPartType())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 72 Método: assertEquals(Config.DEFAULT_CONNECT_TIMEOUT, config.getConnectionTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 77 Método: assertEquals(Config.DEFAULT_SOCKET_TIMEOUT, config.getSocketTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 82 Método: assertEquals(Config.DEFAULT_MAX_CONNECTIONS, config.getMaxConnections())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 87 Método: assertEquals(Config.DEFAULT_MAX_PER_ROUTE, config.getMaxPerRoutes())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 95 Método: assertThrows(UnirestConfigException.class, () -> config.socketTimeout(533))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 96 Método: assertEquals("Http Clients are already built in order to build a new config execute Unirest.config().reset() " + "before changing settings. \n" + "This should be done rarely.", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 108 Método: assertSame(c, config.getAsyncClient().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 109 Método: assertSame(c, config.getAsyncClient().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 114 Método: assertSame(config.getAsyncClient(), config.getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 124 Método: assertNotSame(c, config.getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 145 Método: assertEquals(-1, config.getTTL())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 147 Método: assertEquals(42, config.connectionTTL(42, TimeUnit.MILLISECONDS).getTTL())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 148 Método: assertEquals(2520000, config.connectionTTL(42, TimeUnit.MINUTES).getTTL())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 150 Método: assertEquals(43, config.connectionTTL(Duration.ofMillis(43)).getTTL())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 151 Método: assertEquals(2580000, config.connectionTTL(Duration.ofMinutes(43)).getTTL())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 167 Método: assertThrows(UnirestException.class, Unirest::shutDown)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 168 Método: assertEquals("java.io.IOException 1\n" + "java.lang.RuntimeException 2\n" + "java.io.IOException 4\n" + "java.lang.RuntimeException 5", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 200 Método: assertThrows(UnirestConfigException.class, () -> config.getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 201 Método: assertEquals("Attempted to get a new async client but it was not started. Please ensure it is", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 211 Método: assertSame(c, config.getAsyncClient().getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 220 Método: assertSame(cli, config.getClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 225 Método: assertFalse(config.shouldAddShutdownHook())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 227 Método: assertTrue(config.shouldAddShutdownHook())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 232 Método: assertTrue(config.isRequestCompressionOn())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 234 Método: assertFalse(config.isRequestCompressionOn())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 240 Método: assertTrue(config.isAutomaticRetries())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 242 Método: assertFalse(config.isAutomaticRetries())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 252 Método: assertSame(cli, config.getAsyncClient())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 274 Método: assertThrows(UnirestConfigException.class, () -> config.sslContext(context))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 275 Método: assertEquals("You may only configure a SSLContext OR a Keystore, but not both", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 285 Método: assertThrows(UnirestConfigException.class, () -> config.clientCertificateStore(store, "foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 286 Método: assertEquals("You may only configure a SSLContext OR a Keystore, but not both", ex1.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 288 Método: assertThrows(UnirestConfigException.class, () -> config.clientCertificateStore("/a/path/file.pk12", "foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 289 Método: assertEquals("You may only configure a SSLContext OR a Keystore, but not both", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 294 Método: assertFalse(config.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 296 Método: assertTrue(config.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 301 Método: assertFalse(config.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 303 Método: assertTrue(config.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 307 Método: assertEquals(host, config.getProxy().getHost())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 308 Método: assertEquals(port, config.getProxy().getPort())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 309 Método: assertEquals(username, config.getProxy().getUsername())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 310 Método: assertEquals(password, config.getProxy().getPassword())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ByteArrayPartTest.java linha: 40 Método: assertTrue(part.isFile())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ByteArrayPartTest.java linha: 45 Método: assertEquals("uploadfile=foo.xml", part.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/InputStreamPartTest.java linha: 43 Método: assertTrue(part.isFile())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/InputStreamPartTest.java linha: 48 Método: assertEquals("uploadFile=foo.xml", part.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 41 Método: assertThrows(NullPointerException.class, () -> obj.query((String) null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 42 Método: assertEquals("pointer cannot be null", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 47 Método: assertThrows(IllegalArgumentException.class, () -> obj.query("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 48 Método: assertEquals("a JSON pointer should start with '/' or '#/'", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 53 Método: assertThrows(JSONPointerException.class, () -> obj.query("/shwoop/dedoop"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 54 Método: assertEquals("Path Segment Missing: shwoop", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 59 Método: assertThrows(JSONPointerException.class, () -> obj.query("/foo/5"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 60 Método: assertEquals("index 5 is out of bounds - the array has 2 elements", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 65 Método: assertThrows(JSONPointerException.class, () -> obj.query("/foo/bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 66 Método: assertEquals("bar is not an array index", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 72 Método: assertThrows(NullPointerException.class, () -> new JSONPointer((String) null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 73 Método: assertEquals("pointer cannot be null", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 78 Método: assertEquals("/foo/g~0h/baz", new JSONPointer("/foo/g~h/baz").toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 79 Método: assertEquals("/foo/g~0h/baz", JSONPointer.compile("/foo/g~h/baz").toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 84 Método: assertEquals("#/foo/g%7Eh/baz", new JSONPointer("/foo/g~h/baz").toURIFragment())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 89 Método: assertNull(obj.query("/derpa"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 104 Método: assertEquals("bar", obj.query("/foo/0").toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 109 Método: assertEquals(0, obj.query("/"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 114 Método: assertEquals(1, obj.query("/a~1b"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 119 Método: assertEquals(2, obj.query("/c%d"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 124 Método: assertEquals(3, obj.query("/e^f"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 129 Método: assertEquals(4, obj.query("/g|h"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 134 Método: assertEquals(5, obj.query("/i\\j"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 139 Método: assertEquals(6, obj.query("/k\"l"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 144 Método: assertEquals(7, obj.query("/ "))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 149 Método: assertEquals(8, obj.query("/m~0n"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 154 Método: assertEquals(true, obj.query("/cucu/0/banana/pants"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 167 Método: assertEquals(new JSONPointer("/foo/4/n~0t/bar/1").toString(), pointer.toString())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 172 Método: JSONAssert.assertEquals(s, obj.query(s2).toString(), true)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 53 Método: assertEquals(true, o.optBoolean("aBoolean"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 54 Método: assertEquals("Wakk Wakka", o.optString("aSillyString"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 55 Método: assertEquals(42, o.optNumber("aNumber"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 56 Método: assertNotNull(o.optJSONObject("aSub"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 62 Método: assertTrue(o.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 64 Método: assertFalse(o.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 70 Método: assertTrue(o.isNull("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 72 Método: assertTrue(o.isNull("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 74 Método: assertFalse(o.isNull("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 79 Método: assertThrows(JSONException.class, () -> new JSONObject("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 80 Método: assertEquals("Invalid JSON", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 89 Método: assertTrue(obj.has("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 90 Método: assertEquals(1, obj.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 91 Método: assertEquals(42, obj.getJSONObject("foo").getInt("baz"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 100 Método: assertEquals(33.5d, obj.getDouble("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 105 Método: assertEquals(33.5d, obj.optDouble("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 106 Método: assertEquals(66.6d, obj.optDouble("boo", 66.6d), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 107 Método: assertEquals(Double.NaN, obj.optDouble("boo"), 4)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 114 Método: assertEquals("{\"key1\":\"value\",\"key2\":null}", obj.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 120 Método: assertEquals("{\"status\":\"OK\",\"message\":\"hive_1597818501335\"}", jsonObject.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 127 Método: assertEquals("{\n" + "  \"key1\": \"value\",\n" + "  \"key2\": null\n" + "}", obj.toString(3))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 139 Método: assertEquals(33.5f, obj.getFloat("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 144 Método: assertEquals(33.5f, obj.optFloat("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 145 Método: assertEquals(66.6f, obj.optFloat("boo", 66.6f), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 146 Método: assertEquals(Float.NaN, obj.optFloat("boo"), 4)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 155 Método: assertEquals(Long.MAX_VALUE, obj.getLong("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 160 Método: assertEquals(Long.MAX_VALUE, obj.optLong("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 161 Método: assertEquals(66L, obj.optLong("boo", 66))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 162 Método: assertEquals(0L, obj.optLong("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 171 Método: assertTrue(obj.getBoolean("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 176 Método: assertTrue(obj.optBoolean("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 177 Método: assertTrue(obj.optBoolean("boo", true))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 178 Método: assertFalse(obj.optBoolean("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 187 Método: assertEquals(33, obj.getInt("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 192 Método: assertEquals(33, obj.optInt("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 193 Método: assertEquals(66, obj.optInt("boo", 66))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 194 Método: assertEquals(0, obj.optInt("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 203 Método: assertEquals(tt, obj.getNumber("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 208 Método: assertEquals(tt, obj.optNumber("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 209 Método: assertEquals(66, obj.optNumber("boo", 66))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 210 Método: assertEquals(0, obj.optNumber("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 219 Método: assertEquals(BigInteger.valueOf(33), obj.getBigInteger("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 222 Método: assertEquals(BigInteger.valueOf(33), obj.optBigInteger("key", BigInteger.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 223 Método: assertEquals(BigInteger.TEN, obj.optBigInteger("boo", BigInteger.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 234 Método: assertEquals(value, obj.getBigDecimal("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 237 Método: assertEquals(value, obj.optBigDecimal("key", BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 238 Método: assertEquals(BigDecimal.TEN, obj.optBigDecimal("boo", BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 248 Método: assertEquals("cheese", obj.getString("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 250 Método: assertEquals("45", obj.getString("not"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 251 Método: assertEquals("cheese", obj.optString("key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 252 Método: assertEquals("logs", obj.optString("boo", "logs"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 253 Método: assertEquals("", obj.optString("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 268 Método: assertNull(obj.optJSONObject("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 269 Método: assertTrue(subObj.similar(obj.get("key")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 283 Método: assertNull(obj.optJSONArray("boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 284 Método: assertTrue(subObj.similar(obj.get("key")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 293 Método: assertEquals(fruit.orange, obj.getEnum(fruit.class, "key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 295 Método: assertEquals(fruit.orange, obj.optEnum(fruit.class, "key"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 296 Método: assertEquals(fruit.apple, obj.optEnum(fruit.class, "boo", fruit.apple))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 297 Método: assertNull(obj.optEnum(fruit.class, "boo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 307 Método: assertEquals("{\"foo\":42}", obj.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 316 Método: assertEquals("{\n" + "  \"foo\": 42,\n" + "  \"bar\": true\n" + "}", obj.toString(3))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 328 Método: assertEquals(7, obj.getJSONArray("foos").get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 329 Método: assertEquals(7, obj.optJSONArray("foos").get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 330 Método: assertNull(obj.optJSONArray("bars"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 343 Método: assertEquals(str, sw.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 356 Método: assertEquals("{\n" + "  \"foo\": 42,\n" + "  \"bar\": true\n" + "}", sw.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 365 Método: assertEquals(42, obj.remove("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 366 Método: assertNull(obj.remove("nothing"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 367 Método: assertEquals("{\"bar\":true}", obj.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 375 Método: assertEquals(0, obj.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 381 Método: assertEquals(42, obj.get("bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 382 Método: assertSame(obj, obj.put("bar", 33))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 383 Método: assertEquals(33, obj.get("bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 384 Método: assertThrows(NullPointerException.class, () -> obj.put(null, "hi"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 385 Método: assertEquals("key == null", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 391 Método: assertSame(obj, obj.accumulate("bar", 42))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 392 Método: assertEquals(0, obj.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 398 Método: assertSame(obj, obj.accumulate("bar", 33))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 399 Método: assertEquals(2, obj.getJSONArray("bar").length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 400 Método: assertEquals(42, obj.getJSONArray("bar").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 401 Método: assertEquals(33, obj.getJSONArray("bar").get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 406 Método: assertThrows(NullPointerException.class, () -> new JSONObject().accumulate(null, "hi"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 407 Método: assertEquals("Null key.", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 413 Método: assertSame(obj, obj.append("bar", 42))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 415 Método: assertEquals(2, obj.getJSONArray("bar").length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 416 Método: assertEquals(42, obj.getJSONArray("bar").get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 417 Método: assertEquals(33, obj.getJSONArray("bar").get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 422 Método: assertThrows(NullPointerException.class, () -> new JSONObject().append(null, "hi"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 423 Método: assertEquals("Null key.", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 429 Método: assertSame(obj, obj.put("bar", "not"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 430 Método: assertThrows(JSONException.class, () -> obj.append("bar", 33))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 431 Método: assertEquals("JSONObject[\"bar\"] is not a JSONArray.", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 437 Método: assertSame(obj, obj.increment("cool-beans"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 438 Método: assertEquals(1, obj.get("cool-beans"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 442 Método: assertEquals(4, obj.get("cool-beans"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 448 Método: assertSame(obj, obj.put("cool-beans", 1.5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 450 Método: assertEquals(2.5, obj.get("cool-beans"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 457 Método: assertSame(obj, obj.putOnce("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 459 Método: assertEquals("bar", obj.getString("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 465 Método: assertSame(obj, obj.putOpt("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 468 Método: assertEquals("bar", obj.get("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 470 Método: assertEquals("qux", obj.get("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 479 Método: assertEquals(exp, obj.keySet())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 480 Método: assertEquals(exp, newHashSet(obj.keys()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 487 Método: assertTrue(obj1.similar(obj2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 489 Método: assertFalse(obj1.similar(obj2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 495 Método: assertEquals(42, obj.query("/a/b"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 503 Método: assertEquals(55, map.get("baz"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 504 Método: assertEquals(21474836475L, map.get("qux"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 506 Método: assertEquals(42, sub.get("bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 513 Método: assertEquals(newHashSet("foo", "bar", "baz"), newHashSet(names.toList()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 523 Método: assertNull(o.toJSONArray(new JSONArray()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 525 Método: assertEquals(new JSONArray(asList("bar", 42)), o.toJSONArray(new JSONArray(asList("foo", "baz"))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 528 Método: assertEquals(new JSONArray(asList(null, null)), new JSONObject().toJSONArray(new JSONArray(asList("foo", "baz"))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 536 Método: assertEquals("{\"foo\":[1,2,3]}", o.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 543 Método: assertEquals("{\"foo\":{\"baz\":42}}", o.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 549 Método: assertSame(JSONObject.NULL, JSONObject.stringToValue("null"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 550 Método: assertEquals(true, JSONObject.stringToValue("true"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 551 Método: assertEquals(false, JSONObject.stringToValue("false"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 552 Método: assertEquals(42, JSONObject.stringToValue("42"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 553 Método: assertEquals(45.25, JSONObject.stringToValue("45.25"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 554 Método: assertEquals(-45.25, JSONObject.stringToValue("-45.25"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 559 Método: assertEquals("\"\\\"foo\\\"hoo\"", JSONObject.quote("\"foo\"hoo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 566 Método: assertEquals("\"\\\"foo\\\"hoo\"", quote.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 571 Método: assertEquals(42, JSONObject.wrap(42))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 572 Método: assertEquals(42.5, JSONObject.wrap(42.5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 573 Método: assertSame(JSONObject.NULL, JSONObject.wrap(null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 574 Método: assertEquals(true, JSONObject.wrap(true))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 579 Método: assertTrue(new JSONArray(asList(1, 2, 3)).similar(JSONObject.wrap(asList(1, 2, 3))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 580 Método: assertTrue(new JSONArray(asList(1, 2, 3)).similar(JSONObject.wrap(new int[] { 1, 2, 3 })))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 581 Método: assertTrue(new JSONObject(of("f", 1)).similar(JSONObject.wrap(of("f", 1))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 582 Método: assertTrue(new JSONObject().similar(JSONObject.wrap(new Foo("hi"))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 587 Método: assertEquals("42", JSONObject.doubleToString(42))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 588 Método: assertEquals("42.5643", JSONObject.doubleToString(42.5643))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 593 Método: assertEquals("42", JSONObject.numberToString(42))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 594 Método: assertEquals("42.5643", JSONObject.numberToString(42.5643f))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 599 Método: assertEquals("null", JSONObject.valueToString(null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 600 Método: assertEquals("42", JSONObject.valueToString(42))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 601 Método: assertEquals("42.5643", JSONObject.valueToString(42.5643f))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 602 Método: assertEquals("\"Hello World\"", JSONObject.valueToString("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 603 Método: assertEquals(ImmaJson.HI_MOM, JSONObject.valueToString(new ImmaJson()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 604 Método: assertEquals("{\"bar\":\"me\"}", JSONObject.valueToString(new Foo("me")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 605 Método: assertEquals("{}", JSONObject.valueToString(new JSONObject()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 606 Método: assertEquals("[]", JSONObject.valueToString(new JSONArray()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 611 Método: assertArrayEquals(null, JSONObject.getNames(new JSONObject()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 612 Método: assertArrayEquals(new String[] { "a", "b" }, JSONObject.getNames(new JSONObject(of("a", 1, "b", 2))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 620 Método: assertThrows(JSONException.class, exRunnable)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 621 Método: assertEquals(message, ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 626 Método: JSONAssert.assertEquals(subObj.toString(), value.toString(), true)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 633 Método: assertEquals(o, value)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 634 Método: assertTrue(type.isInstance(o))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 49 Método: assertNull(array.toJSONObject(new JSONArray(Collections.singletonList("foo"))))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 51 Método: assertNull(array.toJSONObject(null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 52 Método: assertNull(array.toJSONObject(new JSONArray()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 58 Método: assertEquals("[1,null]", obj.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 67 Método: assertThrows(JSONException.class, () -> values.toJSONObject(names))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 68 Método: assertEquals("JSONArray[0] not a string.", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 76 Método: assertEquals(1, zipped.get("one"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 77 Método: assertEquals("foo", zipped.get("two"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 78 Método: assertEquals(false, zipped.get("three"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 88 Método: assertEquals("Foo{bar=fooooo}", array.get(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 89 Método: assertEquals("abc", array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 90 Método: assertEquals("{\"foo\":\"bar\"}", array.get(2).toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 99 Método: assertEquals(2, array.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 100 Método: assertEquals("bar", array.getJSONObject(0).getString("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 101 Método: assertEquals(42, array.getJSONObject(1).getInt("baz"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 122 Método: assertEquals(nul, array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 123 Método: assertEquals(num, array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 124 Método: assertEquals(str, array.get(2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 125 Método: assertEquals(bool, array.get(3))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 126 Método: assertEquals(arr, array.get(4))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 127 Método: assertEquals(obj, array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 133 Método: assertSame(obj, obj.put((Number) 33))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 136 Método: assertEquals(33, obj.getNumber(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 140 Método: assertEquals(33, obj.optNumber(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 141 Método: assertEquals(66.6d, obj.optNumber(1, 66.6d))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 142 Método: assertNull(obj.optNumber(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 148 Método: assertSame(obj, obj.put(33.5d))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 151 Método: assertEquals(33.5d, obj.getDouble(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 155 Método: assertEquals(33.5d, obj.optDouble(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 156 Método: assertEquals(66.6d, obj.optDouble(1, 66.6d), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 157 Método: assertEquals(Double.NaN, obj.optDouble(5), 4)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 163 Método: assertSame(obj, obj.put(33.5f))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 166 Método: assertEquals(33.5f, obj.getFloat(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 170 Método: assertEquals(33.5f, obj.optFloat(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 171 Método: assertEquals(66.6f, obj.optFloat(5, 66.6f), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 172 Método: assertEquals(Float.NaN, obj.optFloat(5), 4)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 178 Método: assertSame(obj, obj.put(33L))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 181 Método: assertEquals(33L, obj.getLong(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 185 Método: assertEquals(33L, obj.optLong(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 186 Método: assertEquals(66L, obj.optLong(5, 66))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 187 Método: assertEquals(0L, obj.optLong(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 193 Método: assertSame(obj, obj.put(true))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 197 Método: assertTrue(obj.getBoolean(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 198 Método: assertFalse(obj.getBoolean(2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 202 Método: assertTrue(obj.optBoolean(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 203 Método: assertTrue(obj.optBoolean(5, true))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 204 Método: assertFalse(obj.optBoolean(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 210 Método: assertSame(obj, obj.put(33))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 213 Método: assertEquals(33, obj.getInt(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 217 Método: assertEquals(33, obj.optInt(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 218 Método: assertEquals(66, obj.optInt(5, 66))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 219 Método: assertEquals(0, obj.optInt(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 225 Método: assertSame(obj, obj.put(BigInteger.valueOf(33)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 228 Método: assertEquals(BigInteger.valueOf(33), obj.getBigInteger(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 231 Método: assertEquals(BigInteger.valueOf(33), obj.optBigInteger(0, BigInteger.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 232 Método: assertEquals(BigInteger.TEN, obj.optBigInteger(5, BigInteger.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 239 Método: assertSame(obj, obj.put(value))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 242 Método: assertEquals(value, obj.getBigDecimal(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 245 Método: assertEquals(value, obj.optBigDecimal(0, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 246 Método: assertEquals(BigDecimal.TEN, obj.optBigDecimal(5, BigDecimal.TEN))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 252 Método: assertSame(obj, obj.put("cheese"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 255 Método: assertEquals("cheese", obj.getString(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 257 Método: assertEquals("45", obj.getString(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 258 Método: assertEquals("cheese", obj.optString(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 259 Método: assertEquals("logs", obj.optString(5, "logs"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 260 Método: assertEquals("", obj.optString(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 267 Método: assertSame(obj, obj.put(subObj))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 274 Método: assertNull(obj.optJSONObject(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 281 Método: assertSame(obj, obj.put(subObj))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 291 Método: assertNull(obj.optJSONArray(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 297 Método: assertSame(obj, obj.put(fruit.orange))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 300 Método: assertEquals(fruit.orange, obj.getEnum(fruit.class, 0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 302 Método: assertEquals(fruit.orange, obj.optEnum(fruit.class, 0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 303 Método: assertEquals(fruit.apple, obj.optEnum(fruit.class, 1, fruit.apple))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 304 Método: assertNull(obj.optEnum(fruit.class, 5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 313 Método: assertEquals("33.5, 42, \"foo\", true, \"apple\"", array.join(", "))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 322 Método: assertEquals("[33.5,42,\"foo\",true,\"apple\"]", array.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 331 Método: assertEquals("[\n" + "  33.5,\n" + "  42,\n" + "  \"foo\",\n" + "  true,\n" + "  \"apple\"\n" + "]", array.toString(3))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 349 Método: assertTrue(array.get(0) instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 350 Método: assertTrue(array.get(1) instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 351 Método: assertTrue(array.get(2) instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 352 Método: assertTrue(array.get(3) instanceof JSONObject)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 353 Método: assertTrue(array.get(4) instanceof JSONArray)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 362 Método: assertEquals(2, array.getJSONArray(0).get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 363 Método: assertNull(array.optJSONArray(2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 376 Método: assertEquals(str, sw.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 389 Método: assertEquals("[\n" + "  1,\n" + "  2,\n" + "  3\n" + "]", sw.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 402 Método: assertTrue(remove instanceof JSONObject)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 403 Método: assertEquals(o, remove)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 404 Método: assertEquals(1, array.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 405 Método: assertNull(array.remove(55))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 411 Método: assertNull(array.remove(55))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 426 Método: assertEquals(1, array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 427 Método: assertEquals(Long.MAX_VALUE, array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 428 Método: assertEquals(3.5d, array.get(2))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 429 Método: assertEquals(6.4f, ((Double) array.get(3)).floatValue(), 2)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 430 Método: assertEquals("howdy", array.get(4))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 431 Método: assertEquals("pear", array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 432 Método: assertTrue(new JSONObject(of("foo", 22)).similar(array.get(6)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 433 Método: assertTrue(new JSONArray(asList(1, 2, 3)).similar(array.get(7)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 435 Método: assertEquals("[1,9223372036854775807,3.5,6.4,\"howdy\",\"pear\",{\"foo\":22},[1,2,3]]", array.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 451 Método: assertEquals(1, array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 452 Método: assertEquals(Long.MAX_VALUE, array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 453 Método: assertEquals(3.5d, array.get(2))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 454 Método: assertEquals(6.4f, ((Double) array.get(3)).floatValue(), 2)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 455 Método: assertEquals("howdy", array.get(4))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 456 Método: assertEquals("pear", array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 457 Método: assertTrue(new JSONObject(of("foo", 22)).similar(array.get(6)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 458 Método: assertTrue(new JSONArray(asList(1, 2, 3)).similar(array.get(7)))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 460 Método: assertEquals("[1,9223372036854775807,3.5,6.4,\"howdy\",\"pear\",{\"foo\":22},[1,2,3]]", array.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 467 Método: assertEquals(42, obj.query("/0/a/b"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 476 Método: assertEquals(1, array.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 477 Método: assertEquals(ints, array.getJSONArray(0).toList())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 485 Método: assertEquals(4, array.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 486 Método: assertEquals(ints, array.toList())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 494 Método: assertEquals(4, array.length())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 495 Método: assertEquals(ints, array.toList())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 500 Método: assertThrows(JSONException.class, () -> new JSONArray(new Object()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 501 Método: assertEquals("JSONArray initial value should be a string or collection or array.", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 510 Método: assertFalse(array.isNull(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 511 Método: assertTrue(array.isNull(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 512 Método: assertTrue(array.isNull(2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 513 Método: assertTrue(array.isNull(33))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 521 Método: assertEquals("[\"Hello World\"]", array.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 530 Método: assertTrue(list.contains(i))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 539 Método: assertTrue(a1.equals(a1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 540 Método: assertTrue(a1.equals(a2))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 541 Método: assertFalse(a1.equals("moop"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 542 Método: assertFalse(a1.equals(a3))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 546 Método: assertThrows(JSONException.class, exRunnable)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 547 Método: assertEquals(message, ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 38 Método: assertEquals(HttpMethod.valueOf("GET"), HttpMethod.valueOf("GET"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 39 Método: assertEquals(HttpMethod.GET, HttpMethod.GET)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 40 Método: assertNotEquals(HttpMethod.valueOf("GET"), HttpMethod.valueOf("PUT"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 41 Método: assertNotEquals(HttpMethod.GET, HttpMethod.PUT)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 46 Método: assertEquals(HttpMethod.valueOf("GET"), HttpMethod.valueOf("get"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 52 Método: assertTrue(HttpMethod.all().contains(method))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HttpMethodTest.java linha: 59 Método: assertEquals(HttpMethod.GET.all(), HttpMethod.all())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 48 Método: assertEquals("UTF-8", getCharSet(null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 49 Método: assertEquals("UTF-8", getCharSet(""))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 50 Método: assertEquals("UTF-8", getCharSet("         "))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 51 Método: assertEquals("UTF-8", getCharSet("Content-Type: text/html;"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 52 Método: assertEquals("UTF-8", getCharSet("Content-Type: text/html; charset="))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 57 Método: assertEquals("LATIN-1", getCharSet("Content-Type: text/html; charset=latin-1"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 63 Método: assertEquals("KINGON-1", getCharSet(null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ResponseUtilsTest.java linha: 65 Método: assertEquals("SINDARIN-42", getCharSet(null))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 47 Método: assertEquals("Accepts", h.getName())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 48 Método: assertEquals("application/json", h.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 56 Método: assertEquals(0, h.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 68 Método: assertEquals("a: 1" + ls + "c: 3" + ls + "d: null", toString)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 81 Método: assertEquals(h, j)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 94 Método: assertNotEquals(h, j)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 104 Método: assertEquals("application/json", h.getFirst("Accepts"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeadersTest.java linha: 105 Método: assertEquals("application/xml", h.getFirst("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeaderEntryTest.java linha: 38 Método: assertNotEquals(entry("foo", "qux"), entry("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeaderEntryTest.java linha: 39 Método: assertNotEquals(entry("qux", "bar"), entry("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeaderEntryTest.java linha: 44 Método: assertEquals(entry("foo", "bar"), entry("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeaderEntryTest.java linha: 49 Método: assertEquals(entry("foo", () -> "bar"), entry("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeaderEntryTest.java linha: 50 Método: assertEquals(entry("foo", () -> "bar"), entry("foo", () -> "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/HeaderEntryTest.java linha: 55 Método: assertNull(entry("foo", (Supplier<String>) null).getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UtilTest.java linha: 48 Método: assertEquals(ZonedDateTime.of(2020, 1, 5, 15, 0, 20, 0, ZoneId.of("GMT")), Util.tryParseToDate("Sun, 05-Jan-2020 15:00:20 GMT"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UtilTest.java linha: 54 Método: assertEquals(ZonedDateTime.of(2020, 3, 6, 16, 5, 35, 0, ZoneId.of("GMT")), Util.tryParseToDate("Fri, 06 Mar 2020 16:05:35 GMT"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UtilTest.java linha: 61 Método: assertEquals(ZonedDateTime.of(2020, 1, 5, 15, 0, 20, 0, ZoneId.of("GMT")), Util.tryParseToDate("Sun, 05-Jan-2020 15:00:20 GMT"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UtilTest.java linha: 68 Método: assertEquals(ZonedDateTime.of(2020, 3, 6, 16, 5, 35, 0, ZoneId.of("GMT")), Util.tryParseToDate("Fri, 06 Mar 2020 16:05:35 GMT"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PagedListTest.java linha: 53 Método: assertEquals(Arrays.asList("foo", "bar", "baz"), bodies)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PagedListTest.java linha: 66 Método: assertEquals(Arrays.asList("foo", "baz"), bodies)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PagedListTest.java linha: 80 Método: assertEquals(Arrays.asList("foo", "baz"), processed)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/PagedListTest.java linha: 94 Método: assertNull(processed.get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 56 Método: assertEquals("hello", result)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 58 Método: assertEquals(5, recorder.bytesWritten)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 59 Método: assertEquals(5, recorder.totalBytes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 66 Método: assertEquals(5, recorder.bytesWritten)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 67 Método: assertEquals(5, recorder.totalBytes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 74 Método: assertEquals(5, recorder.bytesWritten)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 75 Método: assertEquals(5, recorder.totalBytes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 82 Método: assertEquals(5, recorder.bytesWritten)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/MonitoringInputStreamTest.java linha: 83 Método: assertEquals(5, recorder.totalBytes)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 90 Método: assertTrue(r instanceof MockResponse)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 105 Método: assertThrows(UnirestException.class, () -> compound.onFail(e, summary, config))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 108 Método: assertSame(e, u.getCause())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 114 Método: assertEquals(1, compound.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 115 Método: assertTrue(compound.getInterceptors().get(0) instanceof DefaultInterceptor)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 121 Método: assertEquals(0, compound.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 129 Método: assertEquals(2, compound.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 130 Método: assertSame(t1, compound.getInterceptors().get(0))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 131 Método: assertSame(t2, compound.getInterceptors().get(1))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 140 Método: assertEquals(1, compound.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/UriFormatterTest.java linha: 61 Método: assertEquals(s, new BaseRequest(new Config(), HttpMethod.GET, s) {
}.url.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 56 Método: assertEquals("{}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 65 Método: assertEquals("{\"date\":\"1985-07-03T18:00:00.042Z\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 74 Método: assertEquals("{\"date\":\"1985-07-03T00:00:00Z\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 81 Método: assertNull(back.getDate())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 88 Método: assertEquals(489263400042L, back.getDate().getTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 95 Método: assertEquals(489196800000L, back.getDate().getTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 102 Método: assertEquals(489263400000L, back.getDate().getTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 107 Método: assertThrows(UnirestException.class, () -> getTestDate("date", "Leeeeeeeroy Jenkins!"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 108 Método: assertEquals("Could Not Parse as java.util.Date: Leeeeeeeroy Jenkins!", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 115 Método: assertEquals(489263400000L, back.getDate().getTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 122 Método: assertEquals(new Date(42), back.getDate())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 130 Método: assertEquals("{\"calendar\":\"1985-07-03T18:00:00.042Z\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 142 Método: assertEquals("{\"calendar\":\"1985-07-03T00:00:00Z\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 149 Método: assertEquals(489263400042L, back.getCalendar().getTimeInMillis())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 156 Método: assertEquals(489263400000L, back.getCalendar().getTimeInMillis())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 163 Método: assertEquals(489263400000L, back.getCalendar().getTimeInMillis())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 170 Método: assertEquals(489196800000L, back.getCalendar().getTimeInMillis())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 175 Método: assertThrows(UnirestException.class, () -> getTestDate("calendar", "Leeeeeeeroy Jenkins!"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 176 Método: assertEquals("Could Not Parse as java.util.Calendar: Leeeeeeeroy Jenkins!", ex.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 186 Método: assertEquals("{\"zonedDateTime\":\"1985-07-03T18:00:00.042Z\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 193 Método: assertEquals(ZonedDateTime.parse("1985-07-03T18:30:00.042Z"), back.getZonedDateTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 200 Método: assertEquals(ZonedDateTime.parse("1985-07-03T18:30:00.042+02:00"), back.getZonedDateTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 210 Método: assertEquals("{\"localDateTime\":\"1985-07-03T18:00:00.042\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 217 Método: assertEquals(LocalDateTime.parse("1985-07-03T18:00:00.042"), back.getLocalDateTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 224 Método: assertEquals(LocalDateTime.parse("1985-07-03T00:00"), back.getLocalDateTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 234 Método: assertEquals("{\"localDate\":\"1985-07-03\"}", actual)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 241 Método: assertEquals(LocalDate.parse("1985-07-03"), back.getLocalDate())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 248 Método: assertEquals(LocalDate.parse("1985-07-03"), back.getLocalDate())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 258 Método: assertEquals("{\"test\":\"it's a && b || c + 1!?\"}", res)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/RetryAfterTest.java linha: 45 Método: assertEquals(1000, parseToMillies("1"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/RetryAfterTest.java linha: 46 Método: assertEquals(10000, parseToMillies("10"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/RetryAfterTest.java linha: 51 Método: assertEquals(1500, parseToMillies("1.5"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/RetryAfterTest.java linha: 52 Método: assertEquals(50, parseToMillies(".05"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/RetryAfterTest.java linha: 59 Método: assertEquals(1000, parseToMillies("Wed, 21 Oct 2015 07:28:01 GMT"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 39 Método: assertFalse(node.isArray())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 40 Método: assertEquals("bar", node.getObject().getString("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 41 Método: assertEquals("bar", node.getArray().getJSONObject(0).getString("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 42 Método: assertEquals(json, node.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 49 Método: assertTrue(node.isArray())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 50 Método: assertEquals("bar", node.getArray().getJSONObject(0).getString("foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 51 Método: assertNull(node.getObject())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 52 Método: assertEquals(json, node.toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 57 Método: assertEquals("{}", new JsonNode("").toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonNodeTest.java linha: 58 Método: assertEquals("{}", new JsonNode(null).toString())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 40 Método: assertEquals(new JsonPatchItem(add, "/foo", "bar"), new JsonPatchItem(add, "/foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 45 Método: assertEquals(new JsonPatchItem(remove, "/foo"), new JsonPatchItem(remove, "/foo"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 50 Método: assertNotEquals(new JsonPatchItem(add, "/foo", "bar"), new JsonPatchItem(add, "/foo", "baz"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 55 Método: assertNotEquals(new JsonPatchItem(add, "/foo", "bar"), new JsonPatchItem(replace, "/foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 60 Método: assertNotEquals(new JsonPatchItem(remove, "/foo"), new JsonPatchItem(remove, "/foo", "baz"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 71 Método: assertEquals(1, s.size())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 77 Método: assertEquals(i, i)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 78 Método: assertNotEquals(null, i)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 79 Método: assertNotEquals(new Object(), i)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 85 Método: assertEquals(add, i.getOp())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 86 Método: assertEquals("/foo", i.getPath())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonPatchItemTest.java linha: 87 Método: assertEquals("bar", i.getValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 60 Método: assertEquals(42, request.getSocketTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 62 Método: assertEquals(111, request.getSocketTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 71 Método: assertEquals(42, request.getConnectTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 73 Método: assertEquals(111, request.getConnectTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 85 Método: assertEquals(111, copy.getSocketTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 86 Método: assertEquals(222, copy.getConnectTimeout())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 96 Método: assertEquals(cp, request.getProxy())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 98 Método: assertEquals("bar", request.getProxy().getHost())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 99 Método: assertEquals(7979, request.getProxy().getPort().intValue())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 104 Método: assertEquals(new TestRequest(GET, "/path"), new TestRequest(GET, "/path"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 112 Método: assertNotEquals(new TestRequest(GET, "/path"), new TestRequest(HttpMethod.HEAD, "/path"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 120 Método: assertNotEquals(new TestRequest(GET, "/path"), new TestRequest(GET, "/derp"))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 128 Método: assertEquals(new TestRequest(of("Accept", "json")), new TestRequest(of("Accept", "json")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 136 Método: assertNotEquals(new TestRequest(of("Accept", "json")), new TestRequest(of("Accept", "xml")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 144 Método: assertNotEquals(new TestRequest(of("Accept", "json")), new TestRequest(of("Accept", "json", "x-header", "cheese")))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 154 Método: assertTrue(ChronoUnit.MILLIS.between(request.getCreationTime(), Instant.now()) < 10)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 164 Método: assertEquals(r1.getCreationTime(), r2.getCreationTime())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/BaseRequestTest.java linha: 170 Método: assertEquals(50L, ChronoUnit.MINUTES.between(r1.getCreationTime(), r3.getCreationTime()))
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/FilePartTest.java linha: 40 Método: assertTrue(part.isFile())
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/FilePartTest.java linha: 45 Método: assertEquals("uploadFile=foo.xml", part.toString())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 73 Método: JSONAssert.assertEquals("{\"text\":\"foo\",\"nmbr\":42,\"another\":{\"text\":\"bar\",\"nmbr\":666,\"another\":null}}", json, true)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 85 Método: assertEquals("foo", test.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 86 Método: assertEquals(42, test.nmbr)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 87 Método: assertEquals("bar", test.another.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 88 Método: assertEquals(666, test.another.nmbr)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 89 Método: assertEquals(null, test.another.another)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 99 Método: assertEquals("foo", test.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 100 Método: assertEquals(42, test.nmbr)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 101 Método: assertEquals("bar", test.another.text)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 102 Método: assertEquals(666, test.another.nmbr)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 103 Método: assertEquals(null, test.another.another)
Assert sem descrição: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 116 Método: assertEquals("com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"something\" (class kong.unirest.jackson.JacksonObjectMapperTest$TestMe), not marked as ignorable (3 known properties: \"another\", \"text\", \"nmbr\"])\n" + " at [Source: (String)\"{\"something\": [1,2,3] }\"; line: 1, column: 16] (through reference chain: kong.unirest.jackson.JacksonObjectMapperTest$TestMe[\"something\"])", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 114 Método: fail("Should have thrown")
Total asserts: 1043
Asserts sem descrição: 988
Asserts com descrição: 55
Assertion Roulette: 706
