
Projeto: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/json/JsonPrinterTest.java linha: 59 Método: assertEquals("{\n" + "    \"serialNumber\": 1234,\n" + "    \"modelYear\": 2013,\n" + "    \"available\": \"T\",\n" + "    \"code\": \"A\",\n" + "    \"someNumbers\": [0, 1, 2, 3, 4],\n" + "    \"vehicleCode\": \"ab\\\"def\",\n" + "    \"extras\": { \"sunRoof\": false, \"sportsPack\": true, \"cruiseControl\": true },\n" + "    \"engine\": \n" + "    {\n" + "        \"capacity\": 2000,\n" + "        \"numCylinders\": 4,\n" + "        \"maxRpm\": 9000,\n" + "        \"manufacturerCode\": \"123\",\n" + "        \"fuel\": \"Petrol\"\n" + "    },\n" + "    \"uuid\": [7, 3],\n" + "    \"cupHolderCount\": 5,\n" + "    \"fuelFigures\": [\n" + "    {\n" + "        \"speed\": 30,\n" + "        \"mpg\": 35.9\n" + "    },\n" + "    {\n" + "        \"speed\": 55,\n" + "        \"mpg\": 49.0\n" + "    },\n" + "    {\n" + "        \"speed\": 75,\n" + "        \"mpg\": 40.0\n" + "    }],\n" + "    \"performanceFigures\": [\n" + "    {\n" + "        \"octaneRating\": 95,\n" + "        \"acceleration\": [\n" + "        {\n" + "            \"mph\": 30,\n" + "            \"seconds\": 4.0\n" + "        },\n" + "        {\n" + "            \"mph\": 60,\n" + "            \"seconds\": 7.5\n" + "        },\n" + "        {\n" + "            \"mph\": 100,\n" + "            \"seconds\": 12.2\n" + "        }]\n" + "    },\n" + "    {\n" + "        \"octaneRating\": 99,\n" + "        \"acceleration\": [\n" + "        {\n" + "            \"mph\": 30,\n" + "            \"seconds\": 3.8\n" + "        },\n" + "        {\n" + "            \"mph\": 60,\n" + "            \"seconds\": 7.1\n" + "        },\n" + "        {\n" + "            \"mph\": 100,\n" + "            \"seconds\": 11.8\n" + "        }]\n" + "    }],\n" + "    \"manufacturer\": \"Honda\",\n" + "    \"model\": \"Civic VTi\",\n" + "    \"activationCode\": \"315\\\\8\"\n" + "}", result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/json/JsonPrinterTest.java linha: 150 Método: assertEquals("{\n" + "    \"login\": \"example\",\n" + "    \"encryptedPassword\": \"0b004061\"\n" + "}", result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 62 Método: assertThat(e.name(), is("biOp"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 63 Método: assertThat(e.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 64 Método: assertThat(e.validValues().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 65 Método: assertThat(e.getValidValue("on").primitiveValue(), is(PrimitiveValue.parse("1", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 66 Método: assertThat(e.getValidValue("off").primitiveValue(), is(PrimitiveValue.parse("0", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 83 Método: assertThat(e.name(), is("Boolean"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 84 Método: assertThat(e.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 85 Método: assertThat(e.validValues().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 86 Método: assertThat(e.getValidValue("True").primitiveValue(), is(PrimitiveValue.parse("1", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 87 Método: assertThat(e.getValidValue("False").primitiveValue(), is(PrimitiveValue.parse("0", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 106 Método: assertThat(e.name(), is("optionalBoolean"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 107 Método: assertThat(e.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 108 Método: assertThat(e.validValues().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 109 Método: assertThat(e.getValidValue("True").primitiveValue(), is(PrimitiveValue.parse("1", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 110 Método: assertThat(e.getValidValue("False").primitiveValue(), is(PrimitiveValue.parse("0", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 111 Método: assertThat(e.nullValue(), is(PrimitiveValue.parse(nullValueStr, PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 129 Método: assertThat(e.name(), is("triOp"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 130 Método: assertThat(e.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 152 Método: assertThat(count, is(3))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 153 Método: assertThat(foundOn, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 154 Método: assertThat(foundOff, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 155 Método: assertThat(foundNotKnown, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 174 Método: assertThat(e.encodingType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 175 Método: assertThat(e.getValidValue("Cee").primitiveValue(), is(PrimitiveValue.parse("C", PrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 176 Método: assertThat(e.getValidValue("One").primitiveValue(), is(PrimitiveValue.parse("1", PrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 177 Método: assertThat(e.getValidValue("Two").primitiveValue(), is(PrimitiveValue.parse("2", PrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 178 Método: assertThat(e.getValidValue("Eee").primitiveValue(), is(PrimitiveValue.parse("E", PrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 192 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/enum", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 208 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/enum", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 224 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/enum", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 239 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/enum", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 254 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/enum", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 269 Método: assertThrows(NumberFormatException.class, () -> parseTestXmlWithMap("/types/enum", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 271 Método: assertEquals("For input string: \"" + value + "\"", exception.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 278 Método: assertThrows(IllegalStateException.class, () -> parse(file, ParserOptions.builder().suppressOutput(true).build()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 280 Método: assertEquals("had 4 errors", exception.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 290 Método: assertNotNull(fields)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 294 Método: assertThat(type.encodingType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EnumTypeTest.java linha: 298 Método: assertThat(type.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 41 Método: assertEquals(filteringVersion, transformedSchema.version())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 68 Método: assertNull(findAndRemove(transformedMessagesCopy, originalMessage, comparing(Message::id)), "Message (" + originalMessage.name() + ") should be removed")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 61 Método: assertNotNull(transformedMessage, "Message (" + originalMessage.name() + ") should be retained")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 74 Método: assertTrue(transformedMessagesCopy.isEmpty(), "Messages should have been removed: " + transformedMessagesCopy)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 82 Método: assertFalse(null == originalFields ^ null == transformedFields)
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 103 Método: assertNull(findAndRemove(transformedFieldsCopy, originalField, comparing(Field::name)), "Field (" + originalField.name() + ") should be removed")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 96 Método: assertNotNull(transformedField, "Field (" + originalField.name() + ") should be retained")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 109 Método: assertTrue(transformedFieldsCopy.isEmpty(), "Fields should have been removed: " + transformedFields)
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 130 Método: assertNull(findAndRemove(transformedTypesCopy, type, comparing(Type::name)), "Type (" + type.name() + ") should be removed")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 124 Método: assertNotNull(findAndRemove(transformedTypesCopy, type, comparing(Type::name)), "Type (" + type.name() + ") should be retained")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SinceVersionSchemaTransformerTest.java linha: 136 Método: assertTrue(transformedTypesCopy.isEmpty(), "Types should have been removed: " + transformedTypesCopy)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 56 Método: assertThat(decimal.name(), is("decimal"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 61 Método: assertThat(mantissa.primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 62 Método: assertThat(exponent.primitiveType(), is(PrimitiveType.INT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 63 Método: assertThat(decimal.encodedLength(), is(9))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 80 Método: assertThat(decimal32.name(), is("decimal32"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 85 Método: assertThat(mantissa.primitiveType(), is(PrimitiveType.INT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 86 Método: assertThat(exponent.primitiveType(), is(PrimitiveType.INT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 87 Método: assertThat(exponent.presence(), is(Presence.CONSTANT))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 88 Método: assertThat(exponent.constVal(), is(PrimitiveValue.parse("-2", PrimitiveType.INT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 89 Método: assertThat(decimal32.encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 106 Método: assertThat(decimal64.name(), is("decimal64"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 110 Método: assertThat(mantissa.primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 111 Método: assertThat(exponent.primitiveType(), is(PrimitiveType.INT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 112 Método: assertThat(exponent.presence(), is(Presence.CONSTANT))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 113 Método: assertThat(exponent.constVal(), is(PrimitiveValue.parse("-2", PrimitiveType.INT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 114 Método: assertThat(decimal64.encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 131 Método: assertThat(c.getTypeList().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 132 Método: assertThat(c.getTypeList().get(0).name(), is("mantissa"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 133 Método: assertThat(c.getTypeList().get(1).name(), is("exponent"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 154 Método: assertThat(mantissa.nullValue(), is(PrimitiveValue.parse(nullValStr, PrimitiveType.INT64)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeTypeTest.java linha: 169 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/composite", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 57 Método: assertThat(t.name(), is("testType"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 58 Método: assertThat(t.presence(), is(Presence.REQUIRED))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 62 Método: assertThat(d.primitiveType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 63 Método: assertThat(d.length(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 64 Método: assertThat(d.isVariableLength(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 81 Método: assertThat(map.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 82 Método: assertThat(map.get("testType1").name(), is("testType1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 83 Método: assertThat(map.get("testType2").name(), is("testType2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 96 Método: assertThat(map.get("testType").name(), is("testType"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 99 Método: assertThat(t.presence(), is(Presence.REQUIRED))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 102 Método: assertThat(d.length(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 103 Método: assertThat(d.isVariableLength(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 119 Método: assertThat(map.get("testTypeDefault").presence(), is(Presence.REQUIRED))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 120 Método: assertThat(map.get("testTypeRequired").presence(), is(Presence.REQUIRED))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 121 Método: assertThat(map.get("testTypeOptional").presence(), is(Presence.OPTIONAL))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 122 Método: assertThat(map.get("testTypeConstant").presence(), is(Presence.CONSTANT))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 133 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/type", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 144 Método: assertThrows(IllegalStateException.class, () -> parseTestXmlWithMap("/types/type", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 155 Método: assertThrows(IllegalStateException.class, () -> parseTestXmlWithMap("/types/type", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 178 Método: assertThat(((EncodedDataType) map.get("testTypeChar")).primitiveType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 179 Método: assertThat(((EncodedDataType) map.get("testTypeInt8")).primitiveType(), is(PrimitiveType.INT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 180 Método: assertThat(((EncodedDataType) map.get("testTypeInt16")).primitiveType(), is(PrimitiveType.INT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 181 Método: assertThat(((EncodedDataType) map.get("testTypeInt32")).primitiveType(), is(PrimitiveType.INT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 182 Método: assertThat(((EncodedDataType) map.get("testTypeInt64")).primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 183 Método: assertThat(((EncodedDataType) map.get("testTypeUInt8")).primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 184 Método: assertThat(((EncodedDataType) map.get("testTypeUInt16")).primitiveType(), is(PrimitiveType.UINT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 185 Método: assertThat(((EncodedDataType) map.get("testTypeUInt32")).primitiveType(), is(PrimitiveType.UINT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 186 Método: assertThat(((EncodedDataType) map.get("testTypeUInt64")).primitiveType(), is(PrimitiveType.UINT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 187 Método: assertThat(((EncodedDataType) map.get("testTypeFloat")).primitiveType(), is(PrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 188 Método: assertThat(((EncodedDataType) map.get("testTypeDouble")).primitiveType(), is(PrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 199 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/type", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 223 Método: assertThat(map.get("testTypeChar").encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 224 Método: assertThat(map.get("testTypeInt8").encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 225 Método: assertThat(map.get("testTypeInt32").encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 226 Método: assertThat(map.get("testTypeInt64").encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 227 Método: assertThat(map.get("testTypeUInt8").encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 228 Método: assertThat(map.get("testTypeUInt16").encodedLength(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 229 Método: assertThat(map.get("testTypeUInt32").encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 230 Método: assertThat(map.get("testTypeUInt64").encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 231 Método: assertThat(map.get("testTypeFloat").encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 232 Método: assertThat(map.get("testTypeDouble").encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 246 Método: assertThat(map.get("testTypeDescription").description(), is(desc))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 260 Método: assertNull(description)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 274 Método: assertThat(map.get("testType").semanticType(), is(semanticType))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 287 Método: assertNull(map.get("testType").semanticType())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 298 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/type", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 313 Método: assertThat((((EncodedDataType) map.get("testTypePresenceConst")).constVal()), is(expectedValue))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 329 Método: assertThat((((EncodedDataType) map.get("testTypeConstString")).constVal()), is(parse(strConst, strConst.length(), "US-ASCII")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 343 Método: assertNull(((EncodedDataType) map.get("testTypeDefaultCharMinValue")).minValue())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 356 Método: assertNull(((EncodedDataType) map.get("testTypeDefaultCharMaxValue")).maxValue())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 369 Método: assertNull(((EncodedDataType) map.get("testTypeDefaultCharNullValue")).nullValue())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 382 Método: assertThat((((EncodedDataType) map.get("testTypeInt8MinValue")).minValue()), is(parse(minVal, PrimitiveType.INT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 397 Método: assertThat((((EncodedDataType) map.get("testTypeInt8MaxValue")).maxValue()), is(parse(maxVal, PrimitiveType.INT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 413 Método: assertThat((((EncodedDataType) map.get("testTypeInt8NullValue")).nullValue()), is(parse(nullVal, PrimitiveType.INT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 428 Método: assertThat((((EncodedDataType) map.get("testTypeCharacterEncoding")).characterEncoding()), is("cp912"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 442 Método: assertThat((((EncodedDataType) map.get("testTypeCharacterEncodingNonChar")).characterEncoding()), is("windows-1251"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EncodedDataTypeTest.java linha: 456 Método: assertThat((((EncodedDataType) map.get("testCharDefaultCharacterEncoding")).characterEncoding()), is("US-ASCII"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CyclicReferencesTest.java linha: 38 Método: assertEquals(ex.getMessage(), "ref types cannot create circular dependencies")
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CyclicReferencesTest.java linha: 42 Método: fail("Expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 37 Método: assertThat(composite.name(), is("structure"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 40 Método: assertThat(compositeType.name(), is("outer"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 48 Método: assertThat(enumType.name(), is("enumOne"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 49 Método: assertThat(encodedDataType.name(), is("zeroth"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 50 Método: assertThat(setType.name(), is("setOne"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 51 Método: assertThat(nestedCompositeType.name(), is("inner"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 58 Método: assertThat(first.name(), is("first"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 59 Método: assertThat(second.name(), is("second"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 61 Método: assertThat(nestedCompositeType.encodedLength(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/CompositeElementsTest.java linha: 62 Método: assertThat(compositeType.encodedLength(), is(22))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 60 Método: assertThat(e.name(), is("biOp"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 61 Método: assertThat(e.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 62 Método: assertThat(e.choices().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 63 Método: assertThat(e.getChoice("Bit1").primitiveValue(), is(PrimitiveValue.parse("1", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 64 Método: assertThat(e.getChoice("Bit0").primitiveValue(), is(PrimitiveValue.parse("0", PrimitiveType.UINT8)))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 83 Método: assertThat(e.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 110 Método: assertThat(count, is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 111 Método: assertThat(foundBit0, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 112 Método: assertThat(foundBit1, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 113 Método: assertThat(foundBit2, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 114 Método: assertThat(foundBit3, is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 128 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/set", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 143 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/set", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 158 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/set", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 173 Método: assertThrows(IllegalArgumentException.class, () -> parseTestXmlWithMap("/types/set", testXmlString))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 184 Método: assertNotNull(fields)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 188 Método: assertThat(type.encodingType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 192 Método: assertThat(type.encodingType(), is(PrimitiveType.UINT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 196 Método: assertThat(type.encodingType(), is(PrimitiveType.UINT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SetTypeTest.java linha: 200 Método: assertThat(type.encodingType(), is(PrimitiveType.UINT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/BasicSchemaFileTest.java linha: 59 Método: assertThat(fields.get(0).name(), is("header"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/BasicSchemaFileTest.java linha: 60 Método: assertThat(fields.get(1).name(), is("EDTField"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/BasicSchemaFileTest.java linha: 61 Método: assertThat(fields.get(2).name(), is("ENUMField"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/BasicSchemaFileTest.java linha: 62 Método: assertThat(fields.get(3).name(), is("SETField"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/BasicSchemaFileTest.java linha: 63 Método: assertThat(fields.get(4).name(), is("int64Field"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EmbeddedLengthAndCountFileTest.java linha: 37 Método: assertThat(fields.get(1).name(), is("ListOrdGrp"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EmbeddedLengthAndCountFileTest.java linha: 38 Método: assertThat(fields.get(1).id(), is(73))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EmbeddedLengthAndCountFileTest.java linha: 39 Método: assertNotNull(fields.get(1).dimensionType())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/EmbeddedLengthAndCountFileTest.java linha: 42 Método: assertNotNull(groupFields)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/RelativeXIncludeTest.java linha: 33 Método: assertNotNull(testResource)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/RelativeXIncludeTest.java linha: 40 Método: assertNotNull(messageSchema.getType("Symbol"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 91 Método: assertThat(handler.errorCount(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 92 Método: assertThat(handler.warningCount(), is(33))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 105 Método: assertEquals("had 2 errors", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 109 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 122 Método: assertEquals("had 1 warning", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 126 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 139 Método: assertEquals("had 1 error", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 143 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 156 Método: assertEquals("had 13 errors", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 160 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 173 Método: assertEquals("had 1 error", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 177 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 190 Método: assertEquals("had 2 errors", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 194 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 207 Método: assertEquals("had 2 errors", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 211 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 224 Método: assertEquals("had 16 warnings", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/ErrorHandlerTest.java linha: 228 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/GroupWithDataTest.java linha: 40 Método: assertThat(entriesGroup.name(), is("Entries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/GroupWithDataTest.java linha: 41 Método: assertThat(dimensionType.name(), is("groupSizeEncoding"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/GroupWithDataTest.java linha: 44 Método: assertThat(varDataField.name(), is("varDataField"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/GroupWithDataTest.java linha: 45 Método: assertTrue(varDataField.isVariableLength())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 40 Método: assertThat(fields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 41 Método: assertThat(fields.get(0).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 42 Método: assertThat(fields.get(1).computedOffset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 43 Método: assertThat(fields.get(1).type().encodedLength(), is(20))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 44 Método: assertThat(fields.get(2).computedOffset(), is(28))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 45 Método: assertThat(fields.get(2).type().encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 46 Método: assertThat(fields.get(3).computedOffset(), is(29))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 47 Método: assertThat(fields.get(3).type().encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 48 Método: assertThat(fields.get(4).computedOffset(), is(33))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 49 Método: assertThat(fields.get(4).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 59 Método: assertThat(fields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 60 Método: assertThat(fields.get(0).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 61 Método: assertThat(fields.get(1).computedOffset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 62 Método: assertThat(fields.get(1).type().encodedLength(), is(20))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 63 Método: assertThat(fields.get(2).computedOffset(), is(32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 64 Método: assertThat(fields.get(2).type().encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 65 Método: assertThat(fields.get(3).computedOffset(), is(128))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 66 Método: assertThat(fields.get(3).type().encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 67 Método: assertThat(fields.get(4).computedOffset(), is(136))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 68 Método: assertThat(fields.get(4).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 78 Método: assertThat(msg.blockLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 81 Método: assertThat(fields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 82 Método: assertThat(fields.get(0).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 83 Método: assertThat(fields.get(1).computedOffset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 84 Método: assertNull(fields.get(1).type())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 87 Método: assertThat(groupFields.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 88 Método: assertThat(groupFields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 89 Método: assertThat(groupFields.get(0).type().encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 90 Método: assertThat(groupFields.get(1).computedOffset(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 91 Método: assertThat(groupFields.get(1).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 101 Método: assertThat(fields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 102 Método: assertThat(fields.get(0).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 103 Método: assertThat(fields.get(1).computedOffset(), is(64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 104 Método: assertNull(fields.get(1).type())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 105 Método: assertThat(fields.get(1).computedBlockLength(), is(12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 109 Método: assertThat(groupFields.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 110 Método: assertThat(groupFields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 111 Método: assertThat(groupFields.get(0).type().encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 112 Método: assertThat(groupFields.get(1).computedOffset(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 113 Método: assertThat(groupFields.get(1).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 123 Método: assertThat(fields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 124 Método: assertThat(fields.get(0).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 125 Método: assertThat(fields.get(1).computedOffset(), is(64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 126 Método: assertNull(fields.get(1).type())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 127 Método: assertThat(fields.get(1).computedBlockLength(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 131 Método: assertThat(groupFields.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 132 Método: assertThat(groupFields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 133 Método: assertThat(groupFields.get(0).type().encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 134 Método: assertThat(groupFields.get(1).computedOffset(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 135 Método: assertThat(groupFields.get(1).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 145 Método: assertThat(fields.get(0).computedOffset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 146 Método: assertThat(fields.get(0).type().encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 147 Método: assertThat(fields.get(1).computedOffset(), is(64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 148 Método: assertThat(fields.get(1).type().encodedLength(), is(-1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 158 Método: assertThat(header.encodedLength(), is(12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/OffsetFileTest.java linha: 168 Método: assertThat(dimensions.encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 28 Método: assertSame(SchemaTransformer.IDENTITY_TRANSFORMER, schemaTransformerFactory.delegate())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 35 Método: assertSame(SchemaTransformer.IDENTITY_TRANSFORMER, schemaTransformerFactory.delegate())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 43 Método: assertInstanceOf(SinceVersionSchemaTransformer.class, delegate)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 46 Método: assertEquals(5, transformer.sinceVersion())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 54 Método: assertInstanceOf(IdKeyedSchemaTransformer.class, delegate)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 59 Método: assertEquals(20, schemaTransformer1.sinceVersion())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 62 Método: assertEquals(32, schemaTransformer4.sinceVersion())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/xml/SchemaTransformerFactoryTest.java linha: 65 Método: assertEquals(5, schemaTransformerDefault.sinceVersion())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/csharp/Issue567GroupSizeTest.java linha: 63 Método: assertThrows(IllegalArgumentException.class, () -> XmlSchemaParser.parse(is, options))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/csharp/Issue567GroupSizeTest.java linha: 90 Método: assertThat(source, containsString(EXPECTED_COUNT_CHECK))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 42 Método: assertThrows(NullPointerException.class, () -> RustUtil.eightBitCharacter(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 48 Método: assertThrows(IllegalArgumentException.class, () -> RustUtil.eightBitCharacter(""))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 54 Método: assertThrows(IllegalArgumentException.class, () -> RustUtil.eightBitCharacter("ABC"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 61 Método: assertEquals('a', (char) aByte)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 62 Método: assertEquals("97", Byte.toString(aByte))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 68 Método: assertEquals("65_u8", generateRustLiteral(CHAR, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 69 Método: assertEquals("64.1_f64", generateRustLiteral(DOUBLE, "64.1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 70 Método: assertEquals("f64::NAN", generateRustLiteral(DOUBLE, "NaN"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 71 Método: assertEquals("64.1_f32", generateRustLiteral(FLOAT, "64.1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 72 Método: assertEquals("f32::NAN", generateRustLiteral(FLOAT, "NaN"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 74 Método: assertEquals("65_i8", generateRustLiteral(INT8, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 75 Método: assertEquals("65_i16", generateRustLiteral(INT16, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 76 Método: assertEquals("65_i32", generateRustLiteral(INT32, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 77 Método: assertEquals("65_i64", generateRustLiteral(INT64, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 79 Método: assertEquals("0x41_u8", generateRustLiteral(UINT8, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 80 Método: assertEquals("0x41_u16", generateRustLiteral(UINT16, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 81 Método: assertEquals("0x41_u32", generateRustLiteral(UINT32, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 82 Método: assertEquals("0x41_u64", generateRustLiteral(UINT64, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 88 Método: assertEquals("0xff_u8", generateRustLiteral(UINT8, UINT8.nullValue().toString()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 89 Método: assertEquals("0xffff_u16", generateRustLiteral(UINT16, UINT16.nullValue().toString()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 90 Método: assertEquals("0xffffffff_u32", generateRustLiteral(UINT32, UINT32.nullValue().toString()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 91 Método: assertEquals("0xffffffffffffffff_u64", generateRustLiteral(UINT64, UINT64.nullValue().toString()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 97 Método: assertThrows(NullPointerException.class, () -> generateRustLiteral(null, "65"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 103 Método: assertThrows(NullPointerException.class, () -> generateRustLiteral(INT8, null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 109 Método: assertEquals("ABee", cleanUpperAcronyms("ABee"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 110 Método: assertEquals("mdEntryTypeBook", cleanUpperAcronyms("MDEntryTypeBook"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 111 Método: assertEquals("MD_EntryTypeBook", cleanUpperAcronyms("MD_EntryTypeBook"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 112 Método: assertEquals("price9Book", cleanUpperAcronyms("PRICE9Book"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 118 Método: assertEquals("", formatFunctionName(""))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 119 Método: assertEquals("a", formatFunctionName("a"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 120 Método: assertEquals("a", formatFunctionName("A"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 121 Método: assertEquals("car", formatFunctionName("Car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 122 Método: assertEquals("car", formatFunctionName("car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 123 Método: assertEquals("decode_car", formatFunctionName("DecodeCar"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 124 Método: assertEquals("decode_car", formatFunctionName("decodeCar"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 125 Método: assertEquals("decode_car", formatFunctionName("decode_car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 126 Método: assertEquals("decode_car", formatFunctionName("Decode_car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 127 Método: assertEquals("decode_car", formatFunctionName("decode_Car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 128 Método: assertEquals("decode_car", formatFunctionName("Decode_Car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 129 Método: assertEquals("decode_car", formatFunctionName("DECODE_Car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 130 Método: assertEquals("decode_car", formatFunctionName("DECODE_car"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 131 Método: assertEquals("decode_car", formatFunctionName("DECODECar"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 132 Método: assertEquals("decode_car", formatFunctionName("DECODE_CAR"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 133 Método: assertEquals("decode_ca_r", formatFunctionName("DECODE_caR"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 136 Método: assertEquals("pricenull_9", formatFunctionName("PRICENULL9"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 137 Método: assertEquals("price_9_book", formatFunctionName("PRICE9Book"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 138 Método: assertEquals("issue_435", formatFunctionName("issue435"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 139 Método: assertEquals("upper_case", formatFunctionName("UPPERCase"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 140 Método: assertEquals("no_md_entries", formatFunctionName("NoMDEntries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 141 Método: assertEquals("md_entry_type_book", formatFunctionName("MD_EntryTYPEBook"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 142 Método: assertEquals("cl_ord_id", formatFunctionName("ClOrdID"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 143 Método: assertEquals("ab_c", formatFunctionName("aBc"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 144 Método: assertEquals("ab_cd", formatFunctionName("aBcD"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 145 Método: assertEquals("ab_cd", formatFunctionName("aB_cD"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/rust/RustUtilTest.java linha: 146 Método: assertEquals("ab_cd", formatFunctionName("AbCd"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/NullEnumTypedTest.java linha: 63 Método: assertThat(source, containsString("NULL_VAL((short)0);"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/NullEnumTypedTest.java linha: 64 Método: assertThat(source, containsString("case 0: return NULL_VAL;"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SinceVersionTransformedSchemaJavaGenerationTest.java linha: 58 Método: assertTrue(containsCodeWithSinceVersion(sources, versionIncluded))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SinceVersionTransformedSchemaJavaGenerationTest.java linha: 59 Método: assertTrue(doesNotContainsCodeWithSinceVersion(sources, versionExcluded))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/ToStringTest.java linha: 37 Método: assertEquals("[Car]" + "(sbeTemplateId=1|sbeSchemaId=1|sbeSchemaVersion=2|sbeBlockLength=62):" + "serialNumber=1234|modelYear=2013|available=T|code=A|" + "someNumbers=[0,1,2,3,4]|" + "vehicleCode=ab\"def|" + "extras={sportsPack,cruiseControl}|" + "engine=(capacity=2000|numCylinders=4|manufacturerCode=123|)|" + "uuid=[7,3]|" + "cupHolderCount=5|" + "fuelFigures=[" + "(speed=30|mpg=35.9)," + "(speed=55|mpg=49.0)," + "(speed=75|mpg=40.0)]|" + "performanceFigures=[" + "(octaneRating=95|acceleration=[(mph=30|seconds=4.0),(mph=60|seconds=7.5),(mph=100|seconds=12.2)])," + "(octaneRating=99|acceleration=[(mph=30|seconds=3.8),(mph=60|seconds=7.1),(mph=100|seconds=11.8)])]|" + "manufacturer='Honda'|model='Civic VTi'|activationCode='315\\8'", result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/ToStringTest.java linha: 65 Método: assertEquals("[Car]" + "(sbeTemplateId=1|sbeSchemaId=1|sbeSchemaVersion=2|sbeBlockLength=62):" + "serialNumber=0|modelYear=0|available=F|code=NULL_VAL|someNumbers=[0,0,0,0,0]|vehicleCode=|extras={}|" + "engine=(capacity=0|numCylinders=0|manufacturerCode=|)|" + "uuid=[0,0]|cupHolderCount=0|" + "fuelFigures=[]|performanceFigures=[]|manufacturer=''|model=''|activationCode=''", result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 80 Método: assertThat(decodedDataLength, is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 81 Método: assertThat(new String(decodedData, StandardCharsets.US_ASCII), is(" **DATA**   "))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 87 Método: assertThat(decodedDataLength, is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 88 Método: assertThat(new String(decodedData, StandardCharsets.US_ASCII), is(" **DATA     "))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 94 Método: assertThat(decodedDataLength, is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 95 Método: assertThat(new String(decodedData, StandardCharsets.US_ASCII), is(" **DATA\u0000\u0000   "))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 114 Método: assertThat(decodedDataLength, is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 115 Método: assertThat(decodedData.getStringWithoutLengthAscii(0, 12), is(" **DATA**   "))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 121 Método: assertThat(decodedDataLength, is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 122 Método: assertThat(decodedData.getStringWithoutLengthAscii(0, 12), is(" **DATA     "))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 128 Método: assertThat(decodedDataLength, is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 129 Método: assertThat(decodedData.getStringWithoutLengthAscii(0, 12), is(" **DATA\u0000\u0000   "))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/FixedSizeDataGeneratorTest.java linha: 145 Método: assertThat(decodedData.getStringWithoutLengthAscii(0, decodedData.capacity()), is("**DATA**"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 93 Método: assertEquals(100, get(decoderVersion0, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 94 Método: assertEquals(Integer.MIN_VALUE, get(decoderVersion0, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 95 Método: assertNull(get(decoderVersion0, "tag3"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 96 Método: assertThat(get(decoderVersion0, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 97 Método: assertNull(get(decoderVersion0, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 100 Método: assertThat(tag6Value.length(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 102 Método: assertEquals(0, decoderVersion0.getClass().getMethod("tag1SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 103 Método: assertEquals(1, decoderVersion0.getClass().getMethod("tag2SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 104 Método: assertEquals(2, decoderVersion0.getClass().getMethod("tag3SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 105 Método: assertEquals(3, decoderVersion0.getClass().getMethod("tag4SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 106 Método: assertEquals(4, decoderVersion0.getClass().getMethod("tag5SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 107 Método: assertEquals(5, decoderVersion0.getClass().getMethod("tag6SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 112 Método: assertEquals(100, get(decoderVersion1, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 113 Método: assertEquals(200, get(decoderVersion1, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 114 Método: assertNull(get(decoderVersion1, "tag3"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 115 Método: assertThat(get(decoderVersion1, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 116 Método: assertNull(get(decoderVersion1, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 119 Método: assertThat(tag6Value.length(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 124 Método: assertEquals(100, get(decoderVersion2, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 125 Método: assertEquals(200, get(decoderVersion2, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 127 Método: assertNotNull(compositeDecoder2)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 128 Método: assertEquals(300, get(compositeDecoder2, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 129 Método: assertThat(get(decoderVersion2, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 130 Método: assertNull(get(decoderVersion2, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 133 Método: assertThat(tag6Value.length(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 138 Método: assertEquals(100, get(decoderVersion3, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 139 Método: assertEquals(200, get(decoderVersion3, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 141 Método: assertNotNull(compositeDecoder3)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 142 Método: assertEquals(300, get(compositeDecoder3, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 144 Método: assertEquals(enumConstant, get(decoderVersion3, "tag4"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 145 Método: assertNull(get(decoderVersion3, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 148 Método: assertThat(tag6Value.length(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 153 Método: assertEquals(100, get(decoderVersion4, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 154 Método: assertEquals(200, get(decoderVersion4, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 156 Método: assertNotNull(compositeDecoder4)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 157 Método: assertEquals(300, get(compositeDecoder4, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 159 Método: assertEquals(enumConstant, get(decoderVersion4, "tag4"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 161 Método: assertNotNull(setDecoder)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 162 Método: assertEquals(false, get(setDecoder, "firstChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 163 Método: assertEquals(true, get(setDecoder, "secondChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 166 Método: assertThat(tag6Value.length(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 171 Método: assertEquals(100, get(decoderVersion5, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 172 Método: assertEquals(200, get(decoderVersion5, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 174 Método: assertNotNull(compositeDecoder4)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 175 Método: assertEquals(300, get(compositeDecoder4, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 177 Método: assertEquals(enumConstant, get(decoderVersion5, "tag4"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 179 Método: assertNotNull(setDecoder)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 180 Método: assertEquals(false, get(setDecoder, "firstChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 181 Método: assertEquals(true, get(setDecoder, "secondChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 184 Método: assertThat(tag6Value.toString(), is("This is some variable length data"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 220 Método: assertEquals(100, get(decoderVersion0, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 221 Método: assertEquals(Integer.MIN_VALUE, get(decoderVersion0, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 222 Método: assertNull(get(decoderVersion0, "tag3"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 223 Método: assertThat(get(decoderVersion0, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 224 Método: assertNull(get(decoderVersion0, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 226 Método: assertEquals(0, getByteArray(decoderVersion0, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 227 Método: assertEquals("            ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 228 Método: assertEquals(0, getDirectBuffer(decoderVersion0, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 229 Método: assertEquals("            ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 231 Método: assertEquals("", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 233 Método: assertEquals(0, decoderVersion0.getClass().getMethod("tag1SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 234 Método: assertEquals(2, decoderVersion0.getClass().getMethod("tag2SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 235 Método: assertEquals(1, decoderVersion0.getClass().getMethod("tag3SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 236 Método: assertEquals(4, decoderVersion0.getClass().getMethod("tag4SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 237 Método: assertEquals(3, decoderVersion0.getClass().getMethod("tag5SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 238 Método: assertEquals(6, decoderVersion0.getClass().getMethod("tag6SinceVersion").invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 248 Método: assertEquals(100, get(decoderVersion1, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 249 Método: assertEquals(Integer.MIN_VALUE, get(decoderVersion1, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 251 Método: assertNotNull(compositeDecoder2)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 252 Método: assertEquals(300, get(compositeDecoder2, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 253 Método: assertThat(get(decoderVersion1, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 254 Método: assertNull(get(decoderVersion1, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 256 Método: assertEquals(0, getByteArray(decoderVersion1, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 257 Método: assertEquals("            ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 258 Método: assertEquals(0, getDirectBuffer(decoderVersion1, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 259 Método: assertEquals("            ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 261 Método: assertEquals("", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 271 Método: assertEquals(100, get(decoderVersion2, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 272 Método: assertEquals(200, get(decoderVersion2, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 274 Método: assertNotNull(compositeDecoder2)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 275 Método: assertEquals(300, get(compositeDecoder2, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 276 Método: assertThat(get(decoderVersion2, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 277 Método: assertNull(get(decoderVersion2, "tag5"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 279 Método: assertEquals(0, getByteArray(decoderVersion2, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 280 Método: assertEquals("            ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 281 Método: assertEquals(0, getDirectBuffer(decoderVersion2, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 282 Método: assertEquals("            ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 284 Método: assertEquals("", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 294 Método: assertEquals(100, get(decoderVersion3, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 295 Método: assertEquals(200, get(decoderVersion3, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 297 Método: assertNotNull(compositeDecoder3)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 298 Método: assertEquals(300, get(compositeDecoder3, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 299 Método: assertThat(get(decoderVersion3, "tag4").toString(), is("NULL_VAL"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 301 Método: assertNotNull(setDecoder)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 302 Método: assertEquals(false, get(setDecoder, "firstChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 303 Método: assertEquals(true, get(setDecoder, "secondChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 305 Método: assertEquals(0, getByteArray(decoderVersion3, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 306 Método: assertEquals("            ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 307 Método: assertEquals(0, getDirectBuffer(decoderVersion3, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 308 Método: assertEquals("            ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 310 Método: assertEquals("", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 320 Método: assertEquals(100, get(decoderVersion4, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 321 Método: assertEquals(200, get(decoderVersion4, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 323 Método: assertNotNull(compositeDecoder4)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 324 Método: assertEquals(300, get(compositeDecoder4, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 326 Método: assertEquals(enumConstant, get(decoderVersion4, "tag4"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 328 Método: assertNotNull(setDecoder)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 329 Método: assertEquals(false, get(setDecoder, "firstChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 330 Método: assertEquals(true, get(setDecoder, "secondChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 332 Método: assertEquals(0, getByteArray(decoderVersion4, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 333 Método: assertEquals("            ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 334 Método: assertEquals(0, getDirectBuffer(decoderVersion4, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 335 Método: assertEquals("            ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 337 Método: assertEquals("", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 347 Método: assertEquals(100, get(decoderVersion5, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 348 Método: assertEquals(200, get(decoderVersion5, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 350 Método: assertNotNull(compositeDecoder4)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 351 Método: assertEquals(300, get(compositeDecoder4, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 353 Método: assertEquals(enumConstant, get(decoderVersion5, "tag4"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 355 Método: assertNotNull(setDecoder)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 356 Método: assertEquals(false, get(setDecoder, "firstChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 357 Método: assertEquals(true, get(setDecoder, "secondChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 359 Método: assertEquals(0, getByteArray(decoderVersion5, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 360 Método: assertEquals("            ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 361 Método: assertEquals(0, getDirectBuffer(decoderVersion5, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 362 Método: assertEquals("            ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 364 Método: assertEquals("", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 374 Método: assertEquals(100, get(decoderVersion6, "tag1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 375 Método: assertEquals(200, get(decoderVersion6, "tag2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 377 Método: assertNotNull(compositeDecoder4)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 378 Método: assertEquals(300, get(compositeDecoder4, "value"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 380 Método: assertEquals(enumConstant, get(decoderVersion6, "tag4"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 382 Método: assertNotNull(setDecoder)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 383 Método: assertEquals(false, get(setDecoder, "firstChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 384 Método: assertEquals(true, get(setDecoder, "secondChoice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 386 Método: assertEquals(8, getByteArray(decoderVersion6, "getTag6", data, 1, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 387 Método: assertEquals(" **DATA**   ", new String(data, StandardCharsets.US_ASCII))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 388 Método: assertEquals(8, getDirectBuffer(decoderVersion6, "getTag6", dataBuffer, 3, 8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 389 Método: assertEquals("   **DATA** ", dataBuffer.getStringWithoutLengthAscii(0, 12))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 391 Método: assertEquals("**DATA**", dataBuffer.getStringWithoutLengthAscii(0, dataBuffer.capacity()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SchemaExtensionTest.java linha: 430 Método: assertNotNull(aClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 67 Método: assertNotNull(aClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 74 Método: assertNotNull(aClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 96 Método: assertEquals(ir.id(), decodedIr.id())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 97 Método: assertEquals(ir.version(), decodedIr.version())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 98 Método: assertEquals(ir.byteOrder(), decodedIr.byteOrder())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 99 Método: assertEquals(ir.applicableNamespace(), decodedIr.applicableNamespace())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 100 Método: assertEquals(ir.packageName(), decodedIr.packageName())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 101 Método: assertEquals(ir.types().size(), decodedIr.types().size())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateIlinkBinaryTest.java linha: 102 Método: assertEquals(ir.messages().size(), decodedIr.messages().size())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/RewindTest.java linha: 47 Método: assertEquals(passOne, passTwo)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/RewindTest.java linha: 53 Método: assertNotEquals(passOne, partialPassOne)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/RewindTest.java linha: 54 Método: assertEquals(partialPassOne, partialPassTwo)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/RewindTest.java linha: 58 Método: assertEquals(passOne, passThree)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 86 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 112 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 119 Método: assertThat(result, is((int) templateId))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 131 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 135 Método: assertThat(result.toString(), is("T"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 147 Método: assertThat(result, hasToString("B"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 163 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 171 Método: assertThat(result, is(Boolean.TRUE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 192 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 223 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 229 Método: assertThat(capacityResult, is(expectedEngineCapacity))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 232 Método: assertThat(maxRpmResult, is(expectedMaxRpm))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 245 Método: assertNotNull(groupFlyweight)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 247 Método: assertThat(msgFlyweight.toString(), startsWith("[Car]"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 266 Método: assertThat(getLimit(decoder), greaterThan(initialPosition))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 268 Método: assertThat(getCount(groupFlyweight), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 283 Método: assertEquals(expectedSerialNumber, serialNumber)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 301 Método: assertEquals(expectedManufacturer, manufacturer)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 319 Método: assertEquals(expectedEngineCapacity, getCapacity(engineDecoder))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 335 Método: assertFalse(getCruiseControl(extrasDecoder))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 337 Método: assertTrue(getCruiseControl(extrasDecoder))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 354 Método: assertThat(get(decoder, "code"), hasToString("B"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 367 Método: assertThat(get(decoder, "vehicleCode"), is("R11"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 370 Método: assertThat(get(decoder, "vehicleCode"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 373 Método: assertThat(get(decoder, "vehicleCode"), is("R11R12"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 388 Método: assertThat(result.toString(), is("R11"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 393 Método: assertThat(result.toString(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 398 Método: assertThat(result.toString(), is("R11R12"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 412 Método: assertThat(result.toString(), is("Red"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 417 Método: assertThat(result.toString(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 422 Método: assertThat(result.toString(), is("Red and Blue"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 435 Método: assertThat(get(decoder, "vehicleCode"), is("R11"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 438 Método: assertThat(get(decoder, "vehicleCode"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 441 Método: assertThat(get(decoder, "vehicleCode"), is("R11R12"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 454 Método: assertNotNull(minValue)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 455 Método: assertEquals(0, minValue.invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 457 Método: assertNotNull(maxValue)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 458 Método: assertEquals(65534, maxValue.invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 475 Método: assertNotNull(encoderClazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 476 Método: assertTrue(encoderClazz.isAnnotationPresent(Deprecated.class))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 480 Método: assertNotNull(decoderClazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 481 Método: assertTrue(decoderClazz.isAnnotationPresent(Deprecated.class))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 501 Método: assertNotNull(encoderClazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 505 Método: assertNotNull(decoderClazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 508 Método: assertNotNull(sources.get("test.message.schema.common.CarEncoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 509 Método: assertNotNull(sources.get("test.message.schema.common.CarDecoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 510 Método: assertNotNull(sources.get("outside.schema.BooleanType"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 511 Método: assertNotNull(sources.get("outside.schema.DaysEncoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 512 Método: assertNotNull(sources.get("outside.schema.DaysDecoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 513 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".MessageHeaderEncoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 533 Método: assertNotNull(encoderClazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 537 Método: assertNotNull(decoderClazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 540 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".CarEncoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 541 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".CarDecoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 542 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".BooleanType"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 543 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".DaysEncoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 544 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".DaysDecoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 545 Método: assertNotNull(sources.get(ir.applicableNamespace() + ".MessageHeaderEncoder"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 587 Método: assertThrows(IllegalArgumentException.class, () -> new JavaGenerator(ir, "dasdsads", BUFFER_NAME, false, false, false, outputManager))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 595 Método: assertThrows(IllegalArgumentException.class, () -> new JavaGenerator(ir, "java.nio.ByteBuffer", BUFFER_NAME, false, false, false, outputManager))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 603 Método: assertThrows(IllegalArgumentException.class, () -> new JavaGenerator(ir, BUFFER_NAME, "dasdsads", false, false, false, outputManager))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 611 Método: assertThrows(IllegalArgumentException.class, () -> new JavaGenerator(ir, BUFFER_NAME, "java.nio.ByteBuffer", false, false, false, outputManager))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 622 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 633 Método: assertNotNull(readerClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaGeneratorTest.java linha: 644 Método: assertNotNull(clazz)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SkipAndDecodedLengthTest.java linha: 60 Método: assertEquals(initialLimit, rewindLimit)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SkipAndDecodedLengthTest.java linha: 61 Método: assertEquals(readLimit, skipLimit)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SkipAndDecodedLengthTest.java linha: 62 Método: assertEquals(encodedLength, decodedLengthNoRead)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SkipAndDecodedLengthTest.java linha: 63 Método: assertEquals(encodedLength, decodedLengthFullSkip)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SkipAndDecodedLengthTest.java linha: 64 Método: assertEquals(encodedLength, decodedLengthAfterRewind)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/SkipAndDecodedLengthTest.java linha: 65 Método: assertEquals(encodedLength, decodedLengthPartialRead)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/QualifiedYieldTest.java linha: 69 Método: assertNotNull(aClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 67 Método: assertNotNull(aClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 74 Método: assertNotNull(aClass)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 96 Método: assertEquals(ir.id(), decodedIr.id())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 97 Método: assertEquals(ir.version(), decodedIr.version())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 98 Método: assertEquals(ir.byteOrder(), decodedIr.byteOrder())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 99 Método: assertEquals(ir.applicableNamespace(), decodedIr.applicableNamespace())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 100 Método: assertEquals(ir.packageName(), decodedIr.packageName())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 101 Método: assertEquals(ir.types().size(), decodedIr.types().size())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/GenerateFixBinaryTest.java linha: 102 Método: assertEquals(ir.messages().size(), decodedIr.messages().size())
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/PackageOutputManagerTest.java linha: 53 Método: assertTrue(exists)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/JavaOutputManagerTest.java linha: 79 Método: assertTrue(exists)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 68 Método: assertThat(decodeBuffer.getShort(offset), is((short) 22))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 71 Método: assertThat(decodeBuffer.getShort(offset), is((short) 1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 74 Método: assertThat(decodeBuffer.getShort(offset), is((short) 3))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 77 Método: assertThat(decodeBuffer.getShort(offset), is((short) 0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 80 Método: assertThat(decodeBuffer.getByte(offset), is((byte) 10))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 83 Método: assertThat(decodeBuffer.getByte(offset), is((byte) 42))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 86 Método: assertThat(decodeBuffer.getInt(offset), is(0x00_01_00_00))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 89 Método: assertThat(decodeBuffer.getLong(offset), is(101L))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 92 Método: assertThat(decodeBuffer.getLong(offset), is(202L))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 110 Método: assertThat(hdrDecoder.blockLength(), is(22))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 111 Método: assertThat(hdrDecoder.templateId(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 112 Método: assertThat(hdrDecoder.schemaId(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 113 Método: assertThat(hdrDecoder.version(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 115 Método: assertThat(msgDecoder.structure().enumOne(), is(EnumOne.Value10))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 116 Método: assertThat(msgDecoder.structure().zeroth(), is((short) 42))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 117 Método: assertThat(msgDecoder.structure().setOne().bit0(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 118 Método: assertThat(msgDecoder.structure().setOne().bit16(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 119 Método: assertThat(msgDecoder.structure().setOne().bit26(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 120 Método: assertThat(msgDecoder.structure().inner().first(), is(101L))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 121 Método: assertThat(msgDecoder.structure().inner().second(), is(202L))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 123 Método: assertThat(msgDecoder.encodedLength(), is(22))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 133 Método: assertThat(compositeString, containsString("enumOne="))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 134 Método: assertThat(compositeString, not(containsString("enumOne=|")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 135 Método: assertThat(compositeString, containsString("setOne="))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 136 Método: assertThat(compositeString, not(containsString("setOne=|")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 154 Método: assertThat(otfHeaderDecoder.getBlockLength(decodeBuffer, 0), is(22))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 155 Método: assertThat(otfHeaderDecoder.getSchemaId(decodeBuffer, 0), is(3))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 156 Método: assertThat(otfHeaderDecoder.getTemplateId(decodeBuffer, 0), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CompositeElementsGenerationTest.java linha: 157 Método: assertThat(otfHeaderDecoder.getSchemaVersion(decodeBuffer, 0), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/ConstantCharArrayTest.java linha: 60 Método: assertThat(sources, containsString(expectedOne))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/ConstantCharArrayTest.java linha: 67 Método: assertThat(sources, containsString(expectedTwo))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/ConstantCharArrayTest.java linha: 74 Método: assertThat(sources, containsString(expectedThree))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/ConstantCharArrayTest.java linha: 81 Método: assertThat(sources, containsString(expectedFour))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 142 Método: assertThat(encoderSources, not(containsString("java.io.UnsupportedEncodingException")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 143 Método: assertThat(encoderSources, not(containsString("new byte[0]")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 148 Método: assertThat(encoderSources, containsString("getBytes(java.nio.charset.StandardCharsets." + charset + ")"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 152 Método: assertThat(encoderSources, containsString("getBytes(java.nio.charset.Charset.forName(\"custom-encoding\"))"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 153 Método: assertThat(encoderSources, containsString("getBytes(java.nio.charset.Charset.forName(\"ISO-8859-2\"))"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 154 Método: assertThat(encoderSources, allOf(not(containsString("\"cp912\"")), not(containsString("\"CP912\""))))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 157 Método: assertThat(encoderSources.substring(encodeFromStringStartIndex, encodeFromStringEndIndex), containsString("final byte[] bytes = (null == src || src.isEmpty()) ?" + " org.agrona.collections.ArrayUtil.EMPTY_BYTE_ARRAY :" + " src.getBytes(java.nio.charset.StandardCharsets.ISO_8859_1);"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 162 Método: assertThat(decoderSources, not(containsString("java.io.UnsupportedEncodingException")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 163 Método: assertThat(decoderSources, not(containsString("new byte[0]")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 166 Método: assertThat(decoderSources, containsString("end, java.nio.charset.StandardCharsets." + charset + ")"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 168 Método: assertThat(decoderSources, containsString("end, java.nio.charset.Charset.forName(\"custom-encoding\"))"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 169 Método: assertThat(decoderSources, containsString("end, java.nio.charset.Charset.forName(\"ISO-8859-2\"))"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 170 Método: assertThat(decoderSources, allOf(not(containsString("\"cp912\"")), not(containsString("\"CP912\""))))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/java/CharacterEncodingTest.java linha: 193 Método: assertThat(sources, containsString(expectedOne))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/cpp/CppGeneratorTest.java linha: 47 Método: assertThat(source, not(containsString("1u << ")))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/generation/cpp/CppGeneratorTest.java linha: 48 Método: assertThat(source, containsString("UINT64_C(0x1) << "))
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 50 Método: assertFalse(result, "bit set i = " + i)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 46 Método: assertTrue(result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 67 Método: assertEquals((byte) total, buffer.getByte(bufferIndex))
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 88 Método: assertFalse(result, "bit set i = " + i)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 84 Método: assertTrue(result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 105 Método: assertEquals((short) total, buffer.getShort(bufferIndex, BYTE_ORDER))
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 126 Método: assertFalse(result, "bit set i = " + i)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 122 Método: assertTrue(result)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/codec/java/TypesTest.java linha: 143 Método: assertEquals((int) total, buffer.getInt(bufferIndex, BYTE_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/TargetCodeGeneratorTest.java linha: 31 Método: assertThrows(IllegalArgumentException.class, () -> SbeTool.generate(mock(Ir.class), ".", "none"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/TargetCodeGeneratorTest.java linha: 44 Método: assertEquals(TestTargetLanguage.ir, ir)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/TargetCodeGeneratorTest.java linha: 45 Método: assertEquals(TestTargetLanguage.outputDir, outputDir)
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 42 Método: assertThat(message2.get(fieldOneIndex).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 43 Método: assertThat(message2.get(fieldOneIndex + 1).encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 46 Método: assertThat(message2.get(fieldTwoIndex).offset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 47 Método: assertThat(message2.get(fieldTwoIndex + 1).encodedLength(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 49 Método: assertThat(message2.get(fieldTwoIndex + 2).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 50 Método: assertThat(message2.get(fieldTwoIndex + 2).encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 51 Método: assertThat(message2.get(fieldTwoIndex + 3).offset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 52 Método: assertThat(message2.get(fieldTwoIndex + 3).encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 55 Método: assertThat(message2.get(fieldThreeIndex).offset(), is(24))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 56 Método: assertThat(message2.get(fieldThreeIndex + 1).encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeOffsetsTest.java linha: 58 Método: assertThat(message2.get(0).encodedLength(), is(32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 99 Método: assertThat(decodedIr.id(), is(ir.id()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 100 Método: assertThat(decodedIr.version(), is(ir.version()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 101 Método: assertThat(decodedIr.semanticVersion(), is(ir.semanticVersion()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 102 Método: assertThat(decodedIr.packageName(), is(ir.packageName()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 103 Método: assertThat(decodedIr.namespaceName(), is(ir.namespaceName()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 123 Método: assertThat(tokens.size(), is(ir.headerStructure().tokens().size()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 146 Método: assertThat(decodedIr.messages().size(), is(ir.messages().size()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 151 Método: assertThat(decodedTokenList.size(), is(tokens.size()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 158 Método: assertThat(decodedIr.types().size(), is(ir.types().size()))
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 165 Método: assertThat(name + " token count", decodedTokenList.size(), is(tokens.size()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 175 Método: assertThat(lhs.name(), is(rhs.name()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 176 Método: assertThat(lhs.version(), is(rhs.version()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 177 Método: assertThat(lhs.offset(), is(rhs.offset()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 178 Método: assertThat((long) lhs.id(), is((long) rhs.id()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 179 Método: assertThat(lhs.signal(), is(rhs.signal()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 180 Método: assertThat(lhs.encodedLength(), is(rhs.encodedLength()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 182 Método: assertThat(lhs.encoding().byteOrder(), is(rhs.encoding().byteOrder()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 183 Método: assertThat(lhs.encoding().primitiveType(), is(rhs.encoding().primitiveType()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 184 Método: assertThat(lhs.encoding().presence(), is(rhs.encoding().presence()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 185 Método: assertThat(lhs.encoding().constValue(), is(rhs.encoding().constValue()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 186 Método: assertThat(lhs.encoding().minValue(), is(rhs.encoding().minValue()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 187 Método: assertThat(lhs.encoding().maxValue(), is(rhs.encoding().maxValue()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 188 Método: assertThat(lhs.encoding().nullValue(), is(rhs.encoding().nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 189 Método: assertThat(lhs.encoding().characterEncoding(), is(rhs.encoding().characterEncoding()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 190 Método: assertThat(lhs.encoding().epoch(), is(rhs.encoding().epoch()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 191 Método: assertThat(lhs.encoding().timeUnit(), is(rhs.encoding().timeUnit()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/EncodedIrTest.java linha: 192 Método: assertThat(lhs.encoding().semanticType(), is(rhs.encoding().semanticType()))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 43 Método: assertThat(tokens.size(), is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 46 Método: assertThat(tokens.get(0).signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 47 Método: assertThat(tokens.get(0).name(), is("messageHeader"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 48 Método: assertThat(tokens.get(0).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 49 Método: assertThat(tokens.get(0).encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 50 Método: assertThat(tokens.get(0).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 53 Método: assertThat(tokens.get(1).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 54 Método: assertThat(tokens.get(1).name(), is("blockLength"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 55 Método: assertThat(tokens.get(1).encoding().primitiveType(), is(PrimitiveType.UINT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 56 Método: assertThat(tokens.get(1).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 57 Método: assertThat(tokens.get(1).encodedLength(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 58 Método: assertThat(tokens.get(1).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 59 Método: assertThat(tokens.get(1).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 62 Método: assertThat(tokens.get(2).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 63 Método: assertThat(tokens.get(2).name(), is("templateId"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 64 Método: assertThat(tokens.get(2).encoding().primitiveType(), is(PrimitiveType.UINT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 65 Método: assertThat(tokens.get(2).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 66 Método: assertThat(tokens.get(2).encodedLength(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 67 Método: assertThat(tokens.get(2).offset(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 68 Método: assertThat(tokens.get(2).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 71 Método: assertThat(tokens.get(3).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 72 Método: assertThat(tokens.get(3).name(), is("schemaId"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 73 Método: assertThat(tokens.get(3).encoding().primitiveType(), is(PrimitiveType.UINT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 74 Método: assertThat(tokens.get(3).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 75 Método: assertThat(tokens.get(3).encodedLength(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 76 Método: assertThat(tokens.get(3).offset(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 77 Método: assertThat(tokens.get(3).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 80 Método: assertThat(tokens.get(4).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 81 Método: assertThat(tokens.get(4).name(), is("version"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 82 Método: assertThat(tokens.get(4).encoding().primitiveType(), is(PrimitiveType.UINT16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 83 Método: assertThat(tokens.get(4).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 84 Método: assertThat(tokens.get(4).encodedLength(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 85 Método: assertThat(tokens.get(4).offset(), is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 86 Método: assertThat(tokens.get(4).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 89 Método: assertThat(tokens.get(5).signal(), is(Signal.END_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 90 Método: assertThat(tokens.get(5).name(), is("messageHeader"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 91 Método: assertThat(tokens.get(5).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 92 Método: assertThat(tokens.get(5).encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 93 Método: assertThat(tokens.get(5).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 105 Método: assertThat(tokens.size(), is(5))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 108 Método: assertThat(tokens.get(0).signal(), is(Signal.BEGIN_MESSAGE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 109 Método: assertThat(tokens.get(0).name(), is("TestMessage50001"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 110 Método: assertThat(tokens.get(0).id(), is(50001))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 111 Método: assertThat(tokens.get(0).encodedLength(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 112 Método: assertThat(tokens.get(0).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 115 Método: assertThat(tokens.get(1).signal(), is(Signal.BEGIN_FIELD))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 116 Método: assertThat(tokens.get(1).name(), is("Tag40001"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 117 Método: assertThat(tokens.get(1).id(), is(40001))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 118 Método: assertThat(tokens.get(1).encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 119 Método: assertThat(tokens.get(1).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 122 Método: assertThat(tokens.get(2).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 123 Método: assertThat(tokens.get(2).name(), is("uint32"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 124 Método: assertThat(tokens.get(2).encoding().primitiveType(), is(PrimitiveType.UINT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 125 Método: assertThat(tokens.get(2).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 126 Método: assertThat(tokens.get(2).encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 127 Método: assertThat(tokens.get(2).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 128 Método: assertThat(tokens.get(2).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 131 Método: assertThat(tokens.get(3).signal(), is(Signal.END_FIELD))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 132 Método: assertThat(tokens.get(3).name(), is("Tag40001"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 133 Método: assertThat(tokens.get(3).id(), is(40001))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 134 Método: assertThat(tokens.get(3).encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 135 Método: assertThat(tokens.get(3).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 138 Método: assertThat(tokens.get(4).signal(), is(Signal.END_MESSAGE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 139 Método: assertThat(tokens.get(4).name(), is("TestMessage50001"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 140 Método: assertThat(tokens.get(4).id(), is(50001))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 141 Método: assertThat(tokens.get(4).encodedLength(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 142 Método: assertThat(tokens.get(4).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 155 Método: assertThat(tokens.size(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 157 Método: assertThat(tokens.get(0).signal(), is(Signal.BEGIN_MESSAGE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 158 Método: assertThat(tokens.get(0).name(), is("TestMessage1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 159 Método: assertThat(tokens.get(0).id(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 160 Método: assertThat(tokens.get(0).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 161 Método: assertThat(tokens.get(0).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 163 Método: assertThat(tokens.get(1).signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 164 Método: assertThat(tokens.get(1).name(), is("encryptedNewPassword"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 165 Método: assertThat(tokens.get(1).id(), is(1404))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 166 Método: assertThat(tokens.get(1).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 167 Método: assertThat(tokens.get(1).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 169 Método: assertThat(tokens.get(2).signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 170 Método: assertThat(tokens.get(2).name(), is("varDataEncoding"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 171 Método: assertThat(tokens.get(2).encodedLength(), is(-1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 172 Método: assertThat(tokens.get(2).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 174 Método: assertThat(tokens.get(3).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 175 Método: assertThat(tokens.get(3).name(), is("length"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 176 Método: assertThat(tokens.get(3).encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 177 Método: assertThat(tokens.get(3).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 178 Método: assertThat(tokens.get(3).encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 179 Método: assertThat(tokens.get(3).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 180 Método: assertThat(tokens.get(3).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 182 Método: assertThat(tokens.get(4).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 183 Método: assertThat(tokens.get(4).name(), is("varData"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 184 Método: assertThat(tokens.get(4).encoding().primitiveType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 185 Método: assertThat(tokens.get(4).id(), is(Token.INVALID_ID))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 186 Método: assertThat(tokens.get(4).encodedLength(), is(-1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 187 Método: assertThat(tokens.get(4).offset(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 188 Método: assertThat(tokens.get(4).encoding().byteOrder(), is(ByteOrder.LITTLE_ENDIAN))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 190 Método: assertThat(tokens.get(5).signal(), is(Signal.END_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 191 Método: assertThat(tokens.get(5).name(), is("varDataEncoding"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 192 Método: assertThat(tokens.get(5).encodedLength(), is(-1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 193 Método: assertThat(tokens.get(5).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 195 Método: assertThat(tokens.get(6).signal(), is(Signal.END_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 196 Método: assertThat(tokens.get(6).name(), is("encryptedNewPassword"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 197 Método: assertThat(tokens.get(6).id(), is(1404))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 198 Método: assertThat(tokens.get(6).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 199 Método: assertThat(tokens.get(6).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 201 Método: assertThat(tokens.get(7).signal(), is(Signal.END_MESSAGE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 202 Método: assertThat(tokens.get(7).name(), is("TestMessage1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 203 Método: assertThat(tokens.get(7).id(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 204 Método: assertThat(tokens.get(7).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 205 Método: assertThat(tokens.get(7).offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 225 Método: assertThat(tokens.get(groupIdx).signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 226 Método: assertThat(tokens.get(groupIdx).name(), is("Entries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 227 Método: assertThat(tokens.get(groupIdx).id(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 230 Método: assertThat(tokens.get(dimensionsCompIdx).signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 231 Método: assertThat(tokens.get(dimensionsCompIdx).name(), is("groupSizeEncoding"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 234 Método: assertThat(tokens.get(dimensionsBlEncIdx).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 235 Método: assertThat(tokens.get(dimensionsBlEncIdx).name(), is("blockLength"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 238 Método: assertThat(tokens.get(dimensionsNigEncIdx).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 239 Método: assertThat(tokens.get(dimensionsNigEncIdx).name(), is("numInGroup"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 257 Método: assertThat(tokens.get(groupIdx).signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 258 Método: assertThat(tokens.get(groupIdx).name(), is("ListOrdGrp"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 259 Método: assertThat(tokens.get(groupIdx).id(), is(73))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 261 Método: assertThat(tokens.get(dimensionsCompIdx).signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 262 Método: assertThat(tokens.get(dimensionsCompIdx).name(), is("groupSizeEncoding"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 264 Método: assertThat(tokens.get(fieldInGroupIdx).signal(), is(Signal.BEGIN_FIELD))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 265 Método: assertThat(tokens.get(fieldInGroupIdx).name(), is("ClOrdID"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 284 Método: assertThat(tokens.get(lengthFieldIdx).signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 285 Método: assertThat(tokens.get(lengthFieldIdx).name(), is("EncryptedPassword"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 286 Método: assertThat(tokens.get(lengthFieldIdx).id(), is(1402))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 289 Método: assertThat(tokens.get(lengthEncIdx).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 290 Método: assertThat(tokens.get(lengthEncIdx).encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 293 Método: assertThat(tokens.get(dataEncIdx).signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/BasicXmlIrGenerationTest.java linha: 294 Método: assertThat(tokens.get(dataEncIdx).encoding().primitiveType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 52 Método: assertThat(fieldToken.signal(), is(Signal.BEGIN_FIELD))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 53 Método: assertThat(fieldToken.name(), is("structure"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 55 Método: assertThat(outerCompositeToken.signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 56 Método: assertThat(outerCompositeToken.name(), is("outer"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 57 Método: assertThat(outerCompositeToken.componentTokenCount(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 59 Método: assertThat(enumToken.signal(), is(Signal.BEGIN_ENUM))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 60 Método: assertThat(enumToken.name(), is("enumOne"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 61 Método: assertThat(enumToken.encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 62 Método: assertThat(enumToken.encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 63 Método: assertThat(enumToken.offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 64 Método: assertThat(enumToken.componentTokenCount(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 66 Método: assertThat(zerothToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 67 Método: assertThat(zerothToken.offset(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 68 Método: assertThat(zerothToken.encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 70 Método: assertThat(setToken.signal(), is(Signal.BEGIN_SET))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 71 Método: assertThat(setToken.name(), is("setOne"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 72 Método: assertThat(setToken.encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 73 Método: assertThat(setToken.encoding().primitiveType(), is(PrimitiveType.UINT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 74 Método: assertThat(setToken.offset(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 75 Método: assertThat(setToken.componentTokenCount(), is(5))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 77 Método: assertThat(innerCompositeToken.signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 78 Método: assertThat(innerCompositeToken.name(), is("inner"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 79 Método: assertThat(innerCompositeToken.offset(), is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 80 Método: assertThat(innerCompositeToken.componentTokenCount(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 82 Método: assertThat(firstToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 83 Método: assertThat(firstToken.name(), is("first"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 84 Método: assertThat(firstToken.offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 85 Método: assertThat(firstToken.encoding().primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 87 Método: assertThat(secondToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 88 Método: assertThat(secondToken.name(), is("second"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 89 Método: assertThat(secondToken.offset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 90 Método: assertThat(secondToken.encoding().primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 92 Método: assertThat(endOuterCompositeToken.signal(), is(Signal.END_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 93 Método: assertThat(endOuterCompositeToken.name(), is("outer"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 114 Método: assertThat(outerCompositeToken.signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 115 Método: assertThat(outerCompositeToken.name(), is("outerWithOffsets"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 116 Método: assertThat(outerCompositeToken.encodedLength(), is(32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 118 Método: assertThat(enumToken.signal(), is(Signal.BEGIN_ENUM))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 119 Método: assertThat(enumToken.encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 120 Método: assertThat(enumToken.encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 121 Método: assertThat(enumToken.offset(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 123 Método: assertThat(zerothToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 124 Método: assertThat(zerothToken.offset(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 125 Método: assertThat(zerothToken.encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 127 Método: assertThat(setToken.signal(), is(Signal.BEGIN_SET))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 128 Método: assertThat(setToken.name(), is("setOne"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 129 Método: assertThat(setToken.encodedLength(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 130 Método: assertThat(setToken.encoding().primitiveType(), is(PrimitiveType.UINT32))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 131 Método: assertThat(setToken.offset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 133 Método: assertThat(innerCompositeToken.signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 134 Método: assertThat(innerCompositeToken.name(), is("inner"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 135 Método: assertThat(innerCompositeToken.offset(), is(16))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 137 Método: assertThat(firstToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 138 Método: assertThat(firstToken.name(), is("first"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 139 Método: assertThat(firstToken.offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 140 Método: assertThat(firstToken.encoding().primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 142 Método: assertThat(secondToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 143 Método: assertThat(secondToken.name(), is("second"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 144 Método: assertThat(secondToken.offset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 145 Método: assertThat(secondToken.encoding().primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 147 Método: assertThat(endOuterCompositeToken.signal(), is(Signal.END_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 148 Método: assertThat(endOuterCompositeToken.name(), is("outerWithOffsets"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 166 Método: assertThat(beginCompositeToken.signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 167 Método: assertThat(beginCompositeToken.name(), is("futuresPrice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 168 Método: assertThat(beginCompositeToken.encodedLength(), is(11))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 170 Método: assertThat(mantissaToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 171 Método: assertThat(mantissaToken.name(), is("mantissa"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 172 Método: assertThat(mantissaToken.offset(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 173 Método: assertThat(mantissaToken.encoding().primitiveType(), is(PrimitiveType.INT64))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 175 Método: assertThat(exponentToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 176 Método: assertThat(exponentToken.name(), is("exponent"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 177 Método: assertThat(exponentToken.offset(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 178 Método: assertThat(exponentToken.encoding().primitiveType(), is(PrimitiveType.INT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 180 Método: assertThat(enumToken.signal(), is(Signal.BEGIN_ENUM))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 181 Método: assertThat(enumToken.encodedLength(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 182 Método: assertThat(enumToken.encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 183 Método: assertThat(enumToken.offset(), is(10))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 185 Método: assertThat(endCompositeToken.signal(), is(Signal.END_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeElementsIrTest.java linha: 186 Método: assertThat(endCompositeToken.name(), is("futuresPrice"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/SinceVersionValidationTest.java linha: 38 Método: assertEquals("had 5 errors", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/SinceVersionValidationTest.java linha: 42 Método: fail("expected IllegalStateException")
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/ValueRefsTest.java linha: 37 Método: assertThat(ir.getMessage(1).get(1).encodedLength(), is(8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/ValueRefsTest.java linha: 38 Método: assertThat(ir.getMessage(2).get(1).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/ValueRefsTest.java linha: 39 Método: assertThat(ir.getMessage(3).get(1).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/ValueRefsTest.java linha: 40 Método: assertThat(ir.getMessage(4).get(1).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/ValueRefsTest.java linha: 41 Método: assertThat(ir.getMessage(5).get(1).encodedLength(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 51 Método: assertThat(groupToken.signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 52 Método: assertThat(groupToken.name(), is("Entries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 53 Método: assertThat(groupToken.id(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 56 Método: assertThat(dimensionsCompToken.signal(), is(Signal.BEGIN_COMPOSITE))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 57 Método: assertThat(dimensionsCompToken.name(), is("groupSizeEncoding"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 60 Método: assertThat(dimensionsBlEncToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 61 Método: assertThat(dimensionsBlEncToken.name(), is("blockLength"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 63 Método: assertThat(varDataFieldToken.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 64 Método: assertThat(varDataFieldToken.name(), is("varDataField"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 65 Método: assertThat(varDataFieldToken.id(), is(5))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 67 Método: assertThat(lengthEncToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 68 Método: assertThat(lengthEncToken.encoding().primitiveType(), is(PrimitiveType.UINT8))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 70 Método: assertThat(dataEncToken.signal(), is(Signal.ENCODING))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 71 Método: assertThat(dataEncToken.encoding().primitiveType(), is(PrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 89 Método: assertThat(groupToken.signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 90 Método: assertThat(groupToken.name(), is("Entries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 91 Método: assertThat(groupToken.id(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 93 Método: assertThat(varDataField1Token.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 94 Método: assertThat(varDataField1Token.name(), is("varDataField1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 95 Método: assertThat(varDataField1Token.id(), is(5))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 97 Método: assertThat(varDataField2Token.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 98 Método: assertThat(varDataField2Token.name(), is("varDataField2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 99 Método: assertThat(varDataField2Token.id(), is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 117 Método: assertThat(groupToken.signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 118 Método: assertThat(groupToken.name(), is("Entries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 119 Método: assertThat(groupToken.id(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 121 Método: assertThat(nestedGroupToken.signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 122 Método: assertThat(nestedGroupToken.name(), is("NestedEntries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 123 Método: assertThat(nestedGroupToken.id(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 125 Método: assertThat(varDataFieldNestedToken.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 126 Método: assertThat(varDataFieldNestedToken.name(), is("varDataFieldNested"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 127 Método: assertThat(varDataFieldNestedToken.id(), is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 129 Método: assertThat(varDataFieldToken.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 130 Método: assertThat(varDataFieldToken.name(), is("varDataField"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 131 Método: assertThat(varDataFieldToken.id(), is(7))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 149 Método: assertThat(groupToken.signal(), is(Signal.BEGIN_GROUP))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 150 Método: assertThat(groupToken.name(), is("Entries"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 151 Método: assertThat(groupToken.id(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 153 Método: assertThat(varDataField1Token.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 154 Método: assertThat(varDataField1Token.name(), is("varDataField1"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 155 Método: assertThat(varDataField1Token.id(), is(5))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 157 Método: assertThat(varDataField2Token.signal(), is(Signal.BEGIN_VAR_DATA))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 158 Método: assertThat(varDataField2Token.name(), is("varDataField2"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/GroupWithDataIrTest.java linha: 159 Método: assertThat(varDataField2Token.id(), is(6))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeRefsTest.java linha: 36 Método: assertNotNull(ir.getType("compositeOne"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeRefsTest.java linha: 37 Método: assertNotNull(ir.getType("compositeTwo"))
Assert sem descrição: /home/vitor-otto/opensource/simple-binary-encoding-1.27.0/sbe-tool/src/test/java/uk/co/real_logic/sbe/ir/CompositeRefsTest.java linha: 38 Método: assertNotNull(ir.getType("compositeThree"))
Total asserts: 937
Asserts sem descrição: 914
Asserts com descrição: 23
Assertion Roulette: 842
