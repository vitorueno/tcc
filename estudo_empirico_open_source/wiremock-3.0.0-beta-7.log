
Projeto: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HeaderMatchingAcceptanceTest.java linha: 39 Método: assertThat(response.statusCode(), is(304))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HeaderMatchingAcceptanceTest.java linha: 52 Método: assertThat(response.statusCode(), is(304))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HeaderMatchingAcceptanceTest.java linha: 61 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HeaderMatchingAcceptanceTest.java linha: 64 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 51 Método: assertThat(metadata.getInt("one"), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 52 Método: assertThat(metadata.getString("two"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 53 Método: assertThat(metadata.getBoolean("three"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 57 Método: assertThat(four.getString("five"), is("55555"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 60 Método: assertThat((Integer) six.get(0), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 76 Método: assertThat(retrievedStub.getId(), is(id))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMetadataAcceptanceTest.java linha: 91 Método: assertThat(listAllStubMappings().getMappings(), not(hasItem(stubMappingWithUrl("/with-metadata"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 54 Método: assertThat(response.firstHeader("Content-Encoding"), is("gzip"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 55 Método: assertThat(response.firstHeader("Transfer-Encoding"), is("chunked"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 56 Método: assertThat(response.headers().containsKey("Content-Length"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 57 Método: assertThat(response.headers().containsKey("Vary"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 62 Método: assertThat(plainText, is("body text"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 74 Método: assertThat(response.firstHeader("Content-Encoding"), is("gzip"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 79 Método: assertThat(plainText, is("body text"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 93 Método: assertThat(response.content(), is("response body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 127 Método: assertThat(response.firstHeader("Content-Encoding"), is("gzip"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 128 Método: assertThat(response.headers().containsKey("Transfer-Encoding"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 129 Método: assertThat(response.firstHeader("Content-Length"), is(String.valueOf(gzip(bodyText).length)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 134 Método: assertThat(plainText, is(bodyText))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 167 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 168 Método: assertThat(response.headers().containsKey("Content-Encoding"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GzipAcceptanceTest.java linha: 171 Método: assertThat(plainText, is(bodyText))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 95 Método: assertTrue(serverMappings.containsAll(returnedMappings), "All of the returned mappings should be present in the server")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 98 Método: assertThat(returnedMappings.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 100 Método: assertThat(returnedMappings.get(0).getRequest().getUrl(), is("/one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 101 Método: assertThat(returnedMappings.get(0).getRequest().getHeaders(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 102 Método: assertThat(returnedMappings.get(0).getRequest().getMethod(), is(RequestMethod.GET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 103 Método: assertThat(returnedMappings.get(0).getResponse().getHeaders().getHeader("Content-Type").firstValue(), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 106 Método: assertThat(returnedMappings.get(0).getResponse().getBody(), is("Number one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 108 Método: assertThat(returnedMappings.get(1).getRequest().getUrl(), is("/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 110 Método: assertThat(returnedMappings.get(2).getRequest().getUrl(), is("/three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 113 Método: assertThat(bodyPattern, instanceOf(EqualToJsonPattern.class))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 114 Método: JSONAssert.assertEquals("{ \"counter\": 55 }", bodyPattern.getExpected(), true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 117 Método: assertThat(equalToJsonPattern.isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 118 Método: assertThat(equalToJsonPattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 135 Método: assertThat(mappings.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 136 Método: assertThat(mappings, everyItem(WireMatchers.stubMappingWithUrl(urlPathMatching("/things.*"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 137 Método: assertThat(mappings, not(hasItem(WireMatchers.stubMappingWithUrl(urlPathMatching("/stuff.*")))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 153 Método: assertThat(mappings.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 154 Método: assertThat(mappings.get(0).getRequest().getUrl(), is("/2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 166 Método: assertThat(mappings.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 167 Método: assertThat(mappings.get(0).getRequest().getUrl(), is("/record-this-anyway"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 168 Método: assertThat(mappings.get(0).getRequest().getBodyPatterns().get(0).getExpected(), WireMatchers.equalToJson("{ \"things\": 123 }"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 184 Método: assertThat(yesValuePattern, instanceOf(EqualToPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 185 Método: assertThat(((EqualToPattern) yesValuePattern).getCaseInsensitive(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 186 Método: assertFalse(mappings.get(0).getRequest().getHeaders().containsKey("No"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 191 Método: assertThat(alsoYesValuePattern, instanceOf(EqualToPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 192 Método: assertThat(((EqualToPattern) alsoYesValuePattern).getCaseInsensitive(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 227 Método: assertThat(mappings.size(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 228 Método: assertThat(WireMatchers.findMappingWithUrl(mappings, "/small/text").getResponse().getBodyFileName(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 231 Método: assertThat(WireMatchers.findMappingWithUrl(mappings, "/large/text").getResponse().getBodyFileName(), containsString("large_text"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 234 Método: assertThat(WireMatchers.findMappingWithUrl(mappings, "/small/binary").getResponse().getBodyFileName(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 237 Método: assertThat(WireMatchers.findMappingWithUrl(mappings, "/large/binary").getResponse().getBodyFileName(), containsString("large_binary"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 248 Método: assertThat(WireMatchers.findMappingWithUrl(mappings, "/transient").isPersistent(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 265 Método: assertThat(client.get("/stateful").content(), is("One"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 266 Método: assertThat(client.get("/stateful").content(), is("Two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 267 Método: assertThat(client.get("/stateful").content(), is("Three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 269 Método: assertThat(mappings, everyItem(WireMatchers.isInAScenario()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 270 Método: assertThat(mappings.get(0).getRequiredScenarioState(), is(Scenario.STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 271 Método: assertThat(mappings.get(1).getRequiredScenarioState(), is("scenario-1-stateful-2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 272 Método: assertThat(mappings.get(2).getRequiredScenarioState(), is("scenario-1-stateful-3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 289 Método: assertThat(mappings.get(0).getResponse().getHeaders().getHeader("X-Key").firstValue(), is("My value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 304 Método: assertThat(jsonBodyPattern.getEqualToJson(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 305 Método: assertThat(jsonBodyPattern.isIgnoreArrayOrder(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 306 Método: assertThat(jsonBodyPattern.isIgnoreExtraElements(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 310 Método: assertThat(xmlBodyPattern.getEqualToXml(), is("<foo/>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 314 Método: assertThat(textBodyPattern.getEqualTo(), is("foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 315 Método: assertThat(textBodyPattern.getCaseInsensitive(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 327 Método: assertThat(bodyPattern.isIgnoreArrayOrder(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 328 Método: assertThat(bodyPattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 337 Método: assertThat(mappings.get(0).getRequest().getBodyPatterns().get(0), instanceOf(EqualToXmlPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 349 Método: assertThat(bodyPattern.getCaseInsensitive(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 360 Método: assertThat(bodyPattern, is(new EqualToJsonPattern("{}", true, true)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 370 Método: assertThat(serverMappings, hasItem(WireMatchers.stubMappingWithUrl("/get-this")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 381 Método: assertThat(serverMappings, hasItem(WireMatchers.stubMappingWithUrl("/get-this")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 382 Método: assertThat(serverMappings, not(hasItem(WireMatchers.stubMappingWithUrl("/but-not-this"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 391 Método: assertThat(serverMappings, hasItem(WireMatchers.stubMappingWithUrl("/get-this-too")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 403 Método: assertThat(serverMappings, hasItem(WireMatchers.stubMappingWithUrl("/get-this")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SnapshotDslAcceptanceTest.java linha: 404 Método: assertThat(serverMappings, not(hasItem(WireMatchers.stubMappingWithUrl("/but-not-this"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 49 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 59 Método: assertThat(good.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 62 Método: assertThat(bad.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 75 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 86 Método: assertThat(good.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 89 Método: assertThat(bad.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 93 Método: assertThat(stub.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 104 Método: assertThat(good.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 107 Método: assertThat(bad.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 111 Método: assertThat(stub.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 123 Método: assertThat(stub.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 126 Método: assertThat(admin.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RequestFilterAcceptanceTest.java linha: 140 Método: assertThat(client.get("/subpath/item").content(), is("From the proxy"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchResultTest.java linha: 44 Método: assertThat(matchResult.getDistance(), is(0.6))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchResultTest.java linha: 56 Método: assertThat(matchResult.isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchResultTest.java linha: 68 Método: assertThat(matchResult.isExactMatch(), is(false))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 45 Método: assertTrue(match.isExactMatch(), "Expected XPath match")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 46 Método: assertThat(match.getDistance(), is(0.0))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 59 Método: assertFalse(match.isExactMatch(), "Expected XPath non-match")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 60 Método: assertThat(match.getDistance(), is(1.0))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 73 Método: assertFalse(match.isExactMatch(), "Expected XPath non-match")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 74 Método: assertThat(match.getDistance(), is(1.0))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 87 Método: assertFalse(match.isExactMatch(), "Expected XPath non-match")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 88 Método: assertThat(match.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 102 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 113 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 122 Método: assertThat(pattern.match(xml).isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 138 Método: assertThat(pattern.match(xml).isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 154 Método: assertThat(pattern.match(xml).getDistance(), closeTo(0.16, 0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 164 Método: assertThat(pattern.match(xml).isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 174 Método: assertThat(pattern.match(xml).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 175 Método: assertThat(pattern.match(xml).getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 185 Método: assertThat(pattern.match(xml).isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 208 Método: assertThat(pattern.match(xml).isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 217 Método: assertThat(pattern.getMatchesXPath(), is("/stuff:outer/stuff:inner[.=111]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 218 Método: assertThat(pattern.getXPathNamespaces(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 233 Método: assertThat(pattern.getXPathNamespaces(), hasEntry("one", "http://one.com/"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 234 Método: assertThat(pattern.getXPathNamespaces(), hasEntry("two", "http://two.com/"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 249 Método: assertThat(pattern.getValuePattern(), instanceOf(RegexPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 250 Método: assertThat(pattern.getExpected(), is("/thing"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 251 Método: assertThat(pattern.getValuePattern().getExpected(), is("[0-9]*"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 265 Método: JSONAssert.assertEquals("{ \"matchesXPath\" : \"//*\" ,   \n" + "  \"xPathNamespaces\" : {                                    \n" + "      \"one\" : \"http://one.com/\",                         \n" + "      \"two\" : \"http://two.com/\"                          \n" + "  }                                                          \n" + "}", json, false)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 283 Método: JSONAssert.assertEquals("{ \"matchesXPath\" : \"//*\" }", json, false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 288 Método: assertThat(Json.write(WireMock.matchingXPath("/thing", containing("123"))), equalToJson("{                                      \n" + "    \"matchesXPath\": {                 \n" + "        \"expression\": \"/thing\",     \n" + "        \"contains\": \"123\"           \n" + "    }                                   \n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesXPathPatternTest.java linha: 301 Método: assertThat(WireMock.matchingXPath("//*").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NotPatternTest.java linha: 33 Método: assertTrue(result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NotPatternTest.java linha: 42 Método: assertFalse(result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NotPatternTest.java linha: 43 Método: assertThat(distance, is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NotPatternTest.java linha: 51 Método: assertTrue(result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 33 Método: assertThat(pattern.match("matchthisbadlydone").getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 39 Método: assertThat(pattern.match("924387348975923").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 45 Método: assertThat(pattern.match("matchthis").getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 51 Método: assertThat(pattern.match("matchthis").isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 61 Método: assertThat(stringValuePattern, instanceOf(EqualToPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 62 Método: assertThat(stringValuePattern.getValue(), is("something"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 75 Método: assertThat(stringValuePattern, instanceOf(EqualToPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 76 Método: assertThat(stringValuePattern.getValue(), is("something"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 77 Método: assertThat(((EqualToPattern) stringValuePattern).getCaseInsensitive(), is(true))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 82 Método: assertEquals("{                               \n" + "  \"equalTo\": \"something\"    \n" + "}", Json.write(new EqualToPattern("something")), false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 97 Método: assertThat(e, instanceOf(JsonException.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 99 Método: assertThat(jsonException.getErrors().first().getDetail(), containsString("{\"munches\":\"something\"} is not a valid match operation"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 95 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToPatternTest.java linha: 107 Método: assertThat(WireMock.equalTo("this_thing").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 42 Método: assertTrue(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 43 Método: assertFalse(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 51 Método: assertTrue(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 52 Método: assertFalse(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 60 Método: assertTrue(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 61 Método: assertFalse(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 82 Método: assertThat(bodyPatterns, everyItem(is(in(pattern.getBodyPatterns()))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 88 Método: assertNull(pattern)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternBuilderTest.java linha: 107 Método: assertThat(bodyPatterns, everyItem(is(in(pattern.getBodyPatterns()))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 40 Método: assertTrue(matcher.match("2022-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 41 Método: assertFalse(matcher.match("2020-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 48 Método: assertTrue(matcher.match("2022-06-14T12:13:14").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 49 Método: assertFalse(matcher.match("2020-06-14T12:13:14").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 56 Método: assertTrue(matcher.match("2022-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 57 Método: assertFalse(matcher.match("2020-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 64 Método: assertTrue(matcher.match("2021-07-01T23:59:59").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 65 Método: assertFalse(matcher.match("2021-06-01T15:15:15").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 74 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 75 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 88 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 89 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 95 Método: assertFalse(matcher.match(null).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 101 Método: assertThat(matcher.match("1971-01-01T00:00:00Z").getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 102 Método: assertThat(matcher.match("1921-01-01T00:00:00Z").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 103 Método: assertThat(matcher.match(null).getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 104 Método: assertThat(matcher.match("2020-01-01T00:00:00Z").getDistance(), is(0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 115 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"after\": \"now -5 days\",\n" + "  \"truncateExpected\": \"last day of month\",\n" + "  \"truncateActual\": \"first day of year\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 136 Método: assertThat(matcher.getExpected(), is("now +0 seconds"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 137 Método: assertThat(matcher.getTruncateExpected(), is("first hour of day"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 138 Método: assertThat(matcher.getTruncateActual(), is("last day of year"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 155 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 156 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 162 Método: assertTrue(matcher.match("2021-01-01T00:00:00Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AfterDateTimePatternTest.java linha: 168 Método: assertTrue(matcher.match("2021-01-01T00:00:00").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 36 Método: assertThat(matcher.getExpected(), is("before 2020-01-01T00:00:00Z OR after 2021-01-01T00:00:00Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 39 Método: assertTrue(matcher.match("2022-06-01T11:22:33Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 40 Método: assertTrue(matcher.match("2019-06-01T11:22:33Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 41 Método: assertFalse(matcher.match("2020-06-01T11:22:33Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 50 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"or\": [\n" + "    {\n" + "      \"before\": \"2020-01-01T00:00:00Z\"\n" + "    },\n" + "    {\n" + "      \"after\": \"2021-01-01T00:00:00Z\"\n" + "    }\n" + "  ]\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 84 Método: assertThat(first, instanceOf(BeforeDateTimePattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 85 Método: assertThat(first.getExpected(), is("2020-01-01T00:00:00Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 87 Método: assertThat(second, instanceOf(AfterDateTimePattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 97 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalOrTest.java linha: 100 Método: assertThat(matchResult.getDistance(), is(expectedDistance))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 43 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 44 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 53 Método: assertThat(matchResult.getDistance(), greaterThan(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 54 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 67 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 68 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 87 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 105 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 124 Método: assertFalse(matchResult.isExactMatch())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 133 Método: JSONAssert.assertEquals("{									                \n" + "		\"method\": \"GET\",						\n" + "		\"url\": \"/my/url\"                		\n" + "}												    ", actualJson, true)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 148 Método: JSONAssert.assertEquals("{									                \n" + "		\"method\": \"GET\",						\n" + "		\"urlPattern\": \"/my/url\"           		\n" + "}												    ", actualJson, true)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 163 Método: JSONAssert.assertEquals("{									                \n" + "		\"method\": \"GET\",						\n" + "		\"urlPathPattern\": \"/my/url\"             \n" + "}												    ", actualJson, true)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 183 Método: JSONAssert.assertEquals(URL_PATH_AND_HEADERS_EXAMPLE, actualJson, true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 210 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 211 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 224 Método: assertThat(matchResult.getDistance(), greaterThan(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 225 Método: assertFalse(matchResult.isExactMatch())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 238 Método: JSONAssert.assertEquals("{                              \n" + "    \"method\": \"GET\",       \n" + "    \"urlPath\": \"/my/url\",  \n" + "    \"queryParameters\": {     \n" + "        \"param1\": {          \n" + "            \"equalTo\": \"1\" \n" + "        },                     \n" + "        \"param2\": {          \n" + "            \"matches\": \"2\" \n" + "        }                      \n" + "    }                          \n" + "}", actualJson, true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 266 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 267 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 282 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 315 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 316 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 339 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 364 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 391 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 392 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 406 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 407 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 419 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 433 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 447 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 472 Método: assertThat(pattern.getBodyPatterns(), hasItems(valuePattern(EqualToPattern.class, "thing"), valuePattern(EqualToJsonPattern.class, "{ \"thing\": 1 }"), valuePattern(MatchesJsonPathPattern.class, "@.*"), valuePattern(EqualToXmlPattern.class, "<thing />"), valuePattern(MatchesXPathPattern.class, "//thing"), valuePattern(ContainsPattern.class, "thin"), valuePattern(NegativeContainsPattern.class, "stuff"), valuePattern(NotPattern.class, containing("thing").expectedValue), valuePattern(RegexPattern.class, ".*thing.*"), valuePattern(NegativeRegexPattern.class, "^stuff.+")))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternTest.java linha: 504 Método: JSONAssert.assertEquals(ALL_BODY_PATTERNS_EXAMPLE, json, true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NegativeContainsPatternTest.java linha: 30 Método: assertTrue(WireMock.notContaining("thing").match("otherstuff").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NegativeContainsPatternTest.java linha: 35 Método: assertTrue(WireMock.notContaining("thing").match(null).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NegativeContainsPatternTest.java linha: 41 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/NegativeContainsPatternTest.java linha: 42 Método: assertThat(matchResult.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AbsentPatternTest.java linha: 34 Método: assertThat(stringValuePattern, instanceOf(AbsentPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/AbsentPatternTest.java linha: 35 Método: assertThat(stringValuePattern.isAbsent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 30 Método: assertThat(pattern.match("/one/3/two").isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 39 Método: assertThat(matchResult.isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 40 Método: assertThat(matchResult.getDistance(), closeTo(0.2, 0.05))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 49 Método: assertThat(matchResult.isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 50 Método: assertThat(matchResult.getDistance(), closeTo(0.9, 0.05))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 59 Método: assertThat(json, jsonEquals("{\n" + "  \"matchesPathTemplate\": \"/one/{first}/two/{second}\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 71 Método: assertThat(pattern, instanceOf(PathTemplatePattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/PathTemplatePatternTest.java linha: 72 Método: assertThat(((PathTemplatePattern) pattern).getPathTemplate().toString(), is("/one/{first}/two/{second}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/ContainsPatternTest.java linha: 30 Método: assertTrue(WireMock.containing("thing").match("mythings").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/ContainsPatternTest.java linha: 36 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/ContainsPatternTest.java linha: 37 Método: assertThat(matchResult.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 37 Método: assertThat(match.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 38 Método: assertThat(match.isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 48 Método: assertThat(match.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 49 Método: assertThat(match.isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 59 Método: assertThat(match.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 60 Método: assertThat(match.isExactMatch(), is(false))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 73 Método: assertEquals(expectedJson, Json.write(new BinaryEqualToPattern(expected)), true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 90 Método: assertThat(pattern, instanceOf(BinaryEqualToPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BinaryEqualToPatternPatternTest.java linha: 91 Método: assertThat(pattern.getExpected(), is(base64Expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 82 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 83 Método: assertThat(matchResult.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 97 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 98 Método: assertThat(matchResult.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 112 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 113 Método: assertThat(matchResult.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 125 Método: assertTrue(pattern.match("<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n" + "<things>\n" + "    <thing characteristic=\"tepid\"/>\n" + "    <thing characteristic=\"tedious\"/>\n" + "</things>").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 145 Método: assertTrue(pattern.match("<things><thing characteristic=\"tepid\"/><thing characteristic=\"tedious\"/></things>").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 163 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 164 Método: assertThat(matchResult.getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 180 Método: assertThat(matchResult.getDistance(), closeTo(0.14, 2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 207 Método: assertThat(match.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 208 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 235 Método: assertThat(match.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 236 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 252 Método: assertFalse(pattern.match("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" + "<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n" + "    <soap:Body>\n" + "        <stuff xmlns=\"https://example.com/the-wrong-namespace\">\n" + "            <things />\n" + "        </stuff>\n" + "    </soap:Body>\n" + "</soap:Envelope>\n").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 270 Método: assertTrue(pattern.match("<my-attribs two=\"2\" one=\"1\" three=\"3\"/>").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 283 Método: assertTrue(pattern.match("<my-elements>\n" + "    <two />\n" + "    <three />\n" + "    <one />\n" + "</my-elements>").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 299 Método: assertThat(matchResult.isExactMatch(), equalTo(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 300 Método: assertThat(matchResult.getDistance(), not(equalTo(0.0)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 316 Método: assertTrue(pattern.match(xmlWithDtdThatCannotBeFetched).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 326 Método: assertThat(equalToXmlPattern.isEnablePlaceholders(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 327 Método: assertThat(equalToXmlPattern.getPlaceholderOpeningDelimiterRegex(), is(placeholderOpeningDelimiterRegex))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 330 Método: assertThat(equalToXmlPattern.getPlaceholderClosingDelimiterRegex(), is(placeholderClosingDelimiterRegex))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 338 Método: assertThat(equalToXmlPattern.isEnablePlaceholders(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 339 Método: assertNull(equalToXmlPattern.getPlaceholderOpeningDelimiterRegex())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 340 Método: assertNull(equalToXmlPattern.getPlaceholderClosingDelimiterRegex())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 350 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 351 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 361 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 362 Método: assertThat(matchResult.getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 370 Método: assertTrue(stringValuePattern instanceof EqualToXmlPattern)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 372 Método: assertThat(equalToXmlPattern.isEnablePlaceholders(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 373 Método: assertThat(equalToXmlPattern.getPlaceholderOpeningDelimiterRegex(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 374 Método: assertThat(equalToXmlPattern.getPlaceholderClosingDelimiterRegex(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 375 Método: assertThat(equalToXmlPattern.getExemptedComparisons(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 398 Método: assertTrue(stringValuePattern instanceof EqualToXmlPattern)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 400 Método: assertEquals(enablePlaceholders, equalToXmlPattern.isEnablePlaceholders())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 401 Método: assertEquals(placeholderOpeningDelimiterRegex, equalToXmlPattern.getPlaceholderOpeningDelimiterRegex())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 403 Método: assertEquals(placeholderClosingDelimiterRegex, equalToXmlPattern.getPlaceholderClosingDelimiterRegex())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 405 Método: assertThat(equalToXmlPattern.getExemptedComparisons(), Matchers.<Set<ComparisonType>>is(ImmutableSet.of(SCHEMA_LOCATION, NAMESPACE_URI, ATTR_VALUE)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 428 Método: assertThat(json, WireMatchers.equalToJson("{\n" + "  \"equalToXml\": \"<stuff />\",\n" + "  \"enablePlaceholders\": true,\n" + "  \"placeholderOpeningDelimiterRegex\": \"[\",\n" + "  \"placeholderClosingDelimiterRegex\": \"]\",\n" + "  \"exemptedComparisons\": [\"SCHEMA_LOCATION\", \"NAMESPACE_URI\", \"ATTR_VALUE\"]\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 456 Método: assertTrue(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToXmlPatternTest.java linha: 479 Método: assertTrue(pattern.match(actual).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 37 Método: assertTrue(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 38 Método: assertFalse(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 58 Método: assertThat(headerPattern, instanceOf(ContainsPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 59 Método: assertThat(headerPattern.getValue(), is("name=\"part1\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 61 Método: assertNull(pattern.getBodyPatterns())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 62 Método: assertTrue(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 63 Método: assertFalse(pattern.isMatchAny())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 81 Método: JSONAssert.assertEquals(pattern.getBodyPatterns().get(0).getExpected(), expectedJson, false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 83 Método: assertNull(pattern.getHeaders())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 84 Método: assertTrue(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 85 Método: assertFalse(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 118 Método: assertThat(pattern.getBodyPatterns().get(0).getExpected(), WireMatchers.equalToJson(expectedJson))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 123 Método: assertThat(contentTypeHeaderPattern.getValuePattern(), instanceOf(ContainsPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 124 Método: assertThat(contentTypeHeaderPattern.getValuePattern().getExpected(), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 125 Método: assertTrue(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 126 Método: assertFalse(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 159 Método: assertThat(pattern.getName(), is("my_part_name"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 160 Método: assertEquals(pattern.getBodyPatterns().get(0).getExpected(), expectedBinary)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 161 Método: assertThat(((SingleMatchMultiValuePattern) pattern.getHeaders().get("Content-Type")).getValuePattern().getExpected(), is("application/octet-stream"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 166 Método: assertTrue(pattern.isMatchAll())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 167 Método: assertFalse(pattern.isMatchAny())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 182 Método: assertThat(json, WireMatchers.equalToJson("{\n" + "  \"name\" : \"title\",\n" + "  \"matchingType\" : \"ANY\",\n" + "  \"headers\" : {\n" + "    \"Content-Disposition\" : {\n" + "      \"contains\" : \"name=\\\"title\\\"\"\n" + "    },\n" + "    \"X-First-Header\" : {\n" + "      \"equalTo\" : \"One\"\n" + "    },\n" + "    \"X-Second-Header\" : {\n" + "      \"matches\" : \".*2\"\n" + "    }\n" + "  },\n" + "  \"bodyPatterns\" : [ {\n" + "    \"equalToJson\" : \"{ \\\"thing\\\": 123 }\"\n" + "  } ]\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 215 Método: assertThat(pattern.equals(pattern), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 236 Método: assertThat(patternA.equals(patternB), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultipartValuePatternTest.java linha: 256 Método: assertThat(patternA.equals(patternB), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 42 Método: assertTrue(matcher.match("2021-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 43 Método: assertFalse(matcher.match("1921-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 50 Método: assertTrue(matcher.match("2021-06-24T12:40:27Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 51 Método: assertFalse(matcher.match("2021-06-24T13:40:27Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 58 Método: assertTrue(matcher.match("2021-06-14T12:13:14").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 59 Método: assertFalse(matcher.match("1921-06-14T12:13:14").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 66 Método: assertTrue(matcher.match("2021-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 67 Método: assertFalse(matcher.match("1921-06-14T12:13:14Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 80 Método: assertTrue(matcher.match(good).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 81 Método: assertFalse(matcher.match(bad).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 92 Método: assertTrue(matcher.match(good).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 93 Método: assertFalse(matcher.match(bad).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 104 Método: assertTrue(matcher.match(good).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 105 Método: assertFalse(matcher.match(bad).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 111 Método: assertFalse(matcher.match(null).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 117 Método: assertThat(matcher.match("2071-01-01T00:00:00Z").getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 118 Método: assertThat(matcher.match("2121-01-01T00:00:00Z").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 119 Método: assertThat(matcher.match(null).getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 120 Método: assertThat(matcher.match("2022-01-01T00:00:00Z").getDistance(), is(0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 131 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"equalToDateTime\": \"now -5 days\",\n" + "  \"truncateExpected\": \"last day of month\",\n" + "  \"truncateActual\": \"first day of year\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 155 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 156 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 163 Método: assertTrue(matcher.match("2020-08-29T00:00:00Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToDateTimePatternTest.java linha: 170 Método: assertTrue(matcher.match("2020-08-29T00:00:00").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 36 Método: assertTrue(MultiValuePattern.absent().match(HttpHeader.absent("any-key")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 41 Método: assertFalse(MultiValuePattern.absent().match(httpHeader("the-key", "the value")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 47 Método: assertFalse(MultiValuePattern.of(beforeNow()).match(HttpHeader.absent("any-key")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 53 Método: assertTrue(MultiValuePattern.of(equalTo("required-value")).match(httpHeader("the-key", "required-value")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 64 Método: assertFalse(matchResult.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 65 Método: assertThat(matchResult.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 70 Método: assertThat(MultiValuePattern.of(equalTo("required-value")).match(httpHeader("any-key", "require1234567")).getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 79 Método: assertThat(MultiValuePattern.of(equalTo("required-value")).match(httpHeader("any-key", "require1234567", "requi12345", "1234567rrrr")).getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 88 Método: assertTrue(MultiValuePattern.of(equalTo("required-value")).match(httpHeader("any-key", "require1234567", "required-value", "1234567rrrr")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 96 Método: assertTrue(MultiValuePattern.of(equalTo("required-value")).match(queryParam("any-key", "require1234567", "required-value", "1234567rrrr")).isExactMatch())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 106 Método: JSONAssert.assertEquals("{                              \n" + "  \"equalTo\": \"something\"   \n" + "}", actual, true)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MultiValuePatternTest.java linha: 116 Método: JSONAssert.assertEquals("{                   \n" + "  \"absent\": true   \n" + "}", actual, true)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RegexValuePatternTest.java linha: 33 Método: JSONAssert.assertEquals("{                               \n" + "  \"matches\": \"something\"    \n" + "}", actual, true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RegexValuePatternTest.java linha: 46 Método: assertThat(stringValuePattern, instanceOf(RegexPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RegexValuePatternTest.java linha: 47 Método: assertThat(stringValuePattern.getValue(), is("something"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RegexValuePatternTest.java linha: 52 Método: assertThat(WireMock.matching(".*").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 37 Método: assertThat(matcher.getExpected(), is("before 2021-01-01T00:00:00Z AND after 2020-01-01T00:00:00Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 40 Método: assertTrue(matcher.match("2020-06-01T11:22:33Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 41 Método: assertFalse(matcher.match("2021-06-01T11:22:33Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 50 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"and\": [\n" + "    {\n" + "      \"before\": \"2021-01-01T00:00:00Z\"\n" + "    },\n" + "    {\n" + "      \"after\": \"2020-01-01T00:00:00Z\"\n" + "    }\n" + "  ]\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 84 Método: assertThat(first, instanceOf(BeforeDateTimePattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 85 Método: assertThat(first.getExpected(), is("2021-01-01T00:00:00Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/LogicalAndTest.java linha: 87 Método: assertThat(second, instanceOf(AfterDateTimePattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 42 Método: assertTrue(matcher.match("2021-06-01T15:15:15Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 43 Método: assertFalse(matcher.match("2021-07-01T23:59:59Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 50 Método: assertTrue(matcher.match("2021-06-01T15:15:15").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 51 Método: assertFalse(matcher.match("2021-07-01T23:59:59").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 58 Método: assertTrue(matcher.match("2021-06-01T15:15:15").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 59 Método: assertFalse(matcher.match("2021-07-01T23:59:59").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 66 Método: assertTrue(matcher.match("2021-06-01T15:15:15Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 67 Método: assertFalse(matcher.match("2021-07-01T23:59:59Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 73 Método: assertFalse(matcher.match("2021-06-01T15:15:blahsdfj123").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 79 Método: assertFalse(matcher.match(null).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 85 Método: assertFalse(matcher.match("2021-06-01T15:15:15Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 91 Método: assertThat(matcher.match("2071-01-01T00:00:00Z").getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 92 Método: assertThat(matcher.match("2121-01-01T00:00:00Z").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 93 Método: assertThat(matcher.match(null).getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 94 Método: assertThat(matcher.match("2022-01-01T00:00:00Z").getDistance(), is(0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 100 Método: assertThat(matcher.match("2071-01-01T00:00:00Z").getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 101 Método: assertThat(matcher.match("2121-01-01T00:00:00Z").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 102 Método: assertThat(matcher.match(null).getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 103 Método: assertThat(matcher.match("2022-01-01T00:00:00Z").getDistance(), is(0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 109 Método: assertThat(matcher.match("2071-01-01T00:00:00").getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 110 Método: assertThat(matcher.match("2121-01-01T00:00:00").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 111 Método: assertThat(matcher.match(null).getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 112 Método: assertThat(matcher.match("2022-01-01T00:00:00").getDistance(), is(0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 119 Método: assertTrue(matcher.match("Tue, 01 Jun 2021 15:16:17 GMT").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 120 Método: assertFalse(matcher.match("Thu, 01 Jul 2021 15:16:17 GMT").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 127 Método: assertTrue(matcher.match("Tuesday, 01-Jun-21 14:14:14 GMT").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 128 Método: assertFalse(matcher.match("Thursday, 01-Jul-21 15:16:17 GMT").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 135 Método: assertTrue(matcher.match("Tue Jun  1 01:01:01 2021").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 136 Método: assertFalse(matcher.match("Thu Jul  1 01:01:01 2021").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 143 Método: assertTrue(matcher.match("Thu Jun 10 01:01:01 2021").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 144 Método: assertFalse(matcher.match("Sat Jul 10 01:01:01 2021").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 151 Método: assertTrue(matcher.match("2021-06-14T15:15:15+01:00[Europe/London]").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 152 Método: assertFalse(matcher.match("2021-06-14T16:15:15+01:00[Europe/London]").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 159 Método: assertTrue(matcher.match("01/06/2021").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 160 Método: assertFalse(matcher.match("01/07/2021").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 168 Método: assertTrue(matcher.match(right).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 171 Método: assertFalse(matcher.match(wrong).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 179 Método: assertTrue(matcher.match(right).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 182 Método: assertFalse(matcher.match(wrong).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 195 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 196 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 212 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 213 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 220 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"before\": \"2021-06-01T00:00:00\",\n" + "  \"actualFormat\": \"dd/MM/yyyy\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 236 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"before\": \"now +15 days\",\n" + "  \"truncateActual\": \"first day of month\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 253 Método: assertThat(Json.write(matcher), jsonEquals("{\n" + "  \"before\": \"now +15 days\",\n" + "  \"truncateExpected\": \"first hour of day\",\n" + "  \"truncateActual\": \"first day of month\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 273 Método: assertThat(matcher.getExpected(), is("2021-06-15T00:00:00"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 274 Método: assertThat(matcher.getActualFormat(), is("dd/MM/yyyy"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 287 Método: assertThat(matcher.getTruncateExpected(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 288 Método: assertThat(matcher.getTruncateActual(), is("first day of year"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 299 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 300 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 317 Método: assertTrue(matcher.match(good.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 318 Método: assertFalse(matcher.match(bad.toString()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 324 Método: assertTrue(matcher.match("2019-01-01T00:00:00Z").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/BeforeDateTimePatternTest.java linha: 330 Método: assertTrue(matcher.match("2019-01-01T00:00:00").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 36 Método: assertThat(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").match("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").getDistance(), is(0.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 57 Método: assertThat(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").match("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  7,  \n" + "   \"four\":   8   \n" + "}                  \n").getDistance(), is(0.4))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 78 Método: assertThat(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").match("[1, 2, 3]").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 93 Método: assertThat(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").match("{}").getDistance(), is(0.8))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 108 Método: assertThat(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").match("[]").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 123 Método: assertThat(WireMock.equalToJson("{}").match("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").getDistance(), is(0.8))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 138 Método: assertThat(WireMock.equalToJson("[]").match("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 153 Método: assertThat(WireMock.equalToJson("{\n" + "    \"one\": \"GET\",          \n" + "    \"two\": 2,                \n" + "    \"three\": {               \n" + "        \"four\": \"FOUR\",    \n" + "        \"five\": [            \n" + "            {                  \n" + "                \"six\": 6,    \n" + "                \"seven\": 7   \n" + "            },                 \n" + "            {                  \n" + "                \"eight\": 8,  \n" + "                \"nine\": 9    \n" + "            }                  \n" + "        ]                      \n" + "    }                          \n" + "}").match("{                          \n" + "   \"one\":    \"GET\",    \n" + "   \"two\":    2,          \n" + "   \"three\":  {           \n" + "       \"four\":   \"FOUR\"\n" + "   }                       \n" + "}                          \n").getDistance(), closeTo(0.56, 0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 186 Método: assertTrue(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n").match("{                  \n" + "   \"one\":    1,  \n" + "   \"three\":  3,  \n" + "   \"two\":    2,  \n" + "   \"four\":   4   \n" + "}                  \n").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 206 Método: assertFalse(WireMock.equalToJson("[1, 2, 3, 4]").match("[1, 3, 2, 4]").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 211 Método: assertTrue(WireMock.equalToJson("[1, 2, 3, 4]", true, false).match("[1, 3, 2, 4]").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 217 Método: assertTrue(WireMock.equalToJson("{\n" + "    \"one\": 1,\n" + "    \"two\": [\n" + "        { \"val\": 1 },\n" + "        { \"val\": 2 },\n" + "        { \"val\": 3 }\n" + "    ]\n" + "}", true, false).match("{\n" + "    \"one\": 1,\n" + "    \"two\": [\n" + "        { \"val\": 3 },\n" + "        { \"val\": 2 },\n" + "        { \"val\": 1 }\n" + "    ]\n" + "}").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 243 Método: assertTrue(WireMock.equalToJson("{                  \n" + "   \"one\":    1,  \n" + "   \"two\":    2,  \n" + "   \"three\":  3,  \n" + "   \"four\":   4   \n" + "}                  \n", false, true).match("{                  \n" + "   \"one\":    1,  \n" + "   \"three\":  3,  \n" + "   \"two\":    2,  \n" + "   \"four\":   4,  \n" + "   \"five\":   5,  \n" + "   \"six\":    6   \n" + "}                  \n").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 267 Método: assertTrue(WireMock.equalToJson("{                          \n" + "   \"one\":    1,          \n" + "   \"two\":    2,          \n" + "   \"three\":  3,          \n" + "   \"four\":   [1, 2, 3]   \n" + "}                  \n", true, true).match("{                          \n" + "   \"one\":    1,          \n" + "   \"three\":  3,          \n" + "   \"two\":    2,          \n" + "   \"four\":   [2, 1, 3],  \n" + "   \"five\":   5,          \n" + "   \"six\":    6           \n" + "}                          \n").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 300 Método: assertThat(pattern, instanceOf(EqualToJsonPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 301 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 302 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 303 Método: assertThat(pattern.getExpected(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 319 Método: assertThat(pattern, instanceOf(EqualToJsonPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 320 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 321 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreExtraElements(), is(true))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 322 Método: JSONAssert.assertEquals(pattern.getExpected(), expectedJson, false)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 340 Método: JSONAssert.assertEquals(expected, serialised, false)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 349 Método: JSONAssert.assertEquals("{\n" + "    \"equalToJson\": \"4444\",\n" + "    \"ignoreArrayOrder\": true,\n" + "    \"ignoreExtraElements\": true\n" + "}", serialised, false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 364 Método: assertThat(pattern, instanceOf(EqualToJsonPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 365 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreArrayOrder(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 366 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreExtraElements(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 367 Método: assertThat(pattern.getExpected(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 376 Método: assertThat(pattern, instanceOf(EqualToJsonPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 377 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreArrayOrder(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 378 Método: assertThat(((EqualToJsonPattern) pattern).isIgnoreExtraElements(), is(nullValue()))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 379 Método: JSONAssert.assertEquals(pattern.getExpected(), expectedJson, false)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 389 Método: JSONAssert.assertEquals("{ \"equalToJson\": " + expectedJson + " }", serialised, false)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 397 Método: JSONAssert.assertEquals("{\n" + "    \"equalToJson\": \"4444\"\n" + "}", serialised, false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 402 Método: assertFalse(new EqualToJsonPattern("{\n" + "    \"outer\": {\n" + "        \"inner:\": {\n" + "            \"wrong\": 1\n" + "        }\n" + "    }\n" + "}", false, false).match("{\n" + "    \"outer\": {\n" + "        \"inner:\": {\n" + "            \"thing\": 1\n" + "        }\n" + "    }\n" + "}").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 439 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 440 Método: assertThat(match.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 458 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 459 Método: assertThat(match.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 477 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 478 Método: assertThat(match.getDistance(), is(1.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 490 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 511 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 524 Método: assertThat(pattern.match("{\n" + "    \"one\": 1,\n" + "    \"two\": 2\n" + "}").isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 536 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 546 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 556 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 567 Método: assertTrue(result.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 578 Método: assertThat(match.isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 588 Método: assertThat(match.isExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/EqualToJsonTest.java linha: 592 Método: assertThat(nonMatch.isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 31 Método: assertTrue(urlPattern.match("/my/exact/url?one=1&two=2&three=3333333").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 32 Método: assertFalse(urlPattern.match("/my/wrong/url?one=1&three=3333333").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 39 Método: assertTrue(urlPattern.match("/my/regex/url?one=1&two=123456&three=3333333").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 40 Método: assertFalse(urlPattern.match("/my/BAD/url?one=1&two=123456&three=3333333").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 46 Método: assertTrue(urlPathPattern.match("/the/exact/path").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 47 Método: assertFalse(urlPathPattern.match("/totally/incorrect/path").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 53 Método: assertTrue(urlPathPattern.match("/my/regex/path?one=not_looked_at").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 54 Método: assertFalse(urlPathPattern.match("/my/12345/path").isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 59 Método: assertThat(WireMock.urlEqualTo("/things").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 64 Método: assertThat(WireMock.urlPathEqualTo("/things").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 69 Método: assertThat(WireMock.urlMatching("/things/.*").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/UrlPatternTest.java linha: 74 Método: assertThat(WireMock.urlPathMatching("/things/.*").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 47 Método: assertThat(newRequestPattern.getUrl(), is("/foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 48 Método: assertThat(newRequestPattern, not(equalTo(requestPattern)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 73 Método: assertThat(newRequestPattern, is(requestPattern))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 88 Método: assertThat(newRequestPattern, is(requestPattern))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 102 Método: assertThat(newRequestPattern.getMultipartPatterns(), everyItem(is(in(singletonList(multipartValuePattern)))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 105 Método: assertThat(newRequestPattern, not(equalTo(requestPattern)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 132 Método: assertThat(newRequestPattern, is(requestPattern))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/RequestPatternBuilderTest.java linha: 142 Método: assertThat(newRequestPattern, is(requestPattern))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 43 Método: assertTrue(pattern.match("{ \"one\": 1 }").isExactMatch(), "Expected match when JSON attribute is present")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 51 Método: assertFalse(pattern.match("{ \"two\": 2 }").isExactMatch(), "Expected no match when JSON attribute is absent")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 60 Método: assertTrue(pattern.match("{ \"numbers\": [ {\"number\": 1}, {\"number\": 2} ]}").isExactMatch(), "Expected match when JSON attribute is present")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 63 Método: assertFalse(pattern.match("{ \"numbers\": [{\"number\": 7} ]}").isExactMatch(), "Expected no match when JSON attribute is absent")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 72 Método: assertTrue(pattern.match("{ \"numbers\": [ {\"number\": 1}, {\"number\": 2} ]}").isExactMatch(), "Expected match when JSON attribute is present")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 75 Método: assertFalse(pattern.match("{ \"numbers\": [{\"number\": 7} ]}").isExactMatch(), "Expected no match when JSON attribute is absent")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 84 Método: assertTrue(pattern.match("{ \"numbers\": [ {\"number\": 1}, {\"number\": 2} ]}").isExactMatch(), "Expected match when JSON attribute is present")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 87 Método: assertFalse(pattern.match("{ \"numbers\": [{\"number\": 7} ]}").isExactMatch(), "Expected no match when JSON attribute is absent")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 95 Método: assertTrue(pattern.match("{ \"things\": { \"thingOne\": { \"innerOne\": 11 }, \"thingTwo\": 2 }}").isExactMatch(), "Expected match")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 107 Método: assertFalse(pattern.match("Not a JSON document").isExactMatch(), "Expected the match to fail")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 118 Método: assertFalse(pattern.match("{ \"nothing\": 1 }").isExactMatch(), "Expected the match to fail")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 131 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 136 Método: assertThat(WireMock.matchingJsonPath("$..*").match(null).isExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 145 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 156 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 166 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 177 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 188 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 198 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 208 Método: assertTrue(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 218 Método: assertFalse(match.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 219 Método: assertThat(match.getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 224 Método: assertThat(Json.write(WireMock.matchingJsonPath("$..thing")), equalToJson("{                                \n" + "  \"matchesJsonPath\": \"$..thing\"       \n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 234 Método: assertThat(Json.write(WireMock.matchingJsonPath("$..thing", containing("123"))), equalToJson("{                                      \n" + "    \"matchesJsonPath\": {              \n" + "        \"expression\": \"$..thing\",   \n" + "        \"contains\": \"123\"           \n" + "    }                                   \n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 254 Método: assertThat(stringValuePattern, instanceOf(MatchesJsonPathPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 255 Método: assertThat(stringValuePattern.getExpected(), is("$..thing"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 270 Método: assertThat(stringValuePattern, instanceOf(MatchesJsonPathPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 271 Método: assertThat(stringValuePattern.getExpected(), is("$..thing"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 274 Método: assertThat(subMatcher, instanceOf(EqualToPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 275 Método: assertThat(subMatcher.getExpected(), is("the value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 290 Método: assertThat(stringValuePattern, instanceOf(MatchesJsonPathPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 291 Método: assertThat(stringValuePattern.getExpected(), is("$..thing"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 294 Método: assertThat(subMatcher, instanceOf(AbsentPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 295 Método: assertThat(((StringValuePattern) subMatcher).nullSafeIsAbsent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 312 Método: assertThat(stringValuePattern, instanceOf(MatchesJsonPathPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 315 Método: assertThat(subMatcher, instanceOf(EqualToJsonPattern.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 316 Método: assertThat(subMatcher.getExpected(), jsonEquals("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 317 Método: assertThat(((EqualToJsonPattern) subMatcher).isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 318 Método: assertThat(((EqualToJsonPattern) subMatcher).isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 328 Método: assertThat(json, jsonEquals("{                                       \n" + "    \"matchesJsonPath\": {              \n" + "        \"expression\": \"$..thing\",   \n" + "        \"equalToJson\": \"{}\",        \n" + "        \"ignoreExtraElements\": true,  \n" + "        \"ignoreArrayOrder\": true      \n" + "    }                                   \n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 343 Método: assertThrows(JsonException.class, () -> {
    Json.read("{                                      \n" + "    \"matchesJsonPath\": {              \n" + "        \"express\": \"$..thing\",      \n" + "        \"equalTo\": \"the value\"      \n" + "    }                                   \n" + "}", StringValuePattern.class);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 360 Método: assertThrows(JsonException.class, () -> {
    Json.read("{                                      \n" + "    \"matchesJsonPath\": {              \n" + "        \"expression\": \"$..thing\",   \n" + "        \"badOperator\": \"the value\"  \n" + "    }                                   \n" + "}", StringValuePattern.class);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 380 Método: assertThat(pattern1, not(Matchers.equalTo(pattern2)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 381 Método: assertThat(pattern1.hashCode(), not(Matchers.equalTo(pattern2.hashCode())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 383 Método: assertThat(pattern1, Matchers.equalTo(pattern3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 384 Método: assertThat(pattern1.hashCode(), Matchers.equalTo(pattern3.hashCode()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 403 Método: assertTrue(result.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/matching/MatchesJsonPathPatternTest.java linha: 422 Método: assertTrue(result.isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 66 Método: assertThat(response.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 67 Método: assertThat(response.content(), is("Not allowed!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 68 Método: assertThat(response.firstHeader("Content-Type"), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 74 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 75 Método: assertThat(response.content(), is("OK"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 76 Método: assertThat(response.firstHeader("Content-Type"), is("text/html"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 84 Método: assertThat(testClient.get("/edit/this").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditMappingAcceptanceTest.java linha: 91 Método: assertThat(testClient.get("/edit/this").statusCode(), is(418))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAsynchronousAcceptanceTest.java linha: 70 Método: assertThat(timedResponse.response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAsynchronousAcceptanceTest.java linha: 71 Método: assertThat(timedResponse.milliseconds, greaterThan((double) SHORTER_THAN_SOCKET_TIMEOUT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAsynchronousAcceptanceTest.java linha: 84 Método: assertThat(timedResponse.response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAsynchronousAcceptanceTest.java linha: 85 Método: assertThat(timedResponse.milliseconds, greaterThan(100.0))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 90 Método: JSONAssert.assertEquals("{                                              \n" + "  \"mappings\" : [ {                           \n" + "    \"id\" : \"" + stubMapping.getId() + "\",  \n" + "    \"uuid\" : \"" + stubMapping.getId() + "\",\n" + "    \"request\" : {                            \n" + "      \"url\" : \"/my-test-url\",              \n" + "      \"method\" : \"GET\"                     \n" + "    },                                         \n" + "    \"response\" : {                           \n" + "      \"status\" : 418                         \n" + "    }                                          \n" + "  } ],                                         \n" + "                                               \n" + "  \"meta\": {                                  \n" + "    \"total\": 1                               \n" + "  }                                            \n" + "}", body, true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 125 Método: JsonAssertion.assertThat(allBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 126 Método: JsonAssertion.assertThat(limitedBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 137 Método: JsonAssertion.assertThat(limitedBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 138 Método: JsonAssertion.assertThat(limitedBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 144 Método: JsonAssertion.assertThat(limitedBody)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 158 Método: JSONAssert.assertEquals("{\n" + "  \"mappings\" : [ {\n" + "    \"request\" : {\n" + "      \"url\" : \"/my-test-url\",\n" + "      \"method\" : \"GET\"\n" + "    },\n" + "    \"response\" : {\n" + "      \"status\" : 418\n" + "    }\n" + "  } ]\n" + "}", body, false)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 185 Método: JSONAssert.assertEquals("{                                          \n" + "    \"id\": \"" + id + "\",              \n" + "    \"uuid\": \"" + id + "\",              \n" + "    \"request\" : {                        \n" + "      \"url\" : \"/my-addressable-stub\",  \n" + "      \"method\" : \"TRACE\"               \n" + "    },                                     \n" + "    \"response\" : {                       \n" + "      \"status\" : 451                     \n" + "    }                                      \n" + "}", body, true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 216 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 241 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 272 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 293 Método: assertThat(response.statusCode(), is(400))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 294 Método: assertThat(response.firstHeader("Content-Type"), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 295 Método: JsonAssertion.assertThat(response.content())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 310 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 328 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 329 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 339 Método: assertThat(testClient.get("/delete/this").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 343 Método: assertThat(response.content(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 344 Método: assertThat(testClient.get("/delete/this").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 349 Método: assertThat(testClient.delete("/__admin/mappings/" + UUID.randomUUID()).statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 357 Método: assertThat(testClient.get("/put/this").statusCode(), is(200))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 374 Método: JSONAssert.assertEquals(requestBody, response.content(), false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 375 Método: assertThat(testClient.get("/put/this").statusCode(), is(418))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 380 Método: assertThat(testClient.putWithBody("/__admin/mappings/" + UUID.randomUUID(), "{}", "application/json").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 403 Método: assertThat(response.statusCode(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 404 Método: assertThat(response.firstHeader("Content-Type"), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 406 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 407 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 415 Método: assertThat(testClient.get("/reset-this").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 416 Método: assertThat(testClient.get("/reset-this/too").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 420 Método: assertThat(response.content(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 421 Método: assertThat(testClient.get("/reset-this").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 422 Método: assertThat(testClient.get("/reset-this/too").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 431 Método: assertThat(dsl.getAllServeEvents().size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 435 Método: assertThat(response.firstHeader("Content-Type"), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 436 Método: assertThat(response.content(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 437 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 438 Método: assertThat(dsl.getAllServeEvents().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 456 Método: assertThat(testClient.get("/stateful").content(), is("Initial"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 457 Método: assertThat(testClient.get("/stateful").content(), is("Final"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 462 Método: assertThat(response.content(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 463 Método: assertThat(response.firstHeader("Content-Type"), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 464 Método: assertThat(testClient.get("/stateful").content(), is("Initial"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 487 Método: assertThat(body, jsonPartEquals("scenarios[0].id", "my-scenario"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 488 Método: assertThat(body, jsonPartEquals("scenarios[0].name", "my-scenario"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 489 Método: assertThat(body, jsonPartEquals("scenarios[0].state", "\"2\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 490 Método: assertThat(body, jsonPartEquals("scenarios[0].possibleStates", asList("2", "3", "Started")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 491 Método: assertThat(body, jsonPartEquals("scenarios[0].mappings[0].request.url", "/one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 497 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 498 Método: assertThat(response.content(), jsonPartEquals("errors[0].title", "Scenario i-dont-exist does not exist"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 510 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 511 Método: assertThat(response.content(), jsonPartEquals("errors[0].title", "Scenario i-dont-exist does not exist"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 538 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 539 Método: assertThat(response.content(), jsonPartEquals("errors[0].title", "Scenario my-scenario does not support state non-existent-state"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 549 Método: assertThat(response.statusCode(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 552 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 553 Método: JsonAssertion.assertThat(body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 555 Método: assertThat(testClient.get("/").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 569 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 572 Método: assertThat(errors.first().getDetail(), equalsMultiLine("Unclosed character class near index 13\n" + "/@$&%*[[^^£$&%\n" + "             ^"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 576 Método: assertThat(errors.first().getSource().getPointer(), is("/request"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 594 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 597 Método: assertThat(errors.first().getDetail(), equalsMultiLine("Unclosed character class near index 8\n" + "%[[json[[\n" + "        ^"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 600 Método: assertThat(errors.first().getSource().getPointer(), is("/request/headers/Accept"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 621 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 624 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 625 Método: assertThat(errors.first().getTitle(), is("Error parsing JSON"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 626 Método: assertThat(errors.first().getDetail(), equalsMultiLine("Unclosed character class near index 16\n" + "somebad]]][[stuff\n" + "                ^"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 649 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 652 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 653 Método: assertThat(errors.first().getDetail(), is("{\"matching\":\"somebad]]][[stuff\"} is not a valid match operation"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 676 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 679 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 680 Método: assertThat(errors.first().getDetail(), is("{\"matching\":\"somebad]]][[stuff\"} is not a valid match operation"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 700 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 703 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 704 Método: assertThat(errors.first().getDetail(), allOf(containsString("Unexpected character ('(' (code 40)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')"), containsString("line: 1, column: 2")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 727 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 730 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 731 Método: assertThat(errors.first().getTitle(), is("Error parsing JSON"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 732 Método: assertThat(errors.first().getDetail(), is("Content is not allowed in prolog.; line 1; column 1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 751 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 754 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 755 Método: assertThat(errors.first().getTitle(), is("Error parsing JSON"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 756 Método: assertThat(errors.first().getDetail(), is("contains operand must be a non-null string"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 774 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 777 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 778 Método: assertThat(errors.first().getTitle(), is("Error parsing JSON"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 779 Método: assertThat(errors.first().getDetail(), is("equalTo operand must be a non-null string"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 797 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 800 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 801 Método: assertThat(errors.first().getTitle(), is("Error parsing JSON"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 802 Método: assertThat(errors.first().getDetail(), is("contains operand must be a non-null string"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 820 Método: assertThat(response.statusCode(), is(422))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 823 Método: assertThat(errors.first().getSource().getPointer(), is("/request/bodyPatterns/0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 824 Método: assertThat(errors.first().getTitle(), is("Error parsing JSON"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 825 Método: assertThat(errors.first().getDetail(), is("matches operand must be a non-null string"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 831 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 832 Método: assertThat(response.content(), containsString("\"openapi\": \"3.0.0\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 838 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 844 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 845 Método: assertThat(response.content(), containsString("<html"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 857 Método: assertEquals(200, statusCode)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 858 Método: assertFalse(Paths.get(fileSource.getTextFileNamed(fileName).getPath()).toFile().exists(), "File should have been deleted")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 872 Método: assertEquals(200, statusCode)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 873 Método: assertFalse(Paths.get(fileSource.getTextFileNamed(fileName).getPath()).toFile().exists(), "File should have been deleted")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 888 Método: assertEquals(200, statusCode)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 889 Método: assertEquals("BBB", fileSource.getTextFileNamed(fileName).readContentsAsString(), "File should have been changed")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 904 Método: assertEquals(200, statusCode)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 905 Método: assertEquals("BBB", fileSource.getTextFileNamed(fileName).readContentsAsString(), "File should have been changed")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 920 Método: assertEquals(200, response.statusCode())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 925 Método: assertThat(new String(response.binaryContent()), matches("\\[ \".*" + pathSeparatorRegex + "bar.txt\", \".*zoo.*txt\" ]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 949 Método: JsonAssertion.assertThat(response.content())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 950 Método: JsonAssertion.assertThat(response.content())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 951 Método: JsonAssertion.assertThat(response.content())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 952 Método: JsonAssertion.assertThat(response.content())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 968 Método: assertThat(data, not(hasKey("metadata")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1009 Método: assertThat(stubs.get(1).getResponse().getBody(), is("Original"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1010 Método: assertThat(stubs.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1043 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1046 Método: assertThat(stubs, everyItem(hasIdAndUuid()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1081 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1084 Método: assertThat(stubs, everyItem(hasIdAndUuid()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1109 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1110 Método: assertThat(wireMockServer.getGlobalSettings().getSettings().getExtended().getInt("mySetting"), is(123))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1138 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1141 Método: assertThat(settings.getDelayDistribution(), Matchers.<DelayDistribution>instanceOf(UniformDistribution.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1144 Método: assertThat(settings.getExtended().getInt("one"), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1145 Método: assertThat(settings.getExtended().getMetadata("two").as(TestExtendedSettingsData.class).name, is("abc"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1160 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1163 Método: assertThat(extended.getInt("one"), is(11))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1164 Método: assertThat(extended.getInt("two"), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1165 Método: assertThat(extended.getInt("three"), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1199 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1202 Método: assertThat(allStubs.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1203 Método: assertThat(allStubs.get(0).getRequest().getUrl(), is("/one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1204 Método: assertThat(allStubs.get(1).getRequest().getUrl(), is("/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1217 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1218 Método: assertThat(response.content(), jsonPartEquals("nearMisses[0].request.url", "/thing"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1232 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1235 Método: assertThat(json, jsonPartEquals("requests[0].request.url", "/just-wrong"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1236 Método: assertThat(json, jsonPartEquals("requests[1].request.url", "/no-match"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1237 Método: assertThat(json, jsonPartMatches("requests", hasSize(2)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1252 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1255 Método: assertThat(json, jsonPartEquals("requests[0].request.url", "/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1256 Método: assertThat(json, jsonPartEquals("requests[1].request.url", "/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1257 Método: assertThat(json, jsonPartMatches("requests", hasSize(2)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1264 Método: assertThat(response.statusCode(), is(400))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1265 Método: assertThat(response.content(), jsonPartEquals("errors[0].title", "Query parameter matchingStub value 'not-a-valid-uuid' is not a valid UUID"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1276 Método: assertThat(response.statusCode(), is(400))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1277 Método: assertThat(response.content(), jsonPartEquals("errors[0].title", "Query parameter matchingStub value '' is not a valid UUID"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1290 Método: assertThat(data, jsonPartEquals("requests[0].stubMapping.id", "\"${json-unit.any-string}\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/AdminApiTest.java linha: 1291 Método: assertThat(data, jsonPartEquals("requests[0].stubMapping.response.status", 404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 99 Método: assertThat(returnedMappings.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 100 Método: assertThat(returnedMappings.get(0).getRequest().getUrl(), is("/record-this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 103 Método: assertThat(mapping.getResponse().getBody(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 118 Método: assertThat(mapping.getName(), is("record-this_with_safe_name"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 132 Método: assertThat(returnedMappings.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 133 Método: assertThat(returnedMappings.get(0).getRequest().getUrl(), is("/record-this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 136 Método: assertThat(mapping.getResponse().getBody(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 150 Método: assertThat(returnedMappings.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 151 Método: assertThat(proxyingService.getStubMappings(), Matchers.<StubMapping>empty())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 159 Método: assertThat(returnedMappings.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 160 Método: assertThat(proxyingService.getStubMappings(), Matchers.<StubMapping>empty())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 173 Método: assertThat(returnedMappings.get(0).getRequest().getHeaders().get("Accept").getExpected(), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 188 Método: assertThat(returnedMappings.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 189 Método: assertThat(returnedMappings.get(0).getRequest().getUrl(), is("/record-this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 192 Método: assertThat(mapping.getResponse().getBody(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 208 Método: assertThat(bodyPattern.isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 209 Método: assertThat(bodyPattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 225 Método: assertThat(bodyPattern.isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 226 Método: assertThat(bodyPattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 235 Método: assertThat(result.getStatus(), is(RecordingStatus.Recording))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 245 Método: assertThat(result.getStatus(), is(RecordingStatus.Stopped))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 254 Método: assertThat(result.getStatus(), is(RecordingStatus.Recording))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 267 Método: assertThat(mapping.getRequest().getBodyPatterns().get(0).getExpected(), is("expected body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 286 Método: assertThat(mapping.getResponse().getBody(), is("Zippy"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 306 Método: assertThat(mapping.getResponse().getByteBody(), is(originalBody))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 325 Método: assertThat(bodyFileName, is("myimagepng-" + mapping.getId() + ".png"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 327 Método: assertThat(bodyFile.exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 347 Método: assertThat(bodyFileName, is("largetxt-" + mapping.getId() + ".txt"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 349 Método: assertThat(bodyFile.exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 368 Método: assertThat(bodyFileName, nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 373 Método: assertThrows(NotRecordingException.class, WireMock::stopRecording)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 378 Método: assertThrows(NotRecordingException.class, adminClient::stopStubRecording)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 383 Método: assertThrows(NotRecordingException.class, proxyingService::stopRecording)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 388 Método: assertThrows(InvalidInputException.class, () -> {
    startRecording(recordSpec());
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordingDslAcceptanceTest.java linha: 397 Método: assertThrows(InvalidInputException.class, () -> {
    proxyingService.startRecording(recordSpec());
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LogTimingAcceptanceTest.java linha: 51 Método: assertThat(serveEvent.getTiming().getServeTime(), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LogTimingAcceptanceTest.java linha: 52 Método: assertThat(serveEvent.getTiming().getTotalTime(), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LogTimingAcceptanceTest.java linha: 76 Método: assertThat(timing.getAddedDelay(), is(DELAY))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LogTimingAcceptanceTest.java linha: 77 Método: assertThat(timing.getProcessTime(), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LogTimingAcceptanceTest.java linha: 80 Método: assertThat(timing.getServeTime(), is(timing.getProcessTime() + timing.getResponseSendTime()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LogTimingAcceptanceTest.java linha: 81 Método: assertThat(timing.getTotalTime(), is(timing.getProcessTime() + timing.getResponseSendTime() + DELAY))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/jetty11/JettyHttpServerTest.java linha: 86 Método: assertThat(jettyHttpServer.stopTimeout(), is(expectedStopTimeout))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/jetty11/JettyHttpServerTest.java linha: 98 Método: assertThat(jettyHttpServer.stopTimeout(), is(expectedStopTimeout))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/jetty11/JettyHttpServerTest.java linha: 114 Método: assertNull(httpConnector)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 73 Método: assertThat(options.verboseLoggingEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 79 Método: assertThat(options.verboseLoggingEnabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 85 Método: assertThat(options.recordMappingsEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 91 Método: assertThat(options.matchingHeaders(), hasItems(CaseInsensitiveKey.from("Accept"), CaseInsensitiveKey.from("Content-Type")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 99 Método: assertThat(options.recordMappingsEnabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 105 Método: assertThat(options.portNumber(), is(8086))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 111 Método: assertThat(options.getHttpDisabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 117 Método: assertThat(options.httpsSettings().enabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 118 Método: assertThat(options.httpsSettings().port(), is(8443))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 124 Método: assertThat(options.httpsSettings().keyStorePath(), endsWith("/keystore"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 138 Método: assertThat(options.httpsSettings().needClientAuth(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 150 Método: assertThat(options.httpsSettings().trustStorePath(), is("/my/truststore"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 151 Método: assertThat(options.httpsSettings().trustStoreType(), is("PKCS12"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 152 Método: assertThat(options.httpsSettings().trustStorePassword(), is("sometrustpwd"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 161 Método: assertThat(options.httpsSettings().trustStorePassword(), is("password"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 173 Método: assertThat(options.httpsSettings().keyStorePath(), is("/my/keystore"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 174 Método: assertThat(options.httpsSettings().keyStoreType(), is("pkcs12"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 175 Método: assertThat(options.httpsSettings().keyStorePassword(), is("someotherpwd"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 176 Método: assertThat(options.httpsSettings().keyManagerPassword(), is("keymanpass"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 181 Método: assertThrows(Exception.class, () -> {
    new CommandLineOptions("--port");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 191 Método: assertThat(options.bindAddress(), is("127.0.0.1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 198 Método: assertThat(options.specifiesProxyUrl(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 199 Método: assertThat(options.proxyUrl(), is("http://someotherhost.com/site"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 206 Método: assertThat(options.proxyHostHeader(), is("someotherhost.com:8080"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 211 Método: assertThrows(Exception.class, () -> {
    new CommandLineOptions("--proxy-all");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 221 Método: assertThat(options.browserProxyingEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 222 Método: assertThat(options.browserProxySettings().enabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 228 Método: assertThat(options.browserProxyingEnabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 229 Método: assertThat(options.browserProxySettings().enabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 242 Método: assertThat(options.verboseLoggingEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 243 Método: assertThat(options.recordMappingsEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 244 Método: assertThat(options.portNumber(), is(8088))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 245 Método: assertThat(options.specifiesProxyUrl(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 246 Método: assertThat(options.proxyUrl(), is("http://somewhere.com"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 253 Método: assertThat(options.helpText(), allOf(containsString("verbose")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 259 Método: assertThat(options.proxyVia().host(), is("somehost.mysite.com"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 260 Método: assertThat(options.proxyVia().port(), is(8080))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 261 Método: assertThat(options.proxyVia().getUsername(), is(emptyOrNullString()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 262 Método: assertThat(options.proxyVia().getPassword(), is(emptyOrNullString()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 269 Método: assertThat(options.proxyVia().host(), is("somehost.mysite.com"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 270 Método: assertThat(options.proxyVia().port(), is(8080))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 271 Método: assertThat(options.proxyVia().getUsername(), is("user"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 272 Método: assertThat(options.proxyVia().getPassword(), is("password"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 278 Método: assertThat(options.proxyVia(), is(ProxySettings.NO_PROXY))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 284 Método: assertThat(options.requestJournalDisabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 290 Método: assertThat(options.maxRequestJournalEntries(), is(Optional.of(2)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 292 Método: assertThat(optionsNoMax.maxRequestJournalEntries().isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 298 Método: assertThat(options.shouldPreserveHostHeader(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 304 Método: assertThat(options.shouldPreserveHostHeader(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 310 Método: assertThat(options.containerThreads(), is(300))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 316 Método: assertThat(options.containerThreads(), is(25))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 322 Método: assertThat(options.jettySettings().getAcceptors().get(), is(400))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 328 Método: assertThat(options.jettySettings().getAcceptQueueSize().get(), is(10))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 335 Método: assertThat(options.jettySettings().getRequestHeaderSize().get(), is(16384))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 341 Método: assertThat(options.jettySettings().getRequestHeaderSize().get(), is(16384))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 347 Método: assertThat(options.jettySettings().getResponseHeaderSize().get(), is(16384))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 353 Método: assertThat(options.jettySettings().getStopTimeout().get(), is(1000L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 359 Método: assertThat(options.jettySettings().getIdleTimeout().get(), is(2000L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 365 Método: assertThat(options.jettySettings().getAcceptQueueSize().isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 371 Método: assertThat(options.jettySettings().getAcceptors().isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 377 Método: assertThat(options.jettySettings().getRequestHeaderSize().isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 383 Método: assertThat(options.jettySettings().getStopTimeout().isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 388 Método: assertThrows(IllegalArgumentException.class, () -> {
    new CommandLineOptions("--no-request-journal", "--record-mappings");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 403 Método: assertThat(extensions.entrySet(), hasSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 404 Método: assertThat(extensions.get("ResponseDefinitionTransformer_One"), instanceOf(ResponseDefinitionTransformerExt1.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 407 Método: assertThat(extensions.get("ResponseDefinitionTransformer_Two"), instanceOf(ResponseDefinitionTransformerExt2.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 420 Método: assertThat(extensions.entrySet(), hasSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 421 Método: assertThat(extensions.get("RequestMatcherExtension_One"), instanceOf(RequestExt1.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 429 Método: assertThat(extensions.entrySet(), hasSize(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 435 Método: assertThat(options.networkTrafficListener(), is(instanceOf(ConsoleNotifyingWiremockNetworkTrafficListener.class)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 445 Método: assertThat(extensions.entrySet(), hasSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 446 Método: assertThat(extensions.get("response-template").applyGlobally(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 454 Método: assertThat(extensions.entrySet(), hasSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 455 Método: assertThat(extensions.get("response-template").applyGlobally(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 466 Método: assertThat(authenticator.authenticate(mockRequest().header("Authorization", correctAuthHeader)), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 469 Método: assertThat(authenticator.authenticate(mockRequest().header("Authorization", incorrectAuthHeader)), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 477 Método: assertThat(options.getHttpsRequiredForAdminApi(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 483 Método: assertThat(options.getHttpsRequiredForAdminApi(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 489 Método: assertThat(options.getAsynchronousResponseSettings().isEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 495 Método: assertThat(options.getAsynchronousResponseSettings().isEnabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 501 Método: assertThat(options.getAsynchronousResponseSettings().getThreads(), is(20))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 507 Método: assertThat(options.getChunkedEncodingPolicy(), is(Options.ChunkedEncodingPolicy.ALWAYS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 513 Método: assertThat(options.getAsynchronousResponseSettings().getThreads(), is(10))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 524 Método: assertThat(transformer.getMaxCacheEntries(), is(5L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 534 Método: assertThat(transformer.getMaxCacheEntries(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 542 Método: assertThat(options.getPermittedSystemKeys(), hasItems("java*", "path*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 548 Método: assertThat(options.getPermittedSystemKeys(), emptyCollectionOf(String.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 554 Método: assertThat(options.getGzipDisabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 560 Método: assertThat(options.getGzipDisabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 566 Método: assertThat(options.getStubRequestLoggingDisabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 572 Método: assertThat(options.getStubRequestLoggingDisabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 582 Método: assertThat(dump, matchesMultiLine(".*port:.*5432.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 583 Método: assertThat(dump, not(containsString("https-port")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 589 Método: assertThat(options.getStubCorsEnabled(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 595 Método: assertThat(options.getStubCorsEnabled(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 602 Método: assertThat(options.browserProxySettings().trustAllProxyTargets(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 608 Método: assertThat(options.browserProxySettings().trustAllProxyTargets(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 615 Método: assertThat(options.browserProxySettings().trustedProxyTargets(), is(singletonList("localhost")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 628 Método: assertThat(options.browserProxySettings().trustedProxyTargets(), is(asList("localhost", "wiremock.org", "www.google.com")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 636 Método: assertThat(options.browserProxySettings().trustedProxyTargets(), is(Collections.<String>emptyList()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 652 Método: assertThat(caKeyStore.path(), is("/my/keystore"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 653 Método: assertThat(caKeyStore.password(), is("someotherpwd"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 654 Método: assertThat(caKeyStore.type(), is("pkcs12"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 661 Método: assertThat(caKeyStore.path(), is(DEFAULT_CA_KEYSTORE_PATH))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 662 Método: assertThat(caKeyStore.password(), is(DEFAULT_CA_KESTORE_PASSWORD))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 663 Método: assertThat(caKeyStore.type(), is("jks"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 674 Método: assertThat(dump, matchesMultiLine(".*port:.*5432.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 675 Método: assertThat(dump, matchesMultiLine(".*https-port:.*2345.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 682 Método: assertThat(options, matchesMultiLine(".*enable-browser-proxying: *true.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 683 Método: assertThat(options, matchesMultiLine(".*trust-all-proxy-targets: *true.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 696 Método: assertThat(options, matchesMultiLine(".*enable-browser-proxying: *true.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 697 Método: assertThat(options, matchesMultiLine(".*trust-proxy-target: *localhost, example\\.com.*"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 711 Método: assertSame(one, two)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 720 Método: assertThat(fileSource, instanceOf(SingleRootFileSource.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 729 Método: assertThat(mappingsSaver, instanceOf(JsonFileMappingsSource.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 739 Método: assertThat(fileSource, instanceOf(ClasspathFileSource.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 740 Método: assertThat(fileSource.getTextFileNamed("__files/stuff.txt").readContentsAsString(), equalTo("THINGS!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 752 Método: assertThat(mappingsSaver, instanceOf(JsonFileMappingsSource.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 761 Método: assertThat(limit.isExceededBy(18), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 762 Método: assertThat(limit.isExceededBy(19), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 771 Método: assertThat(limit.isExceededBy(Integer.MAX_VALUE), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 783 Método: assertThat(proxyTargetRules.isAllowed("192.168.1.1"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 784 Método: assertThat(proxyTargetRules.isAllowed("10.1.2.3"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 786 Método: assertThat(proxyTargetRules.isAllowed("10.3.2.1"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 787 Método: assertThat(proxyTargetRules.isAllowed("localhost"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 796 Método: assertThat(proxyTimeout, is(5000))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 805 Método: assertThat(proxyTimeout, is(Options.DEFAULT_TIMEOUT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 811 Método: assertFalse(options.getStores().getSettingsStore().get().getProxyPassThrough())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 817 Método: assertTrue(options.getStores().getSettingsStore().get().getProxyPassThrough())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/CommandLineOptionsTest.java linha: 823 Método: assertTrue(options.getStores().getSettingsStore().get().getProxyPassThrough())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 81 Método: assertThat(allMappings, hasSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 85 Método: assertThat(mappingRequestUrls, is(asList("/second_test", "/test")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 98 Método: assertThat(savedStub, containsString("\"insertionIndex\" : 0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 111 Método: assertThat(e, Matchers.instanceOf(NotWritableException.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 112 Método: assertThat(e.getMessage(), is("Stubs loaded from multi-mapping files are read-only, and therefore cannot be removed"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 109 Método: fail("Expected an exception to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 118 Método: assertThat(stubMappingFile.exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 129 Método: assertThat(e, Matchers.instanceOf(NotWritableException.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 130 Método: assertThat(e.getMessage(), is("Some stubs were loaded from multi-mapping files which are read-only, so remove all cannot be performed"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 127 Método: fail("Expected an exception to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 136 Método: assertThat(stubMappingFile.exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 149 Método: assertThat(e, Matchers.instanceOf(NotWritableException.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 150 Método: assertThat(e.getMessage(), is("Stubs loaded from multi-mapping files are read-only, and therefore cannot be saved"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 147 Método: fail("Expected an exception to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 155 Método: assertThat(stubMappingFile.exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 166 Método: assertThat(FileUtils.readFileToString(stubMappingFile, UTF_8), containsString("New name"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/JsonFileMappingsSourceTest.java linha: 176 Método: assertThat(stubMappingFile.exists(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/ProxySettingsTest.java linha: 29 Método: assertThrows(IllegalArgumentException.class, () -> {
    ProxySettings.fromString(":8090");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/ProxySettingsTest.java linha: 38 Método: assertThat(ProxySettings.fromString("myhost.com").port(), is(80))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/ProxySettingsTest.java linha: 44 Método: assertThat(settings.host(), is("some.host.org"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/standalone/ProxySettingsTest.java linha: 45 Método: assertThat(settings.port(), is(8888))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/XmlHandlingAcceptanceTest.java linha: 73 Método: assertThat(client.postXml("/xml-match", xml).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/XmlHandlingAcceptanceTest.java linha: 94 Método: assertThat(client.postXml("/xpath-match", xml).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/XmlHandlingAcceptanceTest.java linha: 118 Método: assertThat(client.postXml("/xpath-template", xml).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/XmlHandlingAcceptanceTest.java linha: 138 Método: assertThat(client.postXml("/bad-xml-match", xml).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/XmlHandlingAcceptanceTest.java linha: 159 Método: assertThat(client.postXml("/bad-xpath-match", xml).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 75 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested?query");
    verify(getRequestedFor(urlEqualTo("/this/got/requested")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 85 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested?query");
    verify(getRequestedFor(urlEqualTo("/this/got/requeste?query")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 95 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested?query");
    verify(getRequestedFor(urlEqualTo("/this/got/requested/?query")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 111 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested?query");
    verify(getRequestedFor(urlPathEqualTo("/this/got/requeste")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 121 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested?query");
    verify(getRequestedFor(urlPathEqualTo("/this/got/requested/")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 137 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested");
    verify(getRequestedFor(urlPathMatching("/(.*?)/got/")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 147 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested");
    verify(getRequestedFor(urlPathMatching("/got/.*")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 157 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/this/got/requested");
    verify(getRequestedFor(urlEqualTo("/this/did/not")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 206 Método: assertThat(headers.getHeader("X-Thing").values().size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 207 Método: assertThat(headers.getHeader("X-Thing").values().get(1), is("Two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 212 Método: assertThrows(VerificationException.class, () -> {
    testClient.put("/to/modify", withHeader("Content-Type", "application/json"), withHeader("Encoding", "LATIN-1"));
    verify(putRequestedFor(urlEqualTo("/to/modify")).withHeader("Content-Type", equalTo("application/json")).withHeader("Encoding", notMatching("LATIN-1")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 315 Método: assertThrows(VerificationException.class, () -> verify(postRequestedFor(urlEqualTo("/body/json")).withRequestBody(not(containing("Important value")))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 354 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/query?param=my-value");
    verify(getRequestedFor(urlPathEqualTo("/query")).withQueryParam("param", equalTo("wrong-value")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 366 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/query");
    verify(getRequestedFor(urlPathEqualTo("/query")).withQueryParam("param", equalTo("my-value")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 378 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/count/this");
    testClient.get("/count/this");
    testClient.get("/count/this");
    WireMock.reset();
    verify(getRequestedFor(urlEqualTo("/count/this")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 415 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(5);
    verify(lessThan(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 425 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(6);
    verify(lessThan(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 447 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(6);
    verify(lessThanOrExactly(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 457 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(4);
    verify(exactly(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 473 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(6);
    verify(exactly(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 483 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(4);
    verify(moreThanOrExactly(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 505 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(4);
    verify(moreThan(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 515 Método: assertThrows(VerificationException.class, () -> {
    getCountableRequests(5);
    verify(moreThan(5), getRequestedFor(urlEqualTo("/add/to/count")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 540 Método: assertThrows(VerificationException.class, () -> {
    testClient.get("/without/another/header", withHeader("Content-Type", "application/json"));
    verify(getRequestedFor(urlEqualTo("/without/another/header")).withoutHeader("Content-Type"));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 559 Método: assertThrows(VerificationException.class, () -> {
    testClient.post("/no/body", new StringEntity("not absent"));
    verify(postRequestedFor(urlEqualTo("/no/body")).withRequestBody(absent()));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 576 Método: assertThat(e.getMessage(), containsString(junitStyleDiffMessage("GET\n" + "/a-near-miss\n", "GET\n" + "/my-near-miss\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 574 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 592 Método: assertThat(e.getMessage(), is("Expected exactly 3 requests matching the following pattern but received 2:\n" + "{" + lineSeparator() + "  \"url\" : \"/hit\"," + lineSeparator() + "  \"method\" : \"GET\"" + lineSeparator() + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 590 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 615 Método: assertThat(e.getMessage(), containsString(junitStyleDiffMessage("GET\n/hit\n", "GET\n/miss\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 613 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 632 Método: assertThat(e.getMessage(), is("Expected less than 2 requests matching the following pattern but received 4:\n" + "{" + lineSeparator() + "  \"url\" : \"/hit\"," + lineSeparator() + "  \"method\" : \"GET\"" + lineSeparator() + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 630 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 655 Método: assertThat(e.getMessage(), containsString(junitStyleDiffMessage("GET\n" + "/hit\n", "GET\n" + "/miss\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 653 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 672 Método: assertThat(e.getMessage(), allOf(containsString("Expected less than 2 requests matching"), containsString("/some/request")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 670 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 691 Método: assertThat(e.getMessage(), allOf(containsString("Expected less than or exactly 2 requests matching"), containsString("/some/request")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 689 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 708 Método: assertThat(e.getMessage(), allOf(containsString("Expected exactly 12 requests matching"), containsString("/some/request")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 706 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 725 Método: assertThat(e.getMessage(), allOf(containsString("Expected more than 12 requests matching"), containsString("/some/request")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 723 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 790 Método: assertThat(e.getMessage(), containsString("No requests exactly matched."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 788 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 817 Método: assertThat(initialServeEvents.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 824 Método: assertThat(finalServeEvents.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 825 Método: assertThat(finalServeEvents.get(0).getRequest().header("My-Header").firstValue(), is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 837 Método: assertThat(initialServeEvents.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 843 Método: assertThat(finalServeEvents.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 858 Método: assertThat(removedEvents.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 859 Método: assertThat(removedEvents.get(0).getRequest().header("My-Header").firstValue(), is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 862 Método: assertThat(serveEvents.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 865 Método: assertThat(event1.getRequest().header("My-Header").firstValue(), is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 868 Método: assertThat(event2, notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 883 Método: assertThat(removedEvents.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 886 Método: assertThat(serveEvents.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 900 Método: assertThat(removedServeEvents.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 901 Método: assertThat(removedServeEvents.get(0).getRequest().getUrl(), is("/with-metadata"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 904 Método: assertThat(serveEvents.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 905 Método: assertThat(serveEvents.get(0).getRequest().getUrl(), is("/without-metadata"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 962 Método: assertThrows(RequestJournalDisabledException.class, () -> {
    verify(getRequestedFor(urlEqualTo("/whatever")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/VerificationAcceptanceTest.java linha: 971 Método: assertThrows(RequestJournalDisabledException.class, () -> {
    findAll(getRequestedFor(urlEqualTo("/whatever")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubRequestLoggingAcceptanceTest.java linha: 42 Método: assertThat(notifier.infoMessages.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubRequestLoggingAcceptanceTest.java linha: 43 Método: assertThat(notifier.infoMessages.get(0), allOf(containsString("Request received:"), containsString("/log-me"), containsString("body text")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubRequestLoggingAcceptanceTest.java linha: 63 Método: assertThat(notifier.infoMessages.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DateHeaderAcceptanceTest.java linha: 39 Método: assertThat(response.headers().get("Date"), contains("Sun, 06 Nov 1994 08:49:37 GMT"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DateHeaderAcceptanceTest.java linha: 49 Método: assertThat(response.headers().get("Date"), is(Matchers.<String>empty()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 69 Método: assertThat(loggingListener.events.get(0), is("beforeStubCreated, name: Created"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 70 Método: assertThat(loggingListener.events.get(1), is("afterStubCreated, name: Created"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 78 Método: assertThat(loggingListener.events.get(2), is("beforeStubEdited, old name: Created, new name: Edited"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 80 Método: assertThat(loggingListener.events.get(3), is("afterStubEdited, old name: Created, new name: Edited"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 88 Método: assertThat(loggingListener.events.get(2), is("beforeStubRemoved, name: To remove"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 89 Método: assertThat(loggingListener.events.get(3), is("afterStubRemoved, name: To remove"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 96 Método: assertThat(loggingListener.events.get(2), is("beforeStubsReset"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 97 Método: assertThat(loggingListener.events.get(3), is("afterStubsReset"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 104 Método: assertTrue(wm.listAllStubMappings().getMappings().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 110 Método: assertThat(e, Matchers.<Exception>instanceOf(NotPermittedException.class))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 108 Método: fail("Expected an exception to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 113 Método: assertTrue(wm.listAllStubMappings().getMappings().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 125 Método: assertThat(e, Matchers.<Exception>instanceOf(NotPermittedException.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 126 Método: assertThat(((NotPermittedException) e).getErrors().first().getTitle(), is("quota exhausted"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubLifecycleListenerAcceptanceTest.java linha: 123 Método: fail("Expected an exception to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsAcceptanceTest.java linha: 45 Método: assertThat(duration, greaterThanOrEqualTo(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsAcceptanceTest.java linha: 59 Método: assertThat(duration, greaterThanOrEqualTo(60))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsAcceptanceTest.java linha: 74 Método: assertThat(duration, greaterThanOrEqualTo(90))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsAcceptanceTest.java linha: 83 Método: assertThat(settings.getFixedDelay(), is(30))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsAcceptanceTest.java linha: 93 Método: assertThat(fetchedSettings.getExtended().getString("mySetting"), is("setting-value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsAcceptanceTest.java linha: 102 Método: assertFalse(fetchedSettings.getProxyPassThrough())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/testsupport/WireMatchers.java linha: 72 Método: JSONAssert.assertEquals(expectedJson, actualJson, JSONCompareMode.STRICT)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/testsupport/WireMatchers.java linha: 93 Método: JSONAssert.assertEquals(expectedJson, Strings.stringFromBytes(actualJson), jsonCompareMode)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/testsupport/WireMatchers.java linha: 115 Método: JSONAssert.assertEquals(expectedJson, actualJson, jsonCompareMode)
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/testsupport/WireMatchers.java linha: 136 Método: JSONAssert.assertEquals(expectedJson, Strings.stringFromBytes(actualJson), jsonCompareMode)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 51 Método: assertThat(files, hasExactlyIgnoringOrder(fileNamed("one"), fileNamed("two"), fileNamed("three"), fileNamed("four"), fileNamed("five"), fileNamed("six"), fileNamed("seven"), fileNamed("eight"), fileNamed("deepfile.json")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 68 Método: assertThat(fileSource.getBinaryFileNamed("subdir/deepfile.json").readContents(), is(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 76 Método: assertThat(actual, is(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 88 Método: assertThat(actual, is(contents))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 101 Método: assertThat(actual, is(contents))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 111 Método: assertThat(tempDir.resolve(filePath).toFile().exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 114 Método: assertThat(tempDir.resolve(filePath).toFile().exists(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 127 Método: assertThat(tempDir.resolve(filePath1).toFile().exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 128 Método: assertThat(tempDir.resolve(filePath2).toFile().exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 131 Método: assertThat(tempDir.resolve(filePath1).toFile().exists(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/store/files/BlobStoreFileSourceTest.java linha: 132 Método: assertThat(tempDir.resolve(filePath2).toFile().exists(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 49 Método: assertThat(originalResponseDefinition.getTransformerParameters().getString("name"), is("original"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 51 Método: assertThat(transformedResponseDefinition.getTransformerParameters().getString("name"), is("changed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 77 Método: assertThat(copiedResponseDefinition, is(originalResponseDefinition))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 85 Método: assertThat(proxyDefinition.getAdditionalProxyRequestHeaders(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 86 Método: assertThat(proxyDefinition.getProxyUrlPrefixToRemove(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 98 Método: assertThat(proxyDefinition.getAdditionalProxyRequestHeaders(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 99 Método: assertThat(proxyDefinition.getProxyUrlPrefixToRemove(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 111 Método: assertThat(proxyDefinition.getAdditionalProxyRequestHeaders(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 112 Método: assertThat(proxyDefinition.getProxyUrlPrefixToRemove(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 124 Método: assertThat(proxyDefinition.getAdditionalProxyRequestHeaders(), equalTo(new HttpHeaders(newArrayList(new HttpHeader("header", "value")))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 127 Método: assertThat(proxyDefinition.getProxyUrlPrefixToRemove(), equalTo("/remove"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 140 Método: assertThat(proxyDefinition.getAdditionalProxyRequestHeaders(), equalTo(new HttpHeaders(newArrayList(new HttpHeader("header", "value")))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 143 Método: assertThat(proxyDefinition.getProxyUrlPrefixToRemove(), equalTo("/remove"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 156 Método: assertThat(proxyDefinition.getAdditionalProxyRequestHeaders(), equalTo(new HttpHeaders(newArrayList(new HttpHeader("header", "value")))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilderTest.java linha: 159 Método: assertThat(proxyDefinition.getProxyUrlPrefixToRemove(), equalTo("/remove"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/WireMockClientWithProxyAcceptanceTest.java linha: 63 Método: assertThat(testClient.get("/my/new/resource").statusCode(), is(304))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/WireMockClientWithProxyAcceptanceTest.java linha: 84 Método: assertThat(testClient.get("/my/new/resource").content(), is("{\"address\":\"Puerto Banús, Málaga\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/WireMockClientAcceptanceTest.java linha: 52 Método: assertThat(testClient.get("/my/new/resource").statusCode(), is(304))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/WireMockClientAcceptanceTest.java linha: 59 Método: assertThat(testClient.get("/my/new/resource").statusCode(), is(304))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/WireMockClientAcceptanceTest.java linha: 70 Método: assertThat(testClient.get("/my/new/resource").content(), is("{\"address\":\"Puerto Banús, Málaga\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 30 Método: assertThat(countStrategy.match(3), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 31 Método: assertThat(countStrategy.match(5), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 32 Método: assertThat(countStrategy.match(7), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 40 Método: assertThat(countStrategy.match(3), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 41 Método: assertThat(countStrategy.match(5), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 42 Método: assertThat(countStrategy.match(7), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 50 Método: assertThat(countStrategy.match(3), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 51 Método: assertThat(countStrategy.match(5), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 52 Método: assertThat(countStrategy.match(7), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 60 Método: assertThat(countStrategy.match(3), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 61 Método: assertThat(countStrategy.match(5), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 62 Método: assertThat(countStrategy.match(7), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 70 Método: assertThat(countStrategy.match(3), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 71 Método: assertThat(countStrategy.match(5), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 72 Método: assertThat(countStrategy.match(7), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 79 Método: assertThat(countStrategy.toString(), is("Less than 5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 86 Método: assertThat(countStrategy.toString(), is("Less than or exactly 5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 93 Método: assertThat(countStrategy.toString(), is("Exactly 5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 100 Método: assertThat(countStrategy.toString(), is("More than or exactly 5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/CountMatchingStrategyTest.java linha: 107 Método: assertThat(countStrategy.toString(), is("More than 5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 54 Método: assertThat(noAuthClient.get("/__admin/mappings").statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 55 Método: assertThat(noAuthClient.get("/__admin/mappings", withHeader("X-Magic-Header", "anything")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 76 Método: assertThrows(NotAuthorisedException.class, () -> {
    initialise(new BasicAuthenticator(new BasicCredentials("user1", "password1"), new BasicCredentials("user2", "password2")), new ClientBasicAuthenticator("user1", "password1"));
    badClient = WireMock.create().port(server.port()).authenticator(new ClientBasicAuthenticator("user1", "wrong_password")).build();
    badClient.getServeEvents();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 106 Método: assertThat(client.get("/__admin/requests").statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 145 Método: assertThat(response.statusCode(), is(403))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 146 Método: assertThat(response.content(), containsString("HTTPS is required for accessing the admin API"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/ClientAuthenticationAcceptanceTest.java linha: 159 Método: assertThat(client.get("/__admin/requests").statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/HttpAdminClientTest.java linha: 31 Método: assertThat(client.getOptions().portNumber(), is(8080))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/client/HttpAdminClientTest.java linha: 32 Método: assertThat(client.getOptions().bindAddress(), is("localhost"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 42 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 60 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 74 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 87 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 101 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 118 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 135 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 148 Método: assertThat(requests.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 149 Método: assertThat(requests.get(0).getCookies().keySet(), hasItem("my_other_cookie"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CookieMatchingAcceptanceTest.java linha: 167 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 81 Método: assertThat(duration, greaterThanOrEqualTo(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 102 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 103 Método: assertThat(timeTaken, greaterThanOrEqualTo((long) chunkedDuration))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 105 Método: assertThat(body, is(response.binaryContent()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 129 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 130 Método: assertThat(timeTaken, greaterThanOrEqualTo((long) totalDuration))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 132 Método: assertThat(body, is(response.binaryContent()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 146 Método: assertThat(duration, greaterThanOrEqualTo(60))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 160 Método: assertThat(duration, greaterThanOrEqualTo(50))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 165 Método: assertThrows(SocketTimeoutException.class, () -> {
    stubFor(get(urlEqualTo("/delayed")).willReturn(aResponse().withStatus(200).withFixedDelay(LONGER_THAN_SOCKET_TIMEOUT)));
    httpClient.execute(new HttpGet(wireMockRule.url("/delayed")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 183 Método: assertThat(execute.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 200 Método: assertTrue(callSucceeded.get())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 219 Método: assertTrue(callSucceeded.get())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 229 Método: assertThat(execute.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDelayAcceptanceTest.java linha: 240 Método: assertThat(count, is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/QueuedThreadPoolAcceptanceTest.java linha: 38 Método: assertThat(InstrumentedQueuedThreadPool.flag, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NetworkTrafficListenerAcceptanceTest.java linha: 39 Método: assertThat(networkTrafficListener.getAllRequests(), containsString("GET /a/non-registered/resource HTTP/1.1\r\n"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NetworkTrafficListenerAcceptanceTest.java linha: 42 Método: assertThat(networkTrafficListener.getAllRequests(), containsString("User-Agent: Apache-HttpClient/"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NetworkTrafficListenerAcceptanceTest.java linha: 44 Método: assertThat(networkTrafficListener.getAllResponses(), containsString("HTTP/1.1 404 Not Found\r\n"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentParameterAcceptanceTest.java linha: 54 Método: assertThat(testClient.get("/wiremock/mapping/war/stub").content(), is("War stub OK"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 87 Método: assertThat(contentFor(url("/https-test")), is("HTTPS content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 108 Método: assertThat(contentFor(url("/https-test")), is("HTTPS content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 93 Método: assertThrows(IllegalStateException.class, () -> {
    WireMockConfiguration config = wireMockConfig().httpDisabled(true).dynamicHttpsPort();
    wireMockServer = new WireMockServer(config);
    wireMockServer.start();
    WireMock.configureFor("https", "localhost", wireMockServer.httpsPort());
    httpClient = HttpClientFactory.createClient();
    stubFor(get(urlEqualTo("/https-test")).willReturn(aResponse().withStatus(200).withBody("HTTPS content")));
    wireMockServer.port();
    assertThat(contentFor(url("/https-test")), is("HTTPS content"));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 110 Método: assertTrue(exception.getMessage().contains("Not listening on HTTP port. Either HTTP is not enabled or the WireMock server is stopped."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 132 Método: assertThat(e.getClass().getName(), Matchers.anyOf(is(SocketException.class.getName()), is(SSLException.class.getName())))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 130 Método: fail("Expected a SocketException or SSLException to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 172 Método: assertThrows(Exception.class, () -> {
    String testKeystorePath = Resources.getResource("bad-keystore").toString();
    startServerWithKeystore(testKeystorePath);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 188 Método: assertThat(contentFor(url("/https-test")), is("HTTPS content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 199 Método: assertThat(contentFor(url("/https-test")), is("HTTPS content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 210 Método: assertThat(contentFor(url("/alt-password-https")), is("HTTPS content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 220 Método: assertThat(e.getClass().getName(), is(FatalStartupException.class.getName()))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 218 Método: fail("Expected a SocketException or SSLHandshakeException to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 235 Método: assertThat(e.getClass().getName(), Matchers.anyOf(is(HttpHostConnectException.class.getName()), is(SSLHandshakeException.class.getName()), is(SSLException.class.getName()), is(SocketException.class.getName())))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 233 Método: fail("Expected a SocketException, SSLHandshakeException or SSLException to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 255 Método: assertThat(secureContentFor(url("/https-test"), testClientCertPath, TRUST_STORE_PASSWORD), is("HTTPS content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 280 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 299 Método: assertThat(response.getCode(), is(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 316 Método: assertThat(e, instanceOf(expectedClass))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 314 Método: assertThat(e.getCause(), instanceOf(expectedClass))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java linha: 322 Método: assertTrue(thrown, "No exception was thrown")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 122 Método: assertThat(response.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 123 Método: assertThat(response.content(), is("Not allowed!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 124 Método: assertThat(response.firstHeader("Content-Type"), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 135 Método: assertThat(response.statusCode(), is(302))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 154 Método: assertThat(response.statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 173 Método: assertThat(response.statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 184 Método: assertThat(testClient.postWithBody("/some/url", "BODY", "text/plain", "utf-8").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 201 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 212 Método: assertThat(testClient.get("/path-and-query/match?since=2014-10-14&search=WireMock%20stubbing").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 230 Método: assertThat(testClient.get("/path-and-query/match?since=2018-03-02&search=WireMock%20stubbing").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 241 Método: assertThat(testClient.get("/matching-path/extra").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 248 Método: assertThat(testClient.get("/matching").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 259 Método: assertThat(testClient.get("/path-and-query/match?since=2014-10-14&search=WireMock%20stubbing").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 277 Método: assertThat(testClient.get("/path-and-query/match?since=2018-03-02&search=WireMock%20stubbing").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 288 Método: assertThat(testClient.get("/matching").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 295 Método: assertThat(testClient.get("/matching-path/extra").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 305 Método: assertThat(testClient.get("/path-and-query/match?wrongParam=wrongVal").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 315 Método: assertThat(testClient.get("/path-and-query/match?search=presentwhoops").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 325 Método: assertThat(testClient.get("/path-and-query/match?anotherparam=present").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 335 Método: assertThat(testClient.get("/query/match?search=WireMock%20stubbing").statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 338 Método: assertThat(testClient.get("/query/match?search=Other%20stubbing").statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 349 Método: assertThat(response.content(), is("Some example test from a file"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 362 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 365 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 368 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 381 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 384 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 396 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 399 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 411 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 414 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 429 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 434 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 446 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 449 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 460 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 463 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 475 Método: assertThat(testClient.get("/priority/resource").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 485 Método: assertThrows(RuntimeException.class, () -> testClient.get("/connection/reset"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 486 Método: assertThat(runtimeException.getMessage(), is("java.net.SocketException: Connection reset"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 521 Método: assertThat(testClient.get("/%26%26The%20Lord%20of%20the%20Rings%26%26").statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 530 Método: assertThat(testClient.get("/%26%26The%20Lord%20of%20the%20Rings%26%26").statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 537 Método: assertThat(testClient.get("/default/two-hundred").statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 545 Método: assertThat(testClient.get("/binary/content").binaryContent(), is(bytes))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 555 Método: assertThat(mapping1.getRequest().getMethod(), is(POST))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 556 Método: assertThat(mapping1.getRequest().getUrl(), is("/stub/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 557 Método: assertThat(mapping1.getResponse().getBody(), is("Two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 558 Método: assertThat(mapping1.getResponse().getStatus(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 561 Método: assertThat(mapping2.getRequest().getMethod(), is(GET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 562 Método: assertThat(mapping2.getRequest().getUrl(), is("/stub/one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 563 Método: assertThat(mapping2.getResponse().getBody(), is("One"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 576 Método: assertThat(response.statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 585 Método: assertThat(response.statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 595 Método: assertThat(testClient.get("/status-message").statusMessage(), is("The bees! They're in my eyes!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 608 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 620 Método: assertThat(testClient.postXml(url, "<a>123</a>").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 632 Método: assertThat(testClient.postXml(url, "<a>123</a>").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 643 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 655 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 661 Método: assertThat(stubMapping.getId(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 664 Método: assertThat(localStubMapping.getId(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 674 Método: assertThat(fetchedMapping.getResponse().getBody(), is("identified!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 681 Método: assertThat(testClient.get("/anything-is-matched").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 691 Método: assertThat(listAllStubMappings().getMappings(), hasItem(named("Get all the things")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 706 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 711 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 717 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 734 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 739 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 755 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 760 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 776 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 781 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 797 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 802 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 820 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 826 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 844 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 850 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 862 Método: assertThat(code, is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 874 Método: assertThat(code, is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 882 Método: assertThat(testClient.get("/test?filter[id]=1").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 883 Método: assertThat(testClient.get("/test?filter%5Bid%5D=1").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 895 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 905 Método: assertThat(testClient.get(url).firstHeader("Content-Type"), is(contentType))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 915 Método: assertThat(testClient.postJson("/date", "{\n" + "  \"date\": \"2021-06-22T23:59:59Z\"\n" + "}").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 921 Método: assertThat(testClient.postJson("/date", "{\n" + "  \"date\": \"2121-06-22T23:59:59Z\"\n" + "}").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 935 Método: assertThat(testClient.get("/match-query-parameter?date=2021-06-22T23%3A59%3A59Z").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 939 Método: assertThat(testClient.get("/match-query-parameter?date=2121-06-22T23%3A59%3A59Z").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 943 Método: assertThat(testClient.get("/match-query-parameter").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 963 Método: assertThat(testClient.postJson("/offset-date", "{\n" + "  \"date\": \"" + good + "\"\n" + "}").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 969 Método: assertThat(testClient.postJson("/offset-date", "{\n" + "  \"date\": \"" + bad + "\"\n" + "}").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 985 Método: assertThat(testClient.postJson("/date", "{\n" + "  \"date\": \"2020-12-31T00:00:00Z\"\n" + "}").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 991 Método: assertThat(testClient.postJson("/date", "{\n" + "  \"date\": \"2011-12-31T00:00:00Z\"\n" + "}").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1005 Método: assertThat(testClient.get("/or").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1006 Método: assertThat(testClient.get("/or?q=thingtofind").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1007 Método: assertThat(testClient.get("/or?q=wrong").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1019 Método: assertThat(testClient.get("/match" + queryParams).statusCode(), is(statusCode))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1029 Método: assertThat(testClient.get("/match", withHeader("q", "1"), withHeader("q", "2"), withHeader("q", "3")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1041 Método: assertThat(testClient.get("/match", withHeader("q", "1"), withHeader("q", "2"), withHeader("q", "3"), withHeader("q", "4"), withHeader("q", "5")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1059 Método: assertThat(testClient.get("/match", withHeader("q", "1"), withHeader("q", "2"), withHeader("q", "3"), withHeader("q", "4"), withHeader("q", "5")).statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1079 Método: assertThat(testClient.get("/match", withHeader("q", "1"), withHeader("q", "4"), withHeader("q", "5"), withHeader("q", "6"), withHeader("q", "5")).statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1095 Método: assertThat(testClient.get("/match").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1107 Método: assertThat(testClient.get("/match" + queryParams).statusCode(), is(statusCode))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1119 Método: assertThat(testClient.get("/match" + queryParams).statusCode(), is(statusCode))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1165 Método: assertThat(testClient.get("/or").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1166 Método: assertThat(testClient.get("/or", withHeader("X-Maybe", "one")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1167 Método: assertThat(testClient.get("/or", withHeader("X-Maybe", "two222")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1168 Método: assertThat(testClient.get("/or", withHeader("X-Maybe", "three")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1169 Método: assertThat(testClient.get("/or", withHeader("X-Maybe", "wrong")).statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1179 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1180 Método: assertThat(response.firstHeader(HttpHeaders.CONTENT_TYPE), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1181 Método: assertThat(response.content(), containsString("\"Json From String\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1191 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1192 Método: assertThat(response.firstHeader(HttpHeaders.CONTENT_TYPE), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1193 Método: assertThat(response.content(), containsString("\"Json From Object\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1201 Método: assertThat(testClient.get("/stub-to-remove").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1205 Método: assertThat(testClient.get("/stub-to-remove").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1213 Método: assertThat(testClient.get("/stub-to-remove-by-id").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1216 Método: assertThat(testClient.get("/stub-to-remove-by-id").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1248 Método: assertThat(e.getCause(), instanceOf(expectedClass))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingAcceptanceTest.java linha: 1252 Método: assertTrue(thrown, "No exception was thrown")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BindAddressTest.java linha: 83 Método: fail("Should not accept HTTP connection to [" + nonBindAddress + "]")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BindAddressTest.java linha: 91 Método: assertThat(localhostStatus, is(200))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BindAddressTest.java linha: 95 Método: fail("Should not accept HTTPS connection to [" + nonBindAddress + "]")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BindAddressTest.java linha: 115 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 57 Método: assertThat(testClient.get("/rule/test").content(), is("Rule test body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 163 Método: assertThat(testClient.get("/rule/test").content(), is("Rule test body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 185 Método: assertThat(wireMockRule.port(), equalTo(RULE_HTTP_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 190 Método: assertThat(wireMockClassRule.port(), equalTo(CLASSRULE_HTTP_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 195 Método: assertThat(wireMockRule.httpsPort(), equalTo(RULE_HTTPS_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 200 Método: assertThat(wireMockClassRule.httpsPort(), equalTo(CLASSRULE_HTTPS_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 256 Método: assertThat(new WireMockTestClient(port).get("/test").content(), is(expectedText))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 278 Método: assertThat(testClient.get("/test/listener").content(), is("Listener"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 279 Método: assertThat(urls.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 280 Método: assertThat(urls.get(0), is("/test/listener"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 299 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockJUnitRuleTest.java linha: 312 Método: assertThat(testClient.get("/rule/test").content(), is("Rule test body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 77 Método: assertThat(mappingsDir, hasFileContaining("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 78 Método: assertThat(mappingsDir, hasFileContaining("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 79 Método: assertThat(mappingsDir, hasFileContaining("three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 92 Método: assertThat(wm.getStubMappings().get(0).getId(), is(stubId))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 93 Método: assertThat(wm.getStubMappings().get(0).getResponse().getBody(), is("initial"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 101 Método: assertThat(mappingsDir, hasFileContaining("modified"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 107 Método: assertThat(mappingsDir, hasFileContaining("/save-immediately"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 125 Método: assertThat(mappingsDir, hasFileContaining("/save-immediately", "initial"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 134 Método: assertThat(mappingsDir, hasFileContaining("/save-immediately", "modified"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 164 Método: assertThat(getSingleStubMapping(id).getRequest().getUrl(), is("/do-not-delete"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 193 Método: assertThat(mappingFilePath.toFile().exists(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 196 Método: assertThat(stubMapping.getId(), is(stubId))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 199 Método: assertThat(mappingFilePath.toFile().exists(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 208 Método: assertThat(retrivedStub.isPersistent(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 209 Método: assertThat(retrivedStub.isPersistent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubMappingPersistenceAcceptanceTest.java linha: 226 Método: assertThat(mappingsDir.toFile().list().length, is(size))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 59 Método: assertThat(client.get("/correct").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 60 Método: assertThat(client.get("/wrong").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 80 Método: assertThat(client.get("/correct").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 81 Método: assertThat(client.get("/wrong").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 89 Método: assertThat(client.get("/findthis/thing").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 97 Método: assertThat(client.get("/the/correct/one").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 98 Método: assertThat(client.get("/the/wrong/one").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 99 Método: assertThat(client.postJson("/the/correct/one", "{}").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 109 Método: assertThat(client.get("/the/correct/one").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 110 Método: assertThat(client.get("/the/wrong/one").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 111 Método: assertThat(client.postJson("/the/correct/one", "{}").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CustomMatchingAcceptanceTest.java linha: 116 Método: assertThrows(AdminException.class, () -> {
    wm.register(get(urlPathMatching("/the/.*/one")).andMatching(new MyRequestMatcher()).willReturn(ok()));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DebugHeadersAcceptanceTest.java linha: 37 Método: assertThat(response.firstHeader("Matched-Stub-Id"), is(stubId.toString()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DebugHeadersAcceptanceTest.java linha: 38 Método: assertThat(response.firstHeader("Matched-Stub-Name"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DebugHeadersAcceptanceTest.java linha: 50 Método: assertThat(response.firstHeader("Matched-Stub-Id"), is(stubId.toString()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DebugHeadersAcceptanceTest.java linha: 51 Método: assertThat(response.firstHeader("Matched-Stub-Name"), is(name))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DebugHeadersAcceptanceTest.java linha: 58 Método: assertThat(response.firstHeader("Matched-Stub-Id"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DebugHeadersAcceptanceTest.java linha: 59 Método: assertThat(response.firstHeader("Matched-Stub-Name"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 64 Método: assertThat(client.get("/templated").content(), is("templated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 73 Método: assertThat(client.get("/not-templated").content(), is("{{request.path.[0]}}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 103 Método: assertThat(client.get("/templated").content(), is("templated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 112 Método: assertThat(client.get("/templated").content(), is("templated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 125 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 134 Método: assertThat(client.get("/templated/2").content(), is("templated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 135 Método: assertThat(client.get("/templated/3").content(), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 152 Método: assertThat(response.content(), is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 153 Método: assertThat(response.firstHeader("X-Value"), is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 164 Método: assertThat(response.content(), is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 165 Método: assertThat(response.firstHeader("X-Value"), is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 176 Método: assertThat(client.get("/templated").content(), is("templated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 186 Método: assertThat(client.get("/templated").content(), is("{{request.path.[0]}}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 196 Método: assertThat(client.get("/templated/1").content(), is("{{request.path.[0]}}"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 222 Método: assertThat(response.content(), response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 224 Método: assertThat(response.content(), WireMatchers.equalToJson("{ \"modified\": \"3\" }"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 249 Método: assertThat(response.content(), is("{\"Key\":\"Hello world 2!\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 258 Método: assertThat(client.get("/squares?filter[id]=321").content(), is("ID: 321"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 259 Método: assertThat(client.get("/squares?filter%5Bid%5D=321").content(), is("ID: 321"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 272 Método: assertThat(content, is("contactId: 12345, addressId: 67890"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 283 Método: assertThat(content, is("1: contacts, 2: 12345"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 294 Método: assertThat(content, is("1: first1, 2: second2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 305 Método: assertThat(content, is(" v1 first first1 second second2 "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 340 Método: assertThat(client.get("/templated").content(), is(expectedHostname))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 352 Método: assertThat(client.get("/templated").content(), is("123"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 364 Método: assertThat(client.get("/templated").content(), is("[ERROR: Access to forbidden.thing is denied]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTemplatingAcceptanceTest.java linha: 374 Método: assertThat(client.get("/templated").content(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockClientWithProxyAcceptanceTest.java linha: 63 Método: assertThat(testClient.get("/my/new/resource").statusCode(), is(304))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockClientWithProxyAcceptanceTest.java linha: 84 Método: assertThat(testClient.get("/my/new/resource").content(), is("{\"address\":\"Puerto Banús, Málaga\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 82 Método: assertThat(json, equalToJson(STUB_MAPPING_EXAMPLE, LENIENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 94 Método: assertThat(json, equalToJson(REQUEST_PATTERN_EXAMPLE, LENIENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 101 Método: assertThat(nearMiss.getRequest().getUrl(), is("/nearly-missed-me"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 102 Método: assertThat(nearMiss.getRequest().getMethod(), is(HEAD))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 103 Método: assertThat(nearMiss.getStubMapping().getRequest().getUrl(), is("/missed-me"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 104 Método: assertThat(nearMiss.getStubMapping().getRequest().getMethod(), is(GET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 105 Método: assertThat(nearMiss.getMatchResult().getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 106 Método: assertThat(nearMiss.getRequestPattern(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 107 Método: assertThat(nearMiss.toString(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 114 Método: assertThat(nearMiss.getRequest().getUrl(), is("/nearly-missed-me"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 115 Método: assertThat(nearMiss.getRequest().getMethod(), is(HEAD))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 116 Método: assertThat(nearMiss.getRequestPattern().getUrl(), is("/missed-me"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 117 Método: assertThat(nearMiss.getRequestPattern().getMethod(), is(GET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 118 Método: assertThat(nearMiss.getMatchResult().getDistance(), is(0.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissTest.java linha: 119 Método: assertThat(nearMiss.getStubMapping(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedResponseTest.java linha: 35 Método: assertEquals(loggedResponse.getBodyAsString(), "")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedResponseTest.java linha: 48 Método: assertThat(ISO_8859_1_RESPONSE_BODY, is(equalTo(loggedResponse.getBodyAsString())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedResponseTest.java linha: 55 Método: assertThat(UTF8_RESPONSE_BODY, is(equalTo(loggedResponse.getBodyAsString())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 39 Método: assertThat(diff, is(" expected:<\nexpected> but was:<\nactual>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 49 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("GET\n" + "/thing\n", "POST\n" + "/thing\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 59 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/expected\n", "ANY\n" + "/actual\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 70 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "[path regex] /expected/.*\n", "ANY\n" + "/actual\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 88 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "Content-Type: application/json\n" + "X-My-Header: expected\n", "ANY\n" + "/thing\n" + "\n" + "Content-Type: application/json\n" + "X-My-Header: actual\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 113 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "X-My-Header: expected\n", "ANY\n" + "/thing\n" + "\n" + "\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 130 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "X-My-Header: expected\n", "ANY\n" + "/thing\n\n\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 155 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "{" + lineSeparator() + "  \"outer\" : {" + lineSeparator() + "    \"inner\" : {" + lineSeparator() + "      \"thing\" : 1" + lineSeparator() + "    }" + lineSeparator() + "  }" + lineSeparator() + "}", "ANY\n" + "/thing\n" + "\n" + "{" + lineSeparator() + "  \"outer\" : { }" + lineSeparator() + "}")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 194 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "{" + lineSeparator() + "  \"outer\" : {" + lineSeparator() + "    \"inner:\" : {" + lineSeparator() + "      \"thing\" : 1" + lineSeparator() + "    }" + lineSeparator() + "  }" + lineSeparator() + "}", "ANY\n" + "/thing\n" + "\n" + "{" + lineSeparator() + "  \"outer\" : { }" + lineSeparator() + "}")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 243 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "@.notfound\n" + "@.nothereeither", "ANY\n" + "/thing\n" + "\n" + "{\n" + "    \"outer\": {\n" + "        \"inner:\": {\n" + "            \"thing\": 1\n" + "        }\n" + "    }\n" + "}\n" + "{\n" + "    \"outer\": {\n" + "        \"inner:\": {\n" + "            \"thing\": 1\n" + "        }\n" + "    }\n" + "}")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 280 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "<my-elements>" + lineSeparator() + "  <one attr-one=\"1111\"/>" + lineSeparator() + "  <two/>" + lineSeparator() + "  <three/>" + lineSeparator() + "</my-elements>" + lineSeparator(), "ANY\n" + "/thing\n" + "\n" + "<my-elements>" + lineSeparator() + "  <one attr-one=\"2222\"/>" + lineSeparator() + "  <two/>" + lineSeparator() + "  <three/>" + lineSeparator() + "</my-elements>" + lineSeparator())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 321 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "Cookie: my_cookie=expected-cookie\n", "ANY\n" + "/thing\n" + "\n" + "actual-cookie\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 338 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing?search=nothing\n" + "\n" + "Query: search = everything\n", "ANY\n" + "/thing?search=nothing\n" + "\n" + "search: nothing\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 355 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("ANY\n" + "/thing\n" + "\n" + "Cookie: my_cookie=expected-cookie\n", "ANY\n" + "/thing\n\n\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 372 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("GET\n" + "/thing\n" + "\n" + "[custom matcher]", "GET\n" + "/thing\n\n ")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 386 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("GET\n" + "/thing\n" + "\n" + "[custom matcher: my-custom-matcher]", "GET\n" + "/thing\n" + "\n" + "[custom matcher: my-custom-matcher]")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 401 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("POST\n" + "/thing\n\n" + "(absent)", "POST\n" + "/thing\n\n" + "not absent")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 420 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("GET\n" + "/stateful\n\n" + "[Scenario 'my-steps' state: step2]", "GET\n" + "/stateful\n\n" + "[Scenario 'my-steps' state: Started]")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 438 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("POST\n" + "/submatch\n\n" + "$.name [contains] Tom", "POST\n" + "/submatch\n\n" + "Rob")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 456 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("POST\n" + "/submatch\n\n" + "$.name [contains] Tom", "POST\n" + "/submatch\n\n" + "{\"id\": \"abc123\"}")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 471 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("my.host\n" + "ANY\n" + "/thing\n", "wrong.host\n" + "ANY\n" + "/thing\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 485 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("[contains] my.host\n" + "ANY\n" + "/thing\n", "wrong.host\n" + "ANY\n" + "/thing\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 500 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("5544\n" + "ANY\n" + "/thing\n", "6543\n" + "ANY\n" + "/thing\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/DiffTest.java linha: 514 Método: assertThat(diff.toString(), is(junitStyleDiffMessage("https\n" + "ANY\n" + "/thing\n", "http\n" + "ANY\n" + "/thing\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 103 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_ascii.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 124 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_cookies.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 142 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_query.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 197 Método: assertThat(output, equalsMultiLine(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 204 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_large_xml_jre8.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 212 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_large_xml_jre11.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 220 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_large_xml_jre11_windows.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 285 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_missing_header.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 319 Método: assertThat(output, equalsMultiLine(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 336 Método: assertThat(output, equalsMultiLine(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 348 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_url-pattern.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 361 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_url-template.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 376 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_url-path-parameters.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 409 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_multipart.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 428 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_no-multipart.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 444 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_mixed-matchers.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 460 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_mixed-matchers-named-custom.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 472 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_exactmatch-for-multiple-values-query-param.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 486 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_includematch-for-multiple-values-query-param.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 500 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_exactmatch-for-multiple-values-header.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 513 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_includematch-for-multiple-values-header.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/diff/PlainTextDiffRendererTest.java linha: 528 Método: assertThat(output, equalsMultiLine(file("not-found-diff-sample_only-custom_matcher.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 67 Método: assertTrue(loggedRequest.containsHeader("content-type"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 68 Método: assertNotNull(loggedRequest.getHeader("content-type"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 69 Método: assertTrue(loggedRequest.containsHeader("CONTENT-TYPE"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 70 Método: assertNotNull(loggedRequest.getHeader("CONTENT-TYPE"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 71 Método: assertTrue(loggedRequest.containsHeader("Accept"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 72 Método: assertNotNull(loggedRequest.getHeader("Accept"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 129 Método: JSONAssert.assertEquals(expectedJson, Json.write(loggedRequest), false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 149 Método: assertThat(loggedRequest.getBodyAsString(), is(equalTo(REQUEST_BODY)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 192 Método: assertTrue(reqMap.containsKey("queryParams"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 193 Método: assertEquals("value-1", ((List) ((Map) ((Map) reqMap.get("queryParams")).get("test-param-1")).get("values")).get(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 197 Método: assertEquals("value-2", ((List) ((Map) ((Map) reqMap.get("queryParams")).get("test-param-2")).get("values")).get(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 207 Método: assertEquals("test-param-1", req.queryParameter("test-param-1").key())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 208 Método: assertEquals("value-1", req.queryParameter("test-param-1").firstValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 210 Método: assertEquals("test-param-2", req.queryParameter("test-param-2").key())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/LoggedRequestTest.java linha: 211 Método: assertEquals("value-2", req.queryParameter("test-param-2").firstValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 57 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging1")).build()), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 59 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging2")).build()), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 69 Método: assertThat(journal.countRequestsMatching(everything()), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 71 Método: assertThat(journal.countRequestsMatching(everything()), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 81 Método: assertThat(journal.countRequestsMatching(everything()), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 82 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging1")).build()), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 84 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging2")).build()), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 99 Método: assertThat(journal.countRequestsMatching(requestMadeFor(ALWAYS.getName(), Parameters.empty()).build()), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 102 Método: assertThat(journal.countRequestsMatching(requestMadeFor("not-existing", Parameters.empty()).build()), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 106 Método: assertThat(journal.getRequestsMatching(requestMadeFor(ALWAYS.getName(), Parameters.empty()).build()).size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 111 Método: assertThat(journal.getRequestsMatching(requestMadeFor("not-existing", Parameters.empty()).build()).size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 119 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging1")).build()), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 121 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging2")).build()), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/InMemoryRequestJournalTest.java linha: 123 Método: assertThat(journal.countRequestsMatching(getRequestedFor(urlEqualTo("/logging3")).build()), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 69 Método: assertThat(nearest.size(), is(NEAR_MISS_COUNT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 70 Método: assertThat(nearest.get(0).getStubMapping().getRequest().getUrl(), is("/righ"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 71 Método: assertThat(nearest.get(1).getStubMapping().getRequest().getUrl(), is("/rig"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 72 Método: assertThat(nearest.get(2).getStubMapping().getRequest().getUrl(), is("/almost-right"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 82 Método: assertThat(nearest.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 96 Método: assertThat(nearest.size(), is(NEAR_MISS_COUNT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 97 Método: assertThat(nearest.get(0).getRequest().getUrl(), is("/righ"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 98 Método: assertThat(nearest.get(1).getRequest().getUrl(), is("/rig"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 99 Método: assertThat(nearest.get(2).getRequest().getUrl(), is("/almost-right"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 100 Método: assertThat(nearest.get(2).getRequest().getMethod(), is(DELETE))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 110 Método: assertThat(nearest.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 111 Método: assertThat(nearest.get(0).getRequest().getUrl(), is("/righ"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 121 Método: assertThat(nearest.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 142 Método: assertThat(nearestForCorrectMethodAndUrl.get(0).getStubMapping().getName(), is("Correct"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 147 Método: assertThat(nearestForIncorrectMethodAndCorrectUrl.get(0).getStubMapping().getName(), is("Correct"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/verification/NearMissCalculatorTest.java linha: 153 Método: assertThat(nearestForIncorrectMethodAndUrl.get(0).getStubMapping().getName(), is("Correct"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 34 Método: assertThat(testClient.get("/v1/contacts/12345").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 35 Método: assertThat(testClient.get("/v1/contacts/23456").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 37 Método: assertThat(testClient.get("/v2/contacts/23456").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 48 Método: assertThat(testClient.get("/v1/contacts/12345/addresses/99876").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 50 Método: assertThat(testClient.get("/v1/contacts/12345/addresses/55555").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 51 Método: assertThat(testClient.get("/v1/contacts/23456/addresses/99876").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 52 Método: assertThat(testClient.get("/v1/contacts/23456/addresses/55555").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 63 Método: assertThat(response.content(), containsString("Request was not matched"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 64 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 69 Método: assertThrows(InvalidInputException.class, () -> stubFor(get(urlPathEqualTo("/stuff")).withPathParam("wrong", containing("things")).willReturn(ok())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlPathTemplateMatchingTest.java linha: 81 Método: assertThrows(InvalidInputException.class, () -> wm.stubFor(get(urlPathEqualTo("/stuff")).withPathParam("wrong", containing("things")).willReturn(ok())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DeadlockTest.java linha: 110 Método: assertEquals(expectedBody, body)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DeadlockTest.java linha: 106 Método: assertThat(e, instanceOf(SocketTimeoutException.class))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DeadlockTest.java linha: 104 Método: fail("Expected SocketTimeoutException")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 61 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 62 Método: assertThat(response.firstHeader("Access-Control-Allow-Origin"), is("http://my.corp.com"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 63 Método: assertThat(response.firstHeader("Access-Control-Allow-Methods"), is("OPTIONS,GET,POST,PUT,PATCH,DELETE"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 78 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 79 Método: assertThat(response.firstHeader("Access-Control-Allow-Origin"), is("http://my.corp.com"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 80 Método: assertThat(response.firstHeader("Access-Control-Allow-Methods"), is("OPTIONS,GET,POST,PUT,PATCH,DELETE"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 110 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/CrossOriginTest.java linha: 111 Método: assertThat(response.firstHeader("Access-Control-Allow-Origin"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 57 Método: assertDoesNotThrow(() -> new DirectCallHttpServer(options, adminRequestHandler, stubRequestHandler))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 66 Método: assertDoesNotThrow(server::start)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 74 Método: assertDoesNotThrow(server::start)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 82 Método: assertTrue(server.isRunning())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 91 Método: assertEquals(server.isRunning(), isRunning)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 99 Método: assertEquals(server.port(), -1)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 107 Método: assertEquals(server.httpsPort(), -2)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 173 Método: assertEquals(response, actual)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 210 Método: assertEquals(response, actual)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 219 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 243 Método: assertThrows(IllegalStateException.class, () -> handle(request))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 245 Método: assertEquals("The request was not handled within the timeout of 5ms", actual.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerTest.java linha: 246 Método: assertTrue(actual.getCause() instanceof TimeoutException)

Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerIntegrationTest.java linha: 43 Método: assertEquals(404, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerIntegrationTest.java linha: 64 Método: assertEquals(200, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerIntegrationTest.java linha: 65 Método: assertThat(stopwatch.elapsed(MILLISECONDS), greaterThanOrEqualTo(499L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/direct/DirectCallHttpServerIntegrationTest.java linha: 82 Método: assertEquals("THINGS!", response.getBodyAsString())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/UniformDistributionTest.java linha: 37 Método: assertThat("found 0", found[0], is(false))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/UniformDistributionTest.java linha: 38 Método: assertThat("found 1", found[1], is(false))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/UniformDistributionTest.java linha: 39 Método: assertThat("found 2", found[2], is(false))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/UniformDistributionTest.java linha: 40 Método: assertThat("found 3", found[3], is(true))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/UniformDistributionTest.java linha: 41 Método: assertThat("found 4", found[4], is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 36 Método: assertThat(body.asString(), is("this content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 37 Método: assertThat(body.isBinary(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 38 Método: assertThat(body.isJson(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 45 Método: assertThat(body.asString(), is("this content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 46 Método: assertThat(body.isBinary(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 47 Método: assertThat(body.isJson(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 54 Método: assertThat(body.asString(), is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 55 Método: assertThat(body.isBinary(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 56 Método: assertThat(body.isJson(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 65 Método: assertThat(body.asString(), is("this content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 66 Método: assertThat(body.isBinary(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 67 Método: assertThat(body.isJson(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/BodyTest.java linha: 75 Método: assertThat(body.asJson(), is(jsonContent))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 70 Método: assertNull(alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 81 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 92 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 102 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 103 Método: assertThat(testNotifier.getErrorMessages(), contains("Dynamic certificate generation is not supported because your SSL Provider does not support SSLSocket.getHandshakeSession()" + lineSeparator() + "All sites will be served using the normal WireMock HTTPS certificate."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 118 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 129 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 130 Método: assertThat(testNotifier.getErrorMessages(), contains("Dynamic certificate generation is not supported because your SSL Provider does not support ExtendedSSLSession.getRequestedServerNames()" + lineSeparator() + "All sites will be served using the normal WireMock HTTPS certificate."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 146 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 158 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseServerAliasDefaultsTest.java linha: 176 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 56 Método: assertNull(generatingKeyManager.getCertificateChain(hostname))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 57 Método: assertNull(generatingKeyManager.getPrivateKey(hostname))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 64 Método: assertEquals(hostname, keyAlias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 67 Método: assertEquals(2, generatingKeyManager.getCertificateChain(keyAlias).length)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 71 Método: assertEquals(myPublicKey, generatingKeyManager.getCertificateChain(keyAlias)[0].getPublicKey())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 96 Método: assertEquals(keyAlias, sameKeyAlias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 99 Método: assertEquals(privateKey, generatingKeyManager.getPrivateKey(sameKeyAlias))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasTest.java linha: 100 Método: assertArrayEquals(certificateChain, generatingKeyManager.getCertificateChain(sameKeyAlias))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 68 Método: assertNull(alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 80 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 91 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 92 Método: assertThat(testNotifier.getErrorMessages(), contains("Dynamic certificate generation is not supported because your SSL Provider does not support SSLEngine.getHandshakeSession()" + lineSeparator() + "All sites will be served using the normal WireMock HTTPS certificate."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 108 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 120 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 121 Método: assertThat(testNotifier.getErrorMessages(), contains("Dynamic certificate generation is not supported because your SSL Provider does not support ExtendedSSLSession.getRequestedServerNames()" + lineSeparator() + "All sites will be served using the normal WireMock HTTPS certificate."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 138 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 151 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CertificateGeneratingX509ExtendedKeyManagerChooseEngineServerAliasDefaultsTest.java linha: 170 Método: assertEquals("default_alias", alias)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CompositeTrustManagerTest.java linha: 59 Método: assertThrows(CertificateException.class, () -> {
    compositeTrustManager.checkServerTrusted(chain, authType);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CompositeTrustManagerTest.java linha: 64 Método: assertEquals(invalidCertForTrustManager1, thrown)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CompositeTrustManagerTest.java linha: 117 Método: assertThrows(CertificateException.class, () -> {
    compositeTrustManager.checkServerTrusted(chain, authType);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CompositeTrustManagerTest.java linha: 123 Método: assertEquals(invalidCertForTrustManager2, thrown)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CompositeTrustManagerTest.java linha: 142 Método: assertArrayEquals(new X509Certificate[] { cert1, cert2, cert3, cert4 }, acceptedIssuers)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ssl/CompositeTrustManagerTest.java linha: 146 Método: assertArrayEquals(new X509Certificate[] { cert1, cert2, cert3, cert4 }, compositeTrustManager.getAcceptedIssuers())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 32 Método: assertThat(header.isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 38 Método: assertThat(header.isPresent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 44 Método: assertThat(header.firstValue(), is("value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 50 Método: assertThat(header.values(), hasItems("value1", "value2", "value3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 56 Método: assertThat(header.containsValue("value2"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 57 Método: assertThat(header.containsValue("value72727"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 62 Método: assertThrows(IllegalStateException.class, () -> {
    HttpHeader.absent("Something").firstValue();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 71 Método: assertThrows(IllegalStateException.class, () -> {
    HttpHeader.absent("Something").values();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 82 Método: assertThat(header.hasValueMatching(WireMock.equalTo("my-value")), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 83 Método: assertThat(header.hasValueMatching(WireMock.equalTo("other-value")), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 90 Método: assertThat(header.hasValueMatching(WireMock.matching("value.*")), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 91 Método: assertThat(header.hasValueMatching(WireMock.equalTo("value2")), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 92 Método: assertThat(header.hasValueMatching(WireMock.equalTo("value4")), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 100 Método: assertThat(header1.equals(header2), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 101 Método: assertThat(header1.hashCode(), equalTo(header2.hashCode()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 109 Método: assertThat(header1.equals(header2), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 110 Método: assertThat(header1.hashCode(), equalTo(header2.hashCode()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeaderTest.java linha: 118 Método: assertThat(header1.equals(header2), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpClientFactoryAcceptsTrustedCertificatesTest.java linha: 66 Método: assertEquals("Hello World", result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 91 Método: assertEquals(response.getBodyAsString(), "Result")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 103 Método: assertEquals(HTTP_INTERNAL_ERROR, response.getStatus())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 104 Método: assertThat(response.getBodyAsString(), startsWith("SSL failure trying to make a proxied request from WireMock to " + origin.url("/proxied")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 109 Método: assertThat(response.getBodyAsString(), containsString("unable to find valid certification path to requested target"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 123 Método: assertEquals(response.getBodyAsString(), "Result")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 138 Método: assertThat("CORS response header sent from the origin is not present in the response", corsHeader.isPresent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 142 Método: assertThat(corsHeader.firstValue(), is("X-Blah"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 157 Método: assertThat("CORS response header sent from the origin is present in the response", corsHeader.isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 230 Método: Assertions.assertThat(requests)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 257 Método: Assertions.assertThat(requests)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 270 Método: assertThat(forwardProxyClientRequestConfig.getResponseTimeout().toMilliseconds(), is(Long.valueOf(PROXY_TIMEOUT)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ProxyResponseRendererTest.java linha: 271 Método: assertThat(reverseProxyClientRequestConfig.getResponseTimeout().toMilliseconds(), is(Long.valueOf(PROXY_TIMEOUT)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 31 Método: assertThat(Json.write(cookie), is("\"one\""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 37 Método: assertThat(Json.write(cookie), equalToJson("[\"one\", \"two\", \"three\"]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 43 Método: assertThat(Json.write(cookie), equalToJson("[]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 52 Método: assertThat(cookie.getValues().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 53 Método: assertThat(cookie.getValue(), is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 62 Método: assertThat(cookie.getValues().size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 63 Método: assertThat(cookie.getValues(), hasItems("one", "two", "three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 72 Método: assertThat(cookie.getValues().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/CookieTest.java linha: 73 Método: assertThat(cookie.isAbsent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/StubResponseRendererTest.java linha: 60 Método: assertThat(response.getInitialDelay(), is(100L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/StubResponseRendererTest.java linha: 70 Método: assertThat(response.getInitialDelay(), is(1000L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/StubResponseRendererTest.java linha: 80 Método: assertThat(response.getInitialDelay(), is(1000L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/StubResponseRendererTest.java linha: 87 Método: assertThat(response.getInitialDelay(), is(2000L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/StubResponseRendererTest.java linha: 97 Método: assertThat(response.getInitialDelay(), is(123L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/StubResponseRendererTest.java linha: 105 Método: assertThat(response.getInitialDelay(), is(2123L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpClientFactoryRejectsUntrustedCertificatesTest.java linha: 60 Método: assertThrows(SSLException.class, () -> client.execute(new HttpGet(server.url("/whatever"))))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/LogNormalTest.java linha: 36 Método: assertEquals(97.1115, sum / (double) n, 5.0)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 36 Método: assertThat(response.getProxyUrl(), equalTo("http://my.domain/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 46 Método: assertThat(response.getProxyUrl(), equalTo("http://my.proxy.url/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 59 Método: assertThat(response.getProxyUrl(), equalTo("http://my.proxy.url/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 72 Método: assertThat(response.getProxyUrl(), equalTo("http://my.proxy.url"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 82 Método: assertThat(response.getProxyUrl(), equalTo("http://my.proxy.url/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 92 Método: assertThat(response.getProxyUrl(), equalTo("http://my.proxy.url/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ResponseDefinitionTest.java linha: 101 Método: assertThat(response.getProxyUrl(), equalTo("null/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 33 Método: assertThat(header.isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 41 Método: assertThat(header.isPresent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 42 Método: assertThat(header.key(), is("Test-Header"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 43 Método: assertThat(header.containsValue("value2"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 55 Método: assertThat(copyOfHeaders.all(), hasItems(header("Header-1", "h1v1"), header("Header-1", "h1v2"), header("Header-2", "h2v1"), header("Header-2", "h2v2")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 74 Método: assertThat(header.key(), is("Header-1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 75 Método: assertThat(header.firstValue(), is("only-value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 76 Método: assertThat(header.values().size(), is(1))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 84 Método: assertThat("Actual: " + json, json, equalToJson(SINGLE_VALUE_HEADER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 105 Método: assertThat(header.key(), is("Header-1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 106 Método: assertThat(header.values(), hasExactly(equalTo("value-1"), equalTo("value-2")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 107 Método: assertThat(header.values().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 110 Método: assertThat(header.key(), is("Header-2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 111 Método: assertThat(header.values(), hasExactly(equalTo("value-3"), equalTo("value-4")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 112 Método: assertThat(header.values().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 114 Método: assertThat(headers.size(), is(2))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 125 Método: assertThat("Actual: " + json, json, equalToJson(MULTI_VALUE_HEADER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 132 Método: assertThat(headers.getHeader("header-one").firstValue(), is("value 1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 138 Método: assertThat(httpHeaders.toString().contains("Test-Header"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 144 Método: assertThat(httpHeaders.toString().equals("(no headers)\n"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 155 Método: assertThat(httpHeaders.equals(copyOfHeaders), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/HttpHeadersTest.java linha: 156 Método: assertThat(httpHeaders.hashCode(), equalTo(copyOfHeaders.hashCode()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 33 Método: assertThat(header.mimeTypePart(), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 35 Método: assertTrue(encoding.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 36 Método: assertThat(encoding.get(), is("utf-8"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 42 Método: assertThat(header.mimeTypePart(), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 49 Método: assertTrue(encoding.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 50 Método: assertThat(encoding.get(), is("utf-8"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 56 Método: assertFalse(header.encodingPart().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 63 Método: assertTrue(encoding.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 64 Método: assertThat(encoding.get(), is("UTF-8"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 72 Método: assertThat(contentTypeHeader.mimeTypePart(), is("text/xml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 77 Método: assertThrows(NullPointerException.class, () -> {
    new MockRequestBuilder().withHeader("Content-Type", null).build();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 87 Método: assertThat(header.mimeTypePart(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 93 Método: assertThat(header.charset(), is(StandardCharsets.ISO_8859_1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 99 Método: assertThat(header.charset(), is(Strings.DEFAULT_CHARSET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/http/ContentTypeHeaderTest.java linha: 105 Método: assertThat(header.charset(), is(Strings.DEFAULT_CHARSET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 112 Método: assertThat(testClient.get("/standalone/test/resource").content(), is("Content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 131 Método: assertThat(testClient.get("/resource/from/file").content(), is("Body from mapping file"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 139 Método: assertThat(testClient.get("/resource/from/file").content(), is("Body from mapping file"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 147 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 148 Método: assertThat(response.content(), is("<content>Blah</content>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 149 Método: assertThat(response.firstHeader("Content-Type"), is("application/xml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 158 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 159 Método: assertThat(response.content(), is("<content>Blah</content>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 160 Método: assertThat(response.firstHeader("Content-Type"), is("application/xml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 168 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 169 Método: assertThat(response.content(), is("{ \"key\": \"value\" }"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 170 Método: assertThat(response.firstHeader("Content-Type"), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 179 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 180 Método: assertThat(response.content(), is("{ \"key\": \"index page value\" }"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 188 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 189 Método: assertThat(response.content(), is("{ \"key\": \"new value\" }"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 190 Método: assertThat(response.firstHeader("Content-Type"), is("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 198 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 199 Método: assertThat(response.content(), is("<blob>BLAB</blob>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 200 Método: assertThat(response.firstHeader("Content-Type"), is("application/xml;charset=utf-8"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 208 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 229 Método: assertThat(testClient.get("/body/file").content(), is("<body>Content</body>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 238 Método: assertThat(returnedContent, is(MappingJsonSamples.BINARY_COMPRESSED_CONTENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 239 Método: assertThat(decompress(returnedContent), is(MappingJsonSamples.BINARY_COMPRESSED_CONTENT_AS_STRING))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 247 Método: assertThat(systemOutText(), containsString("Verbose logging enabled"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 254 Método: assertThat(systemOutText(), not(containsString("Verbose logging enabled")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 276 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 291 Método: assertThat(testClient.get("/body/file").content(), is("Existing recorded body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 307 Método: assertThat(mappingsDirectory, containsAFileContaining("/please/record-this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 308 Método: assertThat(contentsOfFirstFileNamedLike("please-record-this"), containsString("bodyFileName\" : \"body-please-record-this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 326 Método: assertThat(mappingsDirectory, containsAFileContaining("/please/record-headers"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 327 Método: assertThat(contentsOfFirstFileNamedLike("please-record-headers"), containsString("\"Accept\" : {"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 344 Método: assertThat(mappingsDirectory, containsAFileContaining("/record-zip"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 345 Método: assertThat(filesDirectory, containsAFileContaining("gzipped body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 361 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 372 Método: assertThat(testClient.getViaProxy("http://localhost:" + otherServer.port() + "/from/browser/proxy").content(), is("Proxied body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 383 Método: assertThat(mappingsDirectory, doesNotContainAFileWithNameContaining("try-to-record"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 400 Método: assertThat(mappingsDirectory, containsExactlyOneFileWithNameContaining("try-to-record"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 416 Método: fail("WireMock did not shut down")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 437 Método: fail("WireMock did not shut down")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 443 Método: assertThat(runner.isRunning(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 462 Método: assertThrows(MappingFileException.class, this::startRunner)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 463 Método: assertThat(exception.getMessage(), allOf(containsString("Error loading file"), containsString("bad-mapping.json"), containsString("Unrecognized field \"requesttttt\""), containsString("class com.github.tomakehurst.wiremock.stubbing.StubMapping"), containsString("not marked as ignorable")))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StandaloneAcceptanceTest.java linha: 482 Método: fail(String.format("Couldn't find a file under %s named like %s", directory.getPath(), namePart))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 86 Método: assertThat(testNotifier.getErrorMessages(), hasItem(allOf(containsString("Request was not matched"), containsString("/a-near-mis"), containsString("/near-miss"), containsString("HTTP method does not match"), containsString("URL does not match"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 101 Método: assertThat(message, containsString("2 requests were unmatched by any stub mapping"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 102 Método: assertThat(message, containsString(junitStyleDiffMessage("GET\n/hit\n", "GET\n/near-misssss\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 104 Método: assertThat(message, containsString(junitStyleDiffMessage("GET\n/hit\n", "GET\n/a-near-mis\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 111 Método: assertThat(message, containsString("A request was unmatched by any stub mapping. Closest stub mapping was:"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 114 Método: assertThat(message, containsString(junitStyleDiffMessage("GET\n/hit\n", "GET\n/near-misssss\n")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 121 Método: assertThrows(VerificationException.class, () -> {
    client.get("/123");
    wm.verify(getRequestedFor(urlPathEqualTo("/")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 128 Método: assertTrue(exception.getMessage().contains("No requests exactly matched. Most similar request was:"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesRuleAcceptanceTest.java linha: 191 Método: assertThat(wmeWithCustomMatcher.findNearMissesForAllUnmatchedRequests().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LoggedResponseTruncationTest.java linha: 54 Método: assertThat(wm.getAllServeEvents().get(0).getResponse().getBodyAsString(), is(bigBody))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LoggedResponseTruncationTest.java linha: 63 Método: assertThat(wm.getAllServeEvents().get(0).getResponse().getBodyAsString(), is(bigBody))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LoggedResponseTruncationTest.java linha: 74 Método: assertThat(loggedResponseBody, is(expectedLoggedBody))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/LoggedResponseTruncationTest.java linha: 75 Método: assertThat(loggedResponseBody.length(), is(MAX_SIZE))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/OldEditStubMappingTaskTest.java linha: 60 Método: assertThat(response.getStatus(), is(HttpURLConnection.HTTP_NO_CONTENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/SaveMappingsTaskTest.java linha: 50 Método: assertThat(response.getStatus(), is(HttpURLConnection.HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 37 Método: assertThat(result, is(asList(1, 2, 3, 4, 5)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 47 Método: assertThat(result, is(Collections.<Integer>emptyList()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 57 Método: assertThat(result, is(asList(1, 2, 3)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 67 Método: assertThat(result, is(asList(3, 4, 5)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 77 Método: assertThat(result, is(asList(2, 3, 4)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 87 Método: assertThat(result, is(asList(4, 5)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 92 Método: assertThrows(IllegalArgumentException.class, () -> {
    new LimitAndOffsetPaginator<>(Collections.<Void>emptyList(), -1, 3);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/LimitAndOffsetPaginatorTest.java linha: 101 Método: assertThrows(IllegalArgumentException.class, () -> {
    new LimitAndOffsetPaginator<>(Collections.<Void>emptyList(), 0, -10);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/model/QueryParamsTest.java linha: 30 Método: assertThat(QueryParams.EMPTY.toString(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/model/QueryParamsTest.java linha: 35 Método: assertThat(QueryParams.single("param", "123").toString(), is("?param=123"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/model/QueryParamsTest.java linha: 40 Método: assertThat(QueryParams.single("param", "123", "blah", "456").toString(), is("?param=123&param=blah&param=456"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/admin/model/QueryParamsTest.java linha: 50 Método: assertThat(queryParams.toString(), is("?one=1&two=2&two=three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditStubMappingAcceptanceTest.java linha: 37 Método: assertThat(testClient.get("/edit-this").content(), is("Original"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditStubMappingAcceptanceTest.java linha: 42 Método: assertThat(testClient.get("/edit-this").content(), is("Modified"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/EditStubMappingAcceptanceTest.java linha: 49 Método: assertThat(editThisStubCount, is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 35 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 36 Método: assertThat(offset.getAmount(), is(7))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 42 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.MINUTES))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 43 Método: assertThat(offset.getAmount(), is(78))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 49 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.HOURS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 50 Método: assertThat(offset.getAmount(), is(-12))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 56 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.DAYS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 57 Método: assertThat(offset.getAmount(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 63 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.MONTHS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 64 Método: assertThat(offset.getAmount(), is(-12))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 70 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.YEARS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 71 Método: assertThat(offset.getAmount(), is(101))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 77 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.YEARS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 78 Método: assertThat(offset.getAmount(), is(101))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 84 Método: assertThat(offset.getAmountUnit(), is(DateTimeUnit.MONTHS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 85 Método: assertThat(offset.getAmount(), is(-5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 90 Método: assertThat(DateTimeOffset.fromString("123 minutes").toString(), is("123 minutes"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 91 Método: assertThat(DateTimeOffset.fromString("-72 hours").toString(), is("-72 hours"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 96 Método: assertThat(new DateTimeOffset(67, DateTimeUnit.DAYS).toString(), is("67 days"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 97 Método: assertThat(new DateTimeOffset(-12, DateTimeUnit.SECONDS).toString(), is("-12 seconds"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 103 Método: assertThat(positiveDateOffset.shift(ZonedDateTime.parse("2021-06-18T00:00:00Z")), is(ZonedDateTime.parse("2021-06-28T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 108 Método: assertThat(negativeDateOffset.shift(ZonedDateTime.parse("2021-06-18T00:00:00Z")), is(ZonedDateTime.parse("2021-02-18T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 119 Método: assertThat(ISO8601.format(finalDate), is("2018-04-19T12:01:01Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 124 Método: assertThrows(IllegalArgumentException.class, () -> {
    DateTimeOffset.fromString("101");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeOffsetTest.java linha: 133 Método: assertThrows(IllegalArgumentException.class, () -> {
    DateTimeOffset.fromString("101 squillions");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ssl/KeyStoreSettingsTest.java linha: 33 Método: assertNotNull(keyStore)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ssl/KeyStoreSettingsTest.java linha: 42 Método: assertNotNull(keyStore)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ssl/KeyStoreSettingsTest.java linha: 51 Método: assertNotNull(keyStore)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ssl/KeyStoreSettingsTest.java linha: 56 Método: assertThrows(IllegalArgumentException.class, () -> {
    KeyStoreSettings trustStoreSettings = new KeyStoreSettings("test-unknownstore", "", "jks");
    trustStoreSettings.loadStore();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ssl/KeyStoreSourceTest.java linha: 36 Método: assertThat(key, notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 30 Método: assertTrue(ContentTypes.determineIsTextFromExtension("txt"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 31 Método: assertTrue(ContentTypes.determineIsTextFromExtension("json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 32 Método: assertTrue(ContentTypes.determineIsTextFromExtension("xml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 33 Método: assertTrue(ContentTypes.determineIsTextFromExtension("html"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 34 Método: assertTrue(ContentTypes.determineIsTextFromExtension("htm"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 35 Método: assertTrue(ContentTypes.determineIsTextFromExtension("yaml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 36 Método: assertTrue(ContentTypes.determineIsTextFromExtension("csv"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 38 Método: assertFalse(ContentTypes.determineIsTextFromExtension("jpg"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 39 Método: assertFalse(ContentTypes.determineIsTextFromExtension("png"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 40 Método: assertFalse(ContentTypes.determineIsTextFromExtension(null))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 41 Método: assertFalse(ContentTypes.determineIsTextFromExtension(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 46 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 47 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("text/html"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 48 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 49 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("some-preamble; application/json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 50 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("application/blah.something+json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 51 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("application/xml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 52 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("text/xml"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 53 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("text/xml; utf-8"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 54 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("application/csv"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 55 Método: assertTrue(ContentTypes.determineIsTextFromMimeType("application/x-www-form-urlencoded"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 57 Método: assertFalse(ContentTypes.determineIsTextFromMimeType("application/octet-stream"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 58 Método: assertFalse(ContentTypes.determineIsTextFromMimeType("image/jpeg"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 59 Método: assertFalse(ContentTypes.determineIsTextFromMimeType("application/pdf"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 64 Método: assertTrue(ContentTypes.determineIsText("txt", "text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 65 Método: assertTrue(ContentTypes.determineIsText("xml", ""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 66 Método: assertTrue(ContentTypes.determineIsText("json", null))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 68 Método: assertFalse(ContentTypes.determineIsText("png", null))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 69 Método: assertFalse(ContentTypes.determineIsText(null, "image/jpeg"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 80 Método: assertThat(fileExtension, is("txt"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ContentTypesTest.java linha: 89 Método: assertThat(fileExtension, is("png"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/TextFileTest.java linha: 38 Método: assertEquals("/home/bob/myfile.txt", path)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/TextFileTest.java linha: 53 Método: assertEquals(Paths.get("C:/Users/bob/myfile.txt"), path)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 30 Método: assertArrayEquals(empty, concat(empty, empty))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 38 Método: assertArrayEquals(new Integer[] { 1, 2 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 41 Método: assertArrayEquals(new Integer[] { 1, 2 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 49 Método: assertArrayEquals(new Integer[] { 1, 2 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 52 Método: assertArrayEquals(new Integer[] { 1, 2 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 61 Método: assertArrayEquals(new Integer[] { 1, 2, 3, 4 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 65 Método: assertArrayEquals(new Integer[] { 1, 2, 3, 4 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 70 Método: assertArrayEquals(new Integer[] { null }, prepend(null, empty))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 76 Método: assertArrayEquals(new Integer[] { 1 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 84 Método: assertArrayEquals(new Integer[] { null, 1, 2 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 87 Método: assertArrayEquals(new Integer[] { null, 1, 2 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 95 Método: assertArrayEquals(new Integer[] { 1, 2, 3 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ArrayFunctionsTest.java linha: 98 Método: assertArrayEquals(new Integer[] { 1, 2, 3 }, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 45 Método: assertThat(files, hasItems(fileNamed("pom.properties"), fileNamed("pom.xml")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 55 Método: assertThat(files, hasItems(fileNamed("one"), fileNamed("two"), fileNamed("three"), fileNamed("four"), fileNamed("five"), fileNamed("six")))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 72 Método: assertThat("Expected a non zero length file", binaryFile.readContents().length, greaterThan(0))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 81 Método: assertThat("Expected a non zero length file", binaryFile.readContents().length, greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 91 Método: assertThat(contents, containsString("zip"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 101 Método: assertThat("Informative error", e.getMessage(), startsWith("Was unable to find entry: \"zippeddir/thisWillNotBeFound.txt\", found:"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 99 Método: fail("Should have thrown exception.")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 114 Método: assertThat("Expected a non zero length file", binaryFile.readContents().length, greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 123 Método: assertThat(child.getPath(), is("filesource/subdir"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 128 Método: assertTrue(new ClasspathFileSource("filesource/subdir").exists(), "Expected to exist")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 129 Método: assertTrue(new ClasspathFileSource("META-INF/maven/com.google.guava").exists(), "Expected to exist")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ClasspathFileSourceTest.java linha: 131 Método: assertFalse(new ClasspathFileSource("not/exist").exists(), "Expected not to exist")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 42 Método: assertThat(nodes.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 43 Método: assertThat(nodes.get(0).toString(), is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 44 Método: assertThat(nodes.get(1).toString(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 63 Método: assertThat(nodes.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 64 Método: assertThat(nodes.get(0).getAttributes().get("id"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 65 Método: assertThat(nodes.get(0).getAttributes().get("fl:group"), is("555"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 74 Método: assertThat(xmlDocument.toString(), equalsMultiLine("<one>\n" + "  <two>\n" + "    <three name=\"3\"/>\n" + "  </two>\n" + "</one>\n"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 87 Método: assertThat(nodes.getFirst().toString(), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 97 Método: assertThat(nodes.getFirst().toString(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 107 Método: assertThat(nodes.getFirst().toString().trim(), equalsMultiLine("<two>\n" + "  <three name=\"3\"/>\n" + "</two>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/xml/XmlTest.java linha: 132 Método: assertThat(xmlNodes.toString(), is("<fl:inner fl:code=\"D1\" id=\"123\">Innards</fl:inner>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/Base64EncoderTest.java linha: 32 Método: assertThat(encoded, is(OUTPUT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/Base64EncoderTest.java linha: 35 Método: assertThat(decoded, is(INPUT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ListFunctionsTest.java linha: 33 Método: assertEquals(pair(Collections.<Number>emptyList(), Collections.<Integer>emptyList()), splitByType(input, Integer.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ListFunctionsTest.java linha: 42 Método: assertEquals(pair(singletonList(1L), Collections.<Integer>emptyList()), splitByType(input, Integer.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ListFunctionsTest.java linha: 51 Método: assertEquals(pair(Collections.<Number>emptyList(), singletonList(1)), splitByType(input, Integer.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ListFunctionsTest.java linha: 59 Método: assertEquals(pair(asList(1L, 2L, 3L), asList(1, 2, 3)), splitByType(input, Integer.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 38 Método: assertThat(pathParams.get("id"), is("11-22-33"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 43 Método: assertThrows(IllegalArgumentException.class, () -> {
    PathTemplate template = new PathTemplate("/things/{id}");
    template.parse("/things/stuff/11-22-33");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 55 Método: assertThat(template.matches("/things/11-22-33/otherthings/12378"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 62 Método: assertThat(template.matches("/things/11-22-33/otherthings"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 69 Método: assertThat(template.matches("/things/11-22-33/other-stuff/1234"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 79 Método: assertThat(path, is("/things/123/otherthings/456"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 88 Método: assertThat(path, is("/things/stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 93 Método: assertThrows(IllegalArgumentException.class, () -> {
    PathTemplate template = new PathTemplate("/things/{id}/otherthings/{subId}");
    template.render(new PathParams().add("id", "123"));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 107 Método: assertThat(pathParams.get("0"), is("stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 116 Método: assertThat(pathParams.get("0"), is("foo/bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 125 Método: assertThat(pathParams.get("id"), is("foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 126 Método: assertThat(pathParams.get("0"), is("bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 136 Método: assertThat(path, is("/things/stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 146 Método: assertThat(path, is("/things/foo/bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 156 Método: assertThat(path, is("/things/foo/bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 161 Método: assertThrows(IllegalArgumentException.class, () -> {
    PathTemplate template = new PathTemplate("/things/{id}/**");
    template.render(new PathParams().add("id", "123"));
})
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 186 Método: fail(format("Can't add '%s' to '%s'", template, uriTemplateSet))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 208 Método: fail(format("Can't add '%s' to '%s'", template, uriTemplates))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 217 Método: assertThat(pathTemplate.withoutVariables(), is("/one//two//three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 222 Método: assertTrue(PathTemplate.couldBePathTemplate("/things/{id}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 223 Método: assertTrue(PathTemplate.couldBePathTemplate("/things/**"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 224 Método: assertTrue(PathTemplate.couldBePathTemplate("/things/{id}/stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 226 Método: assertFalse(PathTemplate.couldBePathTemplate("/things/in/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 227 Método: assertFalse(PathTemplate.couldBePathTemplate("/thing"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 235 Método: assertThat(pathParams.get("first"), is(".3,4,5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 236 Método: assertThat(pathParams.get("second"), is(";second=1;second=2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/url/PathTemplateTest.java linha: 248 Método: assertThat(renderedUrl, is("/one/.3,4,5/two/;second=1;second=2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 55 Método: assertFalse(jettySettings.getAcceptors().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 56 Método: assertFalse(jettySettings.getAcceptQueueSize().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 57 Método: assertFalse(jettySettings.getRequestHeaderSize().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 58 Método: assertFalse(jettySettings.getStopTimeout().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 59 Método: assertFalse(jettySettings.getIdleTimeout().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 63 Método: assertTrue(optional.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 64 Método: assertEquals(Integer.valueOf(number), optional.get())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 68 Método: assertTrue(optional.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/JettySettingsTest.java linha: 69 Método: assertEquals(Long.valueOf(longNumber), optional.get())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/VeryShortIdGeneratorTest.java linha: 31 Método: assertThat(id, matches("[A-Za-z0-9]{5}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 35 Método: assertThat(rules.isAllowed("192.168.1.111"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 37 Método: assertThat(rules.isAllowed("10.1.2.1"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 38 Método: assertThat(rules.isAllowed("10.1.2.3"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 39 Método: assertThat(rules.isAllowed("10.5.5.5"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 46 Método: assertThat(rules.isAllowed("10.1.1.1"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 47 Método: assertThat(rules.isAllowed("10.1.1.0"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 48 Método: assertThat(rules.isAllowed("10.1.1.2"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 55 Método: assertThat(rules.isAllowed("10.1.1.1"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 56 Método: assertThat(rules.isAllowed("10.1.1.0"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 57 Método: assertThat(rules.isAllowed("10.1.1.2"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 65 Método: assertThat(rules.isAllowed("10.1.1.0"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 66 Método: assertThat(rules.isAllowed("10.1.1.1"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 67 Método: assertThat(rules.isAllowed("10.1.1.2"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 68 Método: assertThat(rules.isAllowed("10.1.1.3"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 69 Método: assertThat(rules.isAllowed("10.1.1.4"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 77 Método: assertThat(rules.isAllowed("10.1.1.0"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 78 Método: assertThat(rules.isAllowed("10.1.1.1"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 79 Método: assertThat(rules.isAllowed("10.1.1.2"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 80 Método: assertThat(rules.isAllowed("10.1.1.3"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 81 Método: assertThat(rules.isAllowed("10.1.1.4"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 89 Método: assertThat(rules.isAllowed("10.1.1.0"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 90 Método: assertThat(rules.isAllowed("10.1.1.1"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 91 Método: assertThat(rules.isAllowed("10.1.1.2"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 92 Método: assertThat(rules.isAllowed("10.1.1.3"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRulesTest.java linha: 93 Método: assertThat(rules.isAllowed("10.1.1.4"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 29 Método: assertThat(exclusion.isIncluded("10.1.2.3"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 30 Método: assertThat(exclusion.isIncluded("10.3.2.1"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 37 Método: assertThat(exclusion.isIncluded("10.1.1.1"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 38 Método: assertThat(exclusion.isIncluded("10.1.2.2"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 39 Método: assertThat(exclusion.isIncluded("10.1.1.254"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 40 Método: assertThat(exclusion.isIncluded("10.1.2.1"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 42 Método: assertThat(exclusion.isIncluded("10.3.2.1"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 43 Método: assertThat(exclusion.isIncluded("10.1.1.0"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 44 Método: assertThat(exclusion.isIncluded("10.1.2.3"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 51 Método: assertThat(exclusion.isIncluded("my.stuff.wiremock.org"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 52 Método: assertThat(exclusion.isIncluded("notmy.stuff.wiremock.org"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 59 Método: assertThat(exclusion.isIncluded("my.stuff.wiremock.org"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 60 Método: assertThat(exclusion.isIncluded("alsomy.stuff.wiremock.org"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 61 Método: assertThat(exclusion.isIncluded("notmy.things.wiremock.org"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 68 Método: assertThat(exclusion.isIncluded("my.stuff.wiremock.org"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 69 Método: assertThat(exclusion.isIncluded("my.fluff.wiremock.org"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 70 Método: assertThat(exclusion.isIncluded("notmy.stuff.wiremock.org"), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 76 Método: assertThat(exclusion.isIncluded("localhost"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/NetworkAddressRangeTest.java linha: 82 Método: assertThat(exclusion.isIncluded("localhost"), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 35 Método: assertThat(SafeNames.makeSafeFileName(mapping), is("this-is-a-named-stub-" + mapping.getId() + ".json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 45 Método: assertThat(SafeNames.makeSafeFileName(mapping), is("named0-9things-" + mapping.getId() + ".json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 53 Método: assertThat(SafeNames.makeSafeFileName(mapping), is(mapping.getId() + ".json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 59 Método: assertThat(output, is("wire-mocks-it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 66 Método: assertThat(output, is(input))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 72 Método: assertThat(output, is("hello_1_2_3___ace--ace___and"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SafeNamesTest.java linha: 80 Método: assertThat(output.length(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 32 Método: assertThat(parser.parseZonedDateTime("2021-06-23T11:12:13Z"), is(ZonedDateTime.parse("2021-06-23T11:12:13Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 36 Método: assertThat(parser.parseLocalDateTime("2021-06-23T11:12:13"), is(LocalDateTime.parse("2021-06-23T11:12:13")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 44 Método: assertThat(parser.parseZonedDateTime("23/06/2021 11:22:33 +0000"), is(ZonedDateTime.parse("2021-06-23T11:22:33Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 52 Método: assertThat(parser.parseLocalDateTime("23/06/2021 11:12:13"), is(LocalDateTime.parse("2021-06-23T11:12:13")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 60 Método: assertThat(parser.parseLocalDate("23/06/2021"), is(LocalDate.parse("2021-06-23")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 66 Método: assertThat(parser.parseZonedDateTime("1624447353"), is(ZonedDateTime.parse("2021-06-23T11:22:33Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 69 Método: assertThat(parser.parseLocalDateTime("1624447353"), is(LocalDateTime.parse("2021-06-23T11:22:33")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 76 Método: assertThat(parser.parseZonedDateTime("1624447353000"), is(ZonedDateTime.parse("2021-06-23T11:22:33Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeParserTest.java linha: 80 Método: assertThat(parser.parseLocalDateTime("1624447353000"), is(LocalDateTime.parse("2021-06-23T11:22:33")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 30 Método: assertThat(output, is(ZonedDateTime.parse("2021-06-18T10:11:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 37 Método: assertThat(output, is(ZonedDateTime.parse("2021-06-18T10:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 44 Método: assertThat(output, is(ZonedDateTime.parse("2021-06-18T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 51 Método: assertThat(output, is(ZonedDateTime.parse("2021-06-01T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 58 Método: assertThat(output, is(ZonedDateTime.parse("2021-07-01T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 65 Método: assertThat(output, is(ZonedDateTime.parse("2021-06-30T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 72 Método: assertThat(output, is(ZonedDateTime.parse("2021-01-01T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 79 Método: assertThat(output, is(ZonedDateTime.parse("2022-01-01T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 86 Método: assertThat(output, is(ZonedDateTime.parse("2021-12-31T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 91 Método: assertThat(DateTimeTruncation.fromString("last day of year"), is(DateTimeTruncation.LAST_DAY_OF_YEAR))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/DateTimeTruncationTest.java linha: 97 Método: assertThat(DateTimeTruncation.FIRST_DAY_OF_MONTH.toString(), is("first day of month"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 46 Método: assertThat(files, hasExactlyIgnoringOrder(fileNamed("one"), fileNamed("two"), fileNamed("three"), fileNamed("four"), fileNamed("five"), fileNamed("six"), fileNamed("seven"), fileNamed("eight"), fileNamed("deepfile.json")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 68 Método: assertThat(Files.exists(fileAbsolutePath), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 73 Método: assertThrows(RuntimeException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource("src/test/resources/filesource/one");
    fileSource.listFilesRecursively();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 84 Método: assertThrows(RuntimeException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource("src/test/resources/filesource/one");
    fileSource.writeTextFile("thing", "stuff");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 96 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource("src/test/resources/security-filesource/root");
    fileSource.getBinaryFileNamed("../rootdir/file.json");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 107 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    fileSource.writeTextFile("..", "stuff");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 117 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    String badPath = Paths.get("..", "not-under-root").toAbsolutePath().toString();
    fileSource.writeTextFile(badPath, "stuff");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 128 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    fileSource.writeBinaryFile("..", "stuff".getBytes());
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 138 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    String badPath = Paths.get("..", "not-under-root").toAbsolutePath().toString();
    fileSource.writeBinaryFile(badPath, "stuff".getBytes());
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 149 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    String badPath = Paths.get("..", "not-under-root").toAbsolutePath().toString();
    fileSource.deleteFile(badPath);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 160 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    fileSource.getBinaryFileNamed("../illegal.file");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 170 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    fileSource.getTextFileNamed("../illegal.file");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 180 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    String badPath = new File(ROOT_PATH, "../illegal.file").getCanonicalPath();
    fileSource.getBinaryFileNamed(badPath);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/SingleRootFileSourceTest.java linha: 191 Método: assertThrows(NotAuthorisedException.class, () -> {
    SingleRootFileSource fileSource = new SingleRootFileSource(ROOT_PATH);
    String badPath = new File(ROOT_PATH, "../illegal.file").getCanonicalPath();
    fileSource.getTextFileNamed(badPath);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/LimitTest.java linha: 29 Método: assertThat(limit.isExceededBy(4), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/LimitTest.java linha: 30 Método: assertThat(limit.isExceededBy(5), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/LimitTest.java linha: 31 Método: assertThat(limit.isExceededBy(6), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/LimitTest.java linha: 36 Método: assertTrue(Limit.UNLIMITED.isUnlimited())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UniqueFilenameGeneratorTest.java linha: 30 Método: assertThat(fileName, is("body-some-path-random123.json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UniqueFilenameGeneratorTest.java linha: 37 Método: assertThat(fileName, is("body-thing-random123.json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UniqueFilenameGeneratorTest.java linha: 44 Método: assertThat(fileName, is("body-(root)-random123.json"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UniqueFilenameGeneratorTest.java linha: 63 Método: assertThat(fileName.length(), is(expectedLength))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 34 Método: assertThat(params.get("param1").firstValue(), is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 35 Método: assertThat(params.get("param2").firstValue(), is("one==two=three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 41 Método: assertThat(params.get("param1").firstValue(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 42 Método: assertThat(params.get("param2").firstValue(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 43 Método: assertThat(params.get("param3").firstValue(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 49 Método: assertThat(params.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 50 Método: assertThat(params.get("param1").isSingleValued(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 51 Método: assertThat(params.get("param1").values(), hasItems("1", "2", "3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 58 Método: assertThat(query.get("q").firstValue(), is("a%b"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 63 Método: assertThat(Urls.urlToPathParts(URI.create("/")), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 64 Método: assertThat(Urls.urlToPathParts(URI.create("http://www.wiremock.org/")), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 70 Método: assertThat(pathParts, is("foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 76 Método: assertThat(pathParts, is("foo-bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 82 Método: assertThat(pathParts, is("foo-bar-zoo-wire-mock"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 90 Método: assertThat(oneValues, hasItems("1", "11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 91 Método: assertThat(oneValues, hasItem("11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 92 Método: assertThat(query.get("two").firstValue(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 100 Método: assertThat(oneValues, hasItems("1", "11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 101 Método: assertThat(oneValues, hasItem("11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 102 Método: assertThat(query.get("two").firstValue(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 108 Método: assertThat(query.isEmpty(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 114 Método: assertThat(query.isEmpty(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 120 Método: assertThat(query.isEmpty(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 125 Método: assertThat(Urls.getPath("/one/two/3?q=a"), is("/one/two/3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 130 Método: assertThat(Urls.getPath("/one/two/3"), is("/one/two/3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 135 Método: assertThat(Urls.getPath("/one/two/3/?q=a"), is("/one/two/3/"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 140 Método: assertThat(Urls.getPath("/?q=a"), is("/"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/UrlsTest.java linha: 145 Método: assertThat(Urls.getPath("?q=a"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ServletContextFileSourceTest.java linha: 48 Método: assertThat(files, hasExactlyIgnoringOrder(fileNamed("one"), fileNamed("two"), fileNamed("three"), fileNamed("four"), fileNamed("five"), fileNamed("six"), fileNamed("seven"), fileNamed("eight"), fileNamed("deepfile.json")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ServletContextFileSourceTest.java linha: 64 Método: assertThrows(UnsupportedOperationException.class, () -> {
    fileSource.writeTextFile("filename", "filecontents");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ServletContextFileSourceTest.java linha: 73 Método: assertThrows(UnsupportedOperationException.class, fileSource::createIfNecessary)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 37 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 38 Método: assertThat(proxySettings.port(), is(PROXYVIA_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 44 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 45 Método: assertThat(proxySettings.port(), is(DEFAULT_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 51 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 52 Método: assertThat(proxySettings.port(), is(PROXYVIA_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 57 Método: assertThrows(IllegalArgumentException.class, () -> {
    ProxySettings proxySettings = ProxySettings.fromString(PROXYVIA_URL + ":80a");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 68 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 69 Método: assertThat(proxySettings.port(), is(DEFAULT_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 70 Método: assertThat(proxySettings.getUsername(), is(USER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 71 Método: assertThat(proxySettings.getPassword(), is(PASSWORD))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 78 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 79 Método: assertThat(proxySettings.port(), is(PROXYVIA_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 80 Método: assertThat(proxySettings.getUsername(), is(USER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 81 Método: assertThat(proxySettings.getPassword(), is(PASSWORD))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 87 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 88 Método: assertThat(proxySettings.port(), is(DEFAULT_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 89 Método: assertThat(proxySettings.getUsername(), is(USER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 90 Método: assertThat(proxySettings.getPassword(), is(emptyOrNullString()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 96 Método: assertThat(proxySettings.host(), is(PROXYVIA_URL))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 97 Método: assertThat(proxySettings.port(), is(PROXYVIA_PORT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 102 Método: assertThrows(IllegalArgumentException.class, () -> {
    ProxySettings proxySettings = ProxySettings.fromString("https://" + PROXYVIA_URL_WITH_PORT);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/common/ProxySettingsTest.java linha: 112 Método: assertThrows(IllegalArgumentException.class, () -> {
    ProxySettings proxySettings = ProxySettings.fromString("ul:invalid:80");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 59 Método: assertThat(getContentUsingDefaultJvmHttpClient("http://example.com/stuff"), is("Proxied stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 77 Método: assertThat(EntityUtils.toString(response.getEntity()), is("Proxied stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 99 Método: assertThat(System.getProperty("http.proxyHost"), is("localhost"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 100 Método: assertThat(System.getProperty("http.proxyPort"), is(String.valueOf(wireMockServer.port())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 101 Método: assertThat(System.getProperty("https.proxyHost"), is("localhost"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 102 Método: assertThat(System.getProperty("https.proxyPort"), is(String.valueOf(wireMockServer.port())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 103 Método: assertThat(System.getProperty("http.nonProxyHosts"), is("localhost|127.*|[::1]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 107 Método: assertThat(System.getProperty("http.proxyHost"), is(previousHttpProxyHost))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 108 Método: assertThat(System.getProperty("http.proxyPort"), is(previousHttpProxyPort))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 109 Método: assertThat(System.getProperty("https.proxyHost"), is(previousHttpsProxyHost))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 110 Método: assertThat(System.getProperty("https.proxyPort"), is(previousHttpsProxyPort))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/JvmProxyConfigAcceptanceTest.java linha: 111 Método: assertThat(System.getProperty("http.nonProxyHosts"), is(previousNonProxyHosts))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DelayAndCustomMatcherAcceptanceTest.java linha: 63 Método: assertThat(stopwatch.elapsed(MILLISECONDS), greaterThanOrEqualTo(500L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DelayAndCustomMatcherAcceptanceTest.java linha: 64 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/DelayAndCustomMatcherAcceptanceTest.java linha: 65 Método: assertThat(response.content(), is("Transformed body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 108 Método: assertThat(proxyingTestClient.snapshot(""), equalToJson(DEFAULT_SNAPSHOT_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 113 Método: assertEquals(3, proxyingService.getStubMappings().size())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 167 Método: assertThat(proxyingTestClient.snapshot(FILTER_BY_REQUEST_PATTERN_SNAPSHOT_REQUEST), equalToJson(FILTER_BY_REQUEST_PATTERN_SNAPSHOT_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 214 Método: assertThat(proxyingTestClient.snapshot(request), equalToJson(FILTER_BY_REQUEST_PATTERN_AND_IDS_SNAPSHOT_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 250 Método: assertThat(proxyingTestClient.snapshot(FILTER_BY_WITH_NON_PROXIED_TRUE_SNAPSHOT_REQUEST), equalToJson(FILTER_BY_WITH_NON_PROXIED_TRUE_SNAPSHOT_RESPONSE, JSONCompareMode.LENIENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 313 Método: assertThat(actual, equalToJson(CAPTURE_HEADERS_SNAPSHOT_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 361 Método: assertThat(proxyingTestClient.snapshot(REPEATS_AS_SCENARIOS_SNAPSHOT_REQUEST), equalToJson(REPEATS_AS_SCENARIOS_SNAPSHOT_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 409 Método: assertThat(proxyingTestClient.snapshot(GLOBAL_TRANSFORMED_STUB_MAPPING_REQUEST), equalToJson(GLOBAL_TRANSFORMED_STUB_MAPPING_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 467 Método: assertThat(proxyingTestClient.snapshot(NONGLOBAL_TRANSFORMED_STUB_MAPPING_REQUEST), equalToJson(NONGLOBAL_TRANSFORMED_STUB_MAPPING_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 545 Método: assertThat(response.content(), equalToJson(RECORD_WITH_CAPTURE_HEADERS_RECORD_RESPONSE, JSONCompareMode.STRICT_ORDER))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 550 Método: assertThat(createdMapping.getScenarioName(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RecordApiAcceptanceTest.java linha: 570 Método: assertThat(response.content(), equalToJson(NOT_RECORDING_ERROR))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 61 Método: assertThat(testClient.getViaProxy(target.url("/whatever"), proxy.port()).content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 70 Método: assertThat(testClient.getViaProxy(target.url("/search?q=things&limit=10"), proxy.port()).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 83 Método: assertThat(testClient.getViaProxy(target.url("/something"), proxy.port()).statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 97 Método: assertThat(wireMockResponse.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 98 Método: assertThat(wireMockResponse.content(), is("Default response"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 108 Método: assertThat(wireMockResponse.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 109 Método: assertThat(wireMockResponse.content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 123 Método: assertThat(testClient.get("/whatever").content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BrowserProxyAcceptanceTest.java linha: 144 Método: assertThat(request.isBrowserProxyRequest(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 124 Método: assertThat(response.content(), is("Proxied content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 125 Método: assertThat(response.firstHeader("Content-Type"), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 171 Método: assertThat(response.content(), is("Proxied content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 188 Método: assertThat(response.statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 209 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 251 Método: assertThat(post.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 252 Método: assertThat(post.binaryContent(), Matchers.equalTo(bytes))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 281 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 282 Método: assertThat(response.getFirstHeader("Content-Length").getValue(), is("4"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 298 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 299 Método: assertThat(response.getFirstHeader("Content-Length").getValue(), is("4"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 390 Método: assertThat(response.firstHeader("Content-Type"), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 391 Método: assertThat(response.firstHeader("X-Additional-Header"), is("Yep"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 410 Método: assertThat(lastRequest.getHeaders().getHeader("Cookie").values().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 422 Método: assertThat(lastRequest.getHeaders().getHeader("Connection").values().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 430 Método: assertThat(testClient.get("/ssl-cert").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 442 Método: assertThat(testClient.get("/proxy-via").statusCode(), is(200))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 453 Método: assertFalse(lastRequest.getHeaders().getHeader("Accept-Encoding").isPresent(), "Accept-Encoding header should not be present")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 469 Método: assertThat(lastRequest.header("Accept").values(), hasItems("accept1", "accept2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 498 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 513 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 533 Método: assertThat(responseToRequestWithoutSlash.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 537 Método: assertThat(responseToRequestWithSlash.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 557 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 558 Método: assertThat(stopwatch.elapsed(MILLISECONDS), greaterThanOrEqualTo(300L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 576 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 577 Método: assertThat(stopwatch.elapsed(MILLISECONDS), greaterThanOrEqualTo(300L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 595 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 613 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 628 Método: assertThat(requests.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 629 Método: assertThat(requests.get(0).getMethod().getName(), is(method))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 630 Método: assertThat(requests.get(0).getBodyAsString(), is("Proxied content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 645 Método: assertThat(response.statusCode(), is(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 646 Método: assertThat(response.content(), is("The target proxy address is denied in WireMock's configuration."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 650 Método: assertThat(testClient.get("/").statusCode(), is(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 660 Método: assertThat(testClient.get("/").content(), is("The target proxy address is denied in WireMock's configuration."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 672 Método: assertThat(testClient.get("/").content(), is("The target proxy address is denied in WireMock's configuration."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 684 Método: assertThat(testClient.get("/").content(), is("The target proxy address is denied in WireMock's configuration."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 709 Método: assertThat(response.content(), is("Proxied content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 710 Método: assertThat(response.firstHeader("Content-Type"), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 733 Método: assertThat(response.content(), startsWith("Network failure trying to make a proxied request from WireMock"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ProxyAcceptanceTest.java linha: 736 Método: assertThat(response.statusCode(), is(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 53 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/one")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 54 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/two")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 55 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/three")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 71 Método: assertThat(stubs.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 72 Método: assertThat(stubs.get(2).getResponse().getBody(), is("Updated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 89 Método: assertThat(stubs.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 90 Método: assertThat(stubs.get(2).getResponse().getBody(), is("Original"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 108 Método: assertThat(stubs.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 109 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/one")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 110 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/two")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 111 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/three")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 112 Método: assertThat(stubs.get(2).getResponse().getBody(), is("Updated"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubImportAcceptanceTest.java linha: 131 Método: assertThat(stubs.size(), is(5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/Http2AcceptanceTest.java linha: 50 Método: assertThat(response.getStatus(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/Http2AcceptanceTest.java linha: 60 Método: assertThat(response.getVersion(), is(HTTP_2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/Http2AcceptanceTest.java linha: 61 Método: assertThat(response.getStatus(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/Http2AcceptanceTest.java linha: 72 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 38 Método: assertThat(testClient.get("/stub-1").content(), is("Stub-1-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 43 Método: assertThat(testClient.get("/stub-2").content(), is("Stub-2-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 45 Método: assertThat(getMatchingStubCount("/stub-1", "/stub-2"), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 50 Método: assertThat(getMatchingStubCount("/stub-1", "/stub-2"), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 55 Método: assertThat(getMatchingStubCount("/stub-1", "/stub-2"), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 66 Método: assertThat(testClient.get("/stub-11").content(), is("Stub-11-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 72 Método: assertThat(testClient.get("/stub-22").content(), is("Stub-22-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 74 Método: assertThat(getMatchingStubCount("/stub-11", "/stub-22"), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 80 Método: assertThat(getMatchingStubCount("/stub-11", "/stub-22"), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 86 Método: assertThat(getMatchingStubCount("/stub-11", "/stub-22"), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 97 Método: assertThat(testClient.get("/stub-111").content(), is("Stub-111-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 103 Método: assertThat(testClient.get("/stub-222").content(), is("Stub-222-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 105 Método: assertThat(getMatchingStubCount("/stub-111", "/stub-222"), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 109 Método: assertThat(getMatchingStubCount("/stub-111", "/stub-222"), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 113 Método: assertThat(getMatchingStubCount("/stub-111", "/stub-222"), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 123 Método: assertThat(testClient.get("/stb-1").content(), is("Stb-1-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 128 Método: assertThat(testClient.get("/stb-2").content(), is("Stb-2-Body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 130 Método: assertThat(getMatchingStubCount("/stb-1", "/stb-2"), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoveStubMappingAcceptanceTest.java linha: 136 Método: assertThat(getMatchingStubCount("/stb-1", "/stb-2"), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 35 Método: assertThat(jettyStopTimeout.isPresent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 36 Método: assertThat(jettyStopTimeout.get(), is(expectedStopTimeout))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 43 Método: assertThat(jettyStopTimeout.isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 53 Método: assertThat(jettyIdleTimeout.isPresent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 54 Método: assertThat(jettyIdleTimeout.get(), is(expectedIdleTimeout))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 61 Método: assertThat(jettyIdleTimeout.isPresent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 74 Método: assertThat(threadPool.getMaxThreads(), is(maxThreads))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/core/WireMockConfigurationTest.java linha: 81 Método: assertFalse(wireMockConfiguration.getStores().getSettingsStore().get().getProxyPassThrough())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 60 Método: assertThat(testClient.get("/some/resource").content(), is("Initial"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 62 Método: assertThat(testClient.get("/some/resource").content(), is("Modified"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 79 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 80 Método: assertThat(response.content(), is("Some content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 85 Método: assertThat(response.statusCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 86 Método: assertThat(response.content(), is("Some content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 106 Método: assertThat(testClient.get("/stateful/resource").content(), is("Expected content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 111 Método: assertThrows(IllegalArgumentException.class, () -> {
    get(urlEqualTo("/some/resource")).willReturn(aResponse()).inScenario(null);
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 138 Método: assertThat(scenario1.getPossibleStates(), hasItems(STARTED, "state_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 139 Método: assertThat(scenario1.getState(), is("state_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 142 Método: assertThat(scenario2.getState(), is("Started"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 173 Método: assertThat(getAllScenarios().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 179 Método: assertThat(getAllScenarios().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 205 Método: assertThat(getAllScenarios().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 206 Método: assertThat(getAllScenarios().get(0).getId(), is(OLD_NAME))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 223 Método: assertThat(getAllScenarios().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 224 Método: assertThat(getAllScenarios().get(0).getId(), is(NEW_NAME))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 229 Método: assertThat(getAllScenarios().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 261 Método: assertThat(testClient.get("/one").content(), is("started"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 262 Método: assertThat(testClient.get("/one").content(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 266 Método: assertThat(testClient.get("/one").content(), is("started"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 286 Método: assertThat(testClient.get("/one").content(), is("started"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 287 Método: assertThat(testClient.get("/one").content(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 288 Método: assertThat(testClient.get("/one").content(), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 291 Método: assertThat(testClient.get("/one").content(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 296 Método: assertThrows(ClientError.class, () -> resetScenario("non-exist"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ScenarioAcceptanceTest.java linha: 315 Método: assertThrows(ClientError.class, () -> setScenarioState("set-me", "non-exist"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingWithBrowserProxyAcceptanceTest.java linha: 140 Método: assertThat(EntityUtils.toString(response.getEntity()), is(EXPECTED_RESPONSE_BODY))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/StubbingWithBrowserProxyAcceptanceTest.java linha: 146 Método: assertThat(EntityUtils.toString(response.getEntity()), not(is(EXPECTED_RESPONSE_BODY)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsListenerExtensionTest.java linha: 63 Método: assertThat(listener.events.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsListenerExtensionTest.java linha: 64 Método: assertThat(listener.events.get(0), is("beforeGlobalSettingsUpdated, old: 100, new: 200"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsListenerExtensionTest.java linha: 65 Método: assertThat(listener.events.get(1), is("afterGlobalSettingsUpdated, old: 100, new: 200"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsListenerExtensionTest.java linha: 113 Método: assertThat(e.getErrors().first().getTitle(), is("missing required element"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsListenerExtensionTest.java linha: 114 Método: assertThat(wm.getGlobalSettings().getSettings().getFixedDelay(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/GlobalSettingsListenerExtensionTest.java linha: 111 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 74 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 85 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 86 Método: assertThat(response.content(), is("Response to /some/url"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 88 Método: assertThat(listAllStubMappings().getMappings(), everyItem(IS_PERSISTENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 96 Método: assertThat(MAPPINGS_DIRECTORY, containsFileWithNameContaining(stubMapping.getId().toString()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 100 Método: assertThat(MAPPINGS_DIRECTORY, not(containsFileWithNameContaining(stubMapping.getId().toString())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 138 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 148 Método: assertThat(MAPPINGS_DIRECTORY.listFiles().length, is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 155 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/SavingMappingsAcceptanceTest.java linha: 166 Método: assertThat(MAPPINGS_DIRECTORY.listFiles().length, is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingTransformerRunnerTest.java linha: 38 Método: assertEquals(stubMapping, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingTransformerRunnerTest.java linha: 49 Método: assertEquals(stubMapping, result)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingTransformerRunnerTest.java linha: 62 Método: assertEquals("/?transformed=nonglobal", result.getRequest().getUrl())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingTransformerRunnerTest.java linha: 72 Método: assertEquals("/?transformed=global", result.getRequest().getUrl())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 43 Método: assertThat(pattern.getEqualTo(), is(JSON_TEST_STRING))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 44 Método: assertThat(pattern.getCaseInsensitive(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 54 Método: assertThat(pattern.getEqualTo(), is(JSON_TEST_STRING))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 55 Método: assertThat(pattern.getCaseInsensitive(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 64 Método: assertThat(pattern.getEqualToJson(), is(JSON_TEST_STRING))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 65 Método: assertThat(pattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 66 Método: assertThat(pattern.isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 77 Método: assertThat(pattern.getEqualToJson(), is(JSON_TEST_STRING))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 78 Método: assertThat(pattern.isIgnoreExtraElements(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 79 Método: assertThat(pattern.isIgnoreArrayOrder(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 87 Método: assertThat(pattern.getEqualToXml(), is(XML_TEST_STRING))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 97 Método: assertThat(pattern.toString(), is("anything"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyAutomaticPatternFactoryTest.java linha: 107 Método: assertThat(pattern.toString(), is("binaryEqualTo AQID"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotRecordResultDeserialiserTest.java linha: 48 Método: assertThat(result, instanceOf(SnapshotRecordResult.Full.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotRecordResultDeserialiserTest.java linha: 49 Método: assertThat(result.getStubMappings().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotRecordResultDeserialiserTest.java linha: 50 Método: assertThat(result.getStubMappings().get(0), instanceOf(StubMapping.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotRecordResultDeserialiserTest.java linha: 66 Método: assertThat(result, instanceOf(SnapshotRecordResult.Ids.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotRecordResultDeserialiserTest.java linha: 69 Método: assertThat(idsResult.getIds().size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotOutputFormatterTest.java linha: 28 Método: assertEquals(FULL, SnapshotOutputFormatter.fromString(null))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotOutputFormatterTest.java linha: 33 Método: assertThrows(IllegalArgumentException.class, () -> {
    SnapshotOutputFormatter.fromString("invalid output format");
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotOutputFormatterTest.java linha: 42 Método: assertEquals(FULL, SnapshotOutputFormatter.fromString("full"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotOutputFormatterTest.java linha: 47 Método: assertEquals(IDS, SnapshotOutputFormatter.fromString("ids"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestPatternTransformerTest.java linha: 42 Método: assertEquals(expected.build(), new RequestPatternTransformer(null, null).apply(request).build())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestPatternTransformerTest.java linha: 66 Método: assertEquals(expected.build(), new RequestPatternTransformer(headers, null).apply(request).build())
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherDeserializerTest.java linha: 41 Método: assertEquals(expected, actual, "Failed with " + input)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherDeserializerTest.java linha: 48 Método: assertEquals(new ResponseDefinitionBodyMatcher(Long.MAX_VALUE, Long.MAX_VALUE), matcher)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherDeserializerTest.java linha: 55 Método: assertEquals(new ResponseDefinitionBodyMatcher(100, Long.MAX_VALUE), matcher)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherDeserializerTest.java linha: 64 Método: assertEquals(new ResponseDefinitionBodyMatcher(100, 10), matcher)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RecordingStatusResultTest.java linha: 32 Método: assertThat(result.getStatus(), is(RecordingStatus.Recording))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RecordingStatusResultTest.java linha: 41 Método: assertThat(json, equalToJson("{ \"status\": \"Recording\" }"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 42 Método: assertThat(foobar1.getScenarioName(), is("scenario-1-foo-bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 43 Método: assertThat(foobar1.getRequiredScenarioState(), is(Scenario.STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 44 Método: assertThat("scenario-1-foo-bar-2", is(foobar1.getNewScenarioState()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 46 Método: assertThat(foobar2.getScenarioName(), is(foobar1.getScenarioName()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 47 Método: assertThat(foobar2.getRequiredScenarioState(), is("scenario-1-foo-bar-2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 48 Método: assertThat(foobar2.getNewScenarioState(), is("scenario-1-foo-bar-3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 50 Método: assertThat(foobar1.getScenarioName(), is(foobar3.getScenarioName()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 51 Método: assertThat(foobar3.getRequiredScenarioState(), is("scenario-1-foo-bar-3"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 52 Método: assertThat("Last mapping should not have a state transition", foobar3.getNewScenarioState(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 57 Método: assertThat(other1.getScenarioName(), is("scenario-2-other"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 58 Método: assertThat(other1.getNewScenarioState(), is("scenario-2-other-2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 59 Método: assertThat(other2.getRequiredScenarioState(), is("scenario-2-other-2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 70 Método: assertThat(one.getScenarioName(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 71 Método: assertThat(two.getScenarioName(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ScenarioProcessorTest.java linha: 72 Método: assertThat(three.getScenarioName(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyEqualToJsonPatternFactoryTest.java linha: 33 Método: assertThat(pattern.getEqualToJson(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyEqualToJsonPatternFactoryTest.java linha: 34 Método: assertThat(pattern.isIgnoreExtraElements(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyEqualToJsonPatternFactoryTest.java linha: 35 Método: assertThat(pattern.isIgnoreArrayOrder(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyEqualToJsonPatternFactoryTest.java linha: 44 Método: assertThat(pattern.getEqualToJson(), is("{}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyEqualToJsonPatternFactoryTest.java linha: 45 Método: assertThat(pattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyEqualToJsonPatternFactoryTest.java linha: 46 Método: assertThat(pattern.isIgnoreArrayOrder(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 29 Método: assertFalse(matcher.match(new ResponseDefinition()).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 30 Método: assertTrue(matcher.match(textResponseDefinition("a")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 31 Método: assertTrue(matcher.match(binaryResponseDefinition(new byte[] { 0x1 })).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 37 Método: assertFalse(matcher.match(textResponseDefinition("f")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 38 Método: assertFalse(matcher.match(textResponseDefinition("fo")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 39 Método: assertTrue(matcher.match(textResponseDefinition("foo")).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 45 Método: assertFalse(matcher.match(binaryResponseDefinition(new byte[] { 0x1 })).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 46 Método: assertFalse(matcher.match(binaryResponseDefinition(new byte[] { 0x1, 0xc })).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ResponseDefinitionBodyMatcherTest.java linha: 47 Método: assertTrue(matcher.match(binaryResponseDefinition(new byte[] { 0x1, 0xc, 0xf })).isExactMatch())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 41 Método: assertThat(actual, hasSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 42 Método: assertThat(actual.get(0).getRequest().getUrl(), equalTo("/foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 43 Método: assertThat(actual.get(1).getRequest().getUrl(), equalTo("/bar"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 63 Método: assertThat(actual, hasSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 64 Método: assertThat(actual.get(0).getRequest().getUrl(), equalTo("/foo/transformed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 65 Método: assertThat(actual.get(1).getRequest().getUrl(), equalTo("/bar/transformed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 94 Método: assertThat(actual, hasSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 96 Método: assertThat(actual.get(0).getRequest().getUrl(), is("/foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingPostProcessorTest.java linha: 97 Método: assertThat(actual.get(1).getRequest().getUrl(), is("/extracted"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/LoggedResponseDefinitionTransformerTest.java linha: 35 Método: assertEquals(responseDefinition().withStatus(401).build(), aTransformer().apply(response))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/LoggedResponseDefinitionTransformerTest.java linha: 49 Método: assertEquals(expected, aTransformer().apply(response))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/LoggedResponseDefinitionTransformerTest.java linha: 67 Método: assertEquals(expected, aTransformer().apply(response))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/LoggedResponseDefinitionTransformerTest.java linha: 89 Método: assertEquals(expected, aTransformer().apply(response))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/LoggedResponseDefinitionTransformerTest.java linha: 100 Método: assertEquals(expected, aTransformer().apply(response))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 32 Método: assertThat(bodyPatternFactory, instanceOf(RequestBodyAutomaticPatternFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 38 Método: assertThat(bodyPatternFactory, instanceOf(RequestBodyAutomaticPatternFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 51 Método: assertThat(bodyPattern.getCaseInsensitive(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 52 Método: assertThat(bodyPattern.getExpected(), is("this body text"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 66 Método: assertThat(bodyPattern.isIgnoreArrayOrder(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 67 Método: assertThat(bodyPattern.isIgnoreExtraElements(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/RequestBodyPatternFactoryJsonDeserializerTest.java linha: 74 Método: assertThat(bodyPatternFactory, instanceOf(RequestBodyEqualToXmlPatternFactory.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingBodyExtractorTest.java linha: 48 Método: assertThat(stubMapping.getResponse().getBodyFileName(), is("foo-" + stubMapping.getId() + ".txt"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingBodyExtractorTest.java linha: 50 Método: assertThat(stubMapping.getResponse().specifiesBodyFile(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingBodyExtractorTest.java linha: 51 Método: assertThat(stubMapping.getResponse().specifiesBodyContent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/SnapshotStubMappingGeneratorTest.java linha: 50 Método: assertThat(actual, is(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 44 Método: assertTrue(filters.apply(serveEvent))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 48 Método: assertTrue(filters.apply(serveEvent))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 55 Método: assertFalse(filters.apply(serveEvent))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 64 Método: assertTrue(filters.apply(proxiedServeEvent(request)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 65 Método: assertTrue(filters.apply(proxiedServeEvent(request.url("/bar"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 66 Método: assertFalse(filters.apply(proxiedServeEvent(request.method(POST))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 77 Método: assertTrue(filters.apply(proxiedServeEvent(ids.get(0))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 78 Método: assertTrue(filters.apply(proxiedServeEvent(ids.get(1))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 79 Método: assertFalse(filters.apply(proxiedServeEvent(UUID.fromString("00000000-0000-0000-0000-000000000002"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 90 Método: assertTrue(filters.apply(proxiedServeEvent(request)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 91 Método: assertFalse(filters.apply(proxiedServeEvent(request.url("/bar"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 92 Método: assertFalse(filters.apply(proxiedServeEvent(request.method(POST))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 105 Método: assertTrue(filters.apply(proxiedServeEvent(ids.get(0), request)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 106 Método: assertFalse(filters.apply(proxiedServeEvent(UUID.fromString("00000000-0000-0000-0000-000000000002"), request)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/recording/ProxiedServeEventFiltersTest.java linha: 109 Método: assertFalse(filters.apply(proxiedServeEvent(ids.get(0), request.method(POST))))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MultipartBodyMatchingAcceptanceTest.java linha: 64 Método: assertThat(EntityUtils.toString(response.getEntity()), response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MultipartBodyMatchingAcceptanceTest.java linha: 84 Método: assertThat(response.getCode(), is(404))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MultipartBodyMatchingAcceptanceTest.java linha: 109 Método: assertThat(EntityUtils.toString(response.getEntity()), response.getCode(), is(200))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MultipartBodyMatchingAcceptanceTest.java linha: 134 Método: assertThat(EntityUtils.toString(response.getEntity()), response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MultipartBodyMatchingAcceptanceTest.java linha: 152 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MultipartBodyMatchingAcceptanceTest.java linha: 168 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTransformerAcceptanceTest.java linha: 46 Método: assertThat(client.get("/response-transform").content(), is("Modified body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTransformerAcceptanceTest.java linha: 62 Método: assertThat(client.get("/response-transform-with-params").content(), is("John, 66, true"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTransformerAcceptanceTest.java linha: 71 Método: assertThat(client.get("/global-response-transform").firstHeader("X-Extra"), is("extra val"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseTransformerAcceptanceTest.java linha: 80 Método: assertThat(client.get("/response-transform-with-files").content(), endsWith("plain-example.txt"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 66 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 69 Método: assertThat(response.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 75 Método: assertThat(testClient.get("/test").content(), is("THINGS!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 87 Método: assertThat(stubs.size(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 88 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/single/1")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 89 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/multi/1")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 90 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/multi/2")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsLoaderAcceptanceTest.java linha: 91 Método: assertThat(stubs, hasItem(stubMappingWithUrl("/multi/3")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyClientAuthAcceptanceTest.java linha: 88 Método: assertThat(response.getCode(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyClientAuthAcceptanceTest.java linha: 89 Método: assertThat(EntityUtils.toString(response.getEntity()), is("Success"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/ParametersTest.java linha: 33 Método: assertThat(myData.getName(), is("Tom"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/ParametersTest.java linha: 34 Método: assertThat(myData.getNum(), is(27))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/ParametersTest.java linha: 43 Método: assertThat(parameters.getString("name"), is("Mark"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/ParametersTest.java linha: 44 Método: assertThat(parameters.getInt("num"), is(12))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 37 Método: assertThat(wrappedRequest.getMethod(), is(RequestMethod.POST))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 53 Método: assertThat(wrappedRequest.getUrl(), is("/new-path?one=1&two=2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 54 Método: assertThat(wrappedRequest.getAbsoluteUrl(), is("http://wiremock.org/new-path?one=1&two=2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 66 Método: assertThat(wrappedRequest.getUrl(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 67 Método: assertThat(wrappedRequest.getAbsoluteUrl(), is("http://wiremock.org"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 76 Método: assertThat(wrappedRequest.getHeaders().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 77 Método: assertThat(wrappedRequest.getHeader("Two"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 86 Método: assertThat(wrappedRequest.getHeaders().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 109 Método: assertThat(wrappedRequest.getHeader("One"), is("11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 111 Método: assertThat(headerTwo.values().get(0), is("22"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 112 Método: assertThat(headerTwo.values().get(1), is("32"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 125 Método: assertThat(wrappedRequest.getCookies().size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 126 Método: assertThat(wrappedRequest.getCookies().get("Two").firstValue(), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 127 Método: assertThat(wrappedRequest.getCookies().get("Three").firstValue(), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 136 Método: assertThat(wrappedRequest.getCookies().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 137 Método: assertThat(wrappedRequest.getCookies().get("Two"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 149 Método: assertThat(wrappedRequest.getCookies().get("One").firstValue(), is("11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 165 Método: assertThat(wrappedRequest.getBodyAsString(), is("Two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 166 Método: assertThat(wrappedRequest.getBodyAsBase64(), is(encodeBase64("Two".getBytes())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 179 Método: assertThat(wrappedRequest.getBody(), is(finalBytes))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 180 Método: assertThat(wrappedRequest.getBodyAsBase64(), is(encodeBase64(finalBytes)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 197 Método: assertThat(wrappedRequest.getPart("one").getBody().asString(), is("1111"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 198 Método: assertThat(wrappedRequest.getPart("two").getBody().asString(), is("2222"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/requestfilter/RequestWrapperTest.java linha: 199 Método: assertThat(wrappedRequest.getParts(), hasItem(mockPart().name("one").body("1111")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 62 Método: assertThat(transformedResponseDef.getBody(), is("Multi 1: one, Multi 2: two, Single 1: 1234"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 72 Método: assertThat(transformedResponseDef.getBody(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 87 Método: assertThat(transformedResponseDef.getBody(), is("Request ID: req-id-1234, Awkward named header: foundit"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 101 Método: assertThat(transformedResponseDef.getBody(), CoreMatchers.is("Case key header: foundit, With brackets: foundit"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 118 Método: assertThat(transformedResponseDef.getBody(), is("session: session-1234, Awkward named cookie: foundit"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 132 Método: assertThat(transformedResponseDef.getBody(), is("one, one, two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 141 Método: assertThat(transformedResponseDef.getBody(), is("Path: /the/entire/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 151 Método: assertThat(transformedResponseDef.getBody(), is("First: the, Last: path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 159 Método: assertThat(transformedResponseDef.getBody(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 169 Método: assertThat(transformedResponseDef.getBody(), is("URL: /the/entire/path?query1=one&query2=two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 179 Método: assertThat(transformedResponseDef.getBody(), is("IP: 127.0.0.1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 189 Método: assertThat(transformedResponseDef.getBody(), is("Hello Ram"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 199 Método: assertThat(transformedResponseDef.getBody(), is("Body: All of the body content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 209 Método: assertThat(transformedResponseDef.getHeaders().getHeader("X-Correlation-Id").firstValue(), is("12345"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 231 Método: assertThat(headerValues.get(0), is("12345"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 232 Método: assertThat(headerValues.get(1), is("56789"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 242 Método: assertThat(transformedResponseDef.getBody(), is("Some Text"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 252 Método: assertThat(transformedResponseDef.getBody(), is("ONE"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 267 Método: assertThat(transformedResponseDef.getBody(), is("5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 278 Método: assertThat(transformedResponseDef.getBody(), is("y"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 290 Método: assertThat(transformedResponseDef.getProxyBaseUrl(), is("http://localhost:8000"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 291 Método: assertThat(transformedResponseDef.getAdditionalProxyRequestHeaders(), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 292 Método: assertThat(transformedResponseDef.getAdditionalProxyRequestHeaders().getHeader("X-Origin-Url").firstValue(), is("/things"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 309 Método: assertThat(responseDefinition.getBody(), is("{\"test\": \"look at my &#x27;single quotes&#x27;\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 321 Método: assertThat(responseDefinition.getBody(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 332 Método: assertThat(responseDefinition.getBody(), is("foo"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 347 Método: assertThat(responseDefinition.getBody(), is("{\"test\": \"look at my 'single quotes'\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 359 Método: assertThat(responseDefinition.getBody(), is("{\"test\": \"some.value\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 374 Método: assertThat(responseDefinition.getBody(), is("{\"test1\": \"some.value\", \"test2\": \"\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 388 Método: assertThat(transformedResponseDef.getBody(), is("scheme: https"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 402 Método: assertThat(transformedResponseDef.getBody(), is("host: my.domain.io"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 416 Método: assertThat(transformedResponseDef.getBody(), is("port: 8080"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 430 Método: assertThat(transformedResponseDef.getBody(), is("path: /the/entire/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 444 Método: assertThat(transformedResponseDef.getBody(), is("path: /the/entire/path?query1=one&query2=two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 459 Método: assertThat(transformedResponseDef.getBody(), is("baseUrl: https://my.domain.io:8080"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 473 Método: assertThat(transformedResponseDef.getBody(), is("baseUrl: http://my.domain.io"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 487 Método: assertThat(transformedResponseDef.getBody(), is("baseUrl: https://my.domain.io"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 501 Método: assertThat(transformedResponseDef.getBody(), is("path segments: /the/entire/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 515 Método: assertThat(transformedResponseDef.getBody(), is("path segments 0: the"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 527 Método: assertThat(transformedResponseDef.getBody(), is("Multi 1: one, Multi 2: two, Single 1: 1234"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 536 Método: assertThat(body, is("{\n" + "  \"data\": \"spaced out JSON\"\n" + "}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 542 Método: assertThat(body, is("stuff"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 548 Método: assertThat(body, is("aGVsbG8="))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 554 Método: assertThat(body, is("aGVsbG8="))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 560 Método: assertThat(body, is("aGVsbG8"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 566 Método: assertThat(body, is("hello"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 572 Método: assertThat(body, is("hello"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 578 Método: assertThat(body, is("one+two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 584 Método: assertThat(body, is("one two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 593 Método: assertThat(body, is("two%202"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 601 Método: assertThat(body, is("two%202"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 610 Método: assertThat(body, is("two 2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 616 Método: assertThat(body, is("DEF"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 625 Método: assertThat(body, is("abc,DEF,123"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 630 Método: assertThat(transform("{{regexExtract 'abc' '[0-9]+'}}"), is("[ERROR: Nothing matched [0-9]+]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 635 Método: assertThat(transform("{{regexExtract 'abc' '[0-9]+' default='my default value'}}"), is("my default value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 643 Método: assertThat(body, is("5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 654 Método: assertThat(body, is("4"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 663 Método: assertThat(body, is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 674 Método: assertThat(body, is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 685 Método: assertThat(body, is("4"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 696 Método: assertThat(body, is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 707 Método: assertThat(body, is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 718 Método: assertThat(bodyValues, hasItem("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 719 Método: assertThat(bodyValues, hasItem("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 720 Método: assertThat(bodyValues, hasItem("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 729 Método: assertThat(body, anyOf(is("Gus"), is("Tom"), is("Rob")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 740 Método: assertThat(body, is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 751 Método: assertThat(body, is("Order ID: 123"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 762 Método: assertThat(body, is("Start \n\n 1 middle 2 end\n"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 768 Método: assertThat(transformer.getCacheSize(), greaterThan(0L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 772 Método: assertThat(transformer.getCacheSize(), is(0L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 778 Método: assertThat(transformer.getCacheSize(), greaterThan(0L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 782 Método: assertThat(transformer.getCacheSize(), is(0L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 795 Método: assertThat(transformer.getCacheSize(), is(3L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 808 Método: assertThat(transformer.getCacheSize(), is(0L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 820 Método: assertThat(transformedResponseDef.getBody(), is("1: 111, 2: 222, 3: 333"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 825 Método: assertThat(transform("{{randomInt}}"), matchesPattern("[\\-0-9]+"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 826 Método: assertThat(transform("{{randomInt lower=5 upper=9}}"), matchesPattern("[5-9]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 827 Método: assertThat(transform("{{randomInt lower='5' upper='9'}}"), matchesPattern("[5-9]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 828 Método: assertThat(transformToInt("{{randomInt upper=54323}}"), lessThanOrEqualTo(9))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 829 Método: assertThat(transformToInt("{{randomInt lower=-24}}"), greaterThanOrEqualTo(-24))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 834 Método: assertThat(transform("{{randomDecimal}}"), matchesPattern("[\\-0-9\\.E]+"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 835 Método: assertThat(transformToDouble("{{randomDecimal lower=-10.1 upper=-0.9}}"), allOf(greaterThanOrEqualTo(-10.1), lessThanOrEqualTo(-0.9)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 838 Método: assertThat(transformToDouble("{{randomDecimal lower='-10.1' upper='-0.9'}}"), allOf(greaterThanOrEqualTo(-10.1), lessThanOrEqualTo(-0.9)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 841 Método: assertThat(transformToDouble("{{randomDecimal upper=12.5}}"), lessThanOrEqualTo(12.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 842 Método: assertThat(transformToDouble("{{randomDecimal lower=-24.01}}"), greaterThanOrEqualTo(-24.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 843 Método: assertThat(transformToDouble("{{randomDecimal lower=-1 upper=1}}"), Matchers.allOf(greaterThanOrEqualTo(-1.0), lessThanOrEqualTo(1.0)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 850 Método: assertThat(transform("{{range 3 8}}"), is("[3, 4, 5, 6, 7, 8]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 851 Método: assertThat(transform("{{range '3' '8'}}"), is("[3, 4, 5, 6, 7, 8]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 852 Método: assertThat(transform("{{range -2 2}}"), is("[-2, -1, 0, 1, 2]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 853 Método: assertThat(transform("{{range 555}}"), is("[ERROR: The range helper requires both lower and upper bounds as integer parameters]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 860 Método: assertThat(transform("{{array 1 'two' true}}"), is("[1, two, true]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 861 Método: assertThat(transform("{{array}}"), is("[]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 875 Método: assertThat(result, equalToCompressingWhiteSpace("transformed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 890 Método: assertThat(result, equalToCompressingWhiteSpace("transformed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 904 Método: assertThat(result, equalToCompressingWhiteSpace("transformed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 909 Método: assertThat(transform("{{parseJson}}"), is("[ERROR: Missing required JSON string parameter]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 914 Método: assertThat(transform("{{#if (matches '123' '[0-9]+')}}YES{{/if}}"), is("YES"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 915 Método: assertThat(transform("{{#if (matches 'abc' '[0-9]+')}}YES{{/if}}"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 920 Método: assertThat(transform("{{#matches '123' '[0-9]+'}}YES{{/matches}}"), is("YES"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 921 Método: assertThat(transform("{{#matches 'abc' '[0-9]+'}}YES{{/matches}}"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 926 Método: assertThat(transform("{{#matches '123'}}YES{{/matches}}"), is("[ERROR: You must specify the string to be matched and the regular expression]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 933 Método: assertThat(transform("{{#if (contains 'abcde' 'abc')}}YES{{/if}}"), is("YES"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 934 Método: assertThat(transform("{{#if (contains 'abcde' '123')}}YES{{/if}}"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 939 Método: assertThat(transform("{{#if (contains 'abcde' request.query.nonexist)}}YES{{/if}}"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 944 Método: assertThat(transform("{{#contains 'abcde' 'abc'}}YES{{/contains}}"), is("YES"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 945 Método: assertThat(transform("{{#contains 'abcde' '123'}}YES{{/contains}}"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 950 Método: assertThat(transform("{{#contains (array 'a' 'b' 'c') 'a'}}YES{{/contains}}"), is("YES"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 951 Método: assertThat(transform("{{#contains (array 'a' 'b' 'c') 'z'}}YES{{/contains}}"), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 956 Método: assertThat(transform("{{math 1 '+' 2}}"), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 957 Método: assertThat(transform("{{math 4 '-' 2}}"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 958 Método: assertThat(transform("{{math 2 '*' 3}}"), is("6"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 959 Método: assertThat(transform("{{math 8 '/' 2}}"), is("4"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 960 Método: assertThat(transform("{{math 10 '%' 3}}"), is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 965 Método: assertThat(transform("{{date (truncateDate (parseDate '2021-06-29T11:22:33Z') 'first hour of day')}}"), is("2021-06-29T00:00:00Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 972 Método: assertThat(transform("{{{numberFormat 123.456 'currency' 'en_GB'}}}"), is("£123.46"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 982 Método: assertThat(result, is(expectedDate))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 993 Método: assertThat(result, is(expectedDate))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 1002 Método: assertThat(result, is(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/ResponseTemplateTransformerTest.java linha: 1009 Método: assertThat(result, is(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsSoapHelperTest.java linha: 65 Método: assertThat(responseDefinition.getBody(), is("<test>success</test>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsSoapHelperTest.java linha: 80 Método: assertThat(responseDefinition.getBody(), is("<test></test>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 59 Método: assertThat(output, instanceOf(RenderableDate.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 60 Método: assertThat(output.toString(), WireMatchers.matches("^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9:]+Z$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 70 Método: assertThat(output, instanceOf(RenderableDate.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 71 Método: assertThat(output.toString(), WireMatchers.matches("^[0-9]{4}/[0-9]{2}/[0-9]{2}$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 83 Método: assertThat(output.toString(), is("2018-04-21"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 103 Método: assertThat(output.toString(), is(String.valueOf(date.getTime())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 113 Método: assertThat(output.toString(), is(String.valueOf(date.getTime() / 1000L)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 126 Método: assertThat(output.toString(), is("2014-10-12T17:06:01+11:00"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 140 Método: assertThat(output.toString(), is("2014-10-12 17:06:01+1100"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 153 Método: assertThat(body, WireMatchers.matches("^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9:]+Z$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 166 Método: assertThat(body, WireMatchers.matches("^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9:]+Z$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsCurrentDateHelperTest.java linha: 181 Método: assertThat(body, is("2018-05-04T10:11:12Z"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 40 Método: assertThat(renderHelperValue(helper, 5, "+"), is(expectedError))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 41 Método: assertThat(renderHelperValue(helper, 5, "+", "6", true, 1), is(expectedError))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 42 Método: assertThat(renderHelperValue(helper, 5), is(expectedError))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 47 Método: assertThat(renderHelperValue(helper, 2, "&", 3), is("[ERROR: & is not a valid mathematical operator]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 54 Método: assertThat(renderHelperValue(helper, 2, "+", 3), is(5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 62 Método: assertThat(renderHelperValue(helper, left, "+", right), is(expected))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 67 Método: assertThat(renderHelperValue(helper, "2", "+", 3), is(5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 72 Método: assertThat(renderHelperValue(helper, 0.5, "+", 3), is(3.5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 77 Método: assertThat(renderHelperValue(helper, "0.25", "+", "0.34"), is(0.59))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 82 Método: assertThat(renderHelperValue(helper, 0.25f, "+", 0.34f), closeTo(0.59, 0.01))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 87 Método: assertThat(renderHelperValue(helper, 10, "-", 3), is(7))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 92 Método: assertThat(renderHelperValue(helper, 10, "*", 3), is(30))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 93 Método: assertThat(renderHelperValue(helper, 10, "x", 3), is(30))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 98 Método: assertThat(renderHelperValue(helper, 15, "/", 3), is(5))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 103 Método: assertThat(renderHelperValue(helper, 11, "%", 3), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/MathsHelperTest.java linha: 109 Método: assertThat(renderHelperValue(helper, new RenderableDate(date, "epoch", null), "+", 0), is(1663258226792L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 48 Método: assertNotNull(output)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 49 Método: assertTrue(output.length() > 0)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 60 Método: assertNull(output)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 72 Método: assertEquals("[ERROR: Access to TEST_VAR is denied]", value)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 82 Método: assertEquals("[ERROR: The key cannot be empty]", value)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 89 Método: assertEquals("aaa", System.getProperty("test.key"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 95 Método: assertEquals("aaa", value)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 107 Método: assertEquals("[ERROR: Access to test.key is denied]", value)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/SystemValueHelperTest.java linha: 117 Método: assertNull(output)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/RegexExtractHelperTest.java linha: 52 Método: assertThat(responseDefinition.getBody(), is("{\"test\": \"abc\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/RegexExtractHelperTest.java linha: 67 Método: assertThat(responseDefinition.getBody(), is("{\"test\": \"abc def ghi \"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 44 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 46 Método: assertThat(result, aMapWithSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 47 Método: assertThat(result, hasEntry("testKey1", "val1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 48 Método: assertThat(result, hasEntry("testKey2", "val2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 56 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 58 Método: assertThat(result, aMapWithSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 59 Método: assertThat(result, hasKey("arr"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 60 Método: assertThat(result.get("arr"), instanceOf(List.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 61 Método: assertThat(result, hasEntry("arr", Arrays.asList(new String[] { "one", "two", "three" })))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 70 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 72 Método: assertThat(result, aMapWithSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 73 Método: assertThat(result, hasKey("parent"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 75 Método: assertThat(result.get("parent"), instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 77 Método: assertThat(parent, hasEntry("child", "val"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 86 Método: assertThat(output, instanceOf(List.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 88 Método: assertThat(result, hasSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 90 Método: assertThat(result.get(0), instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 92 Método: assertThat(inner, hasEntry("key", "val"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 101 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 103 Método: assertThat(result, aMapWithSize(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 112 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 114 Método: assertThat(result, aMapWithSize(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 123 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 125 Método: assertThat(result, aMapWithSize(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 134 Método: assertThat(output, instanceOf(Map.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseJsonHelperTest.java linha: 136 Método: assertThat(result, aMapWithSize(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 51 Método: assertThat(output, instanceOf(Date.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 52 Método: assertThat(((Date) output), is((expectedDate)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 64 Método: assertThat(output, instanceOf(Date.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 65 Método: assertThat(((Date) output), is(expectedDate))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 77 Método: assertThat(output, instanceOf(Date.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 78 Método: assertThat(((Date) output), is((expectedDate)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 90 Método: assertThat(output, instanceOf(Date.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 91 Método: assertThat(((Date) output), is((expectedDate)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 102 Método: assertThat(output, instanceOf(Date.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/ParseDateHelperTest.java linha: 103 Método: assertThat(((Date) output), is((expectedDate)))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsHelperTestBase.java linha: 53 Método: Assertions.fail(FAIL_GRACEFULLY_MSG)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsHelperTestBase.java linha: 51 Método: assertThat((String) renderHelperValue(helper, content, pathExpression), expectation)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsHelperTestBase.java linha: 71 Método: assertThat(helper.apply(content, createOptions(map(), optionParam)).toString(), expected)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 60 Método: assertThat(responseDefinition.getBody(), is("{\"test\": \"success\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 72 Método: assertThat(responseDefinition.getBody(), startsWith("{\"test\": \"" + HandlebarsHelper.ERROR_PREFIX))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 103 Método: assertThat(responseDefinition.getBody(), is("One Two Three "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 128 Método: assertThat(responseDefinition.getBody(), is("one: 1 two: 2 three: 3 "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 154 Método: assertThat(responseDefinition.getBody(), containsString("One"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 155 Método: assertThat(responseDefinition.getBody(), not(containsString("Two")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 220 Método: assertThat(output, is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 227 Método: assertThat(output, is("0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 234 Método: assertThat(output, is("0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 241 Método: assertThat(output, is("0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 248 Método: assertThat(output, is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 255 Método: assertThat(output, is("0"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 302 Método: assertThat(responseDefinition.getBody(), is("abc"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 311 Método: assertThat(one, is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 312 Método: assertThat(two, is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 321 Método: assertThat(one, is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 322 Método: assertThat(two, is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 338 Método: assertThat(one, is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 339 Método: assertThat(two, is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 359 Método: assertThat(result, instanceOf(Integer.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsJsonPathHelperTest.java linha: 360 Método: assertThat((Integer) result, is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/TruncateDateTimeHelperTest.java linha: 44 Método: assertThat(output, Matchers.instanceOf(Date.class))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/TruncateDateTimeHelperTest.java linha: 47 Método: assertThat(truncated.toInstant(), is(Instant.parse("2020-03-31T00:00:00Z")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HostnameHelperTest.java linha: 49 Método: assertThat(output, equalToCompressingWhiteSpace(hostname))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 55 Método: assertThat(output.length(), is(36))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 56 Método: assertThat(output, WireMatchers.matches("^[a-z0-9]+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 66 Método: assertThat(output.length(), is(36))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 67 Método: assertThat(output, WireMatchers.matches("^[A-Z0-9]+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 77 Método: assertThat(output.length(), is(43))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 78 Método: assertThat(output, WireMatchers.matches("^[A-Z]+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 88 Método: assertThat(output.length(), is(55))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 89 Método: assertThat(output, WireMatchers.matches("^[0-9]+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 99 Método: assertThat(output.length(), is(67))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 100 Método: assertThat(output, WireMatchers.matches("^.+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 110 Método: assertThat(output.length(), is(64))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 111 Método: assertThat(output, WireMatchers.matches("^[0-9a-f]+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 129 Método: assertThat(bodyLines[0], is(bodyLines[1]))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 130 Método: assertThat(bodyLines[0].length(), is(20))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 139 Método: assertThat(output.length(), is(36))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsRandomValuesHelperTest.java linha: 140 Método: assertThat(output, WireMatchers.matches("^[a-z0-9\\-]+$"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 51 Método: assertThat(responseDefinition.getBody(), is("<test>success</test>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 63 Método: assertThat(responseDefinition.getBody(), startsWith("<test></test>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 120 Método: assertThat(one, is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 121 Método: assertThat(two, is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 130 Método: assertThat(one, is("one"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 131 Método: assertThat(two, is("two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 143 Método: assertThat(one, is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 144 Método: assertThat(two, is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 151 Método: assertThat(one.trim(), is("<one>1</one>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 173 Método: assertThat(responseDefinition.getBody(), is("One Two Three "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 195 Método: assertThat(responseDefinition.getBody(), is("1 2 3 "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 217 Método: assertThat(responseDefinition.getBody(), is("One Two Three "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 236 Método: assertThat(responseDefinition.getBody(), equalToCompressingWhiteSpace("<stuff xmlns:th=\"https://thing.com\">\n" + "    <th:thing>One</th:thing>\n" + "    <th:thing>Two</th:thing>\n" + "    <th:thing>Three</th:thing>\n" + "</stuff>"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/helpers/HandlebarsXPathHelperTest.java linha: 265 Método: assertThat(responseDefinition.getBody(), is("one two three "))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 31 Método: assertTrue(authoriser.isPermitted("allowed_key_1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 32 Método: assertTrue(authoriser.isPermitted("ALLOWED_KEY_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 33 Método: assertTrue(authoriser.isPermitted("permitted_key_3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 41 Método: assertFalse(authoriser.isPermitted("forbidden_key_1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 42 Método: assertFalse(authoriser.isPermitted("notallowed_key_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 43 Método: assertFalse(authoriser.isPermitted("notpermitted_key_3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 50 Método: assertTrue(authoriser.isPermitted("wiremock_key_1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 51 Método: assertTrue(authoriser.isPermitted("wiremock.thing.2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/extension/responsetemplating/SystemKeyAuthorisorTest.java linha: 52 Método: assertFalse(authoriser.isPermitted("notallowed_key_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 50 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 51 Método: assertThat(response.firstHeader("MyHeader"), is("Transformed"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 52 Método: assertThat(response.content(), is("Transformed body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 63 Método: assertThat(response.statusCode(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 64 Método: assertThat(response.content(), is("Expect this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 79 Método: assertThat(response.statusCode(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 80 Método: assertThat(response.content(), is("Transformed body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 95 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 96 Método: assertThat(response.content(), is("Expect this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 111 Método: assertThat(response.content(), is("Transformed body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 129 Método: assertThat(response.content(), is("Non-global transformed body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 135 Método: assertThrows(IllegalArgumentException.class, () -> {
    new WireMockServer(wireMockConfig().dynamicPort().extensions(ExampleTransformer.class, AnotherExampleTransformer.class));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 152 Método: assertThat(response.content(), is("Some example test from a file"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDefinitionTransformerAcceptanceTest.java linha: 165 Método: assertThat(client.get("/transform-with-params").content(), is("Use this body"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 53 Método: assertThat(mappingSet, hasExactly(requestUrlIs("/priority1/3"), requestUrlIs("/priority1/2"), requestUrlIs("/priority1/1"), requestUrlIs("/priority3/2"), requestUrlIs("/priority3/1"), requestUrlIs("/priority6/1")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 72 Método: assertThat(mappingSet, hasExactly(requestUrlIs("/4"), requestUrlIs("/3"), requestUrlIs("/2"), requestUrlIs("/1")))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 86 Método: assertThat("Mapping set should be empty", mappingSet.iterator().hasNext(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 95 Método: assertThat(mappingSet.iterator().hasNext(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 98 Método: assertThat(mappingSet.iterator().hasNext(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 114 Método: assertThat(result, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 115 Método: assertThat(it.hasNext(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 116 Método: assertThat(it.next(), is(newMapping))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 117 Método: assertThat(it.hasNext(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 131 Método: assertThat(result, is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 132 Método: assertThat(it.hasNext(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 133 Método: assertThat(it.next(), is(existingMapping))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/SortedConcurrentMappingSetTest.java linha: 134 Método: assertThat(it.hasNext(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 55 Método: assertNotNull(pojo)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 56 Método: assertThat(TEST_VALUE, is(pojo.property))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 62 Método: assertNotNull(pojo)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 63 Método: assertThat(TEST_VALUE, is(pojo.property))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 69 Método: assertNotNull(pojo)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 70 Método: assertThat(TEST_VALUE, is(pojo.property))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 96 Método: assertThat(count, is(24))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 103 Método: assertThat(count, is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/JsonTest.java linha: 110 Método: assertThat(count, is(1))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubMappingJsonRecorderTest.java linha: 628 Método: Assertions.fail("Invalid header expected line: " + headerLine)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 55 Método: assertThat(allMappings, hasSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 56 Método: assertThat(allMappings.get(0), is(newMapping))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 57 Método: assertThat(newMapping.getInsertionIndex(), is(existingMapping.getInsertionIndex()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 64 Método: assertThat(allMappings, hasSize(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 74 Método: assertThat(allMappings, hasSize(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 79 Método: assertThat(allMappings, hasSize(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 94 Método: assertThat(e.getMessage(), containsString(newMapping.getUuid().toString()))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryStubMappingsTest.java linha: 92 Método: fail("Expected Exception")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubMappingTest.java linha: 37 Método: assertThat(json, not(containsString("insertionIndex")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubMappingTest.java linha: 47 Método: assertThat(json, containsString("insertionIndex"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubMappingTest.java linha: 66 Método: assertThat(stub.getInsertionIndex(), is(42L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 62 Método: assertTrue(response.equals(copiedResponse))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 69 Método: assertFalse(copiedResponse.wasConfigured(), "Should be not configured")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 81 Método: assertThat(responseDef.getBase64Body(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 82 Método: assertThat(responseDef.getJsonBody(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 83 Método: assertThat(responseDef.getBody(), is("String content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 95 Método: assertThat(responseDef.getBase64Body(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 96 Método: assertThat(responseDef.getBody(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 99 Método: assertThat(responseDef.getJsonBody(), is(jsonNode))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 107 Método: JSONAssert.assertEquals(STRING_BODY, Json.write(responseDef), false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 123 Método: assertThat(responseDef.getBody(), is(nullValue()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 124 Método: assertThat(responseDef.getByteBody(), is(BODY))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 133 Método: JSONAssert.assertEquals(actualJson, BINARY_BODY, false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 140 Método: assertTrue(responseDefinition.specifiesBodyFile())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 141 Método: assertFalse(responseDefinition.specifiesBodyContent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 149 Método: assertFalse(responseDefinition.specifiesBodyFile())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 150 Método: assertTrue(responseDefinition.specifiesBodyContent())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 157 Método: assertThat(json, not(containsString("transformers")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ResponseDefinitionTest.java linha: 158 Método: assertThat(json, not(containsString("transformerParameters")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 51 Método: assertThat(scenario.getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 52 Método: assertThat(scenario.getPossibleStates(), hasItems(STARTED, "step_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 75 Método: assertThat(scenarios.getAll().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 78 Método: assertThat(scenario.getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 79 Método: assertThat(scenario.getPossibleStates(), hasItems(STARTED, "step_2", "step_3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 103 Método: assertThat(scenario.getPossibleStates(), hasItems(STARTED, "step_2", "step_3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 108 Método: assertThat(scenario.getPossibleStates(), hasItems(STARTED, "step_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 132 Método: assertThat(scenario.getPossibleStates(), hasItems(STARTED, "step_2", "step_3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 137 Método: assertThat(scenarios.getAll(), empty())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 151 Método: assertThat(scenarios.getByName("one"), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 163 Método: assertThat(scenarios.getByName("one"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 177 Método: assertThat(scenarios.getByName("one"), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 183 Método: assertThat(scenarios.getByName("one"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 206 Método: assertThat(scenarios.getByName("one").getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 209 Método: assertThat(scenarios.getByName("one").getState(), is("step_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 212 Método: assertThat(scenarios.getByName("one").getState(), is("step_3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 235 Método: assertThat(scenarios.getByName("one").getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 238 Método: assertThat(scenarios.getByName("one").getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 273 Método: assertThat(scenarios.getByName("one").getState(), is("step_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 274 Método: assertThat(scenarios.getByName("two").getState(), is("2_step_2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 278 Método: assertThat(scenarios.getByName("one").getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 279 Método: assertThat(scenarios.getByName("two").getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 311 Método: assertThat(scenarios.getAll().size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 315 Método: assertThat(scenarios.getAll().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 338 Método: assertThat(scenarios.mappingMatchesScenarioState(mapping1), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 339 Método: assertThat(scenarios.mappingMatchesScenarioState(mapping2), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 350 Método: assertThat(scenario.getState(), is(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 351 Método: assertThat(scenario.getPossibleStates(), hasItems(STARTED))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 374 Método: assertThat(possibleStates.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 375 Método: assertThat(possibleStates, hasItems("Started", "step two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 387 Método: assertThat(scenarios.getByName("one").getState(), is("step two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 419 Método: assertThat(possibleStates, hasItems("Started", "step two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 420 Método: assertThat(possibleStates.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 442 Método: assertThat(possibleStates, hasItems("A", "B", "C", "D"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/ScenariosTest.java linha: 443 Método: assertThat(possibleStates.size(), is(4))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubRequestHandlerTest.java linha: 99 Método: assertThat(response.getStatus(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubRequestHandlerTest.java linha: 100 Método: assertThat(response.getBodyAsString(), is("Body content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubRequestHandlerTest.java linha: 101 Método: assertThat(response.toString(), is("HTTP/2 200\nContent-Type: [application/json]\nMatched-Stub-Id: [123]\n"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubRequestHandlerTest.java linha: 135 Método: assertThat(notifier.getErrorMessages().isEmpty(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubRequestHandlerTest.java linha: 136 Método: assertThat(notifier.getInfoMessages().size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/StubRequestHandlerTest.java linha: 137 Método: assertThat(notifier.getInfoMessages().get(0), containsString("1.2.3.5 - GET /"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 61 Método: assertThat(response.getStatus(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 74 Método: assertThat(response.getStatus(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 87 Método: assertThat(response.getStatus(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 94 Método: assertThat(response.getStatus(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 95 Método: assertThat(response.wasConfigured(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 115 Método: assertThat(response.getStatus(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 116 Método: assertThat(response.getBody(), is("Desired content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 150 Método: assertThat(mappings.serveFor(firstGet).getResponseDefinition().getBody(), is("Initial content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 153 Método: assertThat(mappings.serveFor(secondGet).getResponseDefinition().getBody(), is("Modified content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 168 Método: assertThat(mappings.serveFor(request).getResponseDefinition().getBody(), is("Expected content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 202 Método: assertThat(response.wasConfigured(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 213 Método: assertThat(response.getBody(), is("Desired content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 229 Método: assertThat(mappings.serveFor(request).getResponseDefinition().getBody(), is("Modified content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/InMemoryMappingsTest.java linha: 238 Método: assertThat(mappings.serveFor(request).getResponseDefinition().getBody(), is("Starting content"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/AdminRequestHandlerTest.java linha: 76 Método: assertThat(response.getStatus(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/AdminRequestHandlerTest.java linha: 87 Método: assertThat(response.getStatus(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/AdminRequestHandlerTest.java linha: 98 Método: assertThat(response.getStatus(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/AdminRequestHandlerTest.java linha: 123 Método: assertThat(response.getStatus(), is(HTTP_OK))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/stubbing/AdminRequestHandlerTest.java linha: 124 Método: assertThat(response.getBodyAsString(), equalToJson("{ \"count\": 5, \"requestJournalDisabled\" : false}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 88 Método: assertThat(response.content(), equalsMultiLine(file("not-found-diff-sample_ascii.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 123 Método: assertThat(response.content(), equalsMultiLine(file("not-found-diff-sample_ascii-narrow.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 134 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 143 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 144 Método: assertThat(response.firstHeader(CONTENT_TYPE), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 145 Método: assertThat(response.content(), is("No response could be served as there are no stub mappings in this WireMock instance."))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 167 Método: assertThat(response.statusCode(), is(403))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 168 Método: assertThat(response.content(), is("No you don't!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 179 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 180 Método: assertThat(response.content(), containsString("No response could be served"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 195 Método: assertThat(response.content(), equalsMultiLine(file("not-found-diff-sample_scenario-state.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 210 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 211 Método: assertThat(response.content(), equalsMultiLine(file("not-found-diff-sample-logical-or.txt")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 241 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 242 Método: assertThat(response.content(), containsString("| X-My-Header: modified value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 252 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 253 Método: assertThat(response.content(), containsString("Request was not matched"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 270 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NotMatchedPageAcceptanceTest.java linha: 271 Método: assertThat(response.content(), containsString("Request was not matched"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 45 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 46 Método: assertThat(response.content(), is("国家标准"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 55 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 56 Método: assertThat(response.content(), is("????"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 65 Método: assertThat(response.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 66 Método: assertThat(response.content(), is("Not allowed!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 67 Método: assertThat(response.firstHeader("Content-Type"), is("text/plain"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 76 Método: assertThat(response.statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 77 Método: assertNull(response.content())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 83 Método: assertThat(response.statusCode(), is(HTTP_NOT_FOUND))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 124 Método: assertThat(response1.content(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 129 Método: assertThat(response2.content(), is("default test mapping"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 135 Método: assertThat(testClient.get("/byte/resource/from/file").content(), is("ABC"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 141 Método: assertThat(testClient.get("/bytecompressed/resource/from/file").binaryContent(), is(BINARY_COMPRESSED_CONTENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 149 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 150 Método: assertThat(response.content(), is("{\"bignumber\":1234567890.12,\"array\":[1,2,3],\"key\":\"value\"}"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 172 Método: assertThat(response.firstHeader("Transfer-Encoding"), is("chunked"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 194 Método: assertThat(response.firstHeader("Content-Length"), is("12"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 195 Método: assertFalse(response.headers().containsKey("Transfer-Encoding"), "expected Transfer-Encoding head to be absent")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 202 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/MappingsAcceptanceTest.java linha: 207 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PostServeActionExtensionTest.java linha: 84 Método: assertThat(client.get("/__admin/mappings/" + stubMapping.getId()).content(), jsonPartEquals("postServeActions", "[\n" + "    {\n" + "      \"name\": \"count-request\",\n" + "      \"parameters\": {\n" + "        \"counterName\": \"things\"\n" + "      }\n" + "    }\n" + "  ]"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PostServeActionExtensionTest.java linha: 107 Método: assertThat(client.get("/as-normal").statusCode(), is(200))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PostServeActionExtensionTest.java linha: 164 Método: assertThat(response.content(), response.statusCode(), is(201))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PostServeActionExtensionTest.java linha: 230 Método: assertThat(response.content(), response.statusCode(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 51 Método: assertThat(nearMisses.get(0).getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 52 Método: assertThat(nearMisses.get(1).getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 53 Método: assertThat(nearMisses.get(2).getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 55 Método: assertThat(nearMisses.get(0).getStubMapping().getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 56 Método: assertThat(nearMisses.get(1).getStubMapping().getRequest().getUrl(), is("/yet/another/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 57 Método: assertThat(nearMisses.get(2).getStubMapping().getRequest().getUrl(), is("/mypath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 71 Método: assertThat(unmatched.size(), is(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 72 Método: assertThat(unmatched.get(0).getUrl(), is("/unmatched/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 95 Método: assertThat(nearMisses.get(0).getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 96 Método: assertThat(nearMisses.get(1).getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 97 Método: assertThat(nearMisses.get(2).getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 99 Método: assertThat(nearMisses.get(0).getStubMapping().getRequest().getUrl(), is("/otherpath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 100 Método: assertThat(nearMisses.get(1).getStubMapping().getRequest().getUrl(), is("/yet/another/path"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 101 Método: assertThat(nearMisses.get(2).getStubMapping().getRequest().getUrl(), is("/mypath"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 113 Método: assertThat(nearMisses.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 114 Método: assertThat(nearMisses.get(0).getRequest().getUrl(), is("/actual42"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/NearMissesAcceptanceTest.java linha: 115 Método: assertThat(nearMisses.get(1).getRequest().getUrl(), is("/actual11"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 86 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 87 Método: assertThat(responseBody, is(BODY_BYTES))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 88 Método: assertThat(duration, greaterThanOrEqualTo(SOCKET_TIMEOUT_MILLISECONDS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 89 Método: assertThat((double) duration, isWithinTolerance(DOUBLE_THE_SOCKET_TIMEOUT, TOLERANCE))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 110 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 111 Método: assertThat(responseBody, is("Send this in many pieces please!!!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 112 Método: assertThat(duration, isWithinTolerance(TOTAL_TIME, TOLERANCE))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 127 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 128 Método: assertThat(BODY_BYTES, is(responseBody))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ResponseDribbleAcceptanceTest.java linha: 129 Método: assertThat(duration, lessThan(SOCKET_TIMEOUT_MILLISECONDS))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 61 Método: assertThat(requests.size(), is(3))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 63 Método: assertThat(firstRequest.getUrl(), is("/return/this"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 64 Método: assertThat(firstRequest.getMethod(), is(RequestMethod.GET))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 65 Método: assertThat(firstRequest.getLoggedDate(), isToday())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 66 Método: assertThat(parse(firstRequest.getLoggedDateString()), isToday())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 79 Método: assertThat(requests.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 80 Método: assertThat(requests, hasItems(withUrl("/should/return/this/request"), withUrl("/also/return/this")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 93 Método: assertThat(requests.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 105 Método: assertThat(requests.size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 121 Método: assertThat(requests, hasExactly(withUrl("/use/1"), withUrl("/use/2"), withUrl("/use/3"), withUrl("/use/4")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 134 Método: assertThat(request.getBodyAsString(), is("ڜ"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 149 Método: assertThat(three.isNoExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 150 Método: assertThat(three.getRequest().getUrl(), is("/three"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 153 Método: assertThat(two.isNoExactMatch(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 154 Método: assertThat(two.getRequest().getUrl(), is("/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 155 Método: assertThat(two.getResponse().getBody(), is("Exactly 2".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 156 Método: assertThat(two.getResponse().getBodyAsString(), is("Exactly 2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 157 Método: assertThat(two.getResponse().getBodyAsBase64(), is(Encoding.encodeBase64("Exactly 2".getBytes())))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 160 Método: assertThat(serveEvents.get(2).isNoExactMatch(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 173 Método: assertThat(serveEvent.getResponse().getBody(), is(MappingJsonSamples.BINARY_COMPRESSED_CONTENT))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 188 Método: assertThat(serveEvents.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 189 Método: assertThat(serveEvents.get(0).getRequest().getUrl(), is("/just-wrong"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 190 Método: assertThat(serveEvents.get(1).getRequest().getUrl(), is("/no-match"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 205 Método: assertThat(serveEvents.size(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 206 Método: assertThat(serveEvents.get(0).getRequest().getUrl(), is("/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ServeEventLogAcceptanceTest.java linha: 207 Método: assertThat(serveEvents.get(1).getRequest().getUrl(), is("/two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 60 Método: assertThat(wireMockServer.getOptions(), is(options))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 69 Método: assertThat(wireMockServer.url("/something"), is(String.format("http://localhost:%d/something", port)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 71 Método: assertThat(wireMockServer.url("something"), is(String.format("http://localhost:%d/something", port)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 81 Método: assertThat(wireMockServer.url("/something"), is(String.format("https://localhost:%d/something", port)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 84 Método: assertThat(wireMockServer.url("something"), is(String.format("https://localhost:%d/something", port)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 94 Método: assertThat(wireMockServer.baseUrl(), is(String.format("http://localhost:%d", port)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 103 Método: assertThat(wireMockServer.baseUrl(), is(String.format("https://localhost:%d", port)))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WireMockServerTests.java linha: 122 Método: assertThat(client.get("http://localhost:" + wireMockServer.port() + "/something").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 62 Método: assertThat(response.statusCode(), is(401))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 72 Método: assertThat(wireMockServer.port(), is(port))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 73 Método: assertThat(wireMockServer.httpsPort(), is(httpsPort))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 78 Método: assertThrows(IllegalStateException.class, () -> {
    createServer(wireMockConfig().port(Network.findFreePort())).port();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 87 Método: assertThrows(IllegalStateException.class, () -> {
    createServer(wireMockConfig().httpsPort(Network.findFreePort())).httpsPort();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 96 Método: assertThrows(IllegalStateException.class, () -> {
    WireMockServer wireMockServer = createServer(wireMockConfig().port(Network.findFreePort()));
    wireMockServer.start();
    wireMockServer.httpsPort();
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 110 Método: assertThat(wireMockServer.port(), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/PortNumberTest.java linha: 111 Método: assertThat(wireMockServer.httpsPort(), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ConcurrentProxyingTest.java linha: 65 Método: assertThat(client.get("/plain-example1.txt").content(), is("Example 1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ConcurrentProxyingTest.java linha: 66 Método: assertThat(client.get("/plain-example2.txt").content(), is("Example 2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ConcurrentProxyingTest.java linha: 67 Método: assertThat(client.get("/plain-example3.txt").content(), is("Example 3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ConcurrentProxyingTest.java linha: 68 Método: assertThat(client.get("/plain-example4.txt").content(), is("Example 4"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/ConcurrentProxyingTest.java linha: 69 Método: assertThat(client.get("/plain-example5.txt").content(), is("Example 5"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 46 Método: assertThat(testClient.get("/remote-load/1").content(), is("Remote load 1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 47 Método: assertThat(testClient.get("/remote-load/2", withHeader("Accept", "text/plain")).content(), is("Remote load 2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 59 Método: assertThat(stubMapping.getItem().getResponse().specifiesBinaryBodyContent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 60 Método: assertThat(testClient.get("/text-file").content(), is("Some text"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 69 Método: assertThat(stubMapping.getItem().getResponse().specifiesBinaryBodyContent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 79 Método: assertThat(stubMapping.getItem().getResponse().specifiesBinaryBodyContent(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/RemoteMappingsLoaderAcceptanceTest.java linha: 88 Método: assertThat(stubMapping.getItem().getResponse().specifiesBinaryBodyContent(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 122 Método: assertThat(testClient.getViaProxy(target.url("/whatever"), proxy.getPort()).content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 132 Método: assertThat(response.content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 148 Método: assertThat(response.getContentAsString(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 160 Método: assertThat(testClient.getViaProxy(target.url("/stubbed"), proxy.getPort()).content(), is("Stubbed Value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 163 Método: assertThat(testClient.getViaProxy(target.url("/not_stubbed"), proxy.getPort()).content(), is("Should be served from target"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 180 Método: assertThat(testClient.getViaProxy(recordedEndpoint, proxy.getPort()).content(), is("Target response"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 187 Método: assertThat(testClient.getViaProxy(recordedEndpoint, proxy.getPort()).content(), is("Target response"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 205 Método: assertThat(response.statusCode(), is(500))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 230 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 231 Método: assertThat(response.content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 255 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 256 Método: assertThat(response.content(), is("Got it"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 345 Método: assertThrows(IOException.class, () -> {
    new WireMockServer(options().enableBrowserProxying(true).caKeystorePath(Files.createTempFile("notakeystore", "jks").toString()));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 357 Método: assertThrows(FatalStartupException.class, new WireMockServer(options().enableBrowserProxying(true).caKeystorePath(emptyKeyStore().toString()))::start)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 372 Método: assertEquals(200, certResponse.statusCode())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 373 Método: assertEquals("application/x-pem-file", certResponse.firstHeader("Content-Type"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/HttpsBrowserProxyAcceptanceTest.java linha: 381 Método: assertEquals(keyStore.getCertificateAuthority().certificateChain()[0], cert)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlMatchingAcceptanceTest.java linha: 42 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/UrlMatchingAcceptanceTest.java linha: 43 Método: assertThat(response.content(), is("Matched!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BasicAuthAcceptanceTest.java linha: 39 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BasicAuthAcceptanceTest.java linha: 53 Método: assertThat(response.statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/BasicAuthAcceptanceTest.java linha: 63 Método: assertThat(testClient.get("/basic/auth/case-insensitive", withHeader("Authorization", "BASIC dG9tOnNlY3JldA==")).statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeTest.java linha: 45 Método: assertNotNull(wmRuntimeInfo)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeTest.java linha: 46 Método: assertNotNull(wmRuntimeInfo.getWireMock())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeTest.java linha: 48 Método: assertThrows(IllegalStateException.class, wmRuntimeInfo::getHttpsPort)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeTest.java linha: 55 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeTest.java linha: 61 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java linha: 68 Método: assertDoesNotThrow(wm1RuntimeInfo::getHttpsPort)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java linha: 73 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java linha: 80 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java linha: 81 Método: assertThat(EntityUtils.toString(response.getEntity()), is("wm2"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java linha: 91 Método: assertTrue(getAllServeEvents().isEmpty(), "The request log should be empty")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionNonStaticMultiInstanceTest.java linha: 95 Método: assertThat(response.getCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionFailOnUnmatchedTest.java linha: 62 Método: assertThat(response.getCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionFailOnUnmatchedTest.java linha: 65 Método: assertThrows(VerificationException.class, () -> extension.afterEach(extensionContext))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionFailOnUnmatchedTest.java linha: 79 Método: assertThat(response.getCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionFailOnUnmatchedTest.java linha: 82 Método: assertDoesNotThrow(() -> extension.afterEach(extensionContext))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java linha: 68 Método: assertDoesNotThrow(wm1RuntimeInfo::getHttpsPort)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java linha: 73 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java linha: 80 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java linha: 81 Método: assertThat(EntityUtils.toString(response.getEntity()), is("wm2"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java linha: 91 Método: assertTrue(getAllServeEvents().isEmpty(), "The request log should be empty")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionStaticMultiInstanceTest.java linha: 95 Método: assertThat(response.getCode(), is(404))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeWithRandomHttpsPortParameterTest.java linha: 42 Método: assertTrue(wmRuntimeInfo.isHttpsEnabled(), "Expected HTTPS to be enabled")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeWithRandomHttpsPortParameterTest.java linha: 48 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeWithHttpPortParameterTest.java linha: 28 Método: assertThat(wmRuntimeInfo.getHttpPort(), is(8765))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithConfiguredNestedTest.java linha: 28 Método: assertThat(wmRuntimeInfo.getHttpPort(), is(8765))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithConfiguredNestedTest.java linha: 36 Método: assertThat(wmRuntimeInfo.getHttpPort(), is(8766))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithConfiguredNestedTest.java linha: 45 Método: assertThat(wmRuntimeInfo.getHttpPort(), is(8767))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithConfiguredNestedTest.java linha: 53 Método: assertThat(wmRuntimeInfo.getHttpPort(), is(8765))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionJvmProxyDeclarativeTest.java linha: 49 Método: assertThat(getContent("http://one.my.domain/things"), is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionJvmProxyDeclarativeTest.java linha: 50 Método: assertThat(getContent("https://two.my.domain/things"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithNestedTest.java linha: 27 Método: assertDoesNotThrow(info::getHttpBaseUrl)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithNestedTest.java linha: 34 Método: assertDoesNotThrow(info::getHttpBaseUrl)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithNestedTest.java linha: 42 Método: assertDoesNotThrow(info::getHttpBaseUrl)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JunitJupiterExtensionDeclarativeWithNestedTest.java linha: 50 Método: assertDoesNotThrow(info::getHttpBaseUrl)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionSubclassingTest.java linha: 45 Método: assertThat(MyWireMockExtension.beforeAllCalled, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionSubclassingTest.java linha: 46 Método: assertThat(MyWireMockExtension.beforeEachCalled, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionSubclassingTest.java linha: 47 Método: assertThat(MyWireMockExtension.afterEachCalled, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionSubclassingTest.java linha: 48 Método: assertThat(MyWireMockExtension.afterAllCalled, is(true))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeWithFixedHttpsPortParameterTest.java linha: 29 Método: assertTrue(wmRuntimeInfo.isHttpsEnabled(), "Expected HTTPS to be enabled")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionDeclarativeWithFixedHttpsPortParameterTest.java linha: 30 Método: assertThat(wmRuntimeInfo.getHttpsPort(), is(8766))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionJvmProxyStaticProgrammaticTest.java linha: 58 Método: assertThat(getContent("http://one.my.domain/things"), is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionJvmProxyStaticProgrammaticTest.java linha: 59 Método: assertThat(getContent("https://two.my.domain/things"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionJvmProxyNonStaticProgrammaticTest.java linha: 58 Método: assertThat(getContent("http://one.my.domain/things"), is("1"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/junit5/JUnitJupiterExtensionJvmProxyNonStaticProgrammaticTest.java linha: 59 Método: assertThat(getContent("https://two.my.domain/things"), is("2"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 53 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 56 Método: assertThat(response.firstHeader("Transfer-Encoding"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 57 Método: assertThat(response.firstHeader("Content-Length"), is(expectedContentLength))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 70 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 72 Método: assertThat(response.firstHeader("Transfer-Encoding"), is("chunked"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 73 Método: assertThat(response.firstHeader("Content-Length"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 87 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 88 Método: assertThat(response.firstHeader("Transfer-Encoding"), is("chunked"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 89 Método: assertThat(response.firstHeader("Content-Length"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 92 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 93 Método: assertThat(response.firstHeader("Transfer-Encoding"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 94 Método: assertThat(response.firstHeader("Content-Length"), notNullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 107 Método: assertThat(response.statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 110 Método: assertThat(response.firstHeader("Transfer-Encoding"), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 111 Método: assertThat(response.firstHeader("Content-Length"), is(expectedContentLength))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 126 Método: assertThat(response.getFirstHeader("Content-Length").getValue(), is("1234"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/TransferEncodingAcceptanceTest.java linha: 142 Método: assertThat(response.getFirstHeader("Content-Length").getValue(), is("1234"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentAcceptanceTest.java linha: 86 Método: assertThat(response.content(), containsString("YES"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentAcceptanceTest.java linha: 95 Método: assertThat(testClient.get("/wiremock/war/stub").content(), is("War stub OK"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentAcceptanceTest.java linha: 104 Método: assertThat(e.getMessage(), containsString("500"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentAcceptanceTest.java linha: 102 Método: fail("Expected a VerificationException")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentAcceptanceTest.java linha: 114 Método: assertThat(e.getMessage(), containsString("500"))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/WarDeploymentAcceptanceTest.java linha: 112 Método: fail("Expected a VerificationException")
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 33 Método: assertThat(chunkedBody, arrayWithSize(numberOfChunks))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 34 Método: assertThat(chunkedBody[0], equalTo(body))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 44 Método: assertThat(chunkedBody, arrayWithSize(numberOfChunks))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 45 Método: assertThat(chunkedBody[0], equalTo("12".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 46 Método: assertThat(chunkedBody[1], equalTo("34".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 56 Método: assertThat(chunkedBody, arrayWithSize(numberOfChunks))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 57 Método: assertThat(chunkedBody[0], equalTo("1".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 58 Método: assertThat(chunkedBody[1], equalTo("2".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 59 Método: assertThat(chunkedBody[2], equalTo("34".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 69 Método: assertThat(chunkedBody, arrayWithSize(body.length))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 70 Método: assertThat(chunkedBody[0], equalTo("1".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 71 Método: assertThat(chunkedBody[1], equalTo("2".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 72 Método: assertThat(chunkedBody[2], equalTo("3".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 73 Método: assertThat(chunkedBody[3], equalTo("4".getBytes()))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 83 Método: assertThat(chunkedBody, arrayWithSize(1))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/BodyChunkerTest.java linha: 84 Método: assertThat(chunkedBody[0], equalTo(body))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/AlternativeServletContainerTest.java linha: 52 Método: assertThat(client.get("/alt-server").statusCode(), is(204))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/AlternativeServletContainerTest.java linha: 61 Método: assertThat(response.statusCode(), is(418))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/com/github/tomakehurst/wiremock/servlet/AlternativeServletContainerTest.java linha: 62 Método: assertThat(response.content(), is("No fault injector is configured!"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JupiterExtensionTestClass.java linha: 30 Método: assertThat(JUnitJupiterExtensionSubclassingTest.MyWireMockExtension.beforeAllCalled, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JupiterExtensionTestClass.java linha: 31 Método: assertThat(JUnitJupiterExtensionSubclassingTest.MyWireMockExtension.beforeEachCalled, is(true))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JupiterExtensionTestClass.java linha: 32 Método: assertThat(JUnitJupiterExtensionSubclassingTest.MyWireMockExtension.afterEachCalled, is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JupiterExtensionTestClass.java linha: 33 Método: assertThat(JUnitJupiterExtensionSubclassingTest.MyWireMockExtension.afterAllCalled, is(false))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JupiterExtensionTestClass.java linha: 39 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JUnit5ProxyTest.java linha: 69 Método: assertEquals("Domain 1", responseBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JUnit5ProxyTest.java linha: 73 Método: assertEquals("Domain 2", responseBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JUnit5ProxyTest.java linha: 91 Método: assertEquals("Domain 1", responseBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/JUnit5ProxyTest.java linha: 95 Método: assertEquals("Domain 2", responseBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/WireMockRuleFailThenPass.java linha: 28 Método: assertTrue(false)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/WireMockRuleFailThenPass.java linha: 33 Método: assertTrue(true)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 61 Método: assertThat(testClient.get("/some/thing").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 62 Método: assertThat(testClient.get("/some/thing/else").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 149 Método: assertThrows(VerificationException.class, () -> {
    verify(postRequestedFor(urlEqualTo("/verify/this")).withHeader("Content-Type", equalTo("text/xml")));
    verify(3, postRequestedFor(urlEqualTo("/3/of/these")));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 162 Método: assertThrows(VerificationException.class, () -> {
    verify(putRequestedFor(urlEqualTo("/without/header")).withoutHeader("Content-Type"));
})
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 224 Método: assertThat(response.content(), containsString("Buy milk"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 225 Método: assertThat(response.content(), not(containsString("Cancel newspaper subscription")))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 230 Método: assertThat(response.statusCode(), is(201))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 233 Método: assertThat(response.content(), containsString("Buy milk"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 234 Método: assertThat(response.content(), containsString("Cancel newspaper subscription"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 386 Método: assertThat(testClient.get("/delete-me").statusCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/Examples.java linha: 389 Método: assertThat(testClient.get("/delete-me").statusCode(), is(404))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/VeryLongAsynchronousDelayAcceptanceTest.java linha: 64 Método: assertThat(response.getCode(), is(200))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/src/test/java/ignored/VeryLongAsynchronousDelayAcceptanceTest.java linha: 65 Método: assertThat(EntityUtils.toString(response.getEntity()), is("Some example test from a file"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 135 Método: assertThat(multiHeaderValues, hasItems("one", "two"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 143 Método: assertThat(testNotifier.getInfoMessages(), hasItem(allOf(containsString("Webhook POST request to"), containsString("/callback returned status"), containsString("200"))))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 234 Método: assertThat(request.header("X-Single").firstValue(), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 235 Método: assertThat(request.header("X-Multi").values(), hasItems("6", "param-one-value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 236 Método: assertThat(request.getBodyAsString(), is("Tom"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 285 Método: assertThat(request.header("X-Single").firstValue(), is("3"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 286 Método: assertThat(request.header("X-Multi").values(), hasItems("6", "param-one-value"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 287 Método: assertThat(request.getBodyAsString(), is("Tom"))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 313 Método: assertThat(elapsedMilliseconds, closeTo(DELAY_MILLISECONDS, 500.0))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 352 Método: assertThat(elapsedMilliseconds, greaterThanOrEqualTo(500L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 353 Método: assertThat(elapsedMilliseconds, lessThanOrEqualTo(1500L))
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/WebhooksAcceptanceTest.java linha: 359 Método: assertTrue(latch.await(20, SECONDS), "Timed out waiting for target server to receive a request")
Assert com mensagem: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/wiremock-webhooks-extension/src/test/java/functional/FailingWebhookTest.java linha: 106 Método: assertThat("No webook should have been made", latch.getCount(), is(1L))
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/testlogging/src/test/java/WiremockTest.java linha: 48 Método: assertEquals("body", retrievedBody)
Assert sem descrição: /home/vitor-otto/opensource/wiremock-3.0.0-beta-7/testlogging/src/test/java/WiremockTest.java linha: 49 Método: assertThat(stdOutCapture.toString(), containsString("LOGBACK INFO  w.o.e.j.s.h.ContextHandler.__admin - RequestHandlerClass from context returned com.github.tomakehurst.wiremock.http.AdminRequestHandler"))
Total asserts: 2948
Asserts sem descrição: 2837
Asserts com descrição: 111
Assertion Roulette: 1890
