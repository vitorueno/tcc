
Projeto: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue366Test.java linha: 49 Método: assertEquals("int", rt.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue18Test.java linha: 49 Método: assertEquals("java.lang.Object", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1814Test.java linha: 95 Método: assertTrue(parseResult.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1814Test.java linha: 96 Método: assertTrue(parseResult.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1814Test.java linha: 98 Método: assertTrue(referenceTypes.size() > 0)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1814Test.java linha: 100 Método: assertEquals(1, methods.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1814Test.java linha: 92 Método: assertTimeoutPreemptively(Duration.ofMillis(1000L), () -> {
    String code = String.join(System.lineSeparator(), "public class AbstractExercise extends java.lang.Object {", "}");
    ParseResult<CompilationUnit> parseResult = javaParser.parse(ParseStart.COMPILATION_UNIT, Providers.provider(code));
    assertTrue(parseResult.isSuccessful());
    assertTrue(parseResult.getResult().isPresent());
    List<ClassOrInterfaceType> referenceTypes = parseResult.getResult().get().findAll(ClassOrInterfaceType.class);
    assertTrue(referenceTypes.size() > 0);
    final List<ResolvedMethodDeclaration> methods = referenceTypes.get(0).resolve().asReferenceType().getAllMethodsVisibleToInheritors();
    assertEquals(1, methods.size());
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1479Test.java linha: 59 Método: assertTrue(fae.calculateResolvedType().describe().equals("java.lang.String"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1479Test.java linha: 61 Método: assertTrue(value.getName().equals("AFIELD"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1479Test.java linha: 63 Método: assertEquals("a", fd.get().getVariable(0).getInitializer().get().asStringLiteralExpr().getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1817Test.java linha: 62 Método: assertEquals("X.A.bar", mce.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1950Test.java linha: 65 Método: assertEquals("java.lang.Runnable", resolved.getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1950Test.java linha: 66 Método: assertTrue(!resolved.isGeneric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 74 Método: assertEquals("MyAnnotation", declaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 85 Método: assertEquals("MyAnnotationWithElements", declaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 103 Método: assertEquals("VoidVisitor", declaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 104 Método: assertEquals(true, declaration.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 127 Método: assertEquals("AccessSpecifier", declaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 136 Método: assertEquals("AccessSpecifier", enumDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 138 Método: assertEquals("PUBLIC", declaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 147 Método: assertEquals("CompilationUnit", classDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 159 Método: assertEquals("CompilationUnit", classDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 162 Método: assertEquals("getComments", resolvedDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 163 Método: assertEquals(0, resolvedDeclaration.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java linha: 173 Método: assertEquals("CompilationUnit", classDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2062Test.java linha: 56 Método: assertEquals("bar(Optional.of(new Derived()))", mces.get(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2062Test.java linha: 57 Método: assertEquals("Base.bar(java.util.Optional<Base>)", mces.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue185Test.java linha: 52 Método: assertNotNull(foo)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1946Test.java linha: 52 Método: assertEquals(true, pr.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1946Test.java linha: 55 Método: assertEquals("com.github.javaparser.symbolsolver.testingclasses.UtilityClass.method(com.github.javaparser.symbolsolver.testingclasses.SomeClass.InnerEnum)", rmd.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1946Test.java linha: 58 Método: assertEquals("CONSTANT", rvd.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1946Test.java linha: 59 Método: assertEquals("com.github.javaparser.symbolsolver.testingclasses.SomeClass.InnerEnum", rvd.getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue251Test.java linha: 48 Método: Assertions.assertNotNull(javaParserFacade.solve(expression))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2477Test.java linha: 55 Método: assertEquals("A.method", mce.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue235Test.java linha: 62 Método: Assertions.assertNotNull(javaParserFacade.convertToUsage(expression.getType()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3200Test.java linha: 65 Método: assertEquals("Test.setRunnable(java.lang.String, java.lang.Runnable)", mce.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3200Test.java linha: 67 Método: assertEquals("Test.getContext(Test)", mce.get(1).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3200Test.java linha: 93 Método: assertEquals("Test.getContext(Test)", sig)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 62 Método: assertEquals("java.lang.String", exprs.get(0).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 63 Método: assertEquals("java.lang.String", exprs.get(1).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 64 Método: assertEquals("java.lang.String", exprs.get(2).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 65 Método: assertEquals("float", exprs.get(3).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 66 Método: assertEquals("double", exprs.get(4).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 67 Método: assertEquals("int", exprs.get(5).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 68 Método: assertEquals("long", exprs.get(6).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 69 Método: assertEquals("long", exprs.get(7).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 70 Método: assertEquals("int", exprs.get(8).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 71 Método: assertEquals("long", exprs.get(9).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 72 Método: assertEquals("long", exprs.get(10).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 75 Método: assertEquals("int", exprs.get(11).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 76 Método: assertEquals("int", exprs.get(12).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1774Test.java linha: 77 Método: assertEquals("int", exprs.get(13).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2360.java linha: 57 Método: assertEquals("InnerClass(int)", rcd.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2360.java linha: 83 Método: assertEquals("InnerClass(int)", rcd.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2360.java linha: 109 Método: assertEquals("InnerClass(int)", rcd.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1726Test.java linha: 52 Método: assertEquals("void", (mce.calculateResolvedType().describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1726Test.java linha: 53 Método: assertEquals("java.util.concurrent.TimeUnit", (mce.getArgument(0).calculateResolvedType().describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2953Test.java linha: 54 Método: assertTrue(method.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2953Test.java linha: 83 Método: assertEquals("foo.IB.equalByCode(java.lang.Integer)", methodSig)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 110 Método: assertTrue(parseResult.isSuccessful())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 111 Método: assertEquals(0, parseResult.getProblems().size(), "Expected zero errors when attempting to parse the input code.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 112 Método: assertTrue(parseResult.getResult().isPresent(), "Must have a parse result to run this test.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 117 Método: assertEquals(1, classMethods.size(), "Expected only one class with this matching name.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 120 Método: assertTrue(methodCallExprs.size() > 0, "Expected more than one method call.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 131 Método: assertEquals("D", javaParserFacade.solve(methodCallExprs.get(0)).getCorrespondingDeclaration().getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 134 Método: assertEquals("D", javaParserFacade.solve(methodCallExprs.get(2)).getCorrespondingDeclaration().getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 136 Método: assertEquals("void", javaParserFacade.solve(methodCallExprs.get(1)).getCorrespondingDeclaration().getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 139 Método: assertEquals("D", javaParserFacade.solve(methodCallExprs.get(4)).getCorrespondingDeclaration().getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 142 Método: assertEquals("V", javaParserFacade.solve(methodCallExprs.get(3)).getCorrespondingDeclaration().getReturnType().describe())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2162Test.java linha: 140 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    assertEquals("V", javaParserFacade.solve(methodCallExprs.get(3)).getCorrespondingDeclaration().getReturnType().describe());
}, "Exected this resolution to fail due to the chained methods -- `getView()` shouldn't exist on the return value from the first call to `getView()`.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1511Test.java linha: 84 Método: assertEquals("java.lang.Object", a.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1945Test.java linha: 110 Método: assertEquals(resultsQualifiedName.get(expr.toString()), qName)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1945Test.java linha: 111 Método: assertEquals(resultsResolvedType.get(expr.toString()), resolvedType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2764Test.java linha: 57 Método: assertTrue(parseResult.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2764Test.java linha: 58 Método: assertTrue(parseResult.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2764Test.java linha: 64 Método: assertTrue("int".contentEquals(resolve.getType().describe()))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3087Test.java linha: 66 Método: fail("Unable to resolve class EntrySet<Object, Object>", e)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2943Test.java linha: 52 Método: assertDoesNotThrow(methodCallExpr::resolve)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1518Test.java linha: 60 Método: assertEquals("Test1.Test2", oce.get(0).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1518Test.java linha: 61 Método: assertEquals("Test1.Test3", oce.get(1).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3045Test.java linha: 60 Método: assertTrue(methodType.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3045Test.java linha: 63 Método: assertThrows(UnsolvedSymbolException.class, methodType.get()::resolve)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3614Test.java linha: 53 Método: assertEquals("java.util.ArrayList", resolvedType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3112Test.java linha: 56 Método: assertFalse(lcl.getType().resolve().asReferenceType().getTypeDeclaration().get().isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3112Test.java linha: 80 Método: assertFalse(lcl.getType().resolve().asReferenceType().getTypeDeclaration().get().isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3173Test.java linha: 54 Método: assertTrue(annDecl.resolve().isAnnotation())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3173Test.java linha: 55 Método: assertEquals("AnnotationClass", annDecl.resolve().asAnnotation().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2259Test.java linha: 64 Método: assertEquals("foo(new Object[5])", mce.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2259Test.java linha: 65 Método: assertEquals("TestClass2.foo(java.lang.Object)", mce.resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2259Test.java linha: 66 Método: assertEquals("void", mce.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 64 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 66 Método: assertEquals("foo.bar.BinaryExpr.Operator", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 67 Método: assertEquals("OR", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 87 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 89 Método: assertEquals("foo.bar.BinaryExpr.Operator", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 90 Método: assertEquals("AND", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 110 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 112 Método: assertEquals("foo.bar.BinaryExpr.Operator", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 113 Método: assertEquals("OR", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 133 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 135 Método: assertEquals("foo.bar.BinaryExpr.Operator", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java linha: 136 Método: assertEquals("AND", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/AbstractNameLogicTest.java linha: 64 Método: assertTrue(parseResult.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicDisambiguationTest.java linha: 50 Método: assertEquals(syntacticClassification, NameLogic.syntacticClassificationAccordingToContext(nameNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicDisambiguationTest.java linha: 51 Método: assertEquals(nameCategory, NameLogic.classifyReference(nameNode, typeSolver))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 46 Método: assertEquals(nameCategory, NameLogic.syntacticClassificationAccordingToContext(nameNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 404 Método: assertEquals(nameRole, NameLogic.classifyRole(nameNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 409 Método: assertTrue(NameLogic.isSimpleName(nameNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 414 Método: assertTrue(NameLogic.isQualifiedName(nameNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 422 Método: assertEquals(false, NameLogic.isAName(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 423 Método: assertEquals(false, NameLogic.isAName(cu.getPackageDeclaration().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 426 Método: assertEquals(true, NameLogic.isAName(packageName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 427 Método: assertEquals(true, NameLogic.isAName(packageName.getQualifier().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 428 Método: assertEquals(true, NameLogic.isAName(packageName.getQualifier().get().getQualifier().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 431 Método: assertEquals(false, NameLogic.isAName(classA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 432 Método: assertEquals(true, NameLogic.isAName(classA.getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 435 Método: assertEquals(false, NameLogic.isAName(methodFoo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 436 Método: assertEquals(true, NameLogic.isAName(methodFoo.getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 437 Método: assertEquals(false, NameLogic.isAName(methodFoo.getParameter(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 438 Método: assertEquals(true, NameLogic.isAName(methodFoo.getParameter(0).getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 439 Método: assertEquals(false, NameLogic.isAName(methodFoo.getParameter(0).getType()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 440 Método: assertEquals(false, NameLogic.isAName(methodFoo.getType()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 443 Método: assertEquals(false, NameLogic.isAName(returnStmt))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 444 Método: assertEquals(true, NameLogic.isAName(returnStmt.getExpression().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 446 Método: assertEquals(true, NameLogic.isAName(fieldAccessExpr.getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 448 Método: assertEquals(true, NameLogic.isAName(fieldAccessExpr.getScope().asFieldAccessExpr().getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 451 Método: assertEquals(true, NameLogic.isAName(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 455 Método: assertEquals(true, NameLogic.isAName(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 468 Método: assertEquals(DECLARATION, NameLogic.classifyRole(packageName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 469 Método: assertEquals(DECLARATION, NameLogic.classifyRole(packageName.getQualifier().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 470 Método: assertEquals(DECLARATION, NameLogic.classifyRole(packageName.getQualifier().get().getQualifier().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 473 Método: assertEquals(DECLARATION, NameLogic.classifyRole(classA.getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 476 Método: assertEquals(DECLARATION, NameLogic.classifyRole(methodFoo.getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 477 Método: assertEquals(DECLARATION, NameLogic.classifyRole(methodFoo.getParameter(0).getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 480 Método: assertEquals(REFERENCE, NameLogic.classifyRole(returnStmt.getExpression().get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 482 Método: assertEquals(REFERENCE, NameLogic.classifyRole(fieldAccessExpr.getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 484 Método: assertEquals(REFERENCE, NameLogic.classifyRole(fieldAccessExpr.getScope().asFieldAccessExpr().getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 487 Método: assertEquals(REFERENCE, NameLogic.classifyRole(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 491 Método: assertEquals(REFERENCE, NameLogic.classifyRole(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 505 Método: assertEquals("com.mydeveloperplanet.jpmshello", NameLogic.nameAsString(md.getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java linha: 511 Método: assertEquals("Foo", NameLogic.nameAsString(cu.getType(0).getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 230 Método: assertEquals(1, parseResult.getProblems().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 231 Método: assertEquals("Use of patterns with instanceof is not supported.", parseResult.getProblem(0).getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 241 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 246 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    final ResolvedMethodDeclaration resolve = outOfScopeMethodCall.resolve();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 257 Método: assertEquals(1, methodCalls.size())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 262 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    final ResolvedMethodDeclaration resolve = outOfScopeMethodCall.resolve();
}, "Error: Variable defined within a pattern expression is used before it is declared - should not be resolved, but is.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 279 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 287 Método: assertEquals("java.lang.String.contains(java.lang.CharSequence)", resolve.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 288 Método: assertEquals("boolean", resolve.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 289 Método: assertEquals("contains", resolve.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 290 Método: assertEquals(1, resolve.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 291 Método: assertEquals("contains(java.lang.CharSequence)", resolve.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 295 Método: assertTrue(inScopeMethodCall.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 299 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 307 Método: assertEquals(1, methodCalls.size())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 312 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    final ResolvedMethodDeclaration resolve = outOfScopeMethodCall.resolve();
}, "Error: Variable defined within a pattern expression should not be available on the right hand side of an || operator.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 333 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 336 Método: assertEquals("s.contains(\"in scope\")", inScopeMethodCall.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 341 Método: assertEquals("java.lang.String.contains(java.lang.CharSequence)", resolve.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 342 Método: assertEquals("boolean", resolve.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 343 Método: assertEquals("contains", resolve.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 344 Método: assertEquals(1, resolve.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 345 Método: assertEquals("contains(java.lang.CharSequence)", resolve.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 349 Método: assertTrue(inScopeMethodCall.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 353 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 367 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 370 Método: assertEquals(1, binaryExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 374 Método: assertEquals(1, nameExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 389 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 392 Método: assertEquals(1, binaryExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 396 Método: assertEquals(1, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 409 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 414 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    final ResolvedMethodDeclaration resolve = outOfScopeMethodCall.resolve();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 428 Método: assertEquals(2, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 436 Método: assertEquals(2, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 442 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    final ResolvedMethodDeclaration resolve = outOfScopeMethodCall.resolve();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 451 Método: assertEquals(2, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 460 Método: assertEquals("java.lang.String.contains(java.lang.CharSequence)", resolve.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 461 Método: assertEquals("boolean", resolve.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 462 Método: assertEquals("contains", resolve.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 463 Método: assertEquals(1, resolve.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 464 Método: assertEquals("contains(java.lang.CharSequence)", resolve.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 468 Método: assertTrue(inScopeMethodCall.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 472 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 481 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 489 Método: assertEquals("java.lang.String.contains(java.lang.CharSequence)", resolve.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 490 Método: assertEquals("boolean", resolve.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 491 Método: assertEquals("contains", resolve.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 492 Método: assertEquals(1, resolve.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 493 Método: assertEquals("contains(java.lang.CharSequence)", resolve.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 501 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 509 Método: assertEquals("java.util.List.contains(java.lang.Object)", resolve.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 510 Método: assertEquals("boolean", resolve.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 511 Método: assertEquals("contains", resolve.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 512 Método: assertEquals(1, resolve.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 513 Método: assertEquals("contains(java.lang.Object)", resolve.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 521 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 529 Método: assertEquals("java.util.List.contains(java.lang.Object)", resolve.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 530 Método: assertEquals("boolean", resolve.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 531 Método: assertEquals("contains", resolve.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 532 Método: assertEquals(1, resolve.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 533 Método: assertEquals("contains(java.lang.Object)", resolve.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 540 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 542 Método: assertEquals(1, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 547 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    final ResolvedMethodDeclaration resolve = outOfScopeMethodCall.resolve();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java linha: 564 Método: assertEquals(2, nameExprs.size())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 100 Método: assertFalse(expectForward, "Exception, but we expected forwarding")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 98 Método: assertTrue(expectForward, "Forwarded, but we expected an exception")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 115 Método: assertTrue(resolved.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 125 Método: assertTrue(resolved.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 133 Método: assertThrows(NullPointerException.class, () -> new CombinedTypeSolver(ExceptionHandlers.IGNORE_NONE, childSolvers, null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 155 Método: assertTrue(reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java linha: 167 Método: assertTrue(reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 66 Método: assertEquals("JavaParserTypeSolver.java", wrappedNode.findCompilationUnit().get().getStorage().get().getFileName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 72 Método: assertTrue(folder.mkdirs())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 75 Método: assertTrue(testJava.createNewFile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 89 Método: assertTrue(x.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 90 Método: assertNotNull(x.getCorrespondingDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 91 Método: assertTrue(x.getCorrespondingDeclaration().isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 101 Método: assertTrue(x.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 102 Método: assertNotNull(x.getCorrespondingDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 103 Método: assertTrue(x.getCorrespondingDeclaration().isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 113 Método: assertTrue(x.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 114 Método: assertNotNull(x.getCorrespondingDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 115 Método: assertTrue(x.getCorrespondingDeclaration().isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 125 Método: assertTrue(x.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 126 Método: assertNotNull(x.getCorrespondingDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 127 Método: assertTrue(x.getCorrespondingDeclaration().isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 137 Método: assertTrue(x.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 138 Método: assertNotNull(x.getCorrespondingDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 139 Método: assertTrue(x.getCorrespondingDeclaration().isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 149 Método: assertFalse(x.isSolved())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java linha: 187 Método: assertDoesNotThrow(tasks::join, "JavaParserTypeSolve should work properly when called from multiple threads.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 45 Método: assertFalse(memoryTypeSolver.tryToSolveType(expectedNonExistingClass.getCanonicalName()).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 46 Método: assertTrue(memoryTypeSolver.tryToSolveType(expectedExistingClass.getCanonicalName()).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 57 Método: assertEquals(solver1, solver2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 60 Método: assertNotEquals(solver1, solver2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 63 Método: assertEquals(solver1, solver2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 74 Método: assertEquals(solver1.hashCode(), solver2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 77 Método: assertNotEquals(solver1.hashCode(), solver2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java linha: 80 Método: assertEquals(solver1.hashCode(), solver2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/ClassLoaderTypeSolverTest.java linha: 50 Método: assertTrue(solvedType.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/ClassLoaderTypeSolverTest.java linha: 53 Método: assertEquals(expectedCanonicalName, resolvedDeclaration.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/ReflectionTypeSolverTest.java linha: 53 Método: assertEquals(true, ts.hasType(String.class.getCanonicalName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/ReflectionTypeSolverTest.java linha: 54 Método: assertEquals(true, ts.hasType(Object.class.getCanonicalName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/ReflectionTypeSolverTest.java linha: 55 Método: assertEquals(false, ts.hasType("foo.zum.unexisting"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/ReflectionTypeSolverTest.java linha: 73 Método: Assertions.assertThrows(UnsolvedSymbolException.class, () -> unit.accept(new VoidVisitorAdapter<Object>() {

    @Override
    public void visit(ObjectCreationExpr exp, Object arg) {
        super.visit(exp, arg);
        exp.resolve().getSignature();
    }
}, null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AbstractTypeSolverTest.java linha: 60 Método: assertThrows(IllegalStateException.class, () -> solver.setParent(solver))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AbstractTypeSolverTest.java linha: 72 Método: assertThrows(IllegalStateException.class, () -> solver.setParent(parentSolver))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AbstractTypeSolverTest.java linha: 84 Método: assertNull(solver.getParent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AbstractTypeSolverTest.java linha: 89 Método: assertNotNull(returnedSolver)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AbstractTypeSolverTest.java linha: 90 Método: assertEquals(parentSolver, returnedSolver)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/TypeSolverBuilderTest.java linha: 44 Método: assertThrows(IllegalStateException.class, typeSolverBuilder::build)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/TypeSolverBuilderTest.java linha: 60 Método: assertEquals(typeSolverToRegister, createdTypeSolver)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/TypeSolverBuilderTest.java linha: 304 Método: assertTrue(typeSolver.hasType(className), String.format("Unable to solve type %s", className))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/TypeSolverBuilderTest.java linha: 314 Método: assertFalse(typeSolver.hasType(className), String.format("This type solver should not be able to solve type %s", className))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 51 Método: assertEquals(true, aarTypeSolver.tryToSolveType("android.support.v4.app.ActivityCompat").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 52 Método: assertEquals(true, aarTypeSolver.tryToSolveType("android.support.v4.app.ActivityManagerCompat").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 53 Método: assertEquals(true, aarTypeSolver.tryToSolveType("android.support.v4.app.NotificationCompat").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 54 Método: assertEquals(true, aarTypeSolver.tryToSolveType("android.support.v4.app.NotificationCompat.Action").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 55 Método: assertEquals(true, aarTypeSolver.tryToSolveType("android.support.v4.app.NotificationCompat.Action.Builder").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 56 Método: assertEquals(false, aarTypeSolver.tryToSolveType("com.github.javaparser.ASTParser.Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 57 Método: assertEquals(false, aarTypeSolver.tryToSolveType("com.github.javaparser.Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java linha: 58 Método: assertEquals(false, aarTypeSolver.tryToSolveType("Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 60 Método: assertEquals(true, jarTypeSolver.tryToSolveType("com.github.javaparser.SourcesHelper").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 61 Método: assertEquals(true, jarTypeSolver.tryToSolveType("com.github.javaparser.Token").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 62 Método: assertEquals(true, jarTypeSolver.tryToSolveType("com.github.javaparser.ASTParser.JJCalls").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 63 Método: assertEquals(false, jarTypeSolver.tryToSolveType("com.github.javaparser.ASTParser.Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 64 Método: assertEquals(false, jarTypeSolver.tryToSolveType("com.github.javaparser.Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 65 Método: assertEquals(false, jarTypeSolver.tryToSolveType("Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 72 Método: assertEquals(true, jarTypeSolver1.tryToSolveType("foo.bar.A").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 76 Método: assertEquals(true, jarTypeSolver2.tryToSolveType("foo.zum.B").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 81 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    Path pathToJar2 = adaptPath("src/test/resources/jar2.jar");
    JarTypeSolver jarTypeSolver2 = new JarTypeSolver(pathToJar2);
    ResolvedReferenceTypeDeclaration b = jarTypeSolver2.tryToSolveType("foo.zum.B").getCorrespondingDeclaration();
    b.getAncestors();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 101 Método: assertEquals(1, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 114 Método: assertFalse(typeSolver.tryToSolveType("java.lang.Object").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 122 Método: assertEquals("com.github.javaparser.ast.Node", nodeType.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 129 Método: assertThrows(UnsolvedSymbolException.class, () -> typeSolver.solveType("java.lang.Object"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 137 Método: assertTrue(typeSolver.tryToSolveType("com.github.javaparser.ast.Node").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 144 Método: assertThrows(FileNotFoundException.class, () -> new JarTypeSolver(pathToJar))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 154 Método: assertEquals(Sets.newHashSet(typeA), jarTypeSolver1.getKnownClasses())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 155 Método: assertTrue(jarTypeSolver1.tryToSolveType(typeA).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 156 Método: assertFalse(jarTypeSolver1.tryToSolveType(typeB).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 160 Método: assertEquals(Sets.newHashSet(typeB), jarTypeSolver2.getKnownClasses())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 161 Método: assertTrue(jarTypeSolver2.tryToSolveType(typeB).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java linha: 162 Método: assertFalse(jarTypeSolver2.tryToSolveType(typeA).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 76 Método: assertEquals("foo.bar.MyAnnotation", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 77 Método: assertEquals("foo.bar", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 78 Método: assertEquals("MyAnnotation", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 92 Método: assertEquals("foo.bar.MyAnnotationWithSingleValue", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 93 Método: assertEquals("foo.bar", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 94 Método: assertEquals("MyAnnotationWithSingleValue", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 109 Método: assertEquals(IntegerLiteralExpr.class, memberValue.getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 123 Método: assertEquals("foo.bar.MyAnnotationWithElements", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 124 Método: assertEquals("foo.bar", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 125 Método: assertEquals("MyAnnotationWithElements", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 140 Método: assertEquals("java.lang.Override", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 141 Método: assertEquals("java.lang", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 142 Método: assertEquals("Override", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 159 Método: assertEquals("BooleanLiteralExpr", expr.getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 160 Método: assertEquals(true, ((BooleanLiteralExpr) expr).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 164 Método: assertEquals("boolean", rt.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 182 Método: assertEquals("java.lang.SuppressWarnings", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 183 Método: assertEquals("java.lang", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 184 Método: assertEquals("SuppressWarnings", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 199 Método: assertEquals("org.junit.Before", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 200 Método: assertEquals("org.junit", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 201 Método: assertEquals("Before", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 216 Método: assertEquals("org.junit.Ignore", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 217 Método: assertEquals("org.junit", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 218 Método: assertEquals("Ignore", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 233 Método: assertEquals("org.junit.Test", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 234 Método: assertEquals("org.junit", resolved.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 235 Método: assertEquals("Test", resolved.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 250 Método: assertEquals("org.junit.Ignore", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 252 Método: assertEquals(StringLiteralExpr.class, memberValue.getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 254 Método: assertEquals("java.lang.String", rt.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 268 Método: assertEquals("foo.bar.MyAnnotation", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 269 Método: assertTrue(resolved.hasDirectlyAnnotation("java.lang.annotation.Target"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 270 Método: assertTrue(resolved.hasDirectlyAnnotation("java.lang.annotation.Retention"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 271 Método: assertFalse(resolved.hasDirectlyAnnotation("java.lang.annotation.Documented"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 286 Método: assertEquals("java.lang.Override", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 287 Método: assertTrue(resolved.hasDirectlyAnnotation("java.lang.annotation.Target"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 288 Método: assertTrue(resolved.hasDirectlyAnnotation("java.lang.annotation.Retention"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 289 Método: assertFalse(resolved.hasDirectlyAnnotation("java.lang.annotation.Documented"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 304 Método: assertEquals("org.junit.Test", resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 305 Método: assertTrue(resolved.hasDirectlyAnnotation("java.lang.annotation.Target"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 306 Método: assertTrue(resolved.hasDirectlyAnnotation("java.lang.annotation.Retention"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 307 Método: assertFalse(resolved.hasDirectlyAnnotation("java.lang.annotation.Documented"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 321 Método: assertEquals("foo.bar.MyAnnotation", resolvedAnnotationOnClass.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 322 Método: assertEquals("org.junit.Ignore", resolvedAnnotationOnMethod.getQualifiedName())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 333 Método: assertTrue(hasAnnotation, "org.junit.runner.RunWith not found on reference type")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 343 Método: assertEquals(ancestors.size(), 1)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 344 Método: assertEquals(ancestors.get(0).getQualifiedName(), "java.lang.annotation.Annotation")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 351 Método: assertEquals(ad.getMember(0).asAnnotationMemberDeclaration().resolve().getType().asPrimitive().describe(), "int")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java linha: 359 Método: assertEquals(am.getType().asReferenceType().getQualifiedName(), "foo.bar.MyAnnotationWithInnerClass.MyInnerClass")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaSymbolSolver060Test.java linha: 70 Método: fail("one or more jar dependencies could not be found.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaSymbolSolver060Test.java linha: 109 Método: assertEquals(0, sourceFileInfoExtractor.getFailures(), "No failures expected when analyzing " + path)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaSymbolSolver060Test.java linha: 110 Método: assertEquals(0, sourceFileInfoExtractor.getUnsupported(), "No UnsupportedOperationException expected when analyzing " + path)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaSymbolSolver060Test.java linha: 125 Método: assertEquals(expectedLines[i].trim(), outputLines[i].trim(), "Line " + (i + 1) + " of " + path + " is different from what is expected")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaSymbolSolver060Test.java linha: 128 Método: assertEquals(expectedLines.length, outputLines.length)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeInClassWithAnnotationAncestorTest.java linha: 45 Método: assertFalse(type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeInClassWithAnnotationAncestorTest.java linha: 46 Método: assertEquals("java.lang.String", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 89 Método: assertFalse(solvedSymbol.isSolved())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 91 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    solvedSymbol.getCorrespondingDeclaration();
}, "Expected UnsolvedSymbolException when requesting CorrespondingDeclaration on unsolved SymbolRefernce")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 112 Método: assertTrue(e instanceof UnsolvedSymbolException)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 113 Método: assertEquals("Unsolved symbol : com.github.javaparser.javasymbolsolver.javassist_symbols.excluded_jar.InterfaceExcludedJar", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 116 Método: fail("Excepted NotFoundException wrapped in a RuntimeException, but got no exception.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 122 Método: assertTrue(solvedSymbol.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java linha: 123 Método: assertEquals(symbolName, solvedSymbol.getCorrespondingDeclaration().asField().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 106 Método: assertEquals(exception1, exception2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 107 Método: assertEquals(exception1, exception3)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 108 Método: assertEquals(exception1, exception4)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 120 Método: assertEquals("java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 141 Método: assertEquals("size", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 163 Método: assertEquals("foo", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 174 Método: assertEquals("noneOf", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 189 Método: assertEquals("java.lang.Object.toString()", call1.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 202 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 203 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 208 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 209 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 214 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 215 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 220 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 221 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 236 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 237 Método: assertEquals("intParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 242 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 243 Método: assertEquals("intParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 248 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 249 Método: assertEquals("intParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 254 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 269 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 270 Método: assertEquals("shortParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 275 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 276 Método: assertEquals("shortParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 281 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 286 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 301 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 302 Método: assertEquals("byteParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 307 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 312 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 317 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 332 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 333 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 338 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 339 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 344 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 345 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 350 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 351 Método: assertEquals("longParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 366 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 367 Método: assertEquals("intParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 372 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 373 Método: assertEquals("intParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 378 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 379 Método: assertEquals("intParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 384 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 399 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 400 Método: assertEquals("shortParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 405 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 406 Método: assertEquals("shortParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 411 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 416 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 431 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 432 Método: assertEquals("byteParam", reference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 437 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 442 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 447 Método: assertEquals(false, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 460 Método: assertEquals(true, reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 471 Método: assertEquals(true, type.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 472 Método: assertEquals(true, type.asReferenceType().getTypeDeclaration().get() instanceof JavaParserAnonymousClassDeclaration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 490 Método: assertTrue(reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 491 Método: assertEquals("java.io.File.delete()", reference.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 507 Método: assertEquals(mainClass, resolvedTypeDeclaration.getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 523 Método: assertTrue(reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 524 Método: assertEquals("X.Y.bar()", reference.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 540 Método: assertTrue(reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 541 Método: assertEquals("X.Y.bar()", reference.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 557 Método: assertTrue(reference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 558 Método: assertEquals("X.A.bar()", reference.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 577 Método: assertEquals("ClassExtendingUnknownClass.bar(java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 595 Método: assertEquals("OverloadedMethods.complexOverloading1(java.lang.String, java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 613 Método: assertEquals("OverloadedMethods.complexOverloading2(java.lang.String...)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 631 Método: assertEquals("OverloadedMethods.complexOverloading3(long)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java linha: 649 Método: assertEquals("OverloadedMethods.complexOverloading4(long, int)", resolvedMethodDeclaration.getQualifiedSignature())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/NotQuiteCyclicParentTest.java linha: 54 Método: fail("We shouldn't be able to resolve the type (it is not defined).")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionWithJavassistTest.java linha: 67 Método: assertEquals(2, calls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionWithJavassistTest.java linha: 71 Método: assertEquals("com.github.javaparser.ast.visitor.GenericVisitor<R, A>", methodUsage1.getParamType(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionWithJavassistTest.java linha: 75 Método: assertEquals("com.github.javaparser.ast.visitor.VoidVisitor<A>", methodUsage2.getParamType(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 48 Método: assertEquals("null", rt1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 51 Método: assertEquals("java.lang.String", rt2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 54 Método: assertEquals("A", rt3.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 61 Método: assertEquals("java.lang.String", rt1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 64 Método: assertEquals("java.lang.String", rt2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 72 Método: assertEquals("java.lang.Boolean", rt1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 76 Método: assertEquals("boolean", rt2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 84 Método: assertEquals("int", rt1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 89 Método: assertEquals("int", rt2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 94 Método: assertEquals("short", rt3.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 97 Método: assertEquals("short", rt4.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 100 Método: assertEquals("short", rt5.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 103 Método: assertEquals("short", rt5b.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 109 Método: assertEquals("byte", rt6.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 112 Método: assertEquals("short", rt7.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 115 Método: assertEquals("char", rt8.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 122 Método: assertEquals("byte", rt9.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 125 Método: assertEquals("short", rt10.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 128 Método: assertEquals("char", rt11.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 132 Método: assertEquals("char", rt12.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 138 Método: assertEquals("long", rt13.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 141 Método: assertEquals("double", rt14.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 150 Método: assertEquals("java.lang.String", rt1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 157 Método: assertEquals("java.util.List<T>", rt2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 160 Método: assertEquals("java.lang.Class<? extends java.io.Serializable>", rt5.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 163 Método: assertEquals("java.io.Serializable", rt6.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 172 Método: assertEquals("java.util.List<java.lang.String>", rt3.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java linha: 176 Método: assertEquals("java.util.List<java.lang.String>", rt4.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 41 Método: assertTrue(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 42 Método: assertFalse(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 48 Método: assertTrue(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 49 Método: assertFalse(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 55 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 56 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 63 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 64 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 70 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 71 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 74 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 75 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 78 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 79 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 85 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 86 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 92 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 93 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 99 Método: assertFalse(expr.isPolyExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 100 Método: assertTrue(expr.isStandaloneExpression())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 106 Método: assertTrue(expr.elidesTypeArguments())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 108 Método: assertTrue(expr.elidesTypeArguments())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 110 Método: assertTrue(expr.elidesTypeArguments())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 112 Método: assertTrue(expr.elidesTypeArguments())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 114 Método: assertFalse(expr.elidesTypeArguments())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 120 Método: assertTrue(expr.appearsInAssignmentContext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 126 Método: assertFalse(expr.appearsInAssignmentContext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 132 Método: assertFalse(expr.appearsInInvocationContext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java linha: 138 Método: assertTrue(expr.appearsInInvocationContext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 32 Método: assertEquals("V", TypeUtils.getPrimitiveTypeDescriptor(void.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 33 Método: assertEquals("V", TypeUtils.getPrimitiveTypeDescriptor(Void.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 35 Método: assertEquals("Z", TypeUtils.getPrimitiveTypeDescriptor(boolean.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 36 Método: assertEquals("Z", TypeUtils.getPrimitiveTypeDescriptor(Boolean.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 38 Método: assertEquals("C", TypeUtils.getPrimitiveTypeDescriptor(char.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 39 Método: assertEquals("C", TypeUtils.getPrimitiveTypeDescriptor(Character.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 41 Método: assertEquals("B", TypeUtils.getPrimitiveTypeDescriptor(byte.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 42 Método: assertEquals("B", TypeUtils.getPrimitiveTypeDescriptor(Byte.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 44 Método: assertEquals("S", TypeUtils.getPrimitiveTypeDescriptor(short.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 45 Método: assertEquals("S", TypeUtils.getPrimitiveTypeDescriptor(Short.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 47 Método: assertEquals("I", TypeUtils.getPrimitiveTypeDescriptor(int.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 48 Método: assertEquals("I", TypeUtils.getPrimitiveTypeDescriptor(Integer.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 50 Método: assertEquals("J", TypeUtils.getPrimitiveTypeDescriptor(long.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 51 Método: assertEquals("J", TypeUtils.getPrimitiveTypeDescriptor(Long.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 53 Método: assertEquals("F", TypeUtils.getPrimitiveTypeDescriptor(float.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 54 Método: assertEquals("F", TypeUtils.getPrimitiveTypeDescriptor(Float.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 56 Método: assertEquals("D", TypeUtils.getPrimitiveTypeDescriptor(double.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeDescriptorTest.java linha: 57 Método: assertEquals("D", TypeUtils.getPrimitiveTypeDescriptor(Double.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldAccessExprResolutionTest.java linha: 59 Método: assertEquals("X.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldAccessExprResolutionTest.java linha: 69 Método: assertEquals("X.X1.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldAccessExprResolutionTest.java linha: 79 Método: assertEquals("X.Y1.X2.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldAccessExprResolutionTest.java linha: 89 Método: assertEquals("X.Z1.Y2.X3.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 64 Método: assertEquals(Object.class.getCanonicalName(), superclass.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 86 Método: assertEquals("java.lang.Throwable.getMessage()", methodUsage.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 109 Método: assertTrue(symbolReference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 110 Método: assertTrue(symbolReference.getCorrespondingDeclaration().isParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 111 Método: assertEquals("e", symbolReference.getCorrespondingDeclaration().asParameter().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 112 Método: assertEquals("java.lang.UnsupportedOperationException", symbolReference.getCorrespondingDeclaration().asParameter().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 131 Método: assertEquals("Foo.Base.X", jssType.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 144 Método: assertTrue(type.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 145 Método: assertEquals("java.util.Scanner", type.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 171 Método: assertTrue(jssType instanceof ResolvedUnionType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 180 Método: assertNotNull(resolvedType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 181 Método: assertTrue(resolvedType.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 182 Método: assertEquals(clazz.getCanonicalName(), resolvedType.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 205 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 228 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 250 Método: assertEquals("java.util.List<int[]>", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 275 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java linha: 298 Método: assertEquals("java.lang.Object", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 86 Método: assertEquals("(IDLjava/lang/Thread;)V", constructor.get(0).toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 90 Método: assertEquals("(IDLjava/lang/Thread;)Ljava/lang/Object;", methods.get(0).toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 92 Método: assertEquals("(IDLjava/lang/Thread;)V", methods.get(1).toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 94 Método: assertEquals("(IDLjava/lang/Thread;)[I", methods.get(2).toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 96 Método: assertEquals("(IDLjava/lang/Thread;)[[J", methods.get(3).toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 98 Método: assertEquals("()V", methods.get(4).toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 105 Método: assertEquals("(IDLjava/lang/Thread;)Ljava/lang/Object;", methods.get(0).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 107 Método: assertEquals("(IDLjava/lang/Thread;)V", methods.get(1).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 109 Método: assertEquals("(IDLjava/lang/Thread;)[I", methods.get(2).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 111 Método: assertEquals("(IDLjava/lang/Thread;)[[J", methods.get(3).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 113 Método: assertEquals("()V", methods.get(4).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 117 Método: assertEquals("(Ljava/lang/String;)V", methodCalls.get(0).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 119 Método: assertEquals("(Ljava/lang/String;)LA/TestEnum;", methodCalls.get(1).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 121 Método: assertEquals("()[LA/TestEnum;", methodCalls.get(2).resolve().toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 130 Método: assertEquals("(Ljava/util/List;)V", methodWithRawParameter.toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodDescriptorTest.java linha: 133 Método: assertEquals("()V", methodWithExceptions.toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 60 Método: assertEquals(true, type.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 61 Método: assertEquals(List.class.getCanonicalName(), type.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 62 Método: assertEquals("java.util.List<java.lang.Long>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 76 Método: assertEquals("variadicMethod", callee.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 90 Método: assertEquals("variadicWithGenericArg", callee.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 109 Método: assertEquals("void", call1.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 110 Método: assertEquals("int", call2.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 111 Método: assertEquals("void", call3.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 112 Método: assertEquals("void", call4.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 114 Método: assertThrows(RuntimeException.class, () -> {
    MethodUsage call5 = javaParserFacade.solveMethodAsUsage(calls.get(4));
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 132 Método: assertEquals("java.lang.reflect.Constructor", call1.returnType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 133 Método: assertEquals("java.lang.reflect.Constructor", call2.returnType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 134 Método: assertEquals("java.lang.reflect.Constructor", call3.returnType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java linha: 135 Método: assertEquals("java.lang.reflect.Constructor", call4.returnType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 70 Método: assertEquals("java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 87 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 88 Método: assertTrue(ref.getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 99 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 100 Método: assertEquals("label", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 112 Método: assertEquals("java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 124 Método: assertEquals("java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 146 Método: assertEquals(variableDeclarator, ((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 169 Método: assertEquals(variableDeclarator, ((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 191 Método: assertEquals(variableDeclarator, ((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 213 Método: assertEquals(variableDeclarator, ((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java linha: 229 Método: assertEquals("int", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ArrayExprTest.java linha: 54 Método: assertTrue(type.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ArrayExprTest.java linha: 55 Método: assertEquals("java.lang.String", type.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ArrayExprTest.java linha: 67 Método: assertEquals("length", resolvedValueDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ArrayExprTest.java linha: 68 Método: assertEquals(ResolvedPrimitiveType.INT, resolvedValueDeclaration.getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 91 Método: assertEquals("java.util.List<T>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 92 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 93 Método: assertEquals(true, type.asReferenceType().typeParametersValues().get(0).isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 94 Método: assertEquals("T", type.asReferenceType().typeParametersValues().get(0).asTypeParameter().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 95 Método: assertEquals("com.github.javaparser.utils.PositionUtils.sortByBeginPosition(java.util.List<T>).T", type.asReferenceType().typeParametersValues().get(0).asTypeParameter().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 96 Método: assertEquals(1, type.asReferenceType().typeParametersValues().get(0).asTypeParameter().getBounds().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 98 Método: assertEquals(true, bound.isExtends())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java linha: 99 Método: assertEquals("com.github.javaparser.ast.Node", bound.getType().describe())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 71 Método: assertEquals("extends_duplicate.DuplicateTypeName", qualifiedName, "Error - not resolved to the class in the package.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 72 Método: assertNotEquals("extends_duplicate.A.DuplicateTypeName", qualifiedName, "Error - mistakenly resolved to a nested class instead of the expected class.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 101 Método: assertEquals("implements_duplicate.DuplicateTypeName", qualifiedName, "Error - not resolved to interface in the package.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 102 Método: assertNotEquals("implements_duplicate.A.DuplicateTypeName", qualifiedName, "Error - mistakenly resolved to a nested class instead of the expected interface.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 119 Método: assertEquals("another.A", qualifiedName, "Error - not resolved to a class.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 120 Método: assertNotEquals("another.MyEnum.A", qualifiedName, "Error - mistakenly resolved to an enum member instead of the expected class.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 137 Método: assertEquals("another.A", qualifiedName, "Error - not resolved to the imorted class.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 138 Método: assertNotEquals("main.A", qualifiedName, "Error - mistakenly resolved to a package member insted of the explicitly imported class.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 155 Método: assertEquals("main.A", qualifiedName, "Error - not resolved to a package member.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 156 Método: assertNotEquals("another.A", qualifiedName, "Error - mistakenly resolved to an asterisk-imported class instead of the expected package member.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 173 Método: assertEquals("another.String", qualifiedName, "Error - not resolved to an asterisk-imported class.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 174 Método: assertNotEquals("java.lang.String", qualifiedName, "Error - mistakenly resolved to a member of java.lang instead of a member of asterisk-imported package.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 201 Método: assertEquals("implements_duplicate.A.Formattable", qualifiedName, "Error - not resolved to local interface")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java linha: 202 Método: assertNotEquals("java.util.Formattable", qualifiedName, "Error - mistakenly resolved to import used in implements")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 50 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 68 Método: assertFalse(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 87 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 105 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 125 Método: assertFalse(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 144 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 163 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 185 Método: assertFalse(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 211 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 217 Método: assertFalse(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 233 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 250 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/logic/FunctionalInterfaceLogicTest.java linha: 273 Método: assertTrue(methodUsage.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 64 Método: assertEquals("main.Child.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 76 Método: assertEquals("main.Parent.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 88 Método: assertEquals("main.Child.method", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 100 Método: assertEquals("main.Clazz.MyEnum", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 113 Método: assertEquals("main.Main.NestedEnum.foo", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 117 Método: assertEquals("main.Main.NestedEnum.bar", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java linha: 121 Método: assertEquals("main.Main.NestedEnum.baz", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 85 Método: assertFalse(solvedSymbol.isSolved())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 87 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    solvedSymbol.getCorrespondingDeclaration();
}, "Expected UnsolvedSymbolException when requesting CorrespondingDeclaration on unsolved SymbolRefernce")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 108 Método: assertTrue(e instanceof UnsolvedSymbolException)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 109 Método: assertEquals("Unsolved symbol : com.github.javaparser.javasymbolsolver.javassist_symbols.excluded_jar.SuperClassExcludedJar", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 112 Método: fail("Excepted NotFoundException wrapped in a RuntimeException, but got no exception.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 130 Método: assertTrue(e instanceof UnsolvedSymbolException)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 131 Método: assertEquals("Unsolved symbol : com.github.javaparser.javasymbolsolver.javassist_symbols.excluded_jar.InterfaceExcludedJar", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 134 Método: fail("Excepted NotFoundException wrapped in a RuntimeException, but got no exception.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 140 Método: assertTrue(solvedSymbol.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java linha: 141 Método: assertEquals(symbolName, solvedSymbol.getCorrespondingDeclaration().asField().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/QualifiedNameResolutionTest.java linha: 47 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/QualifiedNameResolutionTest.java linha: 48 Método: assertEquals("java.util.Scanner", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/reflectionmodel/SymbolResolutionResolutionTest.java linha: 51 Método: assertEquals("int", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/reflectionmodel/SymbolResolutionResolutionTest.java linha: 62 Método: assertEquals("int", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/reflectionmodel/SymbolResolutionResolutionTest.java linha: 75 Método: assertEquals("java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/reflectionmodel/SymbolResolutionResolutionTest.java linha: 87 Método: assertEquals("java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 67 Método: assertFalse(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 75 Método: assertTrue(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 76 Método: assertTrue(res.getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 84 Método: assertTrue(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 85 Método: assertTrue(res.getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 93 Método: assertFalse(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java linha: 98 Método: assertTrue(typeSolverNewCode.solveType("com.github.javaparser.FooClass").isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 65 Método: assertEquals("java.lang.Object.hashCode()", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 84 Método: assertEquals("java.lang.Object.hashCode()", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 103 Método: assertEquals("java.lang.String.hashCode()", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 122 Método: assertEquals("java.lang.Object.hashCode()", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 141 Método: assertEquals("java.io.PrintStream.println(java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 160 Método: assertEquals("MethodReferences.print(java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 179 Método: assertEquals("SuperClass.print(java.lang.Integer)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 198 Método: assertEquals("java.util.List.add(E)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 217 Método: assertEquals("SuperClass.print(java.lang.Boolean)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 236 Método: assertEquals("SuperClass.isEqualAsStrings(java.lang.Integer, java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 255 Método: assertEquals("SuperClass.getOneNumberAsString(java.lang.Integer, java.lang.Integer, java.lang.Integer)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 273 Método: assertEquals("MethodReferences.print(java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 291 Método: assertEquals("SuperClass.returnSameValue(java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 309 Método: assertEquals("SuperClass.isEqual(java.lang.Integer, java.lang.Integer)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 327 Método: assertEquals("SuperClass.print(java.lang.Integer)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 345 Método: assertEquals("SuperClass.returnSameValue(java.lang.Integer)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 363 Método: assertEquals("SuperClass.add(java.lang.Integer, java.lang.Integer)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 381 Método: assertEquals("SuperClass.isEqualAsStrings(java.lang.Integer, java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 413 Método: assertEquals("java.lang.String.valueOf(java.lang.Object)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 418 Método: assertEquals("java.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)", callMethodDeclaration.getQualifiedSignature())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 454 Método: assertEquals(0, errorCount, "Expected zero UnsolvedSymbolException s")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 487 Método: assertEquals(0, errorCount, "Expected zero UnsolvedSymbolException s")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 529 Método: assertEquals(0, errorCount, "Expected zero UnsolvedSymbolException s")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 566 Método: assertEquals(0, errorCount, "Expected zero UnsolvedSymbolException s")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 586 Método: assertEquals("Supplier<SuperClass>", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 604 Método: assertEquals("SuperClass", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java linha: 623 Método: assertEquals("SuperClass", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariableResolutionTest.java linha: 48 Método: assertTrue(methodUsage.declaringType().getQualifiedName().equals("java.lang.String"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/VariableResolutionTest.java linha: 62 Método: assertTrue(methodUsage.declaringType().getQualifiedName().equals("java.lang.String"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 51 Método: assertEquals("java.util.function.Function<? super java.lang.String, ? extends java.lang.String>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 65 Método: assertEquals("java.util.stream.Stream<java.lang.String>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 82 Método: assertEquals("java.util.stream.Stream<java.lang.String>", type1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 83 Método: assertEquals("java.util.stream.Stream<java.util.stream.IntStream>", type2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 96 Método: assertEquals("java.util.Optional<java.lang.Integer>", type1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 109 Método: assertEquals("void", type1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 122 Método: assertEquals("double", type1.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 137 Método: assertEquals("java.util.stream.Collector<T, ? extends java.lang.Object, java.util.List<T>>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 150 Método: assertEquals("java.util.List<java.lang.String>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 163 Método: assertEquals("java.lang.String", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 176 Método: assertEquals("java.lang.String", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java linha: 190 Método: assertEquals("java.util.function.Consumer<? super java.lang.String>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/DefaultPackageTest.java linha: 159 Método: assertEquals("B", resolvedType.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/DefaultPackageTest.java linha: 170 Método: assertEquals("B", resolvedType.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/DefaultPackageTest.java linha: 164 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    String code = "package myPackage; import B; class A extends B {}";
    MemoryTypeSolver memoryTypeSolver = new MemoryTypeSolver();
    memoryTypeSolver.addDeclaration("B", new MyClassDeclaration("B"));
    ClassOrInterfaceType jpType = parse(code).getClassByName("A").get().getExtendedTypes(0);
    ResolvedType resolvedType = JavaParserFacade.get(memoryTypeSolver).convertToUsage(jpType);
    assertEquals("B", resolvedType.asReferenceType().getQualifiedName());
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/DefaultPackageTest.java linha: 182 Método: assertEquals("B", resolvedType.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/DefaultPackageTest.java linha: 177 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    String code = "package myPackage; class A extends B {}";
    MemoryTypeSolver memoryTypeSolver = new MemoryTypeSolver();
    memoryTypeSolver.addDeclaration("B", new MyClassDeclaration("B"));
    ResolvedType resolvedType = JavaParserFacade.get(memoryTypeSolver).convertToUsage(parse(code).getClassByName("A").get().getExtendedTypes(0));
    assertEquals("B", resolvedType.asReferenceType().getQualifiedName());
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 64 Método: assertEquals(true, symbolReference.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 65 Método: assertEquals("s", symbolReference.get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 68 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 69 Método: assertEquals("java.lang.String", type.asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 81 Método: assertEquals(true, symbolReference.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 82 Método: assertEquals("g", symbolReference.get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 85 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 86 Método: assertEquals("me.tomassetti.symbolsolver.javaparser.Generics", type.asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 98 Método: assertEquals(true, symbolReference.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 99 Método: assertEquals("i", symbolReference.get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 102 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 103 Método: assertEquals("java.lang.Integer", type.asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 115 Método: assertEquals(true, symbolReference.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 116 Método: assertEquals("a", symbolReference.get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 119 Método: assertEquals(true, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 120 Método: assertEquals("A", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 132 Método: assertEquals(true, symbolReference.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 133 Método: assertEquals("as", symbolReference.get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 136 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 137 Método: assertEquals("java.util.List<A>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 138 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 140 Método: assertEquals(true, typeParam.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 141 Método: assertEquals("A", typeParam.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 155 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 156 Método: assertEquals("java.lang.String", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 169 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 170 Método: assertEquals("java.util.List<A>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 171 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 172 Método: assertEquals(true, type.asReferenceType().typeParametersValues().get(0).isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 173 Método: assertEquals("A", type.asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 187 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 188 Método: assertEquals("java.util.List<java.lang.String>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 189 Método: assertEquals(1, type.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 190 Método: assertEquals(false, type.asReferenceType().typeParametersValues().get(0).isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 191 Método: assertEquals("java.lang.String", type.asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 203 Método: assertEquals("callee", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 215 Método: assertEquals("get", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 216 Método: assertEquals("java.lang.String", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 228 Método: assertEquals("toString", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 229 Método: assertEquals("java.lang.Object", methodUsage.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 241 Método: assertEquals("bar", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 242 Método: assertEquals("GenericsWildcard.Foo", methodUsage.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 254 Método: assertEquals("foo", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 255 Método: assertEquals("GenericMethodBoxing", methodUsage.declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 256 Método: assertEquals("java.lang.Long", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 269 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 270 Método: assertEquals("Comment", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 283 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 284 Método: assertEquals("AnnotationExpr", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 300 Método: assertEquals(2, allAncestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 312 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 313 Método: assertEquals("void", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 329 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 330 Método: assertEquals("java.lang.Class<N>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 342 Método: assertEquals(true, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 343 Método: assertEquals("N", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 355 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 356 Método: assertEquals("TypeParamOnReturnType", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 368 Método: assertEquals(true, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 369 Método: assertEquals("T", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 382 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 383 Método: assertEquals("java.lang.Boolean", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 395 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 396 Método: assertEquals("boolean", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 466 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 467 Método: assertEquals("boolean", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 482 Método: assertEquals("foo", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 498 Método: assertEquals(false, type.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java linha: 499 Método: assertEquals("boolean", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 50 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 51 Método: assertEquals("java.lang.String", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 62 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 63 Método: assertEquals("java.lang.String", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 74 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 75 Método: assertEquals("java.lang.String", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 88 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 89 Método: assertEquals("java.util.List<Comment>", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 92 Método: assertEquals("add", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 105 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 106 Método: assertEquals("java.util.List<Comment>", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java linha: 109 Método: assertEquals("add", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java linha: 52 Método: assertEquals("File", resolvedConstructorDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java linha: 53 Método: assertEquals("File(java.lang.String)", resolvedConstructorDeclaration.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java linha: 54 Método: assertEquals("java.io.File.File(java.lang.String)", resolvedConstructorDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java linha: 68 Método: assertEquals("delete", resolvedMethodDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java linha: 69 Método: assertEquals("delete()", resolvedMethodDeclaration.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java linha: 70 Método: assertEquals("java.io.File.delete()", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionLogicTest.java linha: 62 Método: assertEquals(true, rawClassType.isRawType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionLogicTest.java linha: 66 Método: assertEquals(false, MethodResolutionLogic.isApplicable(mu, "isThrows", ImmutableList.of(classOfStringType), typeSolver))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionLogicTest.java linha: 76 Método: assertEquals(true, MethodResolutionLogic.isApplicable(mu, "isThrows", ImmutableList.of(rawClassType), typeSolver))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/MethodsResolutionLogicTest.java linha: 88 Método: assertEquals(true, MethodResolutionLogic.isApplicable(mu, "isThrows", ImmutableList.of(classOfRuntimeType), typeSolver))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 77 Método: assertEquals(expectedConstructor, actualConstructor)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 96 Método: assertEquals(expectedConstructor, actualConstructor)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 115 Método: assertEquals(expectedConstructor, actualConstructor)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 134 Método: assertEquals(expectedConstructor, actualConstructor)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 148 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 149 Método: assertEquals(0, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 163 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 164 Método: assertEquals(0, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 178 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 179 Método: assertEquals(1, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 180 Método: assertEquals("java.lang.String", ref.getCorrespondingDeclaration().getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 200 Método: assertEquals(2, oceList.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 203 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 204 Método: assertEquals("TypeA", ref.getCorrespondingDeclaration().declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 207 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 209 Método: assertTrue(ref.getCorrespondingDeclaration().declaringType().getQualifiedName().startsWith("B.Anonymous-"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 223 Método: assertEquals("ConstructorCallsEnum", resolvedConstructor.declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 224 Método: assertEquals(1, resolvedConstructor.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 225 Método: assertEquals("i", resolvedConstructor.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 226 Método: assertEquals(ResolvedPrimitiveType.INT, resolvedConstructor.getParam(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 241 Método: assertEquals(1, cd.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 242 Método: assertEquals(ResolvedPrimitiveType.INT, cd.getParam(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 243 Método: assertEquals("java.lang.AbstractStringBuilder", cd.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 260 Método: assertEquals(1, cd.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 261 Método: assertEquals("S", cd.getParam(0).describeType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java linha: 262 Método: assertEquals("javaparser.GenericClass", cd.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 52 Método: assertTrue(javaParserFacade.solve(bar).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 75 Método: assertTrue(tp instanceof JavaParserTypeParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 76 Método: assertEquals("C", tp.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 77 Método: assertEquals(true, tp.declaredOnMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 78 Método: assertEquals(false, tp.declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 92 Método: assertEquals(2, typeDeclaration.getTypeParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 93 Método: assertTrue(typeDeclaration.getTypeParameters().get(0) instanceof JavaParserTypeParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 94 Método: assertEquals("A", typeDeclaration.getTypeParameters().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 95 Método: assertEquals(false, typeDeclaration.getTypeParameters().get(0).declaredOnMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 96 Método: assertEquals(true, typeDeclaration.getTypeParameters().get(0).declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 97 Método: assertTrue(typeDeclaration.getTypeParameters().get(1) instanceof JavaParserTypeParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 98 Método: assertEquals("B", typeDeclaration.getTypeParameters().get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 99 Método: assertEquals(false, typeDeclaration.getTypeParameters().get(1).declaredOnMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java linha: 100 Método: assertEquals(true, typeDeclaration.getTypeParameters().get(1).declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 76 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 77 Método: assertEquals("? super java.lang.String", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 96 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 97 Método: assertEquals("java.lang.String", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 117 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 118 Método: assertEquals("java.lang.String", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 138 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java linha: 139 Método: assertEquals("java.lang.String", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 85 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 86 Método: assertEquals("MethodCalls", ref.get().declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 106 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 107 Método: assertEquals("MethodCalls", ref.get().declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 108 Método: assertEquals(Collections.singletonList("java.lang.Integer"), ref.get().typeParametersMap().getTypes().stream().map(ty -> ty.asReferenceType().describe()).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 134 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 135 Método: assertEquals("MethodCalls", ref.get().declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 136 Método: assertEquals(Collections.singletonList("java.lang.String"), ref.get().typeParametersMap().getTypes().stream().map(ty -> ty.asReferenceType().describe()).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 147 Método: assertEquals(2, expressions.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 149 Método: assertTrue(ResolvedVoidType.class.isAssignableFrom(r.getClass()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 159 Método: assertEquals(1, expressions.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 161 Método: assertTrue(ReferenceTypeImpl.class.isAssignableFrom(r.getClass()))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 187 Método: assertEquals(0, errorCount, "Expected zero UnsolvedSymbolException s")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 198 Método: assertEquals("java.lang.String", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java linha: 210 Método: assertEquals("java.util.List<java.lang.String>", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 72 Método: assertFalse(context.getParent().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 84 Método: assertEquals(false, a.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 85 Método: assertEquals(false, b.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 86 Método: assertEquals(false, c.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 96 Método: assertEquals(false, d.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 110 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 111 Método: assertEquals("java.io.PrintStream", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 124 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 125 Método: assertEquals("java.io.PrintStream", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 134 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 135 Método: assertEquals("java.io.PrintStream", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 147 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 148 Método: assertEquals("java.io.PrintStream", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 160 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 161 Método: assertEquals("java.io.PrintStream", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 170 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 171 Método: assertEquals("java.io.PrintStream", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 186 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 187 Método: assertEquals("com.foo.OtherClassInSamePackage", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 196 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 197 Método: assertEquals("org.junit.Assert", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 206 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 207 Método: assertEquals("org.junit.Assume", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 221 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 222 Método: assertEquals("assertFalse", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 223 Método: assertEquals(1, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 224 Método: assertEquals("boolean", ref.getCorrespondingDeclaration().getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 225 Método: assertEquals(true, ref.getCorrespondingDeclaration().getParam(0).getType().isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 239 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 240 Método: assertEquals("assertEquals", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 241 Método: assertEquals(2, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 242 Método: assertEquals("java.lang.Object", ref.getCorrespondingDeclaration().getParam(0).getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java linha: 243 Método: assertEquals("java.lang.Object", ref.getCorrespondingDeclaration().getParam(1).getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 67 Método: assertTrue(context.getParent().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 68 Método: assertEquals(new CompilationUnitContext(cu, typeSolver), context.getParent().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 80 Método: assertEquals(true, a.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 81 Método: assertEquals("A", a.get().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 82 Método: assertEquals(true, a.get().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 83 Método: assertEquals(true, b.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 84 Método: assertEquals("B", b.get().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 85 Método: assertEquals(true, b.get().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 86 Método: assertEquals(true, c.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 87 Método: assertEquals("C", c.get().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 88 Método: assertEquals(true, c.get().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 99 Método: assertEquals(false, d.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 109 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 110 Método: assertEquals("int", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 120 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 121 Método: assertEquals("long", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 131 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 132 Método: assertEquals("boolean", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 142 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 143 Método: assertEquals("int", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 153 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 154 Método: assertEquals("char", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 164 Método: assertEquals(false, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 174 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 175 Método: assertEquals("int", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 185 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 186 Método: assertEquals("long", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 196 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 197 Método: assertEquals("boolean", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 207 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 208 Método: assertEquals("int", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 218 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 219 Método: assertEquals("char", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 229 Método: assertEquals(false, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 239 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 249 Método: assertEquals(false, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 259 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 269 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 279 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 289 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 299 Método: assertEquals(false, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 309 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 319 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 329 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 339 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 349 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 350 Método: assertEquals("A", ref.getCorrespondingDeclaration().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 351 Método: assertEquals(0, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 361 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 362 Método: assertEquals("A", ref.getCorrespondingDeclaration().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 363 Método: assertEquals(0, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 373 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 374 Método: assertEquals("Super", ref.getCorrespondingDeclaration().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 375 Método: assertEquals(0, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 387 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 388 Método: assertEquals("A", ref.getCorrespondingDeclaration().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 389 Método: assertEquals(1, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 401 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 402 Método: assertEquals("A", ref.getCorrespondingDeclaration().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 403 Método: assertEquals(1, ref.getCorrespondingDeclaration().getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 408 Método: assertThrows(MethodAmbiguityException.class, () -> {
    CompilationUnit cu = parseSample("ClassWithMethods");
    ClassOrInterfaceDeclaration classOrInterfaceDeclaration = Navigator.demandClass(cu, "A");
    Context context = new ClassOrInterfaceDeclarationContext(classOrInterfaceDeclaration, typeSolver);
    SymbolReference<ResolvedMethodDeclaration> ref = context.solveMethod("foo5", ImmutableList.of(NullType.INSTANCE), false);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 425 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 426 Método: assertEquals("A", ref.get().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 427 Método: assertEquals(0, ref.get().getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 438 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 439 Método: assertEquals("A", ref.get().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 440 Método: assertEquals(0, ref.get().getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 451 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 452 Método: assertEquals("Super", ref.get().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 453 Método: assertEquals(0, ref.get().getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 466 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 467 Método: assertEquals("A", ref.get().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 468 Método: assertEquals(1, ref.get().getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 481 Método: assertEquals(true, ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 482 Método: assertEquals("A", ref.get().declaringType().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 483 Método: assertEquals(1, ref.get().getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java linha: 488 Método: assertThrows(MethodAmbiguityException.class, () -> {
    CompilationUnit cu = parseSample("ClassWithMethods");
    ClassOrInterfaceDeclaration classOrInterfaceDeclaration = Navigator.demandClass(cu, "A");
    Context context = new ClassOrInterfaceDeclarationContext(classOrInterfaceDeclaration, new ReflectionTypeSolver());
    Optional<MethodUsage> ref = context.solveMethodAsUsage("foo5", ImmutableList.of(NullType.INSTANCE));
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 62 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 63 Método: assertEquals("int", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 73 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 74 Método: assertEquals("long", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 84 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 85 Método: assertEquals("MyEnum", ref.getCorrespondingDeclaration().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 95 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 96 Método: assertEquals("int", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 106 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 107 Método: assertEquals("long", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 117 Método: assertTrue(ref.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java linha: 118 Método: assertEquals("MyEnum", ref.get().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodContextResolutionTest.java linha: 61 Método: assertEquals(true, ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/FieldAccessContextResolutionTest.java linha: 53 Método: assertEquals(methodUsage.getName(), "getSelf")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/BlockStmtContextResolutionTest.java linha: 64 Método: assertEquals("int", rt.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/contexts/BlockStmtContextResolutionTest.java linha: 83 Método: assertEquals("java.lang.String", rt2.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java linha: 56 Método: assertEquals(ResolvedPrimitiveType.INT, resolvedType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java linha: 66 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(String.class, typeSolver)), resolvedType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java linha: 71 Método: assertThrows(IllegalStateException.class, () -> {
    CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider("class X{void x(){var abc;}}")).getResult().get();
    VarType varType = ast.findFirst(VarType.class).get();
    varType.resolve();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java linha: 81 Método: assertThrows(IllegalStateException.class, () -> {
    CompilationUnit ast = javaParser.parse(ParseStart.COMPILATION_UNIT, provider("class X{void x(var x){};}")).getResult().get();
    VarType varType = ast.findFirst(VarType.class).get();
    varType.resolve();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 63 Método: assertEquals(Optional.of(new ProperLowerBound(inferenceVariable, integerType)), bound.isProperLowerBound())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 75 Método: assertEquals(Optional.of(new ProperLowerBound(inferenceVariable, doubleType)), bound.isProperLowerBound())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 87 Método: assertEquals(Optional.of(new ProperUpperBound(inferenceVariable, objectType)), bound.isProperUpperBound())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 105 Método: assertEquals(false, isProperType(listOfBeta))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 106 Método: assertEquals(Optional.of(new ProperUpperBound(alpha, iterableOfWildcard)), bound1.isProperUpperBound())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 107 Método: assertEquals(Optional.of(new ProperUpperBound(beta, objectType)), bound2.isProperUpperBound())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java linha: 108 Método: assertEquals(true, bound3.isADependency())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SameAsBoundTest.java linha: 49 Método: assertEquals(Optional.of(new Instantiation(inferenceVariable, stringType)), bound1.isAnInstantiation())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SameAsBoundTest.java linha: 50 Método: assertEquals(Optional.of(new Instantiation(inferenceVariable, stringType)), bound2.isAnInstantiation())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/ConstraintFormulaTest.java linha: 60 Método: assertEquals(ConstraintFormula.ReductionResult.empty().withConstraint(new TypeCompatibleWithType(typeSolver, stringType, inferenceVariable)), res1)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/ConstraintFormulaTest.java linha: 64 Método: assertEquals(ConstraintFormula.ReductionResult.empty().withConstraint(new TypeSubtypeOfType(typeSolver, stringType, inferenceVariable)), res1.getConstraint(0).reduce(BoundSet.empty()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 58 Método: assertEquals(lub, exception)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 67 Método: assertTrue(e instanceof IllegalArgumentException)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 65 Método: fail("should have failed")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 77 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 87 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 96 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 105 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 115 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 127 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 142 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 153 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 167 Método: assertTrue(e instanceof UnsolvedSymbolException)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 165 Método: fail("UnknownException cannot be resolved")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 177 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 188 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 199 Método: assertEquals(expected.erasure(), erased)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 200 Método: assertTrue(!lub.asReferenceType().typeParametersValues().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 209 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 218 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 227 Método: assertEquals(expected.describe(), lub.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 237 Método: assertEquals(expected.describe(), lub.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 248 Método: assertEquals(expected.describe(), lub.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 264 Método: assertEquals(expected, lub)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/typeinference/LeastUpperBoundTest.java linha: 282 Método: assertEquals("Parent<Other<? extends A>>", lub.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 58 Método: assertEquals(clazz.getFieldByName("field_i1").get().resolve().getType().describe(), "I1")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 59 Método: assertEquals(clazz.getFieldByName("field_i2").get().resolve().getType().describe(), "I2.I2_1")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 60 Método: assertEquals(clazz.getFieldByName("field_i3").get().resolve().getType().describe(), "I3.I3_1.I3_1_1")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 69 Método: assertEquals(clazz.getFieldByName("field_c1").get().resolve().getType().describe(), "C1")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 78 Método: assertEquals(clazz.getFieldByName("field_c2").get().resolve().getType().describe(), "C2.C2_1")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 87 Método: assertEquals(clazz.getFieldByName("field_c3").get().resolve().getType().describe(), "C3.C3_1.C3_1_1")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 98 Método: assertEquals("main.A", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java linha: 99 Método: assertNotEquals("another.A", actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 51 Método: assertTrue(rt.isEnumConstant())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 58 Método: assertTrue(rt.isJavaLangObject())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 65 Método: assertFalse(rt.isUnboxable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 72 Método: assertTrue(rt.asReferenceType().isUnboxable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 79 Método: assertFalse(rt.isUnboxableTo(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 86 Método: assertTrue(rt.isUnboxableTo(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 93 Método: assertFalse(rt.toUnboxedType().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java linha: 100 Método: assertTrue(rt.toUnboxedType().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 64 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 66 Método: assertEquals("foo.bar.AnInterface.ListChangeType", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 67 Método: assertEquals("ADDITION", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 87 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 89 Método: assertEquals("foo.bar.AnInterface.ListChangeType", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 90 Método: assertEquals("ADDITION", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 110 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 112 Método: assertEquals("foo.bar.AnInterface.ListChangeType", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 113 Método: assertEquals("ADDITION", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 134 Método: assertTrue(fae.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 136 Método: assertEquals("foo.bar.AnInterface.ListChangeType", fae.get().resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java linha: 137 Método: assertEquals("ADDITION", fae.get().resolve().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/UnknownMethodsResolutionTest.java linha: 42 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    CompilationUnit cu = parseSample("UnknownMethods");
    ClassOrInterfaceDeclaration clazz = Navigator.demandClass(cu, "UnknownMethods");
    MethodDeclaration method = Navigator.demandMethod(clazz, "test1");
    MethodCallExpr methodCallExpr = method.getBody().get().getStatement(0).asExpressionStmt().getExpression().asMethodCallExpr();
    SymbolReference<ResolvedMethodDeclaration> ref = JavaParserFacade.get(new ReflectionTypeSolver()).solve(methodCallExpr);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/UnknownMethodsResolutionTest.java linha: 54 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    CompilationUnit cu = parseSample("UnknownMethods");
    ClassOrInterfaceDeclaration clazz = Navigator.demandClass(cu, "UnknownMethods");
    MethodDeclaration method = Navigator.demandMethod(clazz, "test2");
    MethodCallExpr methodCallExpr = method.getBody().get().getStatement(1).asExpressionStmt().getExpression().asMethodCallExpr();
    SymbolReference<ResolvedMethodDeclaration> ref = JavaParserFacade.get(new ReflectionTypeSolver()).solve(methodCallExpr);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 79 Método: assertFalse(solvedSymbol.isSolved())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 81 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    solvedSymbol.getCorrespondingDeclaration();
}, "Expected UnsolvedSymbolException when requesting CorrespondingDeclaration on unsolved SymbolRefernce")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 101 Método: assertTrue(e instanceof UnsolvedSymbolException)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 102 Método: assertEquals("Unsolved symbol : com.github.javaparser.javasymbolsolver.javassist_symbols.excluded_jar.InterfaceExcludedJar", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 105 Método: fail("Excepted NotFoundException wrapped in a RuntimeException, but got no exception.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 111 Método: assertTrue(solvedSymbol.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java linha: 112 Método: assertEquals(symbolName, solvedSymbol.getCorrespondingDeclaration().asField().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 73 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 74 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 90 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 91 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 107 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 108 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 124 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 125 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 141 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 142 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 158 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 159 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 175 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 176 Método: assertEquals(FLOAT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 192 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 193 Método: assertEquals(FLOAT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 209 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 210 Método: assertEquals(FLOAT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 226 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 227 Método: assertEquals(FLOAT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 243 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 244 Método: assertEquals(FLOAT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 260 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 261 Método: assertEquals(FLOAT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 277 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 278 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 294 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 295 Método: assertEquals(DOUBLE, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 311 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 312 Método: assertEquals(INT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 327 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 328 Método: assertEquals(INT, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 343 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 344 Método: assertEquals(stringType, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 359 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 360 Método: assertEquals(stringType, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 375 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 376 Método: assertEquals(stringType, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 391 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 392 Método: assertEquals(stringType, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 407 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 408 Método: assertEquals(stringType, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 423 Método: assertEquals(1, bExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java linha: 424 Método: assertEquals(stringType, JavaParserFacade.get(ts).getType(bExprs.get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 78 Método: assertTrue(symbolReference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 79 Método: assertEquals("i", symbolReference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 80 Método: assertTrue(symbolReference.getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 94 Método: assertTrue(symbolReference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 95 Método: assertEquals("i", symbolReference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 96 Método: assertTrue(symbolReference.getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 109 Método: assertTrue(symbolReference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 110 Método: assertEquals("foo", symbolReference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 111 Método: assertTrue(symbolReference.getCorrespondingDeclaration().isParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 133 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 134 Método: assertEquals("CompilationUnit", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 135 Método: assertEquals("com.github.javaparser.ast.CompilationUnit", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 158 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 159 Método: assertEquals("CompilationUnit", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 160 Método: assertEquals("com.github.javaparser.ast.CompilationUnit", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 182 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 183 Método: assertEquals("CompilationUnit", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 184 Método: assertEquals("my.packagez.CompilationUnit", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 207 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 208 Método: assertEquals("String", ref.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 209 Método: assertEquals("java.lang.String", ref.getCorrespondingDeclaration().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 225 Método: assertEquals("getTypes", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 226 Método: assertEquals("com.github.javaparser.ast.CompilationUnit", ref.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 243 Método: assertEquals("stream", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 244 Método: assertEquals("java.util.Collection", ref.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 259 Método: assertEquals("trim", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 260 Método: assertEquals("java.lang.String", ref.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 273 Método: assertEquals("java.util.stream.Stream<java.lang.String>", streamType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 286 Método: assertEquals("java.util.stream.Stream<java.lang.String>", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 287 Método: assertEquals(1, ref.asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 288 Método: assertEquals("java.lang.String", ref.asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 302 Método: assertEquals("? super java.lang.String", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 316 Método: assertEquals("isEmpty", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 317 Método: assertEquals("java.lang.String", ref.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 331 Método: assertEquals("getTypes", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 332 Método: assertEquals("java.util.List<com.github.javaparser.ast.body.TypeDeclaration>", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 333 Método: assertEquals(1, methodUsage.returnType().asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 334 Método: assertEquals("com.github.javaparser.ast.body.TypeDeclaration", methodUsage.returnType().asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 348 Método: assertEquals("genericMethodWithDoubleTypedReturnType", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 349 Método: assertEquals("java.util.Map<T, V>", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 363 Método: assertEquals("genericMethodWithNestedReturnType", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 364 Método: assertEquals("java.util.List<java.util.List<T>>", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 378 Método: assertEquals("get", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 379 Método: assertEquals("java.util.List<java.util.List<java.lang.String>>", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 393 Método: assertEquals("copy", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 394 Método: assertEquals("javaparser.GenericClass<java.util.List<java.lang.String>>", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 408 Método: assertEquals("complexGenerics", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 409 Método: assertEquals("T", methodUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 423 Método: assertEquals("asList", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 424 Método: assertEquals("java.util.List<javaparser.GenericClass.Bar.NestedBar>", methodUsage.getParamType(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 438 Método: assertEquals("java.util.List<com.github.javaparser.ast.body.TypeDeclaration>", filterUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 439 Método: assertEquals(1, filterUsage.returnType().asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 440 Método: assertEquals("com.github.javaparser.ast.body.TypeDeclaration", filterUsage.returnType().asReferenceType().typeParametersValues().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 454 Método: assertEquals("java.util.stream.Stream<com.github.javaparser.ast.body.TypeDeclaration>", filterUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 468 Método: assertEquals("java.util.stream.Stream<com.github.javaparser.ast.body.TypeDeclaration>", filterUsage.returnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 483 Método: assertEquals("java.util.function.Predicate<? super com.github.javaparser.ast.body.TypeDeclaration>", typeOfLambdaExpr.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 498 Método: assertEquals("? super com.github.javaparser.ast.body.TypeDeclaration", typeOfT.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 512 Método: assertEquals("getName", methodUsage.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 513 Método: assertEquals("com.github.javaparser.ast.body.TypeDeclaration", methodUsage.declaringType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 526 Método: assertEquals("overloaded", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 527 Método: assertEquals(1, ref.getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 528 Método: assertEquals("java.lang.String", ref.getParamTypes().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 541 Método: assertEquals("overloaded", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 542 Método: assertEquals(1, ref.getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 543 Método: assertEquals("java.lang.String", ref.getParamTypes().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 556 Método: assertEquals("foo", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 557 Método: assertEquals(1, ref.getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 558 Método: assertEquals("java.lang.String[]", ref.getParamType(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 572 Método: assertEquals("double", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 585 Método: assertEquals("overloaded", ref.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 586 Método: assertEquals(1, ref.getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 587 Método: assertEquals("java.lang.Object", ref.getParamTypes().get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 601 Método: assertTrue(parseResult.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 620 Método: assertEquals(1, context1.localVariablesExposedToChild(blockStmt.getStatement(1)).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 624 Método: assertTrue(context.localVariableDeclarationInScope(name).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 645 Método: assertEquals(2, context1.localVariablesExposedToChild(blockStmt.getStatement(2)).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 647 Método: assertEquals(3, context1.localVariablesExposedToChild(blockStmt.getStatement(4)).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 651 Método: assertTrue(context.localVariableDeclarationInScope(name).isPresent())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 671 Método: assertEquals(expectedNumber, JavaParserFactory.getContext(parent, typeSolver).parametersExposedToChild(child).stream().filter(p -> p.getNameAsString().equals(paramName)).count(), "[" + paramName + "]: " + message)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 687 Método: assertEquals(expectedNumber, vars.stream().filter(p -> p.getNameAsString().equals(paramName)).count(), "[" + paramName + "]: " + message)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 700 Método: assertEquals(expectedNumber, vars.stream().filter(p -> p.getNameAsString().equals(patternExprName)).count(), "[" + patternExprName + "]: " + message)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 713 Método: assertEquals(expectedNumber, vars.stream().filter(p -> p.getNameAsString().equals(patternExprName)).count(), "[" + patternExprName + "]: " + message)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 866 Método: assertEquals("final String s", instanceOfExpr.getPattern().get().toString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1044 Método: assertEquals(1, variables.size(), "Expected 1 variable -- issue with test configuration/sample?")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1067 Método: assertEquals(2, statements.size(), "Expected 2 statements -- issue with test configuration/sample?")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1080 Método: assertFalse(s.isSolved(), "s is not available -- it is not definitively true when in a separate statement.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1096 Método: assertEquals(3, statements.size(), "Expected 3 statements -- issue with test configuration/sample?")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1115 Método: assertFalse(s.isSolved(), "s is not available -- it is not definitively true when in a separate statement.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1129 Método: assertEquals(2, statements.size(), "Expected 2 statements -- issue with test configuration/sample?")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1142 Método: assertFalse(s.isSolved(), "s is not available -- it is not definitively true when in a separate statement.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1165 Método: assertEquals(1, variables.size(), "Expected 1 variable -- issue with test configuration/sample?")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1244 Método: assertTrue(left_s.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1247 Método: assertFalse(left_s2.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1254 Método: assertTrue(right_s.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1256 Método: assertTrue(right_s2.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1286 Método: assertEquals(2, enclosedExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1291 Método: assertEquals(2, nameExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1294 Método: assertEquals("s", nameExpr.getNameAsString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1299 Método: assertTrue(symbolReference.isSolved(), "symbol not solved")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1301 Método: assertEquals("s", correspondingDeclaration.getName(), "unexpected name for the solved symbol")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1302 Método: assertTrue(correspondingDeclaration.isPattern())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1303 Método: assertEquals("s", correspondingDeclaration.asPattern().getName(), "unexpected name for the solved pattern")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1304 Método: assertEquals("java.lang.String", correspondingDeclaration.asPattern().getType().asReferenceType().getQualifiedName(), "unexpected type for the solved pattern")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1313 Método: assertEquals(2, enclosedExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1318 Método: assertEquals(2, nameExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1321 Método: assertEquals("s", nameExpr.getNameAsString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1326 Método: assertFalse(symbolReference.isSolved(), "symbol supposed to be not solved")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1334 Método: assertEquals(2, enclosedExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1339 Método: assertEquals(2, nameExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1342 Método: assertEquals("s", nameExpr.getNameAsString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1347 Método: assertFalse(symbolReference.isSolved(), "symbol supposed to be not solved")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1364 Método: assertEquals(1, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1370 Método: assertTrue(s.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1371 Método: assertTrue(s.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1384 Método: assertEquals(1, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1390 Método: assertTrue(s.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1391 Método: assertTrue(s.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1404 Método: assertEquals(1, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1410 Método: assertFalse(s.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1423 Método: assertEquals(1, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1429 Método: assertFalse(s.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1447 Método: assertEquals(2, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1453 Método: assertTrue(s_list.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1454 Método: assertFalse(s_list.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1461 Método: assertTrue(s_string.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1462 Método: assertTrue(s_string.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1484 Método: assertEquals(4, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1490 Método: assertTrue(s_list.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1491 Método: assertFalse(s_list.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1498 Método: assertTrue(s_string.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1499 Método: assertTrue(s_string.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1505 Método: assertTrue(s_string2.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1506 Método: assertTrue(s_string2.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1512 Método: assertTrue(s_string3.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1513 Método: assertTrue(s_string3.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1535 Método: assertEquals(4, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1541 Método: assertTrue(s_list.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1542 Método: assertFalse(s_list.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1548 Método: assertTrue(s_string.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1549 Método: assertFalse(s_string.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1555 Método: assertTrue(s_string2.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1556 Método: assertTrue(s_string2.getCorrespondingDeclaration().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1562 Método: assertTrue(s_string3.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/ContextTest.java linha: 1563 Método: assertTrue(s_string3.getCorrespondingDeclaration().isPattern())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaGenericResolutionTest.java linha: 61 Método: Assertions.fail(String.format("Failed to parse GenericLambdas.java due to %s", e.getMessage()), e)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaGenericResolutionTest.java linha: 72 Método: assertEquals("java.lang.Float", types.get("i1").describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/LambdaGenericResolutionTest.java linha: 73 Método: assertEquals("java.lang.String", types.get("i2").describe())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserTest.java linha: 88 Método: assertEquals(0, sourceFileInfoExtractor.getFailures(), "No failures expected when analyzing " + path)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserTest.java linha: 89 Método: assertEquals(0, sourceFileInfoExtractor.getUnsupported(), "No UnsupportedOperationException expected when analyzing " + path)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserTest.java linha: 104 Método: assertEquals(expectedLines[i].trim(), outputLines[i].trim(), "Line " + (i + 1) + " of " + path + " is different from what is expected")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserTest.java linha: 107 Método: assertEquals(expectedLines.length, outputLines.length)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 40 Método: assertEquals(ResolvedPrimitiveType.BOOLEAN, ResolvedPrimitiveType.byName("boolean"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 41 Método: assertEquals(ResolvedPrimitiveType.CHAR, ResolvedPrimitiveType.byName("char"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 42 Método: assertEquals(ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.byName("byte"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 43 Método: assertEquals(ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.byName("short"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 44 Método: assertEquals(ResolvedPrimitiveType.INT, ResolvedPrimitiveType.byName("int"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 45 Método: assertEquals(ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.byName("long"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 46 Método: assertEquals(ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.byName("float"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 47 Método: assertEquals(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.byName("double"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 52 Método: assertThrows(IllegalArgumentException.class, () -> ResolvedPrimitiveType.byName("unexisting"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 58 Método: assertTrue(ResolvedPrimitiveType.DOUBLE.bnp(ResolvedPrimitiveType.DOUBLE).equals(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 59 Método: assertTrue(ResolvedPrimitiveType.FLOAT.bnp(ResolvedPrimitiveType.FLOAT).equals(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 60 Método: assertTrue(ResolvedPrimitiveType.LONG.bnp(ResolvedPrimitiveType.LONG).equals(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 61 Método: assertTrue(ResolvedPrimitiveType.INT.bnp(ResolvedPrimitiveType.INT).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 62 Método: assertTrue(ResolvedPrimitiveType.BYTE.bnp(ResolvedPrimitiveType.BYTE).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 63 Método: assertTrue(ResolvedPrimitiveType.SHORT.bnp(ResolvedPrimitiveType.SHORT).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 64 Método: assertTrue(ResolvedPrimitiveType.CHAR.bnp(ResolvedPrimitiveType.CHAR).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 79 Método: assertTrue(ResolvedPrimitiveType.unp(rByte).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 80 Método: assertTrue(ResolvedPrimitiveType.unp(rShort).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 81 Método: assertTrue(ResolvedPrimitiveType.unp(rChar).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 82 Método: assertTrue(ResolvedPrimitiveType.unp(rInteger).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 84 Método: assertTrue(ResolvedPrimitiveType.unp(rLong).equals(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 85 Método: assertTrue(ResolvedPrimitiveType.unp(rFloat).equals(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 86 Método: assertTrue(ResolvedPrimitiveType.unp(rDouble).equals(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 88 Método: assertTrue(ResolvedPrimitiveType.unp(ResolvedPrimitiveType.BYTE).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 89 Método: assertTrue(ResolvedPrimitiveType.unp(ResolvedPrimitiveType.SHORT).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 90 Método: assertTrue(ResolvedPrimitiveType.unp(ResolvedPrimitiveType.CHAR).equals(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 92 Método: assertTrue(ResolvedPrimitiveType.unp(ResolvedPrimitiveType.BOOLEAN).equals(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 93 Método: assertTrue(ResolvedPrimitiveType.unp(rString).equals(rString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 108 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rByte))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 109 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rShort))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 110 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rChar))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 111 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rInteger))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 112 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rLong))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 113 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rFloat))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 114 Método: assertTrue(ResolvedPrimitiveType.isBoxType(rDouble))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java linha: 115 Método: assertFalse(ResolvedPrimitiveType.isBoxType(rString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 62 Método: assertTrue(array(ResolvedPrimitiveType.DOUBLE).isAssignableBy(array(ResolvedPrimitiveType.DOUBLE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 63 Método: assertTrue(array(ResolvedPrimitiveType.FLOAT).isAssignableBy(array(ResolvedPrimitiveType.FLOAT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 64 Método: assertTrue(array(ResolvedPrimitiveType.LONG).isAssignableBy(array(ResolvedPrimitiveType.LONG)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 65 Método: assertTrue(array(ResolvedPrimitiveType.INT).isAssignableBy(array(ResolvedPrimitiveType.INT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 66 Método: assertTrue(array(ResolvedPrimitiveType.BYTE).isAssignableBy(array(ResolvedPrimitiveType.BYTE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 67 Método: assertTrue(array(ResolvedPrimitiveType.SHORT).isAssignableBy(array(ResolvedPrimitiveType.SHORT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 68 Método: assertTrue(array(ResolvedPrimitiveType.CHAR).isAssignableBy(array(ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 73 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.DOUBLE), arrays(ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 76 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.FLOAT), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 79 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.LONG), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 82 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.INT), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 85 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.BYTE), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 88 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.SHORT), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 91 Método: assertFalse(isAssignableBy(array(ResolvedPrimitiveType.CHAR), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 98 Método: assertFalse(array(ResolvedPrimitiveType.DOUBLE).isAssignableBy(array(rDouble)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 99 Método: assertFalse(array(ResolvedPrimitiveType.FLOAT).isAssignableBy(array(rFloat)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 100 Método: assertFalse(array(ResolvedPrimitiveType.LONG).isAssignableBy(array(rLong)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 101 Método: assertFalse(array(ResolvedPrimitiveType.INT).isAssignableBy(array(rInteger)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 102 Método: assertFalse(array(ResolvedPrimitiveType.BYTE).isAssignableBy(array(rByte)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 103 Método: assertFalse(array(ResolvedPrimitiveType.SHORT).isAssignableBy(array(rShort)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 104 Método: assertFalse(array(ResolvedPrimitiveType.CHAR).isAssignableBy(array(rChar)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 109 Método: assertTrue(array(ResolvedPrimitiveType.DOUBLE).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 110 Método: assertTrue(array(ResolvedPrimitiveType.FLOAT).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 111 Método: assertTrue(array(ResolvedPrimitiveType.LONG).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 112 Método: assertTrue(array(ResolvedPrimitiveType.INT).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 113 Método: assertTrue(array(ResolvedPrimitiveType.BYTE).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 114 Método: assertTrue(array(ResolvedPrimitiveType.SHORT).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 115 Método: assertTrue(array(ResolvedPrimitiveType.CHAR).isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 122 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.DOUBLE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 123 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.FLOAT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 124 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.LONG)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 125 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.INT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 126 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.BYTE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 127 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.SHORT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 128 Método: assertTrue(rObject.isAssignableBy(array(ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 129 Método: assertTrue(rObject.isAssignableBy(array(rString)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 134 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.DOUBLE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 135 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.FLOAT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 136 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.LONG)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 137 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.INT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 138 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.BYTE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 139 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.SHORT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 140 Método: assertTrue(rCloneable.isAssignableBy(array(ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 141 Método: assertTrue(rCloneable.isAssignableBy(array(rString)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 146 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.DOUBLE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 147 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.FLOAT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 148 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.LONG)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 149 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.INT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 150 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.BYTE)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 151 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.SHORT)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 152 Método: assertTrue(rSerializable.isAssignableBy(array(ResolvedPrimitiveType.CHAR)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 153 Método: assertTrue(rSerializable.isAssignableBy(array(rString)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 158 Método: assertTrue(array(rCharSequence).isAssignableBy(array(rString)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 163 Método: assertFalse(array(rString).isAssignableBy(array(rCharSequence)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/types/ResolvedArrayTypeTest.java linha: 166 Método: assertFalse(array(ResolvedPrimitiveType.LONG).isAssignableBy(rLong))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 62 Método: assertTrue(ref.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 63 Método: assertEquals("SwitchOnEnum.MyEnum", ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 73 Método: assertEquals("MyClass.Primitive", ref.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 93 Método: assertFalse(resolvedValueDeclaration.isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 94 Método: assertTrue(resolvedValueDeclaration.isEnumConstant())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 97 Método: assertEquals("SOME", resolvedEnumConstantDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 98 Método: assertTrue(resolvedEnumConstantDeclaration.isEnumConstant())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 99 Método: assertTrue(resolvedEnumConstantDeclaration.hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 113 Método: assertEquals(AccessSpecifier.PUBLIC, ((JavaParserEnumDeclaration) ed_public.resolve()).accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 116 Método: assertEquals(AccessSpecifier.PROTECTED, ((JavaParserEnumDeclaration) ed_protected.resolve()).accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 119 Método: assertEquals(AccessSpecifier.PRIVATE, ((JavaParserEnumDeclaration) ed_private.resolve()).accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 122 Método: assertEquals(AccessSpecifier.NONE, ((JavaParserEnumDeclaration) ed_default.resolve()).accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 154 Método: assertEquals("valueOf", rd.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 155 Método: assertEquals("ClassTest.SecurityPolicyScopedTemplatesKeys", rd.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 156 Método: assertEquals(1, rd.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java linha: 157 Método: assertEquals("java.lang.String", rd.getParam(0).describeType())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaParserTest.java linha: 86 Método: assertEquals(0, sourceFileInfoExtractor.getFailures(), "No failures expected when analyzing " + path)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaParserTest.java linha: 87 Método: assertEquals(0, sourceFileInfoExtractor.getUnsupported(), "No UnsupportedOperationException expected when analyzing " + path)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaParserTest.java linha: 95 Método: assertEquals(expectedLines[i].trim(), outputLines[i].trim(), "Line " + (i + 1) + " of " + path + " is different from what is expected")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/AnalyseJavaParserTest.java linha: 98 Método: assertEquals(expectedLines.length, outputLines.length)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 45 Método: assertEquals("int", usageDescribe(n, "a"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 46 Método: assertEquals("java.lang.Integer", usageDescribe(n, "b"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 47 Método: assertEquals("java.lang.Class<java.lang.Integer>", usageDescribe(n, "c"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 48 Método: assertEquals("java.lang.Class<? super java.lang.Integer>", usageDescribe(n, "d"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 49 Método: assertEquals("java.lang.Class<? extends java.lang.Integer>", usageDescribe(n, "e"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 50 Método: assertEquals("java.lang.Class<? extends java.lang.Class<? super java.lang.Class<? extends java.lang.Integer>>>", usageDescribe(n, "f"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java linha: 51 Método: assertEquals("java.lang.Class<? super java.lang.Class<? extends java.lang.Class<? super java.lang.Integer>>>", usageDescribe(n, "g"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 54 Método: assertThat(methodUsage.getDeclaration().getQualifiedSignature(), is("AnonymousClassDeclarations.ParDo.of(AnonymousClassDeclarations.DoFn<I, O>)"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 56 Método: assertThat(methodUsage.getQualifiedSignature(), is("AnonymousClassDeclarations.ParDo.of(AnonymousClassDeclarations.DoFn<java.lang.Integer, java.lang.Long>)"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 72 Método: assertThat(methodUsage.getQualifiedSignature(), is("AnonymousClassDeclarations.DoFn.ProcessContext.innerClassMethod()"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 88 Método: assertTrue(methodUsage.getQualifiedSignature().startsWith("AnonymousClassDeclarations"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 89 Método: assertTrue(methodUsage.getQualifiedSignature().contains("Anonymous-"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 90 Método: assertTrue(methodUsage.getQualifiedSignature().endsWith("callAnnonClassInnerMethod()"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 105 Método: assertThat(methodUsage.getQualifiedSignature(), is("java.lang.Enum.toString()"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 120 Método: assertThat(methodUsage.getQualifiedSignature(), is("java.lang.Enum.toString()"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java linha: 135 Método: assertThat(methodUsage.getQualifiedSignature(), is("AnonymousClassDeclarations.DoFn.ProcessContext.innerClassMethod()"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 50 Método: assertTrue(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 54 Método: assertTrue(annotation.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 57 Método: assertEquals(1, fields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 58 Método: assertEquals("a", fields.get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 66 Método: assertTrue(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 70 Método: assertTrue(annotation.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 73 Método: assertEquals(2, fields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 74 Método: assertEquals("a", fields.get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 75 Método: assertEquals("b", fields.get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 82 Método: assertTrue(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 86 Método: assertTrue(nameExpr.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 87 Método: assertDoesNotThrow(nameExpr.get()::resolve)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 95 Método: assertTrue(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 99 Método: assertTrue(annotation.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 100 Método: assertEquals(4, annotation.get().resolve().internalTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 108 Método: assertTrue(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 112 Método: assertTrue(annotation.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 114 Método: assertFalse(annotation.get().resolve().isInheritable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 124 Método: assertTrue(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 128 Método: assertTrue(annotation.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java linha: 130 Método: assertTrue(annotation.get().resolve().isInheritable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserVariableDeclarationTest.java linha: 94 Método: assertTrue("int x = 0;".equals(decl))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 109 Método: assertTrue(compilationUnit.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 115 Método: assertFalse(compilationUnit.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 121 Método: assertFalse(compilationUnit.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 127 Método: assertFalse(compilationUnit.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 133 Método: assertTrue(compilationUnit.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 139 Método: assertEquals(compilationUnit, compilationUnit.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 145 Método: assertEquals(compilationUnit, compilationUnit.asClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 150 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavaParserClassDeclaration compilationUnit = (JavaParserClassDeclaration) typeSolver.solveType("com.github.javaparser.ast.CompilationUnit");
    compilationUnit.asInterface();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 158 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavaParserClassDeclaration compilationUnit = (JavaParserClassDeclaration) typeSolver.solveType("com.github.javaparser.ast.CompilationUnit");
    compilationUnit.asEnum();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 167 Método: assertEquals("com.github.javaparser.ast", compilationUnit.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 173 Método: assertEquals("CompilationUnit", compilationUnit.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 179 Método: assertEquals("com.github.javaparser.ast.CompilationUnit", compilationUnit.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 189 Método: assertEquals("com.github.javaparser.ast.Node", compilationUnit.getSuperClass().get().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 195 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", compilationUnit.getSuperClass().get().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 196 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", compilationUnit.getSuperClass().get().typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 202 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 208 Método: assertEquals(3, constructorDeclaration.getAllSuperClasses().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 209 Método: assertTrue(constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.body.BodyDeclaration")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 210 Método: assertTrue(constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.Node")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 211 Método: assertTrue(constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("java.lang.Object")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 216 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 217 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 220 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 223 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 229 Método: assertEquals(ImmutableSet.of(), compilationUnit.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 232 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.DocumentableNode"), coid.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 238 Método: assertEquals(7, constructorDeclaration.getInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 243 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 244 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 247 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 250 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 251 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 254 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 255 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 258 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 259 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 262 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 263 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 266 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 267 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 273 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable"), compilationUnit.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 276 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.NamedNode", "com.github.javaparser.ast.body.AnnotableNode", "com.github.javaparser.ast.DocumentableNode"), coid.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 282 Método: assertEquals(9, constructorDeclaration.getAllInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 287 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 288 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 291 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 294 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 295 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 298 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 299 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 302 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 303 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 306 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 307 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 310 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 311 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 314 Método: assertEquals("java.lang.Cloneable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 317 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 318 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 327 Método: assertEquals(8, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 332 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 333 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 336 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 337 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 340 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 343 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 344 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 347 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 348 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 351 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 352 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 355 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 356 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 359 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 360 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 366 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 373 Método: assertEquals("java.lang.Number", ancestors.get(0).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 374 Método: assertEquals("java.lang.Object", ancestors.get(1).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 375 Método: assertEquals("java.io.Serializable", ancestors.get(2).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 376 Método: assertEquals("java.lang.Comparable", ancestors.get(3).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 384 Método: assertEquals(12, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 389 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 390 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 393 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 396 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 399 Método: assertEquals("java.lang.Cloneable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 402 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 403 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 406 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 407 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 410 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 413 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 414 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 417 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 418 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 421 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 422 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 425 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 426 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 429 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 430 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 445 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 446 Método: assertEquals("java.util.EnumSet", fieldDeclaration.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 447 Método: assertEquals(AccessSpecifier.PRIVATE, fieldDeclaration.accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 448 Método: assertFalse(fieldDeclaration.isStatic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 452 Método: assertEquals("annotations", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 453 Método: assertEquals("java.util.List", fieldDeclaration.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 454 Método: assertEquals(AccessSpecifier.PRIVATE, fieldDeclaration.accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 459 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    JavaParserClassDeclaration constructorDeclaration = (JavaParserClassDeclaration) typeSolverNewCode.solveType("com.github.javaparser.ast.body.ConstructorDeclaration");
    constructorDeclaration.getField("unexisting");
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 471 Método: assertEquals(16, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 476 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 479 Método: assertEquals("typeParameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 482 Método: assertEquals("name", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 485 Método: assertEquals("parameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 488 Método: assertEquals("throws_", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 491 Método: assertEquals("body", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 494 Método: assertEquals("annotations", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 497 Método: assertEquals("NODE_BY_BEGIN_POSITION", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 500 Método: assertEquals("range", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 503 Método: assertEquals("parentNode", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 506 Método: assertEquals("childrenNodes", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 509 Método: assertEquals("orphanComments", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 512 Método: assertEquals("userData", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 515 Método: assertEquals("comment", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 518 Método: assertEquals("ABSOLUTE_BEGIN_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 521 Método: assertEquals("ABSOLUTE_END_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 531 Método: assertEquals(3, classDeclaration.getAllFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 535 Método: assertEquals("s", classDeclaration.getAllFields().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 536 Método: assertEquals(string, classDeclaration.getAllFields().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 537 Método: assertEquals(string, rtClassDeclaration.getFieldType("s").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 539 Método: assertEquals("t", classDeclaration.getAllFields().get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 540 Método: assertEquals("java.util.List<java.lang.Boolean>", classDeclaration.getAllFields().get(1).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 541 Método: assertEquals(listOfBoolean, rtClassDeclaration.getFieldType("t").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 543 Método: assertEquals("i", classDeclaration.getAllFields().get(2).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 544 Método: assertEquals(ResolvedPrimitiveType.INT, classDeclaration.getAllFields().get(2).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 545 Método: assertEquals(ResolvedPrimitiveType.INT, rtClassDeclaration.getFieldType("i").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 553 Método: assertEquals(3, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 558 Método: assertEquals("NODE_BY_BEGIN_POSITION", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 561 Método: assertEquals("ABSOLUTE_BEGIN_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 564 Método: assertEquals("ABSOLUTE_END_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 572 Método: assertEquals(13, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 577 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 580 Método: assertEquals("typeParameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 583 Método: assertEquals("name", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 586 Método: assertEquals("parameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 589 Método: assertEquals("throws_", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 592 Método: assertEquals("body", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 595 Método: assertEquals("annotations", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 598 Método: assertEquals("range", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 601 Método: assertEquals("parentNode", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 604 Método: assertEquals("childrenNodes", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 607 Método: assertEquals("orphanComments", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 610 Método: assertEquals("userData", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 613 Método: assertEquals("comment", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 621 Método: assertEquals(6, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 626 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 629 Método: assertEquals("typeParameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 632 Método: assertEquals("name", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 635 Método: assertEquals("parameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 638 Método: assertEquals("throws_", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 641 Método: assertEquals("body", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 653 Método: assertEquals(20, allMethods.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 659 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.GenericVisitor<R, A>, A)", sortedMethods.get(0).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 660 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)", sortedMethods.get(1).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 661 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getBody()", sortedMethods.get(2).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 662 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString()", sortedMethods.get(3).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 663 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean)", sortedMethods.get(4).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 664 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean, boolean)", sortedMethods.get(5).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 665 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getJavaDoc()", sortedMethods.get(6).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 666 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()", sortedMethods.get(7).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 667 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getName()", sortedMethods.get(8).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 668 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getNameExpr()", sortedMethods.get(9).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 669 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()", sortedMethods.get(10).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 670 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()", sortedMethods.get(11).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 671 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()", sortedMethods.get(12).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 672 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)", sortedMethods.get(13).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 673 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)", sortedMethods.get(14).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 674 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setName(java.lang.String)", sortedMethods.get(15).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 675 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)", sortedMethods.get(16).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 676 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setParameters(java.util.List<com.github.javaparser.ast.body.Parameter>)", sortedMethods.get(17).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 677 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setThrows(java.util.List<com.github.javaparser.ast.type.ReferenceType>)", sortedMethods.get(18).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 678 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setTypeParameters(java.util.List<com.github.javaparser.ast.type.TypeParameter>)", sortedMethods.get(19).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 807 Método: assertEquals(expected.size(), signatures.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 808 Método: assertThat(signatures, containsInAnyOrder(expected.toArray()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 820 Método: assertEquals(4, constructors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 822 Método: assertEquals("ConstructorDeclaration()", constructors.get(0).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 823 Método: assertEquals("ConstructorDeclaration(java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.lang.String)", constructors.get(1).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 824 Método: assertEquals("ConstructorDeclaration(java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.String, java.util.List<com.github.javaparser.ast.body.Parameter>, java.util.List<com.github.javaparser.ast.type.ReferenceType>, com.github.javaparser.ast.stmt.BlockStmt)", constructors.get(2).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 825 Método: assertEquals("ConstructorDeclaration(com.github.javaparser.Range, java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.String, java.util.List<com.github.javaparser.ast.body.Parameter>, java.util.List<com.github.javaparser.ast.type.ReferenceType>, com.github.javaparser.ast.stmt.BlockStmt)", constructors.get(3).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 840 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.isStatic()", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 843 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class<? extends java.lang.Throwable>)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 846 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 850 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class<? extends java.lang.Throwable>)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 860 Método: assertFalse(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 863 Método: assertFalse(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 876 Método: assertFalse(res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 903 Método: assertTrue(ca.hasDirectlyAnnotation("foo.bar.MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 904 Método: assertFalse(ca.hasDirectlyAnnotation("foo.bar.MyAnnotation2"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 905 Método: assertFalse(ca.hasDirectlyAnnotation("MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 906 Método: assertFalse(ca.hasDirectlyAnnotation("foo.bar.MyUnexistingAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 909 Método: assertFalse(cb.hasDirectlyAnnotation("foo.bar.MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 910 Método: assertTrue(cb.hasDirectlyAnnotation("foo.bar.MyAnnotation2"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 911 Método: assertFalse(cb.hasDirectlyAnnotation("MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 912 Método: assertFalse(cb.hasDirectlyAnnotation("foo.bar.MyUnexistingAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 924 Método: assertTrue(ca.hasAnnotation("foo.bar.MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 925 Método: assertFalse(ca.hasAnnotation("foo.bar.MyAnnotation2"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 926 Método: assertFalse(ca.hasAnnotation("MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 927 Método: assertFalse(ca.hasAnnotation("foo.bar.MyUnexistingAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 930 Método: assertTrue(cb.hasAnnotation("foo.bar.MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 931 Método: assertTrue(cb.hasAnnotation("foo.bar.MyAnnotation2"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 932 Método: assertFalse(cb.hasAnnotation("MyAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 933 Método: assertFalse(cb.hasAnnotation("foo.bar.MyUnexistingAnnotation"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 962 Método: assertTrue(compilationUnit.canBeAssignedTo(objectTypeDeclaration), "CompilationUnit should be reported as assignable to Object")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 965 Método: assertTrue(compilationUnit.canBeAssignedTo(cloneableTypeDeclaration), "CompilationUnit should be reported as assignable to Cloneable, because it extends Node which implements Cloneable")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 968 Método: assertTrue(compilationUnit.canBeAssignedTo(compilationUnit), "CompilationUnit should not be reported as assignable to CompilationUnit")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 969 Método: assertTrue(stringTypeDeclaration.canBeAssignedTo(stringTypeDeclaration), "String should not be reported as assignable to String")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 970 Método: assertTrue(objectTypeDeclaration.canBeAssignedTo(objectTypeDeclaration), "Object should be reported as assignable to Object")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 974 Método: assertFalse(cloneableTypeDeclaration.canBeAssignedTo(compilationUnit), "CloneableTypeDeclaration should not be reported as assignable to CompilationUnit")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 975 Método: assertFalse(objectTypeDeclaration.canBeAssignedTo(compilationUnit), "Object should not be reported as assignable to CompilationUnit")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 978 Método: assertFalse(compilationUnit.canBeAssignedTo(stringTypeDeclaration), "CompilationUnit should not be reported as assignable to String")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 981 Método: assertFalse(compilationUnit.canBeAssignedTo(serializableTypeDeclaration), "CompilationUnit should not be reported as assignable to Serializable")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 992 Método: assertTrue(ancestors.size() == 1)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java linha: 993 Método: assertEquals("FooBase", ancestors.get(0).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 84 Método: assertEquals(false, modifier.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 90 Método: assertEquals(false, modifier.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 96 Método: assertEquals(true, modifier.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 102 Método: assertEquals(false, modifier.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 108 Método: assertEquals(true, modifier.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 114 Método: assertEquals(modifier, modifier.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 119 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavaParserEnumDeclaration modifier = (JavaParserEnumDeclaration) typeSolver.solveType("com.github.javaparser.ast.Modifier");
    modifier.asClass();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 127 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavaParserEnumDeclaration modifier = (JavaParserEnumDeclaration) typeSolver.solveType("com.github.javaparser.ast.Modifier");
    modifier.asInterface();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 136 Método: assertEquals(modifier, modifier.asEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 142 Método: assertEquals("com.github.javaparser.ast", modifier.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 148 Método: assertEquals("Modifier", modifier.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 154 Método: assertEquals("com.github.javaparser.ast.Modifier", modifier.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 170 Método: assertEquals(2, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 171 Método: assertEquals("java.lang.Enum", ancestors.get(0).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 172 Método: assertEquals("java.lang.Cloneable", ancestors.get(1).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 184 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", compilationUnit.getSuperClass().get().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 185 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", compilationUnit.getSuperClass().get().typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 191 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 197 Método: assertEquals(3, constructorDeclaration.getAllSuperClasses().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 202 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 203 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 206 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 209 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 224 Método: assertEquals(7, constructorDeclaration.getInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 229 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 230 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 233 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 236 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 237 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 240 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 241 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 244 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 245 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 248 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 249 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 252 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 253 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 268 Método: assertEquals(9, constructorDeclaration.getAllInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 273 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 274 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 277 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 280 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 281 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 284 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 285 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 288 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 289 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 292 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 293 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 296 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 297 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 300 Método: assertEquals("java.lang.Cloneable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 303 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 304 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 310 Método: assertEquals(8, constructorDeclaration.getAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 315 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 316 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 319 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 320 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 323 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 326 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 327 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 330 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 331 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 334 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 335 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 338 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 339 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 342 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 343 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 349 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 358 Método: assertEquals(12, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 363 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 364 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 367 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 370 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 373 Método: assertEquals("java.lang.Cloneable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 376 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 377 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 380 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 381 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 384 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 387 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 388 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 391 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 392 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 395 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 396 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 399 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 400 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 403 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 404 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 419 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 420 Método: assertEquals("java.util.EnumSet", fieldDeclaration.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 421 Método: assertEquals(AccessSpecifier.PRIVATE, fieldDeclaration.accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 422 Método: assertFalse(fieldDeclaration.isStatic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 426 Método: assertEquals("annotations", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 427 Método: assertEquals("java.util.List", fieldDeclaration.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 428 Método: assertEquals(AccessSpecifier.PRIVATE, fieldDeclaration.accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 433 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    JavaParserClassDeclaration constructorDeclaration = (JavaParserClassDeclaration) typeSolver.solveType("com.github.javaparser.ast.body.ConstructorDeclaration");
    constructorDeclaration.getField("unexisting");
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 445 Método: assertEquals(16, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 450 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 453 Método: assertEquals("typeParameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 456 Método: assertEquals("name", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 459 Método: assertEquals("parameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 462 Método: assertEquals("throws_", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 465 Método: assertEquals("body", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 468 Método: assertEquals("annotations", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 471 Método: assertEquals("NODE_BY_BEGIN_POSITION", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 474 Método: assertEquals("range", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 477 Método: assertEquals("parentNode", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 480 Método: assertEquals("childrenNodes", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 483 Método: assertEquals("orphanComments", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 486 Método: assertEquals("userData", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 489 Método: assertEquals("comment", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 492 Método: assertEquals("ABSOLUTE_BEGIN_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 495 Método: assertEquals("ABSOLUTE_END_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 503 Método: assertEquals(3, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 508 Método: assertEquals("NODE_BY_BEGIN_POSITION", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 511 Método: assertEquals("ABSOLUTE_BEGIN_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 514 Método: assertEquals("ABSOLUTE_END_LINE", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 522 Método: assertEquals(13, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 527 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 530 Método: assertEquals("typeParameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 533 Método: assertEquals("name", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 536 Método: assertEquals("parameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 539 Método: assertEquals("throws_", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 542 Método: assertEquals("body", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 545 Método: assertEquals("annotations", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 548 Método: assertEquals("range", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 551 Método: assertEquals("parentNode", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 554 Método: assertEquals("childrenNodes", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 557 Método: assertEquals("orphanComments", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 560 Método: assertEquals("userData", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 563 Método: assertEquals("comment", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 571 Método: assertEquals(6, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 576 Método: assertEquals("modifiers", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 579 Método: assertEquals("typeParameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 582 Método: assertEquals("name", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 585 Método: assertEquals("parameters", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 588 Método: assertEquals("throws_", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 591 Método: assertEquals("body", fieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 603 Método: assertEquals(20, allMethods.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 609 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.GenericVisitor<R, A>, A)", sortedMethods.get(0).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 610 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)", sortedMethods.get(1).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 611 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getBody()", sortedMethods.get(2).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 612 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString()", sortedMethods.get(3).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 613 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean)", sortedMethods.get(4).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 614 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean, boolean)", sortedMethods.get(5).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 615 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getJavaDoc()", sortedMethods.get(6).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 616 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()", sortedMethods.get(7).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 617 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getName()", sortedMethods.get(8).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 618 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getNameExpr()", sortedMethods.get(9).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 619 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()", sortedMethods.get(10).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 620 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()", sortedMethods.get(11).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 621 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()", sortedMethods.get(12).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 622 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)", sortedMethods.get(13).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 623 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)", sortedMethods.get(14).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 624 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setName(java.lang.String)", sortedMethods.get(15).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 625 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)", sortedMethods.get(16).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 626 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setParameters(java.util.List<com.github.javaparser.ast.body.Parameter>)", sortedMethods.get(17).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 627 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setThrows(java.util.List<com.github.javaparser.ast.type.ReferenceType>)", sortedMethods.get(18).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 628 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setTypeParameters(java.util.List<com.github.javaparser.ast.type.TypeParameter>)", sortedMethods.get(19).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 760 Método: assertThat(signatures, containsInAnyOrder(expected.toArray()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 772 Método: assertEquals(4, constructors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 774 Método: assertEquals("ConstructorDeclaration()", constructors.get(0).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 775 Método: assertEquals("ConstructorDeclaration(java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.lang.String)", constructors.get(1).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 776 Método: assertEquals("ConstructorDeclaration(java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.String, java.util.List<com.github.javaparser.ast.body.Parameter>, java.util.List<com.github.javaparser.ast.type.ReferenceType>, com.github.javaparser.ast.stmt.BlockStmt)", constructors.get(2).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 777 Método: assertEquals("ConstructorDeclaration(com.github.javaparser.Range, java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.String, java.util.List<com.github.javaparser.ast.body.Parameter>, java.util.List<com.github.javaparser.ast.type.ReferenceType>, com.github.javaparser.ast.stmt.BlockStmt)", constructors.get(3).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 792 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.isStatic()", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 795 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class<? extends java.lang.Throwable>)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 798 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 802 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class<? extends java.lang.Throwable>)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 812 Método: assertEquals(false, res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 815 Método: assertEquals(false, res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 905 Método: assertEquals(0, internalTypes1.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 909 Método: assertEquals(1, internalTypes2.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 910 Método: assertEquals("EnumWithInnerType.EnumInner", internalTypes2.iterator().next().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 932 Método: assertEquals(false, dec.hasDirectlyAnnotation("javax.persistence.Embeddable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 948 Método: assertEquals(false, dec.hasDirectlyAnnotation("javax.persistence.Embeddable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java linha: 949 Método: assertEquals(true, dec.hasDirectlyAnnotation("MyAnno"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 51 Método: assertTrue(field.isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 52 Método: assertDoesNotThrow(field::asField)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 65 Método: assertTrue(parameterDeclaration.isParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 66 Método: assertDoesNotThrow(parameterDeclaration::asParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 78 Método: assertTrue(localVar.isVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 91 Método: assertTrue(patternVar.isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclarationTest.java linha: 92 Método: assertDoesNotThrow(patternVar::asPattern)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeVariableDeclarationTest.java linha: 70 Método: assertNotNull(createValue().getWrappedNode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeVariableDeclarationTest.java linha: 83 Método: assertEquals(expectedTypes, parserTypeParameter.getAncestors().stream().map(ResolvedReferenceType::getQualifiedName).sorted().collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 84 Método: assertEquals(false, nodeWithAnnotations.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 90 Método: assertEquals(true, nodeWithAnnotations.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 96 Método: assertEquals(false, nodeWithAnnotations.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 102 Método: assertEquals(false, nodeWithAnnotations.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 108 Método: assertEquals(true, nodeWithAnnotations.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 114 Método: assertEquals(nodeWithAnnotations, nodeWithAnnotations.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 121 Método: assertEquals(nodeWithAnnotations, nodeWithAnnotations.asClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 119 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavaParserInterfaceDeclaration nodeWithAnnotations = (JavaParserInterfaceDeclaration) typeSolver.solveType("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations");
    assertEquals(nodeWithAnnotations, nodeWithAnnotations.asClass());
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 128 Método: assertEquals(nodeWithAnnotations, nodeWithAnnotations.asInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 133 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavaParserInterfaceDeclaration nodeWithAnnotations = (JavaParserInterfaceDeclaration) typeSolver.solveType("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations");
    nodeWithAnnotations.asEnum();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 142 Método: assertEquals("com.github.javaparser.ast.nodeTypes", nodeWithAnnotations.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 148 Método: assertEquals("NodeWithAnnotations", nodeWithAnnotations.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 154 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", nodeWithAnnotations.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 170 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", compilationUnit.getSuperClass().get().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 171 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", compilationUnit.getSuperClass().get().typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 177 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 189 Método: assertEquals(1, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 190 Método: assertEquals("Base", ancestors.get(0).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 192 Método: assertEquals(2, types.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 193 Método: assertEquals("java.lang.Integer", types.get(0).asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 194 Método: assertEquals("Extends", types.get(1).asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 200 Método: assertEquals(3, constructorDeclaration.getAllSuperClasses().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 205 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 206 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 209 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 212 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 227 Método: assertEquals(7, constructorDeclaration.getInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 232 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 233 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 236 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 239 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 240 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 243 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 244 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 247 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 248 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 251 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 252 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 255 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 256 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 271 Método: assertEquals(9, constructorDeclaration.getAllInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 276 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 277 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 280 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 283 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 284 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 287 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 288 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 291 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 292 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 295 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 296 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 299 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 300 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 303 Método: assertEquals("java.lang.Cloneable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 306 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 307 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 313 Método: assertEquals(8, constructorDeclaration.getAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 318 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 319 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 322 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 323 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 326 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 329 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 330 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 333 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 334 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 337 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 338 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 341 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 342 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 345 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 346 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 352 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 361 Método: assertEquals(12, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 366 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 367 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 370 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 373 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 376 Método: assertEquals("java.lang.Cloneable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 379 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 380 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 383 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 384 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 387 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 390 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 391 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 394 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 395 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 398 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 399 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 402 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 403 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 406 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 407 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 422 Método: assertEquals("modifiers", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 423 Método: assertEquals("java.util.EnumSet", ResolvedFieldDeclaration.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 424 Método: assertEquals(AccessSpecifier.PRIVATE, ResolvedFieldDeclaration.accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 425 Método: assertEquals(false, ResolvedFieldDeclaration.isStatic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 429 Método: assertEquals("annotations", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 430 Método: assertEquals("java.util.List", ResolvedFieldDeclaration.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 431 Método: assertEquals(AccessSpecifier.PRIVATE, ResolvedFieldDeclaration.accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 436 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    JavaParserClassDeclaration constructorDeclaration = (JavaParserClassDeclaration) typeSolver.solveType("com.github.javaparser.ast.body.ConstructorDeclaration");
    constructorDeclaration.getField("unexisting");
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 448 Método: assertEquals(16, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 453 Método: assertEquals("modifiers", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 456 Método: assertEquals("typeParameters", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 459 Método: assertEquals("name", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 462 Método: assertEquals("parameters", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 465 Método: assertEquals("throws_", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 468 Método: assertEquals("body", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 471 Método: assertEquals("annotations", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 474 Método: assertEquals("NODE_BY_BEGIN_POSITION", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 477 Método: assertEquals("range", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 480 Método: assertEquals("parentNode", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 483 Método: assertEquals("childrenNodes", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 486 Método: assertEquals("orphanComments", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 489 Método: assertEquals("userData", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 492 Método: assertEquals("comment", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 495 Método: assertEquals("ABSOLUTE_BEGIN_LINE", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 498 Método: assertEquals("ABSOLUTE_END_LINE", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 506 Método: assertEquals(3, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 511 Método: assertEquals("NODE_BY_BEGIN_POSITION", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 514 Método: assertEquals("ABSOLUTE_BEGIN_LINE", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 517 Método: assertEquals("ABSOLUTE_END_LINE", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 525 Método: assertEquals(13, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 530 Método: assertEquals("modifiers", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 533 Método: assertEquals("typeParameters", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 536 Método: assertEquals("name", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 539 Método: assertEquals("parameters", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 542 Método: assertEquals("throws_", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 545 Método: assertEquals("body", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 548 Método: assertEquals("annotations", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 551 Método: assertEquals("range", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 554 Método: assertEquals("parentNode", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 557 Método: assertEquals("childrenNodes", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 560 Método: assertEquals("orphanComments", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 563 Método: assertEquals("userData", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 566 Método: assertEquals("comment", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 574 Método: assertEquals(6, allFields.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 579 Método: assertEquals("modifiers", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 582 Método: assertEquals("typeParameters", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 585 Método: assertEquals("name", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 588 Método: assertEquals("parameters", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 591 Método: assertEquals("throws_", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 594 Método: assertEquals("body", ResolvedFieldDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 606 Método: assertEquals(20, allMethods.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 612 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.GenericVisitor<R, A>, A)", sortedMethods.get(0).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 613 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)", sortedMethods.get(1).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 614 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getBody()", sortedMethods.get(2).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 615 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString()", sortedMethods.get(3).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 616 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean)", sortedMethods.get(4).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 617 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean, boolean)", sortedMethods.get(5).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 618 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getJavaDoc()", sortedMethods.get(6).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 619 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()", sortedMethods.get(7).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 620 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getName()", sortedMethods.get(8).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 621 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getNameExpr()", sortedMethods.get(9).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 622 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()", sortedMethods.get(10).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 623 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()", sortedMethods.get(11).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 624 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()", sortedMethods.get(12).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 625 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)", sortedMethods.get(13).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 626 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)", sortedMethods.get(14).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 627 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setName(java.lang.String)", sortedMethods.get(15).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 628 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)", sortedMethods.get(16).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 629 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setParameters(java.util.List<com.github.javaparser.ast.body.Parameter>)", sortedMethods.get(17).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 630 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setThrows(java.util.List<com.github.javaparser.ast.type.ReferenceType>)", sortedMethods.get(18).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 631 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration.setTypeParameters(java.util.List<com.github.javaparser.ast.type.TypeParameter>)", sortedMethods.get(19).getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 761 Método: assertThat(signatures, containsInAnyOrder(expected.toArray()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 773 Método: assertEquals(4, constructors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 775 Método: assertEquals("ConstructorDeclaration()", constructors.get(0).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 776 Método: assertEquals("ConstructorDeclaration(java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.lang.String)", constructors.get(1).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 777 Método: assertEquals("ConstructorDeclaration(java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.String, java.util.List<com.github.javaparser.ast.body.Parameter>, java.util.List<com.github.javaparser.ast.type.ReferenceType>, com.github.javaparser.ast.stmt.BlockStmt)", constructors.get(2).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 778 Método: assertEquals("ConstructorDeclaration(com.github.javaparser.Range, java.util.EnumSet<com.github.javaparser.ast.Modifier>, java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.String, java.util.List<com.github.javaparser.ast.body.Parameter>, java.util.List<com.github.javaparser.ast.type.ReferenceType>, com.github.javaparser.ast.stmt.BlockStmt)", constructors.get(3).getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 793 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.isStatic()", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 796 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class<? extends java.lang.Throwable>)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 799 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 803 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class<? extends java.lang.Throwable>)", res.getCorrespondingDeclaration().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 813 Método: assertEquals(false, res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 816 Método: assertEquals(false, res.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java linha: 912 Método: assertEquals("java.lang.Comparable", extendedInterface.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserFieldDeclarationTest.java linha: 47 Método: assertThrows(IllegalArgumentException.class, () -> new JavaParserFieldDeclaration(variableDeclarator, null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserFieldDeclarationTest.java linha: 57 Método: assertTrue(rfd.isVolatile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserFieldDeclarationTest.java linha: 66 Método: assertFalse(rfd.isVolatile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacadeTest.java linha: 39 Método: assertEquals(int.class.getCanonicalName(), resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacadeTest.java linha: 45 Método: assertEquals(String.class.getCanonicalName(), resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacadeTest.java linha: 51 Método: assertEquals(String.class.getCanonicalName(), resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacadeTest.java linha: 57 Método: assertEquals(TestEnum.class.getCanonicalName(), resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacadeTest.java linha: 63 Método: assertEquals(Override.class.getCanonicalName(), resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 62 Método: assertEquals(true, javaParserFacade.solve(firstFieldMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 63 Método: assertEquals(true, javaParserFacade.solve(secondFieldMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 64 Método: assertEquals(true, javaParserFacade.solve(thirdFieldMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 77 Método: assertEquals(true, javaParserFacade.solve(methodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 78 Método: assertEquals(true, javaParserFacade.solve(innerMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 79 Método: assertEquals(true, javaParserFacade.solve(innerInnerMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 90 Método: assertEquals(true, javaParserFacade.solve(methodCallWithNestedStaticFieldParam).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 109 Método: assertEquals(true, javaParserFacade.solve(staticMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 111 Método: assertEquals(true, javaParserFacade.solve(methodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 112 Método: assertEquals(true, javaParserFacade.solve(innerMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 113 Método: assertEquals(true, javaParserFacade.solve(innerInnerMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 115 Método: assertEquals(true, javaParserFacade.solve(firstFieldMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 116 Método: assertEquals(true, javaParserFacade.solve(secondFieldMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java linha: 117 Método: assertEquals(true, javaParserFacade.solve(thirdFieldMethodCall).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContextTest.java linha: 59 Método: assertTrue(alphaContext.solveType("Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContextTest.java linha: 60 Método: assertTrue(alphaContext.solveType("Foo", Collections.emptyList()).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContextTest.java linha: 61 Método: assertFalse(alphaContext.solveType("Foo", Collections.singletonList(ResolvedPrimitiveType.INT)).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContextTest.java linha: 70 Método: assertTrue(betaContext.solveType("Foo").isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContextTest.java linha: 71 Método: assertFalse(betaContext.solveType("Foo", Collections.emptyList()).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContextTest.java linha: 72 Método: assertTrue(betaContext.solveType("Foo", Collections.singletonList(ResolvedPrimitiveType.INT)).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue84Test.java linha: 44 Método: assertEquals(String.class.getCanonicalName(), type.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue546Test.java linha: 62 Método: assertEquals(normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY), normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3024Test.java linha: 59 Método: assertEquals("Test.getInstance", methodCallExpr.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1485Test.java linha: 62 Método: assertEquals("java.io.PrintStream.println(java.lang.String)", resolvedMethodDeclaration.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2210Test.java linha: 61 Método: assertEquals("java.util.function.Consumer<? super T>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2602Test.java linha: 72 Método: assertTrue(parseResult.isSuccessful())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2602Test.java linha: 73 Método: assertEquals(0, parseResult.getProblems().size(), "Expected zero errors when attempting to parse the input code.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2602Test.java linha: 74 Método: assertTrue(parseResult.getResult().isPresent(), "Must have a parse result to run this test.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2602Test.java linha: 94 Método: assertFalse(thisDeclaration.canBeAssignedTo(secondDeclaration), "Both types should not be assignable")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue186Test.java linha: 50 Método: assertEquals("java.util.stream.Stream<java.lang.String>", javaParserFacade.getType(methodCallExpr).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue186Test.java linha: 62 Método: assertEquals("java.util.function.Predicate<? super java.lang.String>", javaParserFacade.getType(lambdas.get(0)).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue186Test.java linha: 63 Método: assertEquals("java.util.function.Function<? super java.lang.String, ? extends java.lang.Integer>", javaParserFacade.getType(lambdas.get(1)).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue186Test.java linha: 64 Método: assertEquals("java.util.function.Predicate<? super java.lang.Integer>", javaParserFacade.getType(lambdas.get(2)).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue276Test.java linha: 60 Método: Assertions.assertTrue(isSolved)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue300Test.java linha: 54 Método: assertNotNull(fieldAccess)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue300Test.java linha: 61 Método: assertEquals(ResolvedPrimitiveType.INT, ref.getCorrespondingDeclaration().getType().asPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1757Test.java linha: 60 Método: assertEquals("java.util.Comparator<java.lang.String>", oce.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1757Test.java linha: 61 Método: assertTrue(oce.resolve().getQualifiedName().startsWith("A.Anonymous"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java linha: 45 Método: assertEquals(false, FunctionalInterfaceLogic.getFunctionalMethod(string).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java linha: 52 Método: assertEquals(true, FunctionalInterfaceLogic.getFunctionalMethod(function).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java linha: 53 Método: assertEquals("apply", FunctionalInterfaceLogic.getFunctionalMethod(function).get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java linha: 55 Método: assertEquals(true, FunctionalInterfaceLogic.getFunctionalMethod(consumer).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java linha: 56 Método: assertEquals("accept", FunctionalInterfaceLogic.getFunctionalMethod(consumer).get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java linha: 68 Método: assertEquals(false, FunctionalInterfaceLogic.getFunctionalMethod(function).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/InferenceContextTest.java linha: 76 Método: assertEquals(object, result)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/InferenceContextTest.java linha: 82 Método: assertEquals(new InferenceVariableType(0, typeSolver), result)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/InferenceContextTest.java linha: 88 Método: assertEquals(listOf(new InferenceVariableType(0, typeSolver)), result)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/logic/AbstractTypeDeclarationTest.java linha: 50 Método: assertEquals(isFunctionalInterface(abstractTypeDeclaration), abstractTypeDeclaration.isFunctionalInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/PullRequest2398Test.java linha: 77 Método: assertThat(returnType.describe(), is("B"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 44 Método: assertEquals(0, cu.getComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 45 Método: assertFalse(cu.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 53 Método: assertEquals(0, cu.getComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 54 Método: assertFalse(cu.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 60 Método: assertEquals(2, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 67 Método: assertEquals(2, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 74 Método: assertEquals(6, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 82 Método: assertEquals(1, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 91 Método: assertEquals(1, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 98 Método: assertEquals(3, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1574Test.java linha: 105 Método: assertEquals(3, comments.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3099Test.java linha: 64 Método: assertEquals(2, classes.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3099Test.java linha: 66 Método: assertTrue(innerInterface.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3099Test.java linha: 74 Método: assertTrue(resolvedType.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3099Test.java linha: 75 Método: assertEquals(innerInterface, resolvedType.get().getTypeDeclaration().orElse(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2489Test.java linha: 61 Método: assertEquals("ObjectContext.set(java.lang.String, java.lang.Object, boolean)", mces.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue144Test.java linha: 63 Método: assertEquals(true, javaParserFacade.solve(firstParameter).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue144Test.java linha: 64 Método: assertEquals(true, javaParserFacade.solve(firstParameter).getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue144Test.java linha: 65 Método: assertEquals("hw", javaParserFacade.solve(firstParameter).getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue144Test.java linha: 77 Método: assertEquals(true, javaParserFacade.solve(firstParameter).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue144Test.java linha: 89 Método: assertEquals(true, javaParserFacade.solve(firstParameter).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 64 Método: assertEquals(2, all.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 70 Método: Assertions.assertEquals("recovered", fieldAccessExpr.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 72 Método: assertTrue(resolved.getType().isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 73 Método: assertEquals("java.lang.Integer", resolved.getType().asPrimitive().getBoxTypeQName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 77 Método: Assertions.assertEquals("perPriority", fieldAccessExpr.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 79 Método: assertTrue(resolved.getType().isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 109 Método: assertEquals(2, all.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 115 Método: Assertions.assertEquals("recovered", fieldAccessExpr.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 117 Método: assertTrue(resolved.getType().isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 118 Método: assertEquals("java.lang.Integer", resolved.getType().asPrimitive().getBoxTypeQName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 122 Método: Assertions.assertEquals("perPriority", fieldAccessExpr.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3308Test.java linha: 124 Método: assertTrue(resolved.getType().isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2397Test.java linha: 74 Método: assertTrue(resolved.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/utils/SymbolSolverCollectionStrategyTest.java linha: 67 Método: assertTrue(unresolved.get() < 10)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/utils/SymbolSolverCollectionStrategyTest.java linha: 81 Método: assertTrue(roots.contains(p.toString()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 44 Método: assertEquals("foo", resolvedMethodDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 45 Método: assertEquals("A[]", resolvedMethodDeclaration.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 46 Método: assertEquals("java.lang.String[]", resolvedMethodDeclaration.getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 47 Método: assertEquals("int[]", resolvedMethodDeclaration.getParam(1).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 57 Método: assertEquals("hashCode", resolvedMethodRef.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 58 Método: assertEquals("int", resolvedMethodRef.getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 59 Método: assertEquals(0, resolvedMethodRef.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java linha: 68 Método: assertEquals("A[]", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2909Test.java linha: 64 Método: assertEquals("Program.OuterClass", expr.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2909Test.java linha: 92 Método: assertEquals("Program.OuterClass", expr.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2909Test.java linha: 140 Método: assertEquals("test.Program.FarOuterClass.OuterClass", expr.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue314Test.java linha: 71 Método: assertEquals(true, symbolReference.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue314Test.java linha: 72 Método: assertEquals(true, symbolReference.getCorrespondingDeclaration().isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue314Test.java linha: 73 Método: assertEquals("a", symbolReference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3136Test.java linha: 57 Método: assertEquals("Program", expr.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3136Test.java linha: 58 Método: assertEquals("Program", expr.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2878Test.java linha: 72 Método: assertEquals("U9.U9(java.util.Optional<java.lang.String>, java.util.Optional<U9>, int)", oces.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2878Test.java linha: 73 Método: assertEquals("U9.U9(java.util.Optional<java.lang.String>, java.util.Optional<U9>, int)", oces.get(1).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2878Test.java linha: 74 Método: assertEquals("U9.U9(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.lang.String)", oces.get(2).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2878Test.java linha: 75 Método: assertEquals("U9.U9(java.util.Optional<U9>, java.util.Optional<U9>, boolean)", oces.get(3).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2362Test.java linha: 61 Método: assertEquals(oce.resolve().getSignature(), "InnerClass(int)")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3030Test.java linha: 108 Método: assertTrue(optionalFieldDeclaration.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3030Test.java linha: 111 Método: assertEquals(Spliterator.OfInt.class.getCanonicalName(), resolvedField.asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue128Test.java linha: 67 Método: assertEquals(false, javaParserFacade.solve(methodCallExpr).isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3028Test.java linha: 51 Método: assertEquals("AParserTest.doSomething(java.lang.String, java.util.function.Supplier<?>...)", rmd.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2284Test.java linha: 62 Método: assertEquals("Enum.getEnumName()", md.resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2236Test.java linha: 56 Método: assertEquals("A.A(java.lang.Boolean)", oces.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/SolveMethodDeclaredInEnumTest.java linha: 60 Método: assertNotNull(resolvedCall)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/SolveMethodDeclaredInEnumTest.java linha: 61 Método: assertEquals("MyEnum.method()", resolvedCall.getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1456Test.java linha: 56 Método: assertEquals("foo.A", ancestors.get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3859Test.java linha: 34 Método: assertEquals(2, lambdas.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3859Test.java linha: 35 Método: assertEquals("java.util.function.Consumer<java.lang.String>", lambdas.get(0).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3859Test.java linha: 40 Método: assertEquals("java.util.function.Consumer<java.lang.String>", lambdas.get(1).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3859Test.java linha: 44 Método: assertEquals(2, exprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3859Test.java linha: 45 Método: assertEquals("? super java.lang.String", exprs.get(0).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3859Test.java linha: 50 Método: assertEquals("? super java.lang.String", exprs.get(1).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2132Test.java linha: 55 Método: assertEquals("int", mce.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2132Test.java linha: 56 Método: assertEquals("java.lang.String.length", mce.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2132Test.java linha: 57 Método: assertEquals("java.lang.String", mce.getScope().get().calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1713Test.java linha: 54 Método: assertEquals("java.lang.SuppressWarnings", nae.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 50 Método: assertEquals("hashCode()", hashCode.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 51 Método: assertEquals("equals(java.lang.Object)", equals.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 52 Método: assertEquals("containsAll(java.util.Collection<? extends java.lang.Object>)", containsAll.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 53 Método: assertEquals("subList(int, int)", subList.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 63 Método: assertEquals(true, put.getReturnType().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 64 Método: assertEquals(true, put.getReturnType().asTypeParameter().declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 65 Método: assertEquals("java.util.Map.V", put.getReturnType().asTypeParameter().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 75 Método: assertEquals(true, put.getParam(0).getType().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 76 Método: assertEquals(true, put.getParam(0).getType().asTypeParameter().declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 77 Método: assertEquals("java.util.Map.K", put.getParam(0).getType().asTypeParameter().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 79 Método: assertEquals(true, put.getParam(1).getType().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 80 Método: assertEquals(true, put.getParam(1).getType().asTypeParameter().declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java linha: 81 Método: assertEquals("java.util.Map.V", put.getParam(1).getType().asTypeParameter().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 62 Método: assertTrue(method.isAbstract())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 63 Método: assertEquals(0, method.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 67 Método: assertEquals(true, method.isAbstract())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 68 Método: assertEquals(1, method.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 69 Método: assertEquals(true, method.getParam(0).getType().isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 70 Método: assertEquals(Object.class.getCanonicalName(), method.getParam(0).getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 75 Método: assertEquals(2, foundCount)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 84 Método: assertEquals(2, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 88 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 89 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 97 Método: assertEquals(2, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 100 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 102 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 111 Método: assertEquals(6, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 113 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Buffer.class, typeResolver)), ancestors.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 115 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Appendable.class, typeResolver)), ancestors.get(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 118 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(CharSequence.class, typeResolver)), ancestors.get(3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 121 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Readable.class, typeResolver)), ancestors.get(4))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java linha: 124 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)), ancestors.get(5))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 61 Método: assertEquals(true, foo.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 62 Método: assertEquals(true, bar.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 75 Método: assertEquals(Object.class.getCanonicalName(), foo.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 76 Método: assertEquals(Collections.emptyList(), foo.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 91 Método: assertEquals("Bar", foo.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getTypeDeclaration().get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 92 Método: assertEquals(Collections.emptyList(), foo.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 108 Método: assertEquals("Foo", bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getTypeDeclaration().get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 109 Método: assertEquals(1, bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 110 Método: assertEquals(String.class.getCanonicalName(), bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().get(0).asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 126 Método: assertEquals("Foo", bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getTypeDeclaration().get().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 127 Método: assertEquals(1, bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 128 Método: assertEquals(true, bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().get(0).isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 129 Método: assertEquals("E", bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().get(0).asTypeParameter().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 130 Método: assertEquals(true, bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().get(0).asTypeParameter().declaredOnType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 131 Método: assertEquals(false, bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().get(0).asTypeParameter().declaredOnMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 132 Método: assertTrue(bar.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersValues().get(0).asTypeParameter().getQualifiedName().endsWith("Bar.E"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 148 Método: assertEquals(true, foo.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 149 Método: assertEquals(true, bar.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 166 Método: assertEquals(true, fooField.getType().isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 167 Método: assertEquals("E", fooField.getType().asTypeParameter().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 170 Método: assertEquals(true, barField.getType().isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 171 Método: assertEquals(String.class.getCanonicalName(), barField.getType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 186 Método: assertFalse(method.isAbstract())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 187 Método: assertEquals(1, method.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 188 Método: assertEquals("int", method.getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 192 Método: assertFalse(method.isAbstract())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 193 Método: assertEquals(1, method.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 194 Método: assertEquals("java.lang.String", method.getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 198 Método: assertFalse(method.isAbstract())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 199 Método: assertEquals(1, method.getNumberOfParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 200 Método: assertEquals("java.lang.String", method.getParam(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 205 Método: assertEquals(3, foundCount)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 212 Método: assertEquals(1, locale.getConstructors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 220 Método: assertEquals(ImmutableSet.of(Serializable.class.getCanonicalName(), Cloneable.class.getCanonicalName(), List.class.getCanonicalName(), RandomAccess.class.getCanonicalName()), arraylist.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 232 Método: assertEquals(ImmutableSet.of(Serializable.class.getCanonicalName(), Cloneable.class.getCanonicalName(), List.class.getCanonicalName(), RandomAccess.class.getCanonicalName(), Collection.class.getCanonicalName(), Iterable.class.getCanonicalName()), arraylist.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 245 Método: assertEquals(ImmutableSet.of(Object.class.getCanonicalName(), AbstractCollection.class.getCanonicalName(), AbstractList.class.getCanonicalName()), arraylist.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 250 Método: assertEquals(ImmutableSet.of(Object.class.getCanonicalName()), string.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 258 Método: assertEquals("java.util", arraylist.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 260 Método: assertEquals("java.lang", string.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 267 Método: assertEquals("ArrayList", arraylist.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 269 Método: assertEquals("String", string.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 276 Método: assertEquals("java.util.ArrayList", arraylist.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 278 Método: assertEquals("java.lang.String", string.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 311 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 326 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 339 Método: assertEquals(9, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 342 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(RandomAccess.class, typeResolver)), ancestors.get("java.util.RandomAccess"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 343 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.util.AbstractCollection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 344 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.util.List"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 345 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Cloneable.class, typeResolver)), ancestors.get("java.lang.Cloneable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 346 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 347 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractList.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.util.AbstractList"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 348 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)), ancestors.get("java.lang.Object"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 349 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(typeVariable)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 350 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Serializable.class, typeResolver)), ancestors.get("java.io.Serializable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 356 Método: assertEquals("com.github.javaparser.ast.Node", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 362 Método: assertEquals("com.github.javaparser.ast.body.CallableDeclaration", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 363 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.CallableDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 369 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 375 Método: assertEquals(4, constructorDeclaration.getAllSuperClasses().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 376 Método: assertEquals(true, constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.body.CallableDeclaration")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 377 Método: assertEquals(true, constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.body.BodyDeclaration")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 378 Método: assertEquals(true, constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.Node")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 379 Método: assertEquals(true, constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("java.lang.Object")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 384 Método: assertEquals("com.github.javaparser.ast.body.CallableDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 385 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.CallableDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 388 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 389 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 392 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 395 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 401 Método: assertEquals(ImmutableSet.of(), compilationUnit.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 405 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.nodeTypes.NodeWithExtends", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier", "com.github.javaparser.ast.nodeTypes.NodeWithImplements", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier", "com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", "com.github.javaparser.resolution.Resolvable"), coid.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 418 Método: assertEquals(8, constructorDeclaration.getInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 423 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 424 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 427 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 428 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 431 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 432 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 435 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 436 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 439 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 440 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 443 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 444 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 447 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 448 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 451 Método: assertEquals("com.github.javaparser.resolution.Resolvable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 457 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.visitor.Visitable", "com.github.javaparser.ast.observer.Observable", "com.github.javaparser.HasParentNode", "com.github.javaparser.ast.nodeTypes.NodeWithRange", "com.github.javaparser.ast.nodeTypes.NodeWithTokenRange").stream().sorted().collect(Collectors.toList()), compilationUnit.getAllInterfaces().stream().map(i -> i.getQualifiedName()).sorted().collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 463 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.nodeTypes.NodeWithExtends", "com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", "java.lang.Cloneable", "com.github.javaparser.HasParentNode", "com.github.javaparser.ast.visitor.Visitable", "com.github.javaparser.ast.nodeTypes.NodeWithImplements", "com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", "com.github.javaparser.ast.nodeTypes.NodeWithModifiers", "com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", "com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", "com.github.javaparser.ast.nodeTypes.NodeWithMembers", "com.github.javaparser.ast.observer.Observable", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier", "com.github.javaparser.ast.nodeTypes.NodeWithRange", "com.github.javaparser.ast.nodeTypes.NodeWithTokenRange", "com.github.javaparser.resolution.Resolvable"), coid.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 492 Método: assertEquals(34, interfaces.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 498 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 499 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 502 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 503 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 506 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 507 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 510 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 511 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 514 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 515 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 518 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 519 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 522 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 523 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 526 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 527 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 530 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 531 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 534 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 535 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 538 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 539 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 542 Método: assertEquals("com.github.javaparser.resolution.Resolvable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 545 Método: assertEquals("java.lang.Cloneable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 548 Método: assertEquals("com.github.javaparser.HasParentNode", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 549 Método: assertEquals("com.github.javaparser.ast.Node", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.HasParentNode.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 552 Método: assertEquals("com.github.javaparser.ast.observer.Observable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 555 Método: assertEquals("com.github.javaparser.ast.visitor.Visitable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 558 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithRange", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 559 Método: assertEquals("com.github.javaparser.ast.Node", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithRange.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 562 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTokenRange", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 563 Método: assertEquals("com.github.javaparser.ast.Node", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTokenRange.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 566 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 567 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 570 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 571 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 574 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 575 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 578 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 579 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 582 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 583 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 586 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 587 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 590 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 593 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 594 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 597 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 598 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 601 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 602 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 605 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 606 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 609 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 610 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 613 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 614 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 617 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 618 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 621 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 622 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 625 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 626 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 632 Método: assertEquals(9, constructorDeclaration.getAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 639 Método: assertEquals("com.github.javaparser.ast.body.CallableDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 640 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.CallableDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 643 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 644 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 647 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 648 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 651 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 652 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 655 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 656 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 659 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 660 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 663 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 664 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 667 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 668 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 671 Método: assertEquals("com.github.javaparser.resolution.Resolvable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 677 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.visitor.Visitable", "com.github.javaparser.ast.observer.Observable", "com.github.javaparser.ast.Node", "com.github.javaparser.ast.nodeTypes.NodeWithTokenRange", "java.lang.Object", "com.github.javaparser.HasParentNode", "com.github.javaparser.ast.nodeTypes.NodeWithRange"), cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 692 Método: assertEquals("com.github.javaparser.HasParentNode", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 693 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.HasParentNode.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 696 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 699 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 700 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 703 Método: assertEquals("com.github.javaparser.ast.body.CallableDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 704 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.CallableDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 707 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 708 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 711 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 712 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 715 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 718 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 719 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 722 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 723 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 726 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 727 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 730 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 731 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 734 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 735 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 738 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithRange", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 739 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithRange.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 742 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 743 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 746 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 747 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 750 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 751 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 754 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 755 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 758 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTokenRange", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 759 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTokenRange.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 762 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 763 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 766 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 767 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 770 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 771 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 774 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 775 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 778 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 779 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 782 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 783 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 786 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 787 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 790 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 791 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 794 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 795 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 798 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 799 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 802 Método: assertEquals("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 803 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier.N").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 806 Método: assertEquals("com.github.javaparser.ast.observer.Observable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 809 Método: assertEquals("com.github.javaparser.ast.visitor.Visitable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 812 Método: assertEquals("com.github.javaparser.resolution.Resolvable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 815 Método: assertEquals("java.lang.Cloneable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 818 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java linha: 820 Método: assertTrue(ancestors.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 60 Método: assertFalse(annotation.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 68 Método: assertFalse(annotation.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 76 Método: assertEquals(Collections.singleton("InnerAnnotation"), annotation.internalTypes().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 86 Método: assertEquals("value", symbolReference.getCorrespondingDeclaration().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 94 Método: assertEquals(Collections.singleton("FIELD_DECLARATION"), annotation.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 103 Método: assertEquals("WithField", annotation.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 111 Método: assertFalse(annotation.isInheritable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java linha: 119 Método: assertTrue(annotation.isInheritable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 51 Método: assertEquals(false, modifier.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 57 Método: assertEquals(false, modifier.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 63 Método: assertEquals(true, modifier.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 69 Método: assertEquals(false, modifier.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 75 Método: assertEquals(true, modifier.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 81 Método: assertEquals(modifier, modifier.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 86 Método: assertThrows(UnsupportedOperationException.class, () -> {
    ReflectionEnumDeclaration modifier = (ReflectionEnumDeclaration) typeSolver.solveType("com.github.javaparser.symbolsolver.reflectionmodel.MyModifier");
    modifier.asClass();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 94 Método: assertThrows(UnsupportedOperationException.class, () -> {
    ReflectionEnumDeclaration modifier = (ReflectionEnumDeclaration) typeSolver.solveType("com.github.javaparser.symbolsolver.reflectionmodel.MyModifier");
    modifier.asInterface();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 103 Método: assertEquals(modifier, modifier.asEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 109 Método: assertEquals("com.github.javaparser.symbolsolver.reflectionmodel", modifier.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 115 Método: assertEquals("MyModifier", modifier.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 121 Método: assertEquals("com.github.javaparser.symbolsolver.reflectionmodel.MyModifier", modifier.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java linha: 127 Método: assertEquals(Collections.emptySet(), modifier.internalTypes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java linha: 48 Método: assertEquals("arg0", equals.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java linha: 49 Método: assertEquals("arg0", containsAll.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java linha: 50 Método: assertEquals("arg0", subList.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java linha: 51 Método: assertEquals("arg1", subList.getParam(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java linha: 68 Método: assertEquals("arg0", myMethod.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java linha: 69 Método: assertEquals("arg1", myMethod.getParam(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionFieldDeclarationTest.java linha: 41 Método: assertTrue(rcd.getField("value").isVolatile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/reflectionmodel/ReflectionFieldDeclarationTest.java linha: 47 Método: assertFalse(rcd.getField("serialVersionUID").isVolatile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 86 Método: assertEquals(3, methodCallExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 141 Método: assertEquals("int", resolvedReturnType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 145 Método: assertEquals(1, parameters.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 148 Método: assertEquals("K", parameter.getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 149 Método: assertEquals("key", parameter.getName().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 151 Método: assertEquals("K", parameter.resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 152 Método: assertEquals("K", parameter.resolve().describeType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 157 Método: assertEquals(3, methodCalls.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 161 Método: assertTrue(object_hashCode.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 163 Método: assertEquals("java.lang.Object", object_hashCode_scope.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 165 Método: assertEquals("int", object_hashCode.resolve().getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 166 Método: assertEquals("int", object_hashCode.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 170 Método: assertTrue(key_hashCode.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 172 Método: assertEquals("K", key_hashCode_scope.calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2044Test.java linha: 215 Método: assertEquals("int", key_hashCode.resolve().getReturnType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3159Test.java linha: 56 Método: assertTrue(v.isVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1364Test.java linha: 86 Método: assertTrue(parseResult.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1364Test.java linha: 87 Método: assertTrue(parseResult.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1364Test.java linha: 89 Método: assertEquals(1, methodCallExprs.size())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1364Test.java linha: 92 Método: fail("An UnsolvedSymbolException should be thrown")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1364Test.java linha: 83 Método: assertTimeoutPreemptively(Duration.ofMillis(1000L), () -> {
    String code = String.join(System.lineSeparator(), "package graph;", "public class Vertex {", "    public static void main(String[] args) {", "        System.out.println();", "    }", "}");
    ParseResult<CompilationUnit> parseResult = javaParser.parse(ParseStart.COMPILATION_UNIT, Providers.provider(code));
    assertTrue(parseResult.isSuccessful());
    assertTrue(parseResult.getResult().isPresent());
    List<MethodCallExpr> methodCallExprs = parseResult.getResult().get().findAll(MethodCallExpr.class);
    assertEquals(1, methodCallExprs.size());
    try {
        methodCallExprs.get(0).calculateResolvedType();
        fail("An UnsolvedSymbolException should be thrown");
    } catch (UnsolvedSymbolException ignored) {
    }
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1668Test.java linha: 62 Método: assertTrue(parseResult.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1668Test.java linha: 63 Método: assertTrue(parseResult.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1668Test.java linha: 70 Método: assertEquals("java.lang.String[]", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1668Test.java linha: 72 Método: assertEquals("java.lang.String[]", resolve.getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 35 Método: assertNotNull(firstCache)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 38 Método: assertNotNull(secondCache)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 39 Método: assertNotEquals(firstCache, secondCache)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 44 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 46 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 51 Método: assertFalse(cache.get("key").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 56 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 58 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 63 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 65 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 70 Método: assertFalse(cache.contains("key"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 75 Método: assertEquals(0, cache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/NoCacheTest.java linha: 80 Método: assertTrue(cache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 42 Método: assertTrue(memoryCache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 43 Método: assertFalse(memoryCache.contains("key"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 46 Método: assertFalse(memoryCache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 47 Método: assertTrue(memoryCache.contains("key"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 58 Método: assertFalse(memoryCache.get(key).isPresent(), "No value expected at the moment")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 62 Método: assertTrue(cachedValue.isPresent(), "No value expected at the moment")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 63 Método: assertEquals(value, cachedValue.get(), "The values seem to be different")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 66 Método: assertFalse(memoryCache.get(key).isPresent(), "No value expected at the moment")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 81 Método: assertEquals(3, memoryCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 82 Método: assertTrue(memoryCache.contains(key1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 83 Método: assertTrue(memoryCache.contains(key2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 84 Método: assertTrue(memoryCache.contains(key3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 88 Método: assertEquals(2, memoryCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 89 Método: assertTrue(memoryCache.contains(key1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 90 Método: assertFalse(memoryCache.contains(key2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 91 Método: assertTrue(memoryCache.contains(key3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 95 Método: assertEquals(1, memoryCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 96 Método: assertTrue(memoryCache.contains(key1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 97 Método: assertFalse(memoryCache.contains(key3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 101 Método: assertEquals(0, memoryCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 102 Método: assertFalse(memoryCache.contains(key2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 111 Método: assertFalse(memoryCache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 113 Método: assertTrue(memoryCache.isEmpty())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 120 Método: assertFalse(memoryCache.contains(key), "At this moment, the key should not exists.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 122 Método: assertTrue(memoryCache.contains(key), "At this moment, the key should be registered.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 124 Método: assertFalse(memoryCache.contains(key), "At this moment, the key should not exists.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 131 Método: assertTrue(memoryCache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 134 Método: assertFalse(memoryCache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/InMemoryCacheTest.java linha: 137 Método: assertTrue(memoryCache.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 46 Método: assertThrows(NullPointerException.class, () -> new GuavaCache<String, String>(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 51 Método: assertTrue(adapter.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 52 Método: assertFalse(adapter.contains("key"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 55 Método: assertFalse(adapter.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 56 Método: assertTrue(adapter.contains("key"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 67 Método: assertFalse(adapter.get(key).isPresent(), "No value expected at the moment")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 71 Método: assertTrue(cachedValue.isPresent(), "No value expected at the moment")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 72 Método: assertEquals(value, cachedValue.get(), "The values seem to be different")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 75 Método: assertFalse(adapter.get(key).isPresent(), "No value expected at the moment")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 90 Método: assertEquals(3, adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 91 Método: assertTrue(adapter.contains(key1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 92 Método: assertTrue(adapter.contains(key2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 93 Método: assertTrue(adapter.contains(key3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 97 Método: assertEquals(2, adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 98 Método: assertTrue(adapter.contains(key1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 99 Método: assertFalse(adapter.contains(key2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 100 Método: assertTrue(adapter.contains(key3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 104 Método: assertEquals(1, adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 105 Método: assertTrue(adapter.contains(key1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 106 Método: assertFalse(adapter.contains(key3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 110 Método: assertEquals(0, adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 111 Método: assertFalse(adapter.contains(key2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 120 Método: assertFalse(adapter.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 122 Método: assertTrue(adapter.isEmpty())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 129 Método: assertFalse(adapter.contains(key), "At this moment, the key should not exists.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 131 Método: assertTrue(adapter.contains(key), "At this moment, the key should be registered.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 133 Método: assertFalse(adapter.contains(key), "At this moment, the key should not exists.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 140 Método: assertEquals(0, guavaCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 141 Método: assertEquals(guavaCache.size(), adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 144 Método: assertEquals(1, guavaCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 145 Método: assertEquals(guavaCache.size(), adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 148 Método: assertEquals(0, guavaCache.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 149 Método: assertEquals(guavaCache.size(), adapter.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 156 Método: assertTrue(adapter.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 159 Método: assertFalse(adapter.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/cache/GuavaCacheAdapterTest.java linha: 162 Método: assertTrue(adapter.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue347Test.java linha: 62 Método: assertTrue(fieldType.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue347Test.java linha: 63 Método: assertTrue(fieldType.asReferenceType().getTypeDeclaration().get().isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue347Test.java linha: 64 Método: assertEquals("foo.bar.Foo", fieldType.asReferenceType().getQualifiedName())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2035Test.java linha: 92 Método: Assertions.fail("Resolution failed.", e)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2035Test.java linha: 133 Método: Assertions.fail("Resolution failed.", e)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2035Test.java linha: 173 Método: Assertions.fail("Resolution failed.", e)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3866Test.java linha: 67 Método: assertEquals("MyActivity.MyTimestamps", type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1868Test.java linha: 69 Método: assertEquals("toArray(new String[0]) resolved to A.toArray", String.format("%s resolved to %s", mces.get(0), mces.get(0).resolve().getQualifiedName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1868Test.java linha: 70 Método: assertEquals("b.toArray(new String[0]) resolved to B.toArray", String.format("%s resolved to %s", mces.get(1), mces.get(1).resolve().getQualifiedName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3272Test.java linha: 53 Método: assertEquals("java.util.function.Consumer<java.lang.Integer>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3272Test.java linha: 75 Método: assertEquals("java.util.function.Consumer<java.lang.Integer>", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1480Test.java linha: 53 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    mce.resolve().getQualifiedName();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1769Test.java linha: 56 Método: assertEquals("foo.OtherClass.InnerClass", t.resolve().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1769Test.java linha: 80 Método: assertEquals("foo.OtherClass.InnerClass", oce.calculateResolvedType().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1769Test.java linha: 83 Método: assertEquals("foo.OtherClass.InnerClass.InnerClass", oce.resolve().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue3918Test.java linha: 68 Método: assertEquals("java.util.Iterator<java.lang.Object>", resolvedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue200Test.java linha: 49 Método: assertEquals("java.util.stream.Stream<JavaTest.Solved>", javaParserFacade.getType((nodesByType.get(0)).getExpression().get()).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue156Test.java linha: 49 Método: assertEquals("char", javaParserFacade.getType(methods.get(0)).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2995Test.java linha: 53 Método: assertEquals("new Inner1().new Inner2()", exprs.get(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2995Test.java linha: 54 Método: assertEquals("MyClass.Inner1.Inner2", exprs.get(0).getType().resolve().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2995Test.java linha: 55 Método: assertEquals("new Inner1()", exprs.get(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2995Test.java linha: 56 Método: assertEquals("MyClass.Inner1", exprs.get(1).getType().resolve().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue113Test.java linha: 71 Método: assertEquals("com.foo.base.Widget", superClass.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2289Test.java linha: 66 Método: assertEquals("Test.InnerClass.InnerClass(int, int)", exprs.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2289Test.java linha: 67 Método: assertEquals("Test.InnerClass.InnerClass(int, int...)", exprs.get(1).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue343Test.java linha: 62 Método: assertTrue(symbolSolver.classToResolvedType(String.class).equals(getExpressionType(typeResolver, new StringLiteralExpr(""))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue343Test.java linha: 67 Método: assertEquals(symbolSolver.classToResolvedType(int.class), getExpressionType(typeResolver, new IntegerLiteralExpr(2)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue343Test.java linha: 72 Método: assertThrows(UnsolvedSymbolException.class, () -> getExpressionType(typeResolver, parseExpression("new Double[]{2.0d, 3.0d}[1]")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue343Test.java linha: 78 Método: assertThrows(UnsolvedSymbolException.class, () -> getExpressionType(typeResolver, parseExpression("new Float[]{2.0d, 3.0d}[1]")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue343Test.java linha: 83 Método: assertTrue(symbolSolver.classToResolvedType(int.class).equals(getExpressionType(typeResolver, new MethodCallExpr(new StringLiteralExpr("hello"), "length"))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue343Test.java linha: 88 Método: assertThrows(IllegalStateException.class, () -> getExpressionType(typeResolver, new FieldAccessExpr(new NameExpr("Locale"), "US")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue116Test.java linha: 50 Método: assertEquals("java.lang.String[]", type.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue116Test.java linha: 54 Método: assertEquals("java.lang.String[]", javaParserFacade.getType(argRef).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1599Test.java linha: 65 Método: assertEquals("void", mce.get(0).calculateResolvedType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1599Test.java linha: 66 Método: assertThrows(RuntimeException.class, () -> mce.get(1).calculateResolvedType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2987Test.java linha: 51 Método: assertEquals("java.lang.String.length()", expr.resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/FindingAllFieldsTest.java linha: 46 Método: assertEquals(3, typeDeclaration.getAllFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/FindingAllFieldsTest.java linha: 47 Método: assertEquals(ImmutableSet.of("a", "b", "c"), typeDeclaration.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/FindingAllFieldsTest.java linha: 56 Método: assertEquals(3, typeDeclaration.getAllFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/FindingAllFieldsTest.java linha: 57 Método: assertEquals(ImmutableSet.of("a", "b", "c"), typeDeclaration.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/FindingAllFieldsTest.java linha: 59 Método: assertEquals("java.util.List<java.lang.String>", typeDeclaration.getField("b").getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue228Test.java linha: 50 Método: assertEquals("long", solvedCall.getParamType(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2367Test.java linha: 59 Método: assertEquals("double", resolvedValueDeclaration.getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1526Test.java linha: 58 Método: assertDoesNotThrow(() -> {
    doTest(root, file);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1526Test.java linha: 68 Método: assertThrows(UnsolvedSymbolException.class, () -> {
    doTest(root, file);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue1827Test.java linha: 66 Método: assertDoesNotThrow(() -> oce.resolve())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue241Test.java linha: 60 Método: assertEquals("issue241.TypeWithMemberType.MemberInterface", typeName)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2083Test.java linha: 54 Método: assertEquals("Simple.IndentType", fd.resolve().getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2065Test.java linha: 55 Método: assertEquals("java.lang.Math.max(int, int)", expr.resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2406Test.java linha: 73 Método: assertEquals("Main.copyOf(U[], int, java.lang.Class<? extends T[]>)", mces.get(0).resolve().getQualifiedSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2951Test.java linha: 58 Método: assertTrue(optionalMethod.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2951Test.java linha: 62 Método: assertTrue(paramType.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2951Test.java linha: 66 Método: assertTrue(type instanceof ResolvedArrayType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2951Test.java linha: 97 Método: assertEquals("foo.A.get(java.util.List<byte[]>)", methodSig)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 45 Método: assertNotNull(symbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 46 Método: assertNotNull(symbol.getDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 47 Método: assertTrue(symbol.getDeclaration().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 54 Método: assertNotNull(symbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 55 Método: assertNotNull(symbol.getDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 56 Método: assertFalse(symbol.getDeclaration().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 65 Método: assertNotNull(adaptedSymbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 66 Método: assertNotNull(adaptedSymbol.getDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 67 Método: assertTrue(adaptedSymbol.getDeclaration().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 76 Método: assertNotNull(adaptedSymbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 77 Método: assertNotNull(adaptedSymbol.getDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 78 Método: assertFalse(adaptedSymbol.getDeclaration().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 87 Método: assertNotNull(adaptedSymbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 88 Método: assertNotNull(adaptedSymbol.getDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 89 Método: assertTrue(adaptedSymbol.getDeclaration().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 97 Método: assertNotNull(symbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 98 Método: assertTrue(symbol.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 99 Método: assertEquals(resolvedDeclaration, symbol.getCorrespondingDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 106 Método: assertNotNull(symbol)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 107 Método: assertFalse(symbol.isSolved())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/resolution/SymbolReferenceTest.java linha: 108 Método: assertThrows(UnsolvedSymbolException.class, symbol::getCorrespondingDeclaration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 65 Método: assertEquals(false, ResolvedVoidType.INSTANCE.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 70 Método: assertEquals(false, ResolvedVoidType.INSTANCE.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 75 Método: assertEquals(false, ResolvedVoidType.INSTANCE.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 80 Método: assertEquals(false, ResolvedVoidType.INSTANCE.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 85 Método: assertEquals(false, ResolvedVoidType.INSTANCE.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 90 Método: assertEquals(true, ResolvedVoidType.INSTANCE.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 95 Método: assertEquals(false, ResolvedVoidType.INSTANCE.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 100 Método: assertThrows(UnsupportedOperationException.class, () -> ResolvedVoidType.INSTANCE.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 105 Método: assertThrows(UnsupportedOperationException.class, () -> ResolvedVoidType.INSTANCE.asTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 110 Método: assertThrows(UnsupportedOperationException.class, () -> ResolvedVoidType.INSTANCE.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 115 Método: assertEquals("void", ResolvedVoidType.INSTANCE.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 120 Método: assertFalse(ResolvedVoidType.INSTANCE.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 121 Método: assertFalse(ResolvedVoidType.INSTANCE.isAssignableBy(OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 122 Método: assertFalse(ResolvedVoidType.INSTANCE.isAssignableBy(STRING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 123 Método: assertFalse(ResolvedVoidType.INSTANCE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java linha: 124 Método: assertFalse(ResolvedVoidType.INSTANCE.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/TypeVariableUsageTest.java linha: 53 Método: assertEquals(false, tpString.isAssignableBy(tpA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 65 Método: assertEquals(false, NullType.INSTANCE.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 70 Método: assertEquals(false, NullType.INSTANCE.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 75 Método: assertEquals(true, NullType.INSTANCE.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 80 Método: assertEquals(true, NullType.INSTANCE.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 85 Método: assertEquals(false, NullType.INSTANCE.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 90 Método: assertEquals(false, NullType.INSTANCE.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 95 Método: assertEquals(false, NullType.INSTANCE.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 100 Método: assertThrows(UnsupportedOperationException.class, () -> NullType.INSTANCE.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 105 Método: assertThrows(UnsupportedOperationException.class, () -> NullType.INSTANCE.asTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 110 Método: assertThrows(UnsupportedOperationException.class, () -> NullType.INSTANCE.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 115 Método: assertEquals("null", NullType.INSTANCE.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 121 Método: assertEquals(false, NullType.INSTANCE.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 122 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 127 Método: assertEquals(false, NullType.INSTANCE.isAssignableBy(OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 128 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 133 Método: assertEquals(false, NullType.INSTANCE.isAssignableBy(STRING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 134 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 139 Método: assertEquals(false, NullType.INSTANCE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 140 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 145 Método: assertEquals(false, NullType.INSTANCE.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java linha: 146 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 117 Método: assertEquals(1, ref1.typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 118 Método: assertEquals(true, ref1.typeParametersValues().get(0).isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 119 Método: assertEquals("E", ref1.typeParametersValues().get(0).asTypeParameter().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 124 Método: assertEquals(false, object.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 125 Método: assertEquals(false, string.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 126 Método: assertEquals(false, listOfA.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 127 Método: assertEquals(false, listOfStrings.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 132 Método: assertEquals(false, object.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 133 Método: assertEquals(false, string.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 134 Método: assertEquals(false, listOfA.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 135 Método: assertEquals(false, listOfStrings.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 140 Método: assertEquals(false, object.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 141 Método: assertEquals(false, string.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 142 Método: assertEquals(false, listOfA.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 143 Método: assertEquals(false, listOfStrings.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 148 Método: assertEquals(true, object.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 149 Método: assertEquals(true, string.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 150 Método: assertEquals(true, listOfA.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 151 Método: assertEquals(true, listOfStrings.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 156 Método: assertEquals(true, object.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 157 Método: assertEquals(true, string.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 158 Método: assertEquals(true, listOfA.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 159 Método: assertEquals(true, listOfStrings.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 164 Método: assertEquals(false, object.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 165 Método: assertEquals(false, string.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 166 Método: assertEquals(false, listOfA.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 167 Método: assertEquals(false, listOfStrings.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 172 Método: assertEquals(false, object.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 173 Método: assertEquals(false, string.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 174 Método: assertEquals(false, listOfA.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 175 Método: assertEquals(false, listOfStrings.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 180 Método: assertTrue(object == object.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 181 Método: assertTrue(string == string.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 182 Método: assertTrue(listOfA == listOfA.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 183 Método: assertTrue(listOfStrings == listOfStrings.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 188 Método: assertThrows(UnsupportedOperationException.class, () -> object.asTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 193 Método: assertThrows(UnsupportedOperationException.class, () -> object.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 198 Método: assertEquals("java.lang.Object", object.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 199 Método: assertEquals("java.lang.String", string.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 200 Método: assertEquals("java.util.List<A>", listOfA.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 201 Método: assertEquals("java.util.List<java.lang.String>", listOfStrings.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 207 Método: assertTrue(object == object.replaceTypeVariables(tpA, object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 208 Método: assertTrue(string == string.replaceTypeVariables(tpA, object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 209 Método: assertEquals(listOfStrings, listOfStrings.replaceTypeVariables(tpA, object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 210 Método: assertEquals(listOfStrings, listOfA.replaceTypeVariables(tpA, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 215 Método: assertEquals(true, object.isAssignableBy(string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 216 Método: assertEquals(false, string.isAssignableBy(object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 217 Método: assertEquals(false, listOfStrings.isAssignableBy(listOfA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 218 Método: assertEquals(false, listOfA.isAssignableBy(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 220 Método: assertEquals(false, object.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 221 Método: assertEquals(false, string.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 222 Método: assertEquals(false, listOfStrings.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 223 Método: assertEquals(false, listOfA.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 225 Método: assertEquals(true, object.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 226 Método: assertEquals(true, string.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 227 Método: assertEquals(true, listOfStrings.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 228 Método: assertEquals(true, listOfA.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 243 Método: assertEquals(true, numberType.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 244 Método: assertEquals(true, numberType.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 245 Método: assertEquals(true, numberType.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 246 Método: assertEquals(true, numberType.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 247 Método: assertEquals(true, numberType.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 248 Método: assertEquals(false, numberType.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 249 Método: assertEquals(true, intType.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 250 Método: assertEquals(true, doubleType.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 251 Método: assertEquals(true, byteType.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 252 Método: assertEquals(true, shortType.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 253 Método: assertEquals(true, charType.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 254 Método: assertEquals(true, longType.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 255 Método: assertEquals(true, booleanType.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 256 Método: assertEquals(true, floatType.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 298 Método: assertEquals(true, intType.isCorrespondingBoxingType(ResolvedPrimitiveType.INT.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 299 Método: assertEquals(true, doubleType.isCorrespondingBoxingType(ResolvedPrimitiveType.DOUBLE.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 300 Método: assertEquals(true, byteType.isCorrespondingBoxingType(ResolvedPrimitiveType.BYTE.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 301 Método: assertEquals(true, shortType.isCorrespondingBoxingType(ResolvedPrimitiveType.SHORT.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 302 Método: assertEquals(true, charType.isCorrespondingBoxingType(ResolvedPrimitiveType.CHAR.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 303 Método: assertEquals(true, longType.isCorrespondingBoxingType(ResolvedPrimitiveType.LONG.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 304 Método: assertEquals(true, booleanType.isCorrespondingBoxingType(ResolvedPrimitiveType.BOOLEAN.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 305 Método: assertEquals(true, floatType.isCorrespondingBoxingType(ResolvedPrimitiveType.FLOAT.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 307 Método: assertEquals(false, numberType.isCorrespondingBoxingType(ResolvedPrimitiveType.INT.describe()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 309 Método: assertThrows(IllegalArgumentException.class, () -> {
    intType.isCorrespondingBoxingType("String");
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 316 Método: assertEquals(false, listOfStrings.isAssignableBy(listOfWildcardExtendsString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 317 Método: assertEquals(false, listOfStrings.isAssignableBy(listOfWildcardExtendsString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 318 Método: assertEquals(true, listOfWildcardExtendsString.isAssignableBy(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 319 Método: assertEquals(false, listOfWildcardExtendsString.isAssignableBy(listOfWildcardSuperString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 320 Método: assertEquals(true, listOfWildcardSuperString.isAssignableBy(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 321 Método: assertEquals(false, listOfWildcardSuperString.isAssignableBy(listOfWildcardExtendsString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 326 Método: assertEquals(true, collectionOfString.isAssignableBy(collectionOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 327 Método: assertEquals(true, collectionOfString.isAssignableBy(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 328 Método: assertEquals(true, collectionOfString.isAssignableBy(linkedListOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 330 Método: assertEquals(false, listOfStrings.isAssignableBy(collectionOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 331 Método: assertEquals(true, listOfStrings.isAssignableBy(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 332 Método: assertEquals(true, listOfStrings.isAssignableBy(linkedListOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 334 Método: assertEquals(false, linkedListOfString.isAssignableBy(collectionOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 335 Método: assertEquals(false, linkedListOfString.isAssignableBy(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 336 Método: assertEquals(true, linkedListOfString.isAssignableBy(linkedListOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 341 Método: assertEquals(true, ioException.isAssignableBy(unionWithIOExceptionAsCommonAncestor))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 342 Método: assertEquals(false, ioException.isAssignableBy(unionWithThrowableAsCommonAncestor))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 347 Método: assertThat(linkedListOfString.getAllAncestors(), hasItem(object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 348 Método: assertThat(linkedListOfString.getAllAncestors(), hasItem(listOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 349 Método: assertThat(linkedListOfString.getAllAncestors(), hasItem(collectionOfString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 350 Método: assertThat(linkedListOfString.getAllAncestors(), not(hasItem(listOfA)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 376 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 386 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(ResolvedWildcard.extendsBound(foo), bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 396 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, ResolvedWildcard.extendsBound(bar))).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 406 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(ResolvedWildcard.extendsBound(foo), ResolvedWildcard.extendsBound(foo))).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 422 Método: assertEquals(true, left.isAssignableBy(right))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 438 Método: assertEquals(true, left.isAssignableBy(right))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 441 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(string, string, string)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(string, string))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 451 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(bar, string, foo)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 461 Método: assertEquals(true, new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(foo, string, bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 471 Método: assertEquals(false, new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(bar, string, foo)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 481 Método: assertEquals(false, new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(bar, string, foo)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 491 Método: assertEquals(false, new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(foo, object, bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 506 Método: assertEquals(false, charSequence.isAssignableBy(object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 507 Método: assertEquals(true, object.isAssignableBy(charSequence))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 520 Método: assertEquals(true, ref.getFieldType("elements").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 521 Método: assertEquals(true, ref.getFieldType("elements").get().isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 522 Método: assertEquals(List.class.getCanonicalName(), ref.getFieldType("elements").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 523 Método: assertEquals(1, ref.getFieldType("elements").get().asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 524 Método: assertEquals(true, ref.getFieldType("elements").get().asReferenceType().typeParametersValues().get(0).isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 525 Método: assertEquals("A", ref.getFieldType("elements").get().asReferenceType().typeParametersValues().get(0).asTypeParameter().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 530 Método: assertEquals(true, ref.getFieldType("elements").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 531 Método: assertEquals(true, ref.getFieldType("elements").get().isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 532 Método: assertEquals(List.class.getCanonicalName(), ref.getFieldType("elements").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 533 Método: assertEquals(1, ref.getFieldType("elements").get().asReferenceType().typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 534 Método: assertEquals(true, ref.getFieldType("elements").get().asReferenceType().typeParametersValues().get(0).isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 535 Método: assertEquals(String.class.getCanonicalName(), ref.getFieldType("elements").get().asReferenceType().typeParametersValues().get(0).asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 548 Método: assertEquals(false, ref.getFieldType("bar").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 553 Método: assertEquals(false, ref.getFieldType("bar").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 567 Método: assertEquals(Optional.of(string), arrayListOfString.typeParamValue(arraylist.getTypeParameters().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 568 Método: assertEquals(Optional.of(string), arrayListOfString.typeParamValue(abstractList.getTypeParameters().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 569 Método: assertEquals(Optional.of(string), arrayListOfString.typeParamValue(abstractCollection.getTypeParameters().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 570 Método: assertEquals(Optional.of(string), arrayListOfString.typeParamValue(list.getTypeParameters().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 571 Método: assertEquals(Optional.of(string), arrayListOfString.typeParamValue(collection.getTypeParameters().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 572 Método: assertEquals(Optional.of(string), arrayListOfString.typeParamValue(iterable.getTypeParameters().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 583 Método: assertEquals(9, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 586 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(RandomAccess.class, typeResolver)), ancestors.get("java.util.RandomAccess"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 587 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(tv)), ancestors.get("java.util.AbstractCollection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 588 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(tv)), ancestors.get("java.util.List"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 589 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Cloneable.class, typeResolver)), ancestors.get("java.lang.Cloneable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 590 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(tv)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 591 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractList.class, typeResolver), ImmutableList.of(tv)), ancestors.get("java.util.AbstractList"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 592 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)), ancestors.get("java.lang.Object"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 593 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(tv)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 594 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Serializable.class, typeResolver)), ancestors.get("java.io.Serializable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 606 Método: assertEquals(2, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 608 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 609 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 621 Método: assertEquals(3, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 623 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 624 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)), ancestors.get("java.lang.Object"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 625 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 637 Método: assertEquals(5, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 639 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.AbstractCollection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 640 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.List"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 641 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 642 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)), ancestors.get("java.lang.Object"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 643 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 655 Método: assertEquals(9, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 657 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(RandomAccess.class, typeResolver)), ancestors.get("java.util.RandomAccess"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 658 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.AbstractCollection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 659 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.List"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 660 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Cloneable.class, typeResolver)), ancestors.get("java.lang.Cloneable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 661 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.Collection"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 662 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractList.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.util.AbstractList"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 663 Método: assertEquals(new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)), ancestors.get("java.lang.Object"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 664 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)), ancestors.get("java.lang.Iterable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 665 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Serializable.class, typeResolver)), ancestors.get("java.io.Serializable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 672 Método: assertEquals(1, stream.typeParametersValues().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 673 Método: assertEquals(new ResolvedTypeVariable(new ReflectionInterfaceDeclaration(Stream.class, typeResolver).getTypeParameters().get(0)), stream.typeParametersValues().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 691 Método: assertEquals("java.util.stream.Stream<java.lang.String>", streamReplaced.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 709 Método: assertEquals("java.util.stream.Stream<java.lang.String>", streamReplaced.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 714 Método: assertEquals(0, object.getDirectAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 722 Método: assertEquals(0, iterableOfString.getDirectAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 727 Método: assertEquals(1, collectionOfString.getDirectAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 729 Método: assertEquals("java.lang.Iterable", ancestor1.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 730 Método: assertEquals(1, ancestor1.getTypeParametersMap().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 731 Método: assertEquals("T", ancestor1.getTypeParametersMap().get(0).a.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 732 Método: assertEquals("java.lang.String", ancestor1.getTypeParametersMap().get(0).b.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 743 Método: assertThat(ancestors, equalTo(new HashSet<>(Arrays.asList("java.lang.Object"))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 754 Método: assertEquals(new HashSet<>(), ancestors)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 765 Método: assertThat(ancestors, containsInAnyOrder("java.lang.CharSequence", "java.lang.Appendable", "java.nio.Buffer", "java.lang.Readable", "java.lang.Comparable<java.nio.CharBuffer>"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 793 Método: assertThat(ancestors, containsInAnyOrder("java.lang.CharSequence", "java.lang.Object", "java.lang.Comparable<java.lang.String>", "java.io.Serializable", "java.lang.constant.Constable", "java.lang.constant.ConstantDesc"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 785 Método: assertThat(ancestors, containsInAnyOrder("java.lang.CharSequence", "java.lang.Object", "java.lang.Comparable<java.lang.String>", "java.io.Serializable"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 820 Método: assertEquals(3, rtA.getDeclaredFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 821 Método: assertTrue(rtA.getDeclaredFields().stream().anyMatch(f -> f.getName().equals("i")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 822 Método: assertTrue(rtA.getDeclaredFields().stream().anyMatch(f -> f.getName().equals("c")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 823 Método: assertTrue(rtA.getDeclaredFields().stream().anyMatch(f -> f.getName().equals("l")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 825 Método: assertEquals(2, rtB.getDeclaredFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 826 Método: assertTrue(rtB.getDeclaredFields().stream().anyMatch(f -> f.getName().equals("f")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 827 Método: assertTrue(rtB.getDeclaredFields().stream().anyMatch(f -> f.getName().equals("b")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 846 Método: assertEquals(2, rtA.getAllFieldsVisibleToInheritors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 847 Método: assertTrue(rtA.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals("c")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 848 Método: assertTrue(rtA.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals("l")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 850 Método: assertEquals(3, rtB.getAllFieldsVisibleToInheritors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 851 Método: assertTrue(rtB.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals("c")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 852 Método: assertTrue(rtB.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals("l")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 853 Método: assertTrue(rtB.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals("b")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 861 Método: assertEquals(expected, types.get(0).erasure())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 872 Método: assertTrue(rt.asReferenceType().isRawType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 873 Método: assertTrue(erasedType.asReferenceType().typeParametersValues().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 874 Método: assertEquals(expected, erasedType.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 883 Método: assertEquals(expected, genericList.erasure().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 893 Método: assertEquals(expected, genericList.erasure().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 903 Método: assertEquals(expected, rt.erasure().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 922 Método: assertEquals(expectedA, typeA.erasure().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 923 Método: assertEquals(expectedC, typeC.erasure().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java linha: 927 Método: assertEquals(expectedErasedCType, typeC.erasure())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 72 Método: assertEquals(true, arrayOfBooleans.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 73 Método: assertEquals(true, arrayOfStrings.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 78 Método: assertEquals(false, arrayOfBooleans.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 79 Método: assertEquals(false, arrayOfStrings.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 84 Método: assertEquals(false, arrayOfBooleans.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 85 Método: assertEquals(false, arrayOfStrings.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 90 Método: assertEquals(true, arrayOfBooleans.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 91 Método: assertEquals(true, arrayOfStrings.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 96 Método: assertEquals(false, arrayOfBooleans.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 97 Método: assertEquals(false, arrayOfStrings.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 102 Método: assertEquals(false, arrayOfBooleans.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 103 Método: assertEquals(false, arrayOfStrings.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 108 Método: assertEquals(false, arrayOfBooleans.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 109 Método: assertEquals(false, arrayOfStrings.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 114 Método: assertThrows(UnsupportedOperationException.class, () -> arrayOfBooleans.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 119 Método: assertThrows(UnsupportedOperationException.class, () -> arrayOfBooleans.asTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 124 Método: assertThrows(UnsupportedOperationException.class, () -> arrayOfBooleans.asPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 129 Método: assertSame(arrayOfBooleans, arrayOfBooleans.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 130 Método: assertSame(arrayOfStrings, arrayOfStrings.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 131 Método: assertSame(arrayOfListOfA, arrayOfListOfA.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 136 Método: assertEquals("boolean[]", arrayOfBooleans.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 137 Método: assertEquals("java.lang.String[]", arrayOfStrings.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 142 Método: assertSame(arrayOfBooleans, arrayOfBooleans.replaceTypeVariables(tpA, OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 143 Método: assertSame(arrayOfStrings, arrayOfStrings.replaceTypeVariables(tpA, OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 144 Método: assertEquals(arrayOfListOfStrings, arrayOfListOfStrings.replaceTypeVariables(tpA, OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 148 Método: assertTrue(arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 149 Método: assertEquals(ImmutableList.of(OBJECT), arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).asArrayType().getComponentType().asReferenceType().typeParametersValues())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 152 Método: assertEquals(new ReflectionInterfaceDeclaration(List.class, typeSolver), arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).asArrayType().getComponentType().asReferenceType().getTypeDeclaration().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 155 Método: assertEquals(new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeSolver), ImmutableList.of(OBJECT)), arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).asArrayType().getComponentType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 159 Método: assertEquals(arrayOfListOfObjects, arrayOfListOfA.replaceTypeVariables(tpA, OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 160 Método: assertEquals(arrayOfListOfStrings, arrayOfListOfA.replaceTypeVariables(tpA, STRING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 161 Método: assertNotSame(arrayOfListOfA, arrayOfListOfA.replaceTypeVariables(tpA, OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 166 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 167 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(STRING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 168 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 169 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 171 Método: assertEquals(true, arrayOfBooleans.isAssignableBy(arrayOfBooleans))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 172 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(arrayOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 173 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(arrayOfListOfA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 174 Método: assertEquals(false, arrayOfBooleans.isAssignableBy(arrayOfListOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 175 Método: assertEquals(false, arrayOfStrings.isAssignableBy(arrayOfBooleans))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 176 Método: assertEquals(true, arrayOfStrings.isAssignableBy(arrayOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 177 Método: assertEquals(false, arrayOfStrings.isAssignableBy(arrayOfListOfA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 178 Método: assertEquals(false, arrayOfStrings.isAssignableBy(arrayOfListOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 179 Método: assertEquals(false, arrayOfListOfA.isAssignableBy(arrayOfBooleans))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 180 Método: assertEquals(false, arrayOfListOfA.isAssignableBy(arrayOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 181 Método: assertEquals(true, arrayOfListOfA.isAssignableBy(arrayOfListOfA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 182 Método: assertEquals(false, arrayOfListOfA.isAssignableBy(arrayOfListOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 183 Método: assertEquals(false, arrayOfListOfStrings.isAssignableBy(arrayOfBooleans))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 184 Método: assertEquals(false, arrayOfListOfStrings.isAssignableBy(arrayOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 185 Método: assertEquals(false, arrayOfListOfStrings.isAssignableBy(arrayOfListOfA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java linha: 186 Método: assertEquals(true, arrayOfListOfStrings.isAssignableBy(arrayOfListOfStrings))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 69 Método: assertEquals(true, foo.isAssignableBy(foo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 70 Método: assertEquals(true, foo.isAssignableBy(baz))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 71 Método: assertEquals(false, foo.isAssignableBy(bar))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 73 Método: assertEquals(true, lazyFoo.isAssignableBy(lazyFoo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 74 Método: assertEquals(true, lazyFoo.isAssignableBy(lazyBaz))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 75 Método: assertEquals(false, lazyFoo.isAssignableBy(lazyBar))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 77 Método: assertEquals(true, foo.isAssignableBy(lazyFoo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 78 Método: assertEquals(true, foo.isAssignableBy(lazyBaz))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/LazyTypeTest.java linha: 79 Método: assertEquals(false, foo.isAssignableBy(lazyBar))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 85 Método: assertEquals(false, ptu.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 92 Método: assertEquals(true, ptu.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 99 Método: assertEquals(false, ptu.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 106 Método: assertEquals(false, ptu.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 113 Método: assertEquals(false, ptu.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 120 Método: assertEquals(false, ptu.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 127 Método: assertEquals(false, ptu.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 136 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 147 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 158 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 166 Método: assertEquals("boolean", ResolvedPrimitiveType.BOOLEAN.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 167 Método: assertEquals("char", ResolvedPrimitiveType.CHAR.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 168 Método: assertEquals("byte", ResolvedPrimitiveType.BYTE.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 169 Método: assertEquals("short", ResolvedPrimitiveType.SHORT.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 170 Método: assertEquals("int", ResolvedPrimitiveType.INT.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 171 Método: assertEquals("long", ResolvedPrimitiveType.LONG.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 172 Método: assertEquals("float", ResolvedPrimitiveType.FLOAT.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 173 Método: assertEquals("double", ResolvedPrimitiveType.DOUBLE.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 178 Método: assertEquals(true, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 179 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 180 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 181 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 182 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 183 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 184 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 185 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 187 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 188 Método: assertEquals(true, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 189 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 190 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 191 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 192 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 193 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 194 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 196 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 197 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 198 Método: assertEquals(true, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 199 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 200 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 201 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 202 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 203 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 205 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 206 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 207 Método: assertEquals(true, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 208 Método: assertEquals(true, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 209 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 210 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 211 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 212 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 214 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 215 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 216 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 217 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 218 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 219 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 220 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 221 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 223 Método: assertEquals(false, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 224 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 225 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 226 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 227 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 228 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 229 Método: assertEquals(false, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 230 Método: assertEquals(false, ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 232 Método: assertEquals(false, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 233 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 234 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 235 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 236 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 237 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 238 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 239 Método: assertEquals(false, ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 241 Método: assertEquals(false, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 242 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.CHAR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 243 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.BYTE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 244 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.SHORT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 245 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.INT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 246 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.LONG))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 247 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.FLOAT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 248 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.DOUBLE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 253 Método: assertEquals(true, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 254 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 255 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 256 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 257 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 258 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 259 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 260 Método: assertEquals(false, ResolvedPrimitiveType.BOOLEAN.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 262 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 263 Método: assertEquals(true, ResolvedPrimitiveType.CHAR.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 264 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 265 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 266 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 267 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 268 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 269 Método: assertEquals(false, ResolvedPrimitiveType.CHAR.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 271 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 272 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 273 Método: assertEquals(true, ResolvedPrimitiveType.BYTE.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 274 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 275 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 276 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 277 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 278 Método: assertEquals(false, ResolvedPrimitiveType.BYTE.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 280 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 281 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 282 Método: assertEquals(true, ResolvedPrimitiveType.SHORT.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 283 Método: assertEquals(true, ResolvedPrimitiveType.SHORT.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 284 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 285 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 286 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 287 Método: assertEquals(false, ResolvedPrimitiveType.SHORT.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 289 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 290 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 291 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 292 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 293 Método: assertEquals(true, ResolvedPrimitiveType.INT.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 294 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 295 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 296 Método: assertEquals(false, ResolvedPrimitiveType.INT.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 298 Método: assertEquals(false, ResolvedPrimitiveType.LONG.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 299 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 300 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 301 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 302 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 303 Método: assertEquals(true, ResolvedPrimitiveType.LONG.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 304 Método: assertEquals(false, ResolvedPrimitiveType.LONG.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 305 Método: assertEquals(false, ResolvedPrimitiveType.LONG.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 307 Método: assertEquals(false, ResolvedPrimitiveType.FLOAT.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 308 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 309 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 310 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 311 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 312 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 313 Método: assertEquals(true, ResolvedPrimitiveType.FLOAT.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 314 Método: assertEquals(false, ResolvedPrimitiveType.FLOAT.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 316 Método: assertEquals(false, ResolvedPrimitiveType.DOUBLE.isAssignableBy(booleanBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 317 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(characterBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 318 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(byteBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 319 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(shortBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 320 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(integerBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 321 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(longBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 322 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(floatBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 323 Método: assertEquals(true, ResolvedPrimitiveType.DOUBLE.isAssignableBy(doubleBox))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 329 Método: assertEquals(false, ptu.isAssignableBy(OBJECT))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 330 Método: assertEquals(false, ptu.isAssignableBy(STRING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 331 Método: assertEquals(false, ptu.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 332 Método: assertEquals(false, ptu.isAssignableBy(ResolvedVoidType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 333 Método: assertEquals(false, ptu.isAssignableBy(arrayOfBooleans))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 334 Método: assertEquals(false, ptu.isAssignableBy(arrayOfListOfA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 340 Método: assertFalse(ResolvedPrimitiveType.BOOLEAN.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 341 Método: assertTrue(ResolvedPrimitiveType.CHAR.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 342 Método: assertTrue(ResolvedPrimitiveType.BYTE.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 343 Método: assertTrue(ResolvedPrimitiveType.SHORT.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 344 Método: assertTrue(ResolvedPrimitiveType.INT.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 345 Método: assertTrue(ResolvedPrimitiveType.LONG.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 346 Método: assertTrue(ResolvedPrimitiveType.FLOAT.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java linha: 347 Método: assertTrue(ResolvedPrimitiveType.DOUBLE.isNumeric())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 82 Método: assertEquals(false, unbounded.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 83 Método: assertEquals(false, superFoo.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 84 Método: assertEquals(false, superBar.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 85 Método: assertEquals(false, extendsFoo.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 86 Método: assertEquals(false, extendsBar.isArray())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 91 Método: assertEquals(false, unbounded.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 92 Método: assertEquals(false, superFoo.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 93 Método: assertEquals(false, superBar.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 94 Método: assertEquals(false, extendsFoo.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 95 Método: assertEquals(false, extendsBar.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 100 Método: assertEquals(false, unbounded.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 101 Método: assertEquals(false, superFoo.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 102 Método: assertEquals(false, superBar.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 103 Método: assertEquals(false, extendsFoo.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 104 Método: assertEquals(false, extendsBar.isNull())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 109 Método: assertEquals(true, unbounded.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 110 Método: assertEquals(true, superFoo.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 111 Método: assertEquals(true, superBar.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 112 Método: assertEquals(true, extendsFoo.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 113 Método: assertEquals(true, extendsBar.isReference())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 118 Método: assertEquals(false, unbounded.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 119 Método: assertEquals(false, superFoo.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 120 Método: assertEquals(false, superBar.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 121 Método: assertEquals(false, extendsFoo.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 122 Método: assertEquals(false, extendsBar.isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 127 Método: assertEquals(false, unbounded.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 128 Método: assertEquals(false, superFoo.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 129 Método: assertEquals(false, superBar.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 130 Método: assertEquals(false, extendsFoo.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 131 Método: assertEquals(false, extendsBar.isVoid())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 136 Método: assertEquals(false, unbounded.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 137 Método: assertEquals(false, superFoo.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 138 Método: assertEquals(false, superBar.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 139 Método: assertEquals(false, extendsFoo.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 140 Método: assertEquals(false, extendsBar.isTypeVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 145 Método: assertEquals(true, unbounded.isWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 146 Método: assertEquals(true, superFoo.isWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 147 Método: assertEquals(true, superBar.isWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 148 Método: assertEquals(true, extendsFoo.isWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 149 Método: assertEquals(true, extendsBar.isWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 154 Método: assertThrows(UnsupportedOperationException.class, () -> unbounded.asArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 159 Método: assertThrows(UnsupportedOperationException.class, () -> unbounded.asReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 164 Método: assertThrows(UnsupportedOperationException.class, () -> unbounded.asTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 169 Método: assertThrows(UnsupportedOperationException.class, () -> unbounded.asPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 174 Método: assertTrue(unbounded == unbounded.asWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 175 Método: assertTrue(superFoo == superFoo.asWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 176 Método: assertTrue(superBar == superBar.asWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 177 Método: assertTrue(extendsFoo == extendsFoo.asWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 178 Método: assertTrue(extendsBar == extendsBar.asWildcard())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 183 Método: assertEquals("?", unbounded.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 184 Método: assertEquals("? super com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Foo", superFoo.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 185 Método: assertEquals("? super com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Bar", superBar.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 186 Método: assertEquals("? extends com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Foo", extendsFoo.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 187 Método: assertEquals("? extends com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Bar", extendsBar.describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 194 Método: assertTrue(unbounded == unbounded.replaceTypeVariables(tpA, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 195 Método: assertTrue(superFoo == superFoo.replaceTypeVariables(tpA, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 196 Método: assertTrue(extendsFoo == extendsFoo.replaceTypeVariables(tpA, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 197 Método: assertEquals(superString, superA.replaceTypeVariables(tpA, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 198 Método: assertEquals(extendsString, extendsA.replaceTypeVariables(tpA, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 199 Método: assertTrue(superA == superA.replaceTypeVariables(tpB, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 200 Método: assertTrue(extendsA == extendsA.replaceTypeVariables(tpB, string))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 205 Método: assertEquals(false, unbounded.isAssignableBy(object))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 206 Método: assertEquals(true, object.isAssignableBy(unbounded))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 207 Método: assertEquals(false, string.isAssignableBy(unbounded))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 208 Método: assertEquals(true, superFoo.isAssignableBy(foo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 209 Método: assertEquals(false, foo.isAssignableBy(superFoo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 210 Método: assertEquals(false, extendsFoo.isAssignableBy(foo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java linha: 211 Método: assertEquals(true, foo.isAssignableBy(extendsFoo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistFieldDeclarationTest.java linha: 42 Método: assertTrue(jcd.getField("value").isVolatile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistFieldDeclarationTest.java linha: 49 Método: assertFalse(jcd.getField("serialVersionUID").isVolatile())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 56 Método: assertThat(param.describeType(), is("java.util.List"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 66 Método: assertThat(param.describeType(), is("java.util.List<java.lang.String>"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 76 Método: assertThat(param.describeType(), is("java.util.List<S>"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 86 Método: assertThat(param.describeType(), is("java.util.List<T>"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 94 Método: assertThat(method.getNumberOfSpecifiedExceptions(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 102 Método: assertThat(method.getNumberOfSpecifiedExceptions(), is(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 103 Método: assertThat(method.getSpecifiedException(0).describe(), is("java.lang.IllegalArgumentException"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java linha: 104 Método: assertThat(method.getSpecifiedException(1).describe(), is("java.io.IOException"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeDeclarationAdapterTest.java linha: 59 Método: assertEquals(expectedAncestors, resultAncestors.stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 83 Método: assertTrue(compilationUnit.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 89 Método: assertFalse(compilationUnit.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 95 Método: assertFalse(compilationUnit.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 101 Método: assertFalse(compilationUnit.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 107 Método: assertTrue(compilationUnit.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 113 Método: assertEquals(compilationUnit, compilationUnit.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 119 Método: assertEquals(compilationUnit, compilationUnit.asClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 124 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavassistClassDeclaration compilationUnit = (JavassistClassDeclaration) typeSolver.solveType("com.github.javaparser.ast.CompilationUnit");
    compilationUnit.asInterface();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 132 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavassistClassDeclaration compilationUnit = (JavassistClassDeclaration) typeSolver.solveType("com.github.javaparser.ast.CompilationUnit");
    compilationUnit.asEnum();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 141 Método: assertEquals("com.github.javaparser.ast", compilationUnit.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 147 Método: assertEquals("CompilationUnit", compilationUnit.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 153 Método: assertEquals("com.github.javaparser.ast.CompilationUnit", compilationUnit.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 159 Método: assertTrue(compilationUnit.hasDirectlyAnnotation("com.github.javaparser.test.TestAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 165 Método: assertTrue(compilationUnit.hasAnnotation("com.github.javaparser.test.TestAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 172 Método: assertEquals(6, declarationList.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 181 Método: assertTrue(fields.containsKey("genericParamObjectField"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 182 Método: assertTrue(fields.containsKey("genericPrimitiveArrayField"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 183 Método: assertTrue(fields.containsKey("genericObjectArrayField"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 184 Método: assertTrue(fields.containsKey("genericField"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 185 Método: assertTrue(fields.containsKey("primitiveField"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 186 Método: assertTrue(fields.containsKey("objectField"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 193 Método: assertEquals(12, methodsSet.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 200 Método: assertTrue(methods.containsKey("pos"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 201 Método: assertEquals(2, methods.get("pos").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 202 Método: assertTrue(methods.containsKey("withColumn"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 203 Método: assertEquals(1, methods.get("withColumn").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 204 Método: assertTrue(methods.containsKey("withLine"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 205 Método: assertEquals(1, methods.get("withLine").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 206 Método: assertTrue(methods.containsKey("valid"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 207 Método: assertEquals(0, methods.get("valid").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 208 Método: assertTrue(methods.containsKey("invalid"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 209 Método: assertEquals(0, methods.get("invalid").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 210 Método: assertTrue(methods.containsKey("orIfInvalid"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 211 Método: assertEquals(1, methods.get("orIfInvalid").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 212 Método: assertTrue(methods.containsKey("isAfter"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 213 Método: assertEquals(1, methods.get("isAfter").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 214 Método: assertTrue(methods.containsKey("isBefore"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 215 Método: assertEquals(1, methods.get("isBefore").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 216 Método: assertTrue(methods.containsKey("compareTo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 217 Método: assertEquals(1, methods.get("compareTo").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 218 Método: assertTrue(methods.containsKey("equals"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 219 Método: assertEquals(1, methods.get("equals").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 220 Método: assertTrue(methods.containsKey("hashCode"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 221 Método: assertEquals(0, methods.get("hashCode").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 222 Método: assertTrue(methods.containsKey("toString"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 223 Método: assertEquals(0, methods.get("toString").getNoParams())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 233 Método: assertEquals("com.github.javaparser.ast.Node", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 240 Método: assertFalse(objectDeclaration.getSuperClass().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 246 Método: assertEquals("com.github.javaparser.ast.Node", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 252 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 253 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException("super class unexpectedly empty")).typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 259 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllSuperClasses().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 265 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllAncestors().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 271 Método: assertEquals(ImmutableSet.of(), compilationUnit.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 274 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.DocumentableNode"), coid.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 280 Método: assertEquals(ImmutableSet.of(), compilationUnit.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 283 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.NamedNode", "com.github.javaparser.ast.body.AnnotableNode", "com.github.javaparser.ast.DocumentableNode"), coid.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 289 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllSuperClasses().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 295 Método: assertEquals(3, constructorDeclaration.getAllSuperClasses().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 296 Método: assertTrue(constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.body.BodyDeclaration")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 297 Método: assertTrue(constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("com.github.javaparser.ast.Node")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 298 Método: assertTrue(constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals("java.lang.Object")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 303 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 304 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 307 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 310 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 316 Método: assertEquals(ImmutableSet.of(), compilationUnit.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 319 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.nodeTypes.NodeWithExtends", "com.github.javaparser.ast.nodeTypes.NodeWithImplements"), coid.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 325 Método: assertEquals(7, constructorDeclaration.getInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 330 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 331 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 334 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 337 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 338 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 341 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 342 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 345 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 346 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 349 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 350 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 353 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 354 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 360 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable"), compilationUnit.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 363 Método: assertEquals(ImmutableSet.of("com.github.javaparser.ast.nodeTypes.NodeWithExtends", "com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", "java.lang.Cloneable", "com.github.javaparser.ast.nodeTypes.NodeWithImplements", "com.github.javaparser.ast.nodeTypes.NodeWithName", "com.github.javaparser.ast.nodeTypes.NodeWithModifiers", "com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", "com.github.javaparser.ast.nodeTypes.NodeWithMembers"), coid.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 376 Método: assertEquals(9, constructorDeclaration.getAllInterfaces().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 381 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 382 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 385 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 388 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 389 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 392 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 393 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 396 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 397 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 400 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 401 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 404 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 405 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 408 Método: assertEquals("java.lang.Cloneable", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 411 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", interfaze.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 412 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", interfaze.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 418 Método: assertEquals(8, constructorDeclaration.getAncestors().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 423 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 424 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 427 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 428 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 431 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 434 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 435 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 438 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 439 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 442 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 443 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 446 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 447 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 450 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 451 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 457 Método: assertEquals(ImmutableSet.of("java.lang.Cloneable", "com.github.javaparser.ast.Node", "java.lang.Object"), cu.getAllAncestors().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 466 Método: assertEquals(12, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 471 Método: assertEquals("com.github.javaparser.ast.body.BodyDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 472 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.body.BodyDeclaration.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 475 Método: assertEquals("com.github.javaparser.ast.Node", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 478 Método: assertEquals("java.lang.Object", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 481 Método: assertEquals("java.lang.Cloneable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 484 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 485 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 488 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 489 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 492 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithDeclaration", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 495 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithName", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 496 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithName.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 499 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithModifiers", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 500 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 503 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithParameters", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 504 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithParameters.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 507 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithThrowable", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 508 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 511 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt", ancestor.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 512 Método: assertEquals("com.github.javaparser.ast.body.ConstructorDeclaration", ancestor.typeParametersMap().getValueBySignature("com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T").get().asReferenceType().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 520 Método: assertTrue(cu.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 526 Método: assertFalse(cu.isAssignableBy(new LambdaArgumentTypePlaceholder(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 532 Método: assertTrue(cu.isAssignableBy(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 539 Método: assertTrue(cu.isAssignableBy(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java linha: 548 Método: assertTrue(classDeclaration.isAssignableBy(nodeWithImplements))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 76 Método: assertEquals(false, nodeWithAnnotations.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 82 Método: assertEquals(true, nodeWithAnnotations.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 88 Método: assertEquals(false, nodeWithAnnotations.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 94 Método: assertEquals(false, nodeWithAnnotations.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 100 Método: assertEquals(true, nodeWithAnnotations.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 106 Método: assertEquals(nodeWithAnnotations, nodeWithAnnotations.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 111 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavassistInterfaceDeclaration nodeWithAnnotations = (JavassistInterfaceDeclaration) typeSolver.solveType("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations");
    nodeWithAnnotations.asClass();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 120 Método: assertEquals(nodeWithAnnotations, nodeWithAnnotations.asInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 125 Método: assertThrows(UnsupportedOperationException.class, () -> {
    JavassistInterfaceDeclaration nodeWithAnnotations = (JavassistInterfaceDeclaration) typeSolver.solveType("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations");
    nodeWithAnnotations.asEnum();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 134 Método: assertEquals("com.github.javaparser.ast.nodeTypes", nodeWithAnnotations.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 140 Método: assertEquals("NodeWithAnnotations", nodeWithAnnotations.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 146 Método: assertEquals("com.github.javaparser.ast.nodeTypes.NodeWithAnnotations", nodeWithAnnotations.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 152 Método: assertTrue(compilationUnit.hasDirectlyAnnotation("com.github.javaparser.test.TestAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 158 Método: assertTrue(compilationUnit.hasAnnotation("com.github.javaparser.test.TestAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 169 Método: assertTrue(nodeWithImplements.isAssignableBy(NullType.INSTANCE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 175 Método: assertFalse(nodeWithImplements.isAssignableBy(new LambdaArgumentTypePlaceholder(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 181 Método: assertTrue(nodeWithImplements.isAssignableBy(nodeWithImplements))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 188 Método: assertFalse(nodeWithImplements.isAssignableBy(consumer))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 202 Método: assertFalse(typeB.isAssignableBy(typeA), "This should not be allowed:" + " NodeWithImplements<Object> node = new NodeWithImplements<? extends Object>()")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 204 Método: assertTrue(typeA.isAssignableBy(typeB), "This should be allowed:" + " NodeWithImplements<? extends Object> node = new NodeWithImplements<Object>()")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 226 Método: assertFalse(declarationA.isAssignableBy(declarationB), "This should not be allowed: B variable = new A()")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 227 Método: assertTrue(declarationB.isAssignableBy(declarationA), "This should be allowed: A variable = new B()")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 245 Método: assertEquals(2, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 246 Método: assertEquals("com.github.javaparser.test.GenericInterface<S>", ancestors.get(0).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 247 Método: assertEquals("java.lang.Object", ancestors.get(1).describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 251 Método: assertEquals(1, typePamatersMap.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 254 Método: assertEquals("com.github.javaparser.test.GenericInterface.T", genericTypeParameterDeclaration.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java linha: 256 Método: assertEquals("com.github.javaparser.test.GenericChildInterface.S", genericResolvedType.asTypeParameter().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 60 Método: assertEquals(false, modifier.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 66 Método: assertEquals(false, modifier.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 72 Método: assertEquals(true, modifier.isEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 78 Método: assertEquals(false, modifier.isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 84 Método: assertEquals(true, modifier.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 90 Método: assertEquals(modifier, modifier.asType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 95 Método: assertThrows(UnsupportedOperationException.class, () -> {
    ResolvedEnumDeclaration modifier = (ResolvedEnumDeclaration) typeSolver.solveType("com.github.javaparser.ast.Modifier");
    modifier.asClass();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 103 Método: assertThrows(UnsupportedOperationException.class, () -> {
    ResolvedEnumDeclaration modifier = (ResolvedEnumDeclaration) typeSolver.solveType("com.github.javaparser.ast.Modifier");
    modifier.asInterface();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 112 Método: assertEquals(modifier, modifier.asEnum())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 118 Método: assertEquals("com.github.javaparser.ast", modifier.getPackageName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 124 Método: assertEquals("Modifier", modifier.getClassName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 130 Método: assertEquals("com.github.javaparser.ast.Modifier", modifier.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 136 Método: assertTrue(compilationUnit.hasDirectlyAnnotation("com.github.javaparser.test.TestAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java linha: 142 Método: assertTrue(compilationUnit.hasAnnotation("com.github.javaparser.test.TestAnnotation"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 93 Método: assertEquals(2, ancestors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 94 Método: assertEquals(Object.class.getCanonicalName(), ancestors.get(0).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 95 Método: assertEquals(Annotation.class.getCanonicalName(), ancestors.get(1).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 110 Método: assertEquals(1, innerTypes.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 111 Método: assertEquals("com.example.Foo.Bar", innerTypes.get(0).getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 123 Método: assertFalse(fooAnnotationDeclaration.isInheritable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java linha: 136 Método: assertTrue(fooAnnotationDeclaration.isInheritable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 68 Método: assertTrue(compilationUnit.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 74 Método: assertEquals(1, typeParams.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 75 Método: assertEquals("T", typeParams.get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 78 Método: assertEquals(1, bounds.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 79 Método: assertTrue(bounds.get(0).isExtends())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 80 Método: assertEquals("com.github.javaparser.ast.Node", bounds.get(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 91 Método: assertTrue(compilationUnit.isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 97 Método: assertEquals(1, typeParams.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 98 Método: assertEquals("T", typeParams.get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 101 Método: assertEquals(2, bounds.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 102 Método: assertTrue(bounds.get(0).isExtends())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 103 Método: assertEquals("java.lang.Object", bounds.get(0).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 104 Método: assertTrue(bounds.get(1).isExtends())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java linha: 105 Método: assertEquals("javaparser.GenericClass.Foo<? extends T>", bounds.get(1).getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 56 Método: assertFalse(methodDecl.getParam(i).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 57 Método: assertNull(methodDecl.getParam(i).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 66 Método: assertEquals("begin", constructor.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 67 Método: assertTrue(constructor.getParam(0).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 68 Método: assertEquals("end", constructor.getParam(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 69 Método: assertTrue(constructor.getParam(1).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 84 Método: assertEquals("beginLine", methodDecl.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 85 Método: assertTrue(methodDecl.getParam(0).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 86 Método: assertEquals("beginColumn", methodDecl.getParam(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 87 Método: assertTrue(methodDecl.getParam(1).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 88 Método: assertEquals("endLine", methodDecl.getParam(2).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 89 Método: assertTrue(methodDecl.getParam(2).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 90 Método: assertEquals("endColumn", methodDecl.getParam(3).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 91 Método: assertTrue(methodDecl.getParam(3).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 79 Método: assertEquals("begin", methodDecl.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 80 Método: assertTrue(methodDecl.getParam(0).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 81 Método: assertEquals("end", methodDecl.getParam(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 82 Método: assertTrue(methodDecl.getParam(1).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 95 Método: assertEquals("column", methodDecl.getParam(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 96 Método: assertTrue(methodDecl.getParam(0).hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 107 Método: assertFalse(paramDecl.isField())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 115 Método: assertTrue(paramDecl.isParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 124 Método: assertFalse(paramDecl.isType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 137 Método: assertFalse(methodDecl.getParam(0).isVariadic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 138 Método: assertTrue(methodDecl.getParam(1).isVariadic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 135 Método: assertFalse(methodDecl.getParam(0).isVariadic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 149 Método: assertFalse(paramDecl.isEnumConstant())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 157 Método: assertFalse(paramDecl.isMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java linha: 166 Método: assertFalse(paramDecl.isVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedClassDeclarationTest.java linha: 37 Método: assertTrue(createValue().isClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedClassDeclarationTest.java linha: 42 Método: assertNotNull(createValue().getSuperClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedClassDeclarationTest.java linha: 47 Método: assertNotNull(createValue().getInterfaces())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedClassDeclarationTest.java linha: 52 Método: assertNotNull(createValue().getAllSuperClasses())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedClassDeclarationTest.java linha: 57 Método: assertNotNull(createValue().getAllInterfaces())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedAnnotationDeclarationTest.java linha: 35 Método: assertNotNull(createValue().getAnnotationMembers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/HasAccessSpecifierTest.java linha: 34 Método: assertNotNull(createValue().accessSpecifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/AssociableToASTTest.java linha: 72 Método: assertFalse(associableToAST.toAst().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/AssociableToASTTest.java linha: 70 Método: assertEquals(wrappedNode, associableToAST.toAst())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/AssociableToASTTest.java linha: 82 Método: assertFalse(associableToAST.toAst().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/AssociableToASTTest.java linha: 80 Método: assertEquals(wrappedNode, associableToAST.toAst(wrappedNode.get().getClass()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedParameterDeclarationTest.java linha: 36 Método: assertTrue(createValue().isParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedParameterDeclarationTest.java linha: 41 Método: assertTrue(createValue().hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 39 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asClass)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 37 Método: assertDoesNotThrow(resolvedDeclaration::asClass)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 48 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asInterface)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 46 Método: assertDoesNotThrow(resolvedDeclaration::asInterface)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 57 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asEnum)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 55 Método: assertDoesNotThrow(resolvedDeclaration::asEnum)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 66 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asTypeParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 64 Método: assertDoesNotThrow(resolvedDeclaration::asTypeParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 75 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asReferenceType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 73 Método: assertDoesNotThrow(resolvedDeclaration::asReferenceType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 80 Método: assertNotNull(createValue().getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 85 Método: assertNotNull(createValue().getId())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java linha: 90 Método: assertNotNull(createValue().containerType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclarationTest.java linha: 35 Método: assertTrue(createValue().isTypeParameter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedFieldDeclarationTest.java linha: 47 Método: assertFalse(createValue().isStatic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedFieldDeclarationTest.java linha: 48 Método: assertTrue(createStaticValue().isStatic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedFieldDeclarationTest.java linha: 53 Método: assertNotNull(createValue().declaringType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 38 Método: assertNull(resolvedDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 36 Método: assertNotNull(resolvedDeclaration.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 47 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asField)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 45 Método: assertDoesNotThrow(resolvedDeclaration::asField)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 56 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asMethod)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 54 Método: assertDoesNotThrow(resolvedDeclaration::asMethod)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 65 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 63 Método: assertDoesNotThrow(resolvedDeclaration::asParameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 74 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asPattern)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 72 Método: assertDoesNotThrow(resolvedDeclaration::asPattern)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 83 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asEnumConstant)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 81 Método: assertDoesNotThrow(resolvedDeclaration::asEnumConstant)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 92 Método: assertThrows(UnsupportedOperationException.class, resolvedDeclaration::asType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 90 Método: assertDoesNotThrow(resolvedDeclaration::asType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java linha: 104 Método: assertTrue(resolvedDeclaration instanceof AssociableToAST)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclarationTest.java linha: 36 Método: assertTrue(createValue().isReferenceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclarationTest.java linha: 41 Método: assertNotNull(createValue().getAllFields())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclarationTest.java linha: 46 Método: assertNotNull(createValue().getDeclaredMethods())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclarationTest.java linha: 51 Método: assertNotNull(createValue().getConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclarationTest.java linha: 36 Método: assertTrue(createValue().isEnumConstant())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclarationTest.java linha: 41 Método: assertNotNull(createValue().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeParametrizableTest.java linha: 36 Método: assertNotNull(createValue().getTypeParameters())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedTypeParametrizableTest.java linha: 44 Método: assertThrows(IllegalArgumentException.class, () -> typeParametrizable.findTypeParameter(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedPatternDeclarationTest.java linha: 35 Método: assertTrue(createValue().isPattern())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedPatternDeclarationTest.java linha: 40 Método: assertTrue(createValue().hasName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedEnumDeclarationTest.java linha: 35 Método: assertTrue(createValue().isEnum())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/resolution/declarations/ResolvedValueDeclarationTest.java linha: 39 Método: assertNotNull(expectedTypeQualifiedName, resolvedDeclaration.getType().describe())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 59 Método: assertTrue(compilationUnit.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 65 Método: assertEquals(String.class.getCanonicalName(), resolved.getQualifiedName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 71 Método: assertTrue(compilationUnit.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 76 Método: assertEquals("Ljava/lang/String;", classOrInterfaceType.toDescriptor())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 22 Método: assertNotNull(reader)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 26 Método: assertNotNull(input)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 27 Método: assertNotNull(encoding)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 42 Método: assertNotNull(file)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 42 Método: assertNotNull(encoding)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 46 Método: assertNotNull(file)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 50 Método: assertNotNull(path)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 50 Método: assertNotNull(encoding)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 54 Método: assertNotNull(path)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Providers.java linha: 58 Método: assertNotNull(source)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Position.java linha: 89 Método: assertNotNull(position)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Position.java linha: 101 Método: assertNotNull(position)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-testing/src/test/test_sourcecode/javaparser_new_src/javaparser-core/com/github/javaparser/Position.java linha: 113 Método: assertNotNull(o)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 63 Método: assertEquals(cu.hashCode(), deserialized.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 74 Método: assertEquals(type.hashCode(), deserialized.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 85 Método: assertEquals(type.hashCode(), deserialized.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 96 Método: assertEquals(type.hashCode(), deserialized.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 107 Método: assertEquals(expr.hashCode(), deserialized.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 118 Método: assertEquals(type.hashCode(), deserialized.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 128 Método: assertTrue(classXDeclaration.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 131 Método: assertEquals("com.github.javaparser.ast.comments.BlockComment", comment.getClass().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 132 Método: assertEquals(" block comment ", comment.getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 135 Método: assertTrue(methodDeclaration.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 136 Método: assertEquals("com.github.javaparser.ast.comments.LineComment", methodDeclaration.getComment().get().getClass().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 137 Método: assertEquals(" line comment", methodDeclaration.getComment().get().getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 155 Método: assertTrue(methodDeclaration.getJavadoc().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 159 Método: assertEquals("param", paramBlockTag.getTagName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 160 Método: assertEquals("blub", paramBlockTag.getContent().toText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 163 Método: assertEquals("return", returnBlockTag.getTagName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 164 Método: assertEquals("true", returnBlockTag.getContent().toText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 174 Método: assertTrue(deserialized.hasRange())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 176 Método: assertEquals(1, range.begin.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 177 Método: assertEquals(1, range.begin.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 178 Método: assertEquals(26, range.end.column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 180 Método: assertTrue(deserialized.getTokenRange().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 182 Método: assertEquals("public", tokenRange.getBegin().getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 183 Método: assertEquals("", tokenRange.getEnd().getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 214 Método: assertTrue(deserialized.containsData(Node.SYMBOL_RESOLVER_KEY))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 215 Método: assertEquals(stubResolver, deserialized.getData(Node.SYMBOL_RESOLVER_KEY))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonDeserializerTest.java linha: 227 Método: assertEquals(normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY), normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-serialization/src/test/java/com/github/javaparser/serialization/JavaParserJsonSerializerTest.java linha: 44 Método: assertEquals("{\"!\":\"com.github.javaparser.ast.CompilationUnit\",\"range\":{\"beginLine\":1,\"beginColumn\":1,\"endLine\":1,\"endColumn\":23},\"tokenRange\":{\"beginToken\":{\"kind\":19,\"text\":\"class\"},\"endToken\":{\"kind\":0,\"text\":\"\"}},\"imports\":[],\"types\":[{\"!\":\"com.github.javaparser.ast.body.ClassOrInterfaceDeclaration\",\"range\":{\"beginLine\":1,\"beginColumn\":1,\"endLine\":1,\"endColumn\":23},\"tokenRange\":{\"beginToken\":{\"kind\":19,\"text\":\"class\"},\"endToken\":{\"kind\":100,\"text\":\"}\"}},\"extendedTypes\":[],\"implementedTypes\":[],\"isInterface\":\"false\",\"typeParameters\":[],\"members\":[{\"!\":\"com.github.javaparser.ast.body.FieldDeclaration\",\"range\":{\"beginLine\":1,\"beginColumn\":9,\"endLine\":1,\"endColumn\":22},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"java\"},\"endToken\":{\"kind\":103,\"text\":\";\"}},\"modifiers\":[],\"variables\":[{\"!\":\"com.github.javaparser.ast.body.VariableDeclarator\",\"range\":{\"beginLine\":1,\"beginColumn\":21,\"endLine\":1,\"endColumn\":21},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"y\"},\"endToken\":{\"kind\":94,\"text\":\"y\"}},\"name\":{\"!\":\"com.github.javaparser.ast.expr.SimpleName\",\"range\":{\"beginLine\":1,\"beginColumn\":21,\"endLine\":1,\"endColumn\":21},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"y\"},\"endToken\":{\"kind\":94,\"text\":\"y\"}},\"identifier\":\"y\"},\"type\":{\"!\":\"com.github.javaparser.ast.type.ClassOrInterfaceType\",\"range\":{\"beginLine\":1,\"beginColumn\":9,\"endLine\":1,\"endColumn\":19},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"java\"},\"endToken\":{\"kind\":94,\"text\":\"Y\"}},\"name\":{\"!\":\"com.github.javaparser.ast.expr.SimpleName\",\"range\":{\"beginLine\":1,\"beginColumn\":19,\"endLine\":1,\"endColumn\":19},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"Y\"},\"endToken\":{\"kind\":94,\"text\":\"Y\"}},\"identifier\":\"Y\"},\"scope\":{\"!\":\"com.github.javaparser.ast.type.ClassOrInterfaceType\",\"range\":{\"beginLine\":1,\"beginColumn\":9,\"endLine\":1,\"endColumn\":17},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"java\"},\"endToken\":{\"kind\":94,\"text\":\"util\"}},\"name\":{\"!\":\"com.github.javaparser.ast.expr.SimpleName\",\"range\":{\"beginLine\":1,\"beginColumn\":14,\"endLine\":1,\"endColumn\":17},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"util\"},\"endToken\":{\"kind\":94,\"text\":\"util\"}},\"identifier\":\"util\"},\"scope\":{\"!\":\"com.github.javaparser.ast.type.ClassOrInterfaceType\",\"range\":{\"beginLine\":1,\"beginColumn\":9,\"endLine\":1,\"endColumn\":12},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"java\"},\"endToken\":{\"kind\":94,\"text\":\"java\"}},\"name\":{\"!\":\"com.github.javaparser.ast.expr.SimpleName\",\"range\":{\"beginLine\":1,\"beginColumn\":9,\"endLine\":1,\"endColumn\":12},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"java\"},\"endToken\":{\"kind\":94,\"text\":\"java\"}},\"identifier\":\"java\"},\"annotations\":[]},\"annotations\":[]},\"annotations\":[]}}],\"annotations\":[]}],\"modifiers\":[],\"name\":{\"!\":\"com.github.javaparser.ast.expr.SimpleName\",\"range\":{\"beginLine\":1,\"beginColumn\":7,\"endLine\":1,\"endColumn\":7},\"tokenRange\":{\"beginToken\":{\"kind\":94,\"text\":\"X\"},\"endToken\":{\"kind\":94,\"text\":\"X\"}},\"identifier\":\"X\"},\"annotations\":[]}]}", serialized)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 36 Método: assertEquals("13" + '\u12aA' + "98", new String(read("13\\u12aA98")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 41 Método: assertEquals("13\\\\u12aA98", new String(read("13\\\\u12aA98")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 46 Método: assertEquals("13" + '\u12aA' + "98", new String(read("13\\uuuuuu12aA98")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 51 Método: assertEquals("foobar\\", new String(read("foobar\\")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 56 Método: assertEquals("foobar\\u", new String(read("foobar\\u")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 61 Método: assertEquals("foobar\\uuuuuu", new String(read("foobar\\uuuuuu")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 66 Método: assertEquals("foobar\\uA", new String(read("foobar\\uA")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 71 Método: assertEquals("foobar\\uAB", new String(read("foobar\\uAB")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 76 Método: assertEquals("foobar\\uABC", new String(read("foobar\\uABC")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 81 Método: assertEquals("foobar\uABCD", new String(read("foobar\\uABCD")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 86 Método: assertEquals("", new String(read("")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 91 Método: assertEquals("13\\ux", new String(read("13\\ux")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 96 Método: assertEquals("13\\u1x", new String(read("13\\u1x")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 101 Método: assertEquals("13\\u1Ax", new String(read("13\\u1Ax")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 106 Método: assertEquals("13\\u1ABx", new String(read("13\\u1ABx")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 111 Método: assertEquals("13\\uuuuuu1ABx", new String(read("13\\uuuuuu1ABx")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 116 Método: assertEquals("12345678\\uuxxxxxxxxxxxxxxxxxxxxxxx", new String(read("12345678\\uuxxxxxxxxxxxxxxxxxxxxxxx")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/UnicodeEscapeProcessingProviderTest.java linha: 121 Método: assertEquals("12345678\\uuxx", new String(read("12345678\\uuxx")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 58 Método: assertEquals(IDENTIFIER, moduleToken.getKind())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 65 Método: assertEquals("transitive", requiresTransitive.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 66 Método: assertEquals(IDENTIFIER, requiresTransitive.getName().getTokenRange().get().getBegin().getKind())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 90 Método: assertEquals("M.N", module.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 91 Método: assertFalse(module.isOpen())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 92 Método: assertThat(module.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 98 Método: assertThat(moduleRequiresStmt.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 99 Método: assertThat(moduleRequiresStmt.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 102 Método: assertThat(moduleExportsStmt.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 103 Método: assertThat(moduleExportsStmt.getModuleNames())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 106 Método: assertThat(moduleOpensStmt.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 107 Método: assertThat(moduleOpensStmt.getModuleNames())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 110 Método: assertThat(moduleUsesStmt.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 113 Método: assertThat(moduleProvidesStmt.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 114 Método: assertThat(moduleProvidesStmt.getWith())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 125 Método: assertEquals("M.N", module.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 126 Método: assertTrue(module.isOpen())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 149 Método: assertEquals("@Foo(1)" + SYSTEM_EOL + "@Foo(2)" + SYSTEM_EOL + "@Bar" + SYSTEM_EOL + "module M.N {" + SYSTEM_EOL + "    requires A.B;" + SYSTEM_EOL + "    requires transitive C.D;" + SYSTEM_EOL + "    requires static E.F;" + SYSTEM_EOL + "    requires static transitive G.H;" + SYSTEM_EOL + "    exports P.Q;" + SYSTEM_EOL + "    exports R.S to T1.U1, T2.U2;" + SYSTEM_EOL + "    opens P.Q;" + SYSTEM_EOL + "    opens R.S to T1.U1, T2.U2;" + SYSTEM_EOL + "    uses V.W;" + SYSTEM_EOL + "    provides X.Y with Z1.Z2, Z3.Z4;" + SYSTEM_EOL + "}" + SYSTEM_EOL, cu.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 188 Método: assertEquals("@Foo(1)" + SYSTEM_EOL + "@Foo(2)" + SYSTEM_EOL + "@Bar" + SYSTEM_EOL + "open module M.N {" + SYSTEM_EOL + "    requires A.B;" + SYSTEM_EOL + "    requires transitive C.D;" + SYSTEM_EOL + "    requires static E.F;" + SYSTEM_EOL + "    requires transitive static G.H;" + SYSTEM_EOL + "    exports P.Q;" + SYSTEM_EOL + "    exports R.S to T1.U1, T2.U2;" + SYSTEM_EOL + "    opens P.Q;" + SYSTEM_EOL + "    opens R.S to T1.U1, T2.U2;" + SYSTEM_EOL + "    uses V.W;" + SYSTEM_EOL + "    provides X.Y with Z1.Z2, Z3.Z4;" + SYSTEM_EOL + "}" + SYSTEM_EOL, ConcreteSyntaxModel.genericPrettyPrint(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 248 Método: assertTrue(moduleRequiresStmt.isTransitive())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/modules/ModuleDeclarationTest.java linha: 257 Método: assertTrue(moduleRequiresStmt.isStatic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/CommentsInserterTest.java linha: 57 Método: assertEquals(1, cc.getLineComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/CommentsInserterTest.java linha: 58 Método: assertEquals(1, cc.getJavadocComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/BaseNodeMetaModelTest.java linha: 43 Método: assertEquals("testMetaModel", test.getMetaModelFieldName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 36 Método: assertEquals("int", bert.getTypeName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 37 Método: assertEquals("int", bert.getTypeNameGenerified())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 38 Método: assertEquals("int", bert.getTypeNameForGetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 39 Método: assertEquals("int", bert.getTypeNameForSetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 45 Método: assertEquals("BodyDeclaration", bert.getTypeName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 46 Método: assertEquals("BodyDeclaration<?>", bert.getTypeNameGenerified())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 47 Método: assertEquals("Optional<NodeList<BodyDeclaration<?>>>", bert.getTypeNameForGetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 48 Método: assertEquals("NodeList<BodyDeclaration<?>>", bert.getTypeNameForSetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 54 Método: assertEquals("Modifier", bert.getTypeName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 55 Método: assertEquals("Modifier", bert.getTypeNameGenerified())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 56 Método: assertEquals("NodeList<Modifier>", bert.getTypeNameForGetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 57 Método: assertEquals("NodeList<Modifier>", bert.getTypeNameForSetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/metamodel/PropertyMetaModelTest.java linha: 63 Método: assertEquals("bertPropertyMetaModel", bert.getMetaModelFieldName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 47 Método: assertEquals("", javadoc.toText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 53 Método: assertEquals("first line" + SYSTEM_EOL + "second line" + SYSTEM_EOL, javadoc.toText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 60 Método: assertEquals("first line" + SYSTEM_EOL + "second line" + SYSTEM_EOL + SYSTEM_EOL + "@foo something useful" + SYSTEM_EOL, javadoc.toText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 66 Método: assertEquals(new JavadocComment("" + SYSTEM_EOL + "\t\t "), javadoc.toComment("\t\t"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 72 Método: assertEquals(new JavadocComment("" + SYSTEM_EOL + "\t\t * first line" + SYSTEM_EOL + "\t\t * second line" + SYSTEM_EOL + "\t\t "), javadoc.toComment("\t\t"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 79 Método: assertEquals(new JavadocComment("" + SYSTEM_EOL + "\t\t * first line" + SYSTEM_EOL + "\t\t * second line" + SYSTEM_EOL + "\t\t * " + SYSTEM_EOL + "\t\t * @foo something useful" + SYSTEM_EOL + "\t\t "), javadoc.toComment("\t\t"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 85 Método: assertEquals("first line" + SYSTEM_EOL + "second line", javadoc.getDescription().toText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 86 Método: assertEquals(2, javadoc.getBlockTags().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 105 Método: assertEquals("link", inlineTags.get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 106 Método: assertEquals(" TOFilename", inlineTags.get(0).getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 107 Método: assertEquals(LINK, inlineTags.get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 108 Método: assertEquals("link", inlineTags.get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 109 Método: assertEquals(" TOVersion", inlineTags.get(1).getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 110 Método: assertEquals(LINK, inlineTags.get(1).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 111 Método: assertEquals("systemProperty", inlineTags.get(2).getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 112 Método: assertEquals(" JAVA_HOME", inlineTags.get(2).getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 113 Método: assertEquals(SYSTEM_PROPERTY, inlineTags.get(2).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 116 Método: assertTrue(javadocText.contains("{@link TOVersion}"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 129 Método: assertEquals(2, javadoc.getBlockTags().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 136 Método: assertEquals(0, javadoc.getBlockTags().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 140 Método: assertEquals(1, javadoc.getBlockTags().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 141 Método: assertEquals(blockTag, javadoc.getBlockTags().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 143 Método: assertEquals(blockTag, javadoc.getBlockTags().remove(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 144 Método: assertEquals(0, javadoc.getBlockTags().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 151 Método: assertEquals(0, description.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 154 Método: assertTrue(description.addElement(inlineTag))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 156 Método: assertEquals(1, description.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 157 Método: assertEquals(inlineTag, description.getElements().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 159 Método: assertEquals(inlineTag, description.getElements().remove(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 160 Método: assertEquals(0, description.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 167 Método: assertEquals(3, elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 168 Método: assertEquals(new JavadocSnippet("hallo "), elements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 169 Método: assertEquals(new JavadocInlineTag("link", LINK, " Foo"), elements.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/JavadocTest.java linha: 170 Método: assertEquals(new JavadocSnippet(" welt"), elements.get(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/javadoc/description/JavadocInlineTagTest.java linha: 34 Método: assertEquals(tag, "{@foo something}")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 53 Método: assertEquals(inputText, outputText)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 55 Método: assertTrue(mapping.isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 56 Método: assertEquals(4, provider.getInputCounter().getLine())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 57 Método: assertEquals(4, provider.getOutputCounter().getLine())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 58 Método: assertSame(PositionMapping.PositionUpdate.NONE, mapping.lookup(new Position(10000, 1)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 93 Método: assertEquals(text(output), decoded)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 98 Método: assertEquals(input.size(), provider.getInputCounter().getLine())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 99 Método: assertEquals(output.size(), provider.getOutputCounter().getLine())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 113 Método: assertFalse(outFinished)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionMappingTest.java linha: 119 Método: assertEquals(inPos, transfomedOutPos, "Position mismatch at '" + outPart + "' " + outPos + " -> '" + inPart + "' " + inPos + ".")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 40 Método: assertTrue(le.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 41 Método: assertTrue(le.getOrphanComments().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 42 Método: assertEquals(0, le.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 50 Método: assertTrue(st.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 51 Método: assertTrue(st.getOrphanComments().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 52 Método: assertEquals(0, st.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 60 Método: assertTrue(st.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 61 Método: assertTrue(st.getOrphanComments().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 62 Método: assertEquals(0, st.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 71 Método: assertTrue(st.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 72 Método: assertTrue(st.getOrphanComments().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue2482Test.java linha: 73 Método: assertEquals(0, st.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 35 Método: assertEquals(p1, p1.orIfInvalid(p2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 40 Método: assertEquals(p1, invalid.orIfInvalid(p1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 41 Método: assertEquals(invalid2, invalid2.orIfInvalid(invalid))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 46 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new Position(-10, 1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 49 Método: assertEquals("Can't position at line -10", thrown1.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 51 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new Position(1, -10))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/PositionTest.java linha: 54 Método: assertEquals("Can't position at column -10", thrown2.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithThrownExceptionsBuildersTest.java linha: 40 Método: assertEquals(1, addMethod.getThrownExceptions().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithThrownExceptionsBuildersTest.java linha: 41 Método: assertTrue(addMethod.isThrown(IllegalStateException.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithThrownExceptionsBuildersTest.java linha: 43 Método: assertEquals(2, addMethod.getThrownExceptions().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithThrownExceptionsBuildersTest.java linha: 44 Método: assertEquals("Test", addMethod.getThrownException(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 45 Método: assertEquals("import com.github.javaparser.builders.NodeWithAnnotationsBuildersTest.hey;", cu.getImport(0).toString().trim())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 46 Método: assertEquals(1, testClass.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 47 Método: assertEquals(annotation, testClass.getAnnotation(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 48 Método: assertEquals(NormalAnnotationExpr.class, testClass.getAnnotation(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 54 Método: assertEquals(1, testClass.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 60 Método: assertEquals(1, testClass.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 61 Método: assertEquals("value", testClass.getAnnotation(0).asSingleMemberAnnotationExpr().getMemberValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 67 Método: assertEquals(1, testClass.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 68 Método: assertEquals("value", testClass.getAnnotation(0).asSingleMemberAnnotationExpr().getMemberValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 74 Método: assertTrue(testClass.isAnnotationPresent(hey.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 80 Método: assertEquals(annotation, testClass.getAnnotationByName("hey").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java linha: 86 Método: assertEquals(annotation, testClass.getAnnotationByClass(hey.class).get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/EnumDeclarationBuildersTest.java linha: 40 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/EnumDeclarationBuildersTest.java linha: 41 Método: assertEquals("import " + Function.class.getName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/EnumDeclarationBuildersTest.java linha: 43 Método: assertEquals(1, testEnum.getImplementedTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/EnumDeclarationBuildersTest.java linha: 44 Método: assertEquals(Function.class.getSimpleName(), testEnum.getImplementedTypes(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/EnumDeclarationBuildersTest.java linha: 51 Método: assertEquals(1, testEnum.getEntries().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/EnumDeclarationBuildersTest.java linha: 52 Método: assertEquals("MY_ENUM_CONSTANT", testEnum.getEntry(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 53 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 54 Método: assertEquals("import " + List.class.getName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 56 Método: assertEquals(1, testClass.getExtendedTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 57 Método: assertEquals(List.class.getSimpleName(), testClass.getExtendedTypes(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 64 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 65 Método: assertEquals("import " + Function.class.getName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 67 Método: assertEquals(1, testClass.getImplementedTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java linha: 68 Método: assertEquals(Function.class.getSimpleName(), testClass.getImplementedTypes(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 55 Método: assertEquals(2, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 58 Método: assertEquals(3, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 60 Método: assertEquals("import " + Map.class.getCanonicalName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 61 Método: assertEquals("import " + List.class.getCanonicalName() + ";" + SYSTEM_EOL, cu.getImport(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 62 Método: assertEquals("import static " + com.github.javaparser.StaticJavaParser.class.getCanonicalName() + ".parseImport;" + SYSTEM_EOL, cu.getImport(2).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 73 Método: assertEquals(2, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 74 Método: assertEquals("import " + $tartsWith$.class.getCanonicalName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 75 Método: assertEquals("import my.$tartsWith$;" + SYSTEM_EOL, cu.getImport(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 86 Método: assertEquals(2, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 87 Método: assertEquals("import " + F$F.class.getCanonicalName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 88 Método: assertEquals("import my.F$F;" + SYSTEM_EOL, cu.getImport(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 96 Método: assertEquals(0, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 103 Método: assertEquals(0, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 105 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 106 Método: assertEquals("import one.two.three.DoNotIgnoreImportWithinSubPackage;" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 111 Método: assertThrows(IllegalArgumentException.class, () -> cu.addImport(new Comparator<Long>() {

    @Override
    public int compare(Long o1, Long o2) {
        return o1.compareTo(o2);
    }
}.getClass()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 130 Método: assertThrows(IllegalArgumentException.class, () -> cu.addImport(localClass))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 136 Método: assertEquals(0, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 146 Método: assertEquals(2, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 147 Método: assertEquals("import my.*;" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 148 Método: assertEquals("import my.other.Import;" + SYSTEM_EOL, cu.getImport(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 150 Método: assertEquals(2, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 151 Método: assertEquals("import my.*;" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 152 Método: assertEquals("import my.other.*;" + SYSTEM_EOL, cu.getImport(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 158 Método: assertEquals(0, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 164 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 165 Método: assertEquals("import java.lang.annotation.ElementType;" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 172 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 179 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 186 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 193 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 202 Método: assertEquals(2, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 203 Método: assertEquals("com.github.javaparser.ast.CompilationUnit", cu.getImport(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 204 Método: assertEquals("java.util.List", cu.getImport(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 214 Método: assertEquals("import " + testInnerClass.class.getCanonicalName().replace("$", ".") + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 221 Método: assertEquals(1, cu.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 222 Método: assertEquals("testClass", cu.getType(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 223 Método: assertEquals(ClassOrInterfaceDeclaration.class, cu.getType(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 224 Método: assertTrue(myClassDeclaration.isPrivate())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 225 Método: assertFalse(myClassDeclaration.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 231 Método: assertEquals(1, cu.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 232 Método: assertEquals("testInterface", cu.getType(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 233 Método: assertTrue(myInterfaceDeclaration.isPublic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 234 Método: assertEquals(ClassOrInterfaceDeclaration.class, cu.getType(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 235 Método: assertTrue(myInterfaceDeclaration.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 241 Método: assertEquals(1, cu.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 242 Método: assertEquals("test", cu.getType(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 243 Método: assertTrue(myEnumDeclaration.isPublic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 244 Método: assertEquals(EnumDeclaration.class, cu.getType(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 250 Método: assertEquals(1, cu.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 251 Método: assertEquals("test", cu.getType(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 252 Método: assertTrue(myAnnotationDeclaration.isPublic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 253 Método: assertEquals(AnnotationDeclaration.class, cu.getType(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 260 Método: assertEquals(1, cu.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 261 Método: assertEquals("test", cu.getType(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 262 Método: assertTrue(myRecordDeclaration.isPublic())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 263 Método: assertTrue(myRecordDeclaration.isFinal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 264 Método: assertEquals(RecordDeclaration.class, cu.getType(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 269 Método: assertEquals(cu.addClass("test"), cu.getClassByName("test").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 274 Método: assertEquals(cu.addInterface("test"), cu.getInterfaceByName("test").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 279 Método: assertEquals(cu.addEnum("test"), cu.getEnumByName("test").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 284 Método: assertEquals(cu.addAnnotationDeclaration("test"), cu.getAnnotationDeclarationByName("test").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/CompilationUnitBuildersTest.java linha: 289 Método: assertEquals(cu.addType(new RecordDeclaration(Modifier.createModifierList(), "test")).getType(0), cu.getRecordByName("test").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 43 Método: assertEquals(1, cu.getImports().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 44 Método: assertEquals("import " + List.class.getName() + ";" + SYSTEM_EOL, cu.getImport(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 45 Método: assertEquals(2, addMethod.getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 46 Método: assertEquals("yay", addMethod.getParameter(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 47 Método: assertEquals("List", addMethod.getParameter(1).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 48 Método: assertEquals(myNewParam, addMethod.getParameter(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 55 Método: assertEquals(addAndGetParameter, addMethod.getParameterByName("yay").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 62 Método: assertEquals(addAndGetParameter, addMethod.getParameterByType("int").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithParametersBuildersTest.java linha: 63 Método: assertEquals(addAndGetParameter, addMethod.getParameterByType(int.class).get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 43 Método: assertThrows(IllegalStateException.class, () -> new FieldDeclaration().createGetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 48 Método: assertThrows(IllegalStateException.class, () -> new FieldDeclaration().createSetter())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 54 Método: assertEquals(2, testClass.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 55 Método: assertEquals(MethodDeclaration.class, testClass.getMember(1).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 57 Método: assertEquals(1, methodsWithName.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 59 Método: assertEquals("getMyField", getter.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 60 Método: assertEquals("int", getter.getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 61 Método: assertEquals(ReturnStmt.class, getter.getBody().get().getStatement(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 67 Método: assertEquals(2, testClass.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 68 Método: assertEquals(MethodDeclaration.class, testClass.getMember(1).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 70 Método: assertEquals(1, methodsWithName.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 72 Método: assertEquals("setMyField", setter.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 73 Método: assertEquals("int", setter.getParameter(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 74 Método: assertEquals(ExpressionStmt.class, setter.getBody().get().getStatement(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 75 Método: assertEquals("this.myField = myField;", setter.getBody().get().getStatement(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 81 Método: assertEquals(2, testEnum.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 82 Método: assertEquals(MethodDeclaration.class, testEnum.getMember(1).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 84 Método: assertEquals(1, methodsWithName.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 86 Método: assertEquals("getMyField", getter.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 87 Método: assertEquals("int", getter.getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 88 Método: assertEquals(ReturnStmt.class, getter.getBody().get().getStatement(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 94 Método: assertEquals(2, testEnum.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 95 Método: assertEquals(MethodDeclaration.class, testEnum.getMember(1).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 97 Método: assertEquals(1, methodsWithName.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 99 Método: assertEquals("setMyField", setter.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 100 Método: assertEquals("int", setter.getParameter(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 101 Método: assertEquals(ExpressionStmt.class, setter.getBody().get().getStatement(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 102 Método: assertEquals("this.myField = myField;", setter.getBody().get().getStatement(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 107 Método: assertThrows(IllegalStateException.class, () -> {
    FieldDeclaration myPrivateField = testClass.addPrivateField(int.class, "myField");
    myPrivateField.getVariables().add(new VariableDeclarator(intType(), "secondField"));
    myPrivateField.createGetter();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/FieldDeclarationBuildersTest.java linha: 116 Método: assertThrows(IllegalStateException.class, () -> {
    FieldDeclaration myPrivateField = testClass.addPrivateField(int.class, "myField");
    myPrivateField.getVariables().add(new VariableDeclarator(intType(), "secondField"));
    myPrivateField.createSetter();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 43 Método: assertEquals(1, classDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 44 Método: assertEquals(addField, classDeclaration.getMember(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 45 Método: assertEquals("fieldName", addField.getVariable(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 51 Método: assertEquals(1, classDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 52 Método: assertEquals(addMethod, classDeclaration.getMember(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 53 Método: assertEquals("foo", addMethod.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 59 Método: assertEquals(1, classDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 60 Método: assertEquals(addCtor, classDeclaration.getMember(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 61 Método: assertEquals(classDeclaration.getName(), addCtor.getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 67 Método: assertEquals(1, classDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 68 Método: assertEquals(InitializerDeclaration.class, classDeclaration.getMember(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 71 Método: assertEquals(2, classDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 72 Método: assertEquals(InitializerDeclaration.class, classDeclaration.getMember(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 80 Método: assertEquals(2, methodsByName.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 81 Método: assertTrue(methodsByName.contains(addMethod))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 82 Método: assertTrue(methodsByName.contains(addMethod2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 92 Método: assertEquals(2, methods.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 93 Método: assertTrue(methods.contains(addMethod))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 94 Método: assertTrue(methods.contains(addMethod2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 109 Método: assertEquals(1, methodsWithNoParams.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 110 Método: assertTrue(methodsWithNoParams.contains(mFoo))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 113 Método: assertEquals(2, methodsWithIntParam.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 114 Método: assertTrue(methodsWithIntParam.contains(mFooInt))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 115 Método: assertTrue(methodsWithIntParam.contains(mFoo2Int))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 118 Método: assertEquals(0, methodsWithListParam.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 121 Método: assertEquals(1, methodsWithIntAndListParams.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 122 Método: assertTrue(methodsWithIntAndListParams.contains(mFooIntList))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 125 Método: assertEquals(1, methodsWithListAndIntParams.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 126 Método: assertTrue(methodsWithListAndIntParams.contains(mFooListInt))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 129 Método: assertEquals(1, methodsWithListAndIntParams.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 130 Método: assertTrue(methodsWithIntAndIntParams.contains(mFoo2IntInt))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 140 Método: assertEquals(2, constructors.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 141 Método: assertTrue(constructors.contains(addConstructor))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 142 Método: assertTrue(constructors.contains(addConstructor2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 156 Método: assertTrue(constructorWithNoParams.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 157 Método: assertSame(c, constructorWithNoParams.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 160 Método: assertTrue(constructorWithIntParam.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 161 Método: assertSame(cInt, constructorWithIntParam.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 164 Método: assertFalse(constructorWithListParam.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 167 Método: assertTrue(constructorWithIntAndListParams.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 168 Método: assertSame(cIntList, constructorWithIntAndListParams.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 171 Método: assertTrue(constructorWithListAndIntParams.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 172 Método: assertSame(cListInt, constructorWithListAndIntParams.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 175 Método: assertTrue(constructorWithIntAndIntParams.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 176 Método: assertSame(cIntInt, constructorWithIntAndIntParams.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 184 Método: assertEquals(addField, fieldByName)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 194 Método: assertTrue(fields.contains(firstField))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 195 Método: assertTrue(fields.contains(secondField))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 204 Método: assertNotNull(classOrInterfaceDeclaration.getFields())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 205 Método: assertEquals(1, classOrInterfaceDeclaration.getFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 208 Método: assertEquals(PRIVATE, fieldDeclaration.getModifiers().iterator().next().getKeyword())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 209 Método: assertEquals("java.lang.String", fieldDeclaration.getVariables().get(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 210 Método: assertEquals("name", fieldDeclaration.getVariables().get(0).getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 219 Método: assertNotNull(classOrInterfaceDeclaration.getFields())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 220 Método: assertEquals(1, classOrInterfaceDeclaration.getFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 223 Método: assertEquals(PUBLIC, fieldDeclaration.getModifiers().iterator().next().getKeyword())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 224 Método: assertEquals("java.lang.String", fieldDeclaration.getVariables().get(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 225 Método: assertEquals("name", fieldDeclaration.getVariables().get(0).getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 234 Método: assertNotNull(classOrInterfaceDeclaration.getFields())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 235 Método: assertEquals(1, classOrInterfaceDeclaration.getFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 238 Método: assertEquals(PROTECTED, fieldDeclaration.getModifiers().iterator().next().getKeyword())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 239 Método: assertEquals("java.lang.String", fieldDeclaration.getVariables().get(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 240 Método: assertEquals("name", fieldDeclaration.getVariables().get(0).getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 252 Método: assertNotNull(classOrInterfaceDeclaration.getFields())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 253 Método: assertEquals(1, classOrInterfaceDeclaration.getFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 256 Método: assertEquals(PUBLIC, fieldDeclaration.getModifiers().iterator().next().getKeyword())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 257 Método: assertEquals("java.lang.String", fieldDeclaration.getVariables().get(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 258 Método: assertEquals("name", fieldDeclaration.getVariables().get(0).getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 259 Método: assertEquals("John", fieldDeclaration.getVariables().get(0).getInitializer().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 271 Método: assertNotNull(classOrInterfaceDeclaration.getFields())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 272 Método: assertEquals(1, classOrInterfaceDeclaration.getFields().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 275 Método: assertEquals(PUBLIC, fieldDeclaration.getModifiers().iterator().next().getKeyword())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 276 Método: assertEquals("List", fieldDeclaration.getVariables().get(0).getType().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 277 Método: assertEquals("skills", fieldDeclaration.getVariables().get(0).getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/builders/NodeWithMembersBuildersTest.java linha: 278 Método: assertEquals("new ArrayList()", fieldDeclaration.getVariables().get(0).getInitializer().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 50 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 54 Método: assertEquals(image, token.getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 55 Método: assertEquals(range, token.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 56 Método: assertEquals(kind, token.getKind())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 57 Método: assertEquals(category, token.getCategory())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 58 Método: assertEquals(token, nt.getPreviousToken().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 59 Método: assertEquals(token, pt.getNextToken().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 60 Método: assertTrue(token.getNextToken().isPresent() || token.getPreviousToken().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 65 Método: assertEquals("=", new JavaToken(ASSIGN).getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 67 Método: assertEquals(" ", new JavaToken(EOF).getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 68 Método: assertEquals("*/", new JavaToken(JAVADOC_COMMENT).getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 75 Método: assertEquals(JavaToken.Kind.ASSERT, kind)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 76 Método: assertEquals(GeneratedJavaParserConstants.ASSERT, kind.getKind())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 90 Método: assertEquals(tokenCount, JavaToken.Kind.values().length, "Error - mismatch between number of tokens.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 112 Método: assertEquals(jpTokenName, javaCcTokenName)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 113 Método: assertEquals(javaccTokenNumber, jpTokenNumber, "Error - Likely need to rerun JP Generators following a grammar change." + "\nProblem with `" + jpTokenName + "`." + "\nNote mismatch between:" + "\n - token #" + javaccTokenNumber + " - GeneratedJavaParserConstants (generated using JavaCC)" + "\n - token #" + jpTokenNumber + " - JavaToken (generated using JP Generators).")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 134 Método: assertNotEquals(tokenToBeDeleted, nextTokenAfterDelete)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 135 Método: assertEquals("/*2*/", nextTokenAfterDelete.getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 136 Método: assertEquals("1", previous.getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaTokenTest.java linha: 157 Método: assertEquals("/*2*/", iterator.next().getText())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 70 Método: assertTrue(memberDeclaration.hasRange())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 71 Método: assertEquals(new Range(new Position(1, 17), new Position(1, 29)), memberDeclaration.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 79 Método: assertTrue(memberDeclaration.hasRange())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 80 Método: assertEquals(new Range(new Position(1, 22), new Position(1, 34)), memberDeclaration.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 90 Método: assertFalse(cu.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 91 Método: assertEquals("Lexical error at line 1, column 34.  Encountered: \"\\\"\" (34), after : \"\\\"\\\\uABC\"", cu.getProblem(0).getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 105 Método: assertTrue(memberDeclaration.hasRange())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 106 Método: assertEquals(new Range(new Position(1, 17), new Position(1, 31)), memberDeclaration.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 116 Método: assertTrue(range.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 117 Método: assertEquals(new Range(new Position(1, 8), new Position(1, 12)), range.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 120 Método: assertTrue(range.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 121 Método: assertEquals(new Range(new Position(1, 13), new Position(1, 17)), range.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 131 Método: assertTrue(range.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 132 Método: assertEquals(new Range(new Position(1, 8), new Position(1, 9)), range.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 135 Método: assertTrue(range.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 136 Método: assertEquals(new Range(new Position(1, 10), new Position(1, 11)), range.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 144 Método: assertEquals(range(1, 9, 1, 17), problem.getLocation().get().toRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 145 Método: assertEquals("Parse error. Found <EOF>, expected one of  \";\" \"<\" \"@\" \"abstract\" \"boolean\" \"byte\" \"char\" \"class\" \"default\" \"double\" \"enum\" \"exports\" \"final\" \"float\" \"int\" \"interface\" \"long\" \"module\" \"native\" \"open\" \"opens\" \"private\" \"protected\" \"provides\" \"public\" \"record\" \"requires\" \"short\" \"static\" \"strictfp\" \"synchronized\" \"to\" \"transient\" \"transitive\" \"uses\" \"void\" \"volatile\" \"with\" \"yield\" \"{\" \"}\" <IDENTIFIER>", problem.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 146 Método: assertInstanceOf(ParseException.class, problem.getCause().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 155 Método: assertTrue(type instanceof IntersectionType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 157 Método: assertEquals(2, intersectionType.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 158 Método: assertTrue(intersectionType.getElements().get(0) instanceof ClassOrInterfaceType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 159 Método: assertEquals("Runnable", intersectionType.getElements().get(0).asClassOrInterfaceType().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 160 Método: assertTrue(intersectionType.getElements().get(1) instanceof ClassOrInterfaceType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 161 Método: assertEquals("Serializable", intersectionType.getElements().get(1).asClassOrInterfaceType().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 175 Método: assertEquals(range(3, 13, 3, 54), type.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 188 Método: assertEquals(range(3, 12, 3, 101), castExpr.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 201 Método: assertEquals(range(3, 12, 3, 101), castExpr.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 215 Método: assertEquals(range(3, 56, 3, 101), lambdaExpr.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 216 Método: assertEquals(GeneratedJavaParserConstants.LPAREN, lambdaExpr.getTokenRange().get().getBegin().getKind())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 217 Método: assertEquals(GeneratedJavaParserConstants.RPAREN, lambdaExpr.getTokenRange().get().getEnd().getKind())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 232 Método: assertEquals(range(3, 68, 3, 101), lambdaBody.getRange().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 239 Método: assertFalse(result.getResult().get().getTokenRange().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 244 Método: assertThrows(ParseProblemException.class, () -> parseBlock("{} efijqoifjqefj"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 250 Método: assertEquals("{}", blockStmt.getTokenRange().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 256 Método: assertEquals(1, forStmt.getInitialization().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 257 Método: assertTrue(forStmt.getInitialization().get(0).isVariableDeclarationExpr())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 258 Método: assertEquals(2, forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 259 Método: assertEquals("a", forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 260 Método: assertEquals("b", forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 261 Método: assertFalse(forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getInitializer().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 262 Método: assertTrue(forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getInitializer().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 269 Método: assertEquals(1, forStmt.getInitialization().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 270 Método: assertTrue(forStmt.getInitialization().get(0).isVariableDeclarationExpr())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 271 Método: assertEquals(2, forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 272 Método: assertEquals("i", forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 273 Método: assertEquals("j", forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 274 Método: assertFalse(forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getInitializer().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 275 Método: assertTrue(forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getInitializer().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserTest.java linha: 284 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java linha: 96 Método: assertEquals(lineSeparator, detectedLineSeparator)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java linha: 97 Método: assertEquals(lineSeparator, lineSeparator_cu)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java linha: 98 Método: assertEquals(lineSeparator, lineSeparator_fd)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java linha: 101 Método: assertTrue(cu.containsData(Node.LINE_SEPARATOR_KEY), "Expected the processor provider to have set the data on the root node.")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java linha: 102 Método: assertFalse(fd.containsData(Node.LINE_SEPARATOR_KEY), "Expected the line ending value to have been inherited, not set directly")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 37 Método: Assertions.assertEquals(new Javadoc(JavadocDescription.parseText("A simple line of text")), JavadocParser.parse("A simple line of text"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 43 Método: Assertions.assertEquals(new Javadoc(JavadocDescription.parseText("")), JavadocParser.parse(SYSTEM_EOL))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 49 Método: assertEquals(new Javadoc(JavadocDescription.parseText("The line number of the first character of this Token.")), JavadocParser.parse(" The line number of the first character of this Token. "))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 55 Método: assertEquals(new Javadoc(JavadocDescription.parseText("The string image of the token.")), JavadocParser.parse(SYSTEM_EOL + "   * The string image of the token." + SYSTEM_EOL + "   "))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 68 Método: assertEquals(new Javadoc(JavadocDescription.parseText("The version identifier for this Serializable class." + SYSTEM_EOL + "Increment only if the <i>serialized</i> form of the" + SYSTEM_EOL + "class changes.")), JavadocParser.parse(text))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 82 Método: assertEquals(new Javadoc(JavadocDescription.parseText("Returns a new Token object, by default." + SYSTEM_EOL + "However, if you want, you can create and return subclass objects based on the value of ofKind." + SYSTEM_EOL + SYSTEM_EOL + "   case MyParserConstants.ID : return new IDToken(ofKind, image);" + SYSTEM_EOL + SYSTEM_EOL + "to the following switch statement. Then you can cast matchedToken")), JavadocParser.parse(text))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 97 Método: assertEquals(new Javadoc(JavadocDescription.parseText("")).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.DEPRECATED, "")).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.SEE, "#getEndColumn")), JavadocParser.parse(text))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 112 Método: assertEquals(underTest, JavadocParser.parse(expectedText))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 113 Método: assertEquals(1, underTest.getBlockTags().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 114 Método: assertEquals("unofficial", underTest.getBlockTags().get(0).getTagName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 128 Método: assertEquals(new Javadoc(JavadocDescription.parseText("Add a field to this and automatically add the import of the type if needed")).addBlockTag(JavadocBlockTag.createParamBlockTag("typeClass", "the type of the field")).addBlockTag(JavadocBlockTag.createParamBlockTag("name", "the name of the field")).addBlockTag(JavadocBlockTag.createParamBlockTag("modifiers", "the modifiers like {@link Modifier#PUBLIC}")).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.RETURN, "the {@link FieldDeclaration} created")), res)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 147 Método: assertEquals(new Javadoc(JavadocDescription.parseText("Add a field to this and automatically add the import of the type if needed")).addBlockTag(JavadocBlockTag.createParamBlockTag("typeClass", "the type of the field" + SYSTEM_EOL + "    continued in a second line")).addBlockTag(JavadocBlockTag.createParamBlockTag("name", "the name of the field")).addBlockTag(JavadocBlockTag.createParamBlockTag("modifiers", "the modifiers like {@link Modifier#PUBLIC}")).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.RETURN, "the {@link FieldDeclaration} created")), res)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 156 Método: assertEquals(-1, JavadocParser.startsWithAsterisk(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 161 Método: assertEquals(-1, JavadocParser.startsWithAsterisk(" ciao"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 166 Método: assertEquals(0, JavadocParser.startsWithAsterisk("* ciao"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavadocParserTest.java linha: 171 Método: assertEquals(3, JavadocParser.startsWithAsterisk("   * ciao"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 58 Método: assertSame(javaParser, actualAdapter.getParser())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 59 Método: assertSame(javaParser.getParserConfiguration(), adapter.getParserConfiguration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 68 Método: assertTrue(classA.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 69 Método: assertEquals("A", classA.get().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 76 Método: assertThrows(ParseProblemException.class, () -> adapter.parse("class A"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 87 Método: assertTrue(classA.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 88 Método: assertEquals("A", classA.get().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 101 Método: assertTrue(classA.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 102 Método: assertEquals("A", classA.get().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 111 Método: assertEquals(1, block.getStatements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 120 Método: assertTrue(statement.isBreakStmt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 129 Método: assertEquals("Optional", importDecl.getName().getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 138 Método: assertTrue(expression.isMethodCallExpr())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 147 Método: assertEquals("Test", annotation.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 156 Método: assertTrue(annotationBody.isAnnotationDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 165 Método: assertTrue(interfaceBody.isClassOrInterfaceDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 174 Método: assertTrue(customType.isClassOrInterfaceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 183 Método: assertTrue(customType.isPrimitiveType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 192 Método: assertTrue(variable.isFinal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 201 Método: assertTrue(statement.getArguments().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 210 Método: assertEquals("JavaParser", name.getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 219 Método: assertEquals("JavaParser", name.getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 228 Método: assertEquals("foo", parameter.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 237 Método: assertEquals("com.github.javaparser", packageDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 246 Método: assertEquals("A", typeDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 255 Método: assertEquals("X", moduleDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 264 Método: assertTrue(moduleDirective.isModuleOpensDirective())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 273 Método: assertEquals("T", typeParameter.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/JavaParserAdapterTest.java linha: 282 Método: assertEquals("test", methodDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 35 Método: assertEquals("\\r", LineSeparator.CR.asEscapedString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 36 Método: assertEquals("\\n", LineSeparator.LF.asEscapedString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 37 Método: assertEquals("\\r\\n", LineSeparator.CRLF.asEscapedString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 42 Método: assertEquals(LineSeparator.CR, LineSeparator.lookup("\r").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 43 Método: assertEquals(LineSeparator.LF, LineSeparator.lookup("\n").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 44 Método: assertEquals(LineSeparator.CRLF, LineSeparator.lookup("\r\n").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 46 Método: assertFalse(LineSeparator.lookup("").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 47 Método: assertFalse(LineSeparator.lookup(" ").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 48 Método: assertFalse(LineSeparator.lookup("\\r").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 49 Método: assertFalse(LineSeparator.lookup("\\n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 50 Método: assertFalse(LineSeparator.lookup(" \\r").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 51 Método: assertFalse(LineSeparator.lookup(" \\n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 52 Método: assertFalse(LineSeparator.lookup("\\r ").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 53 Método: assertFalse(LineSeparator.lookup("\\n ").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 54 Método: assertFalse(LineSeparator.lookup("test 123 123").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 55 Método: assertFalse(LineSeparator.lookup("\r \n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 56 Método: assertFalse(LineSeparator.lookup("\\r \\n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 61 Método: assertEquals(LineSeparator.CR, LineSeparator.lookupEscaped("\\r").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 62 Método: assertEquals(LineSeparator.LF, LineSeparator.lookupEscaped("\\n").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 63 Método: assertEquals(LineSeparator.CRLF, LineSeparator.lookupEscaped("\\r\\n").get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 65 Método: assertFalse(LineSeparator.lookupEscaped("").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 66 Método: assertFalse(LineSeparator.lookupEscaped(" ").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 67 Método: assertFalse(LineSeparator.lookupEscaped("\r").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 68 Método: assertFalse(LineSeparator.lookupEscaped("\n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 69 Método: assertFalse(LineSeparator.lookupEscaped(" \r").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 70 Método: assertFalse(LineSeparator.lookupEscaped(" \n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 71 Método: assertFalse(LineSeparator.lookupEscaped("\r ").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 72 Método: assertFalse(LineSeparator.lookupEscaped("\n ").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 73 Método: assertFalse(LineSeparator.lookupEscaped("test 123 123").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 74 Método: assertFalse(LineSeparator.lookupEscaped("\r \n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 75 Método: assertFalse(LineSeparator.lookupEscaped("\\r \\n").isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 80 Método: assertEquals(LineSeparator.CR, LineSeparator.detect("\r"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 81 Método: assertEquals(LineSeparator.LF, LineSeparator.detect("\n"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 82 Método: assertEquals(LineSeparator.CRLF, LineSeparator.detect("\r\n"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 84 Método: assertEquals(LineSeparator.NONE, LineSeparator.detect(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 85 Método: assertEquals(LineSeparator.NONE, LineSeparator.detect("test 123 123"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 87 Método: assertEquals(LineSeparator.MIXED, LineSeparator.detect("\r \n"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 92 Método: assertEquals("\r", LineSeparator.CR.asRawString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 93 Método: assertEquals("\n", LineSeparator.LF.asRawString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 94 Método: assertEquals("\r\n", LineSeparator.CRLF.asRawString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 97 Método: assertEquals("\n", LineSeparator.ARBITRARY.asRawString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 102 Método: assertEquals(8, LineSeparator.values().length)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 107 Método: assertEquals(LineSeparator.CR, LineSeparator.valueOf("CR"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 108 Método: assertEquals(LineSeparator.LF, LineSeparator.valueOf("LF"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 109 Método: assertEquals(LineSeparator.CRLF, LineSeparator.valueOf("CRLF"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 110 Método: assertEquals(LineSeparator.NONE, LineSeparator.valueOf("NONE"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 111 Método: assertEquals(LineSeparator.MIXED, LineSeparator.valueOf("MIXED"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 112 Método: assertEquals(LineSeparator.SYSTEM, LineSeparator.valueOf("SYSTEM"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 113 Método: assertEquals(LineSeparator.UNKNOWN, LineSeparator.valueOf("UNKNOWN"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LineSeparatorTest.java linha: 114 Método: assertEquals(LineSeparator.ARBITRARY, LineSeparator.valueOf("ARBITRARY"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 44 Método: assertEquals(1, map.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 55 Método: assertEquals(2, map.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 64 Método: assertEquals(1, (int) map.get(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 73 Método: assertTrue(map.containsKey(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 85 Método: assertEquals(2, visitorMap.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 93 Método: assertTrue(map.containsKey(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorMapTest.java linha: 97 Método: assertFalse(map.containsKey(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceRootTest.java linha: 55 Método: assertEquals(7, units.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceRootTest.java linha: 56 Método: assertTrue(units.stream().allMatch(unit -> !unit.getTypes().isEmpty() || unit.getModule().isPresent()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceRootTest.java linha: 57 Método: assertTrue(parseResults.stream().noneMatch(cu -> cu.getResult().get().getStorage().get().getPath().toString().contains("source.root")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceRootTest.java linha: 73 Método: assertThrows(IllegalArgumentException.class, () -> {
    Path path = CodeGenerationUtils.classLoaderRoot(SourceRootTest.class).resolve("com/github/javaparser/utils/Bla.java");
    new SourceRoot(path);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceRootTest.java linha: 87 Método: assertThrows(ParseProblemException.class, () -> {
    Path path = CodeGenerationUtils.mavenModuleRoot(SourceRootTest.class).resolve("src/test/resources/com/github/javaparser/utils");
    new SourceRoot(path).parse("source.root", "Y.java");
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceRootTest.java linha: 99 Método: assertTrue(root.isSensibleDirectoryToEnter(root.getRoot()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 48 Método: assertThat(projectRoot.getSourceRoots())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 49 Método: assertThat(projectRoot.getSourceRoot(root.resolve("javaparser-core/src/main/java")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 50 Método: assertThat(projectRoot.getSourceRoot(root.resolve("javaparser-core-generators/src/main/java")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 51 Método: assertThat(projectRoot.getSourceRoot(root.resolve("javaparser-core-metamodel-generator/src/main/java")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 52 Método: assertThat(projectRoot.getSourceRoot(root.resolve("javaparser-symbol-solver-core/src/main/java")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 64 Método: assertThat(sourceRoots)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 76 Método: assertThat(sourceRoots)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 88 Método: assertThat(sourceRoots)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 104 Método: assertEquals(3, sourceRoots.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 116 Método: assertThat(sourceRoots)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 136 Método: assertThat(sourceRoots)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 156 Método: assertThat(sourceRoots)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/ParserCollectionStrategyTest.java linha: 176 Método: assertThat(sourceRoots)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 90 Método: fail(e)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 78 Método: fail("resource not found by name: " + resourceName)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 123 Método: fail(e)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 109 Método: fail("not found: " + resourceName)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 150 Método: fail(e)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 156 Método: assertTrue(expectedType.isAssignableFrom(instance.getClass()), f("%s is not an instance of %s.", instance.getClass(), expectedType))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 229 Método: fail(s)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 249 Método: assertTrue(result.isSuccessful(), result.getProblems().toString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 291 Método: assertEquals(expected, actual, message + String.format(" -- failed due to line separator differences -- Expected: %s, but actual: %s (system eol: %s)", LineSeparator.detect(expected).asEscapedString(), LineSeparator.detect(actual).asEscapedString(), LineSeparator.SYSTEM.asEscapedString()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 307 Método: assertEquals(normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY), normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 317 Método: assertEquals(normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY), normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY), message)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 330 Método: assertEquals(expectedLineSeparator, actualLineSeparator)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestUtils.java linha: 392 Método: assertEquals(expectedLineSeparator, actualLineSeparator, message)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LogTest.java linha: 70 Método: assertEquals("TabcTabcd", testAdapter.output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LogTest.java linha: 77 Método: assertEquals("IabcIabc", testAdapter.output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/LogTest.java linha: 87 Método: assertEquals("EabcMnullEabcMnullEabcM!!!EabcdM!!!EnullM!!!", testAdapter.output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 48 Método: assertEquals(list.get(i), vList.get(i))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 63 Método: assertEquals(list.get(i), vList.get(2 + i))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 72 Método: assertTrue(list.contains(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 83 Método: assertTrue(vList.size() == 2 && vList.containsAll(list))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 95 Método: assertEquals(x1, itr.next())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 97 Método: assertEquals(1, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 98 Método: assertEquals(x2, itr.next())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 100 Método: assertEquals(0, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 114 Método: assertEquals(x1, itr.next())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 116 Método: assertEquals(3, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 117 Método: assertEquals(x2, itr.next())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 119 Método: assertEquals(2, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 128 Método: assertTrue(list.remove(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 140 Método: assertEquals(0, vList.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 153 Método: assertEquals(2, vList.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 164 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 166 Método: assertEquals(2, subLst.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 168 Método: assertEquals(3, subLst.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 169 Método: assertEquals(5, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorListTest.java linha: 182 Método: assertTrue(vList.contains(u))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 33 Método: assertEquals("setValue", setterName("value"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 34 Método: assertEquals("setBlue", setterName("isBlue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 39 Método: assertEquals("getValue", getterName(Object.class, "value"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 40 Método: assertEquals("isBlue", getterName(boolean.class, "isBlue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 41 Método: assertEquals("isBlue", getterName(boolean.class, "blue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 42 Método: assertEquals("getBlue", getterName(Boolean.class, "blue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 43 Método: assertEquals("getIsBlue", getterName(Boolean.class, "isBlue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 48 Método: assertEquals("value", getterToPropertyName("getValue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 49 Método: assertEquals("blue", getterToPropertyName("isBlue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 50 Método: assertEquals("value", getterToPropertyName("hasValue"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 52 Método: assertThrows(IllegalArgumentException.class, () -> getterToPropertyName("value"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/CodeGenerationUtilsTest.java linha: 54 Método: assertEquals("Unexpected getterName 'value'", thrown.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/TestParser.java linha: 50 Método: fail(result.getProblems().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PairTest.java linha: 33 Método: assertEquals("<abc, def>", pair.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PairTest.java linha: 40 Método: assertEquals("<null, null>", pair.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceZipTest.java linha: 47 Método: assertEquals(3, results.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceZipTest.java linha: 52 Método: assertTrue(units.stream().noneMatch(unit -> unit.getTypes().isEmpty()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceZipTest.java linha: 62 Método: assertEquals(3, results.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceZipTest.java linha: 67 Método: assertTrue(units.stream().noneMatch(unit -> unit.getTypes().isEmpty()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceZipTest.java linha: 72 Método: assertThrows(IOException.class, () -> new SourceZip(testDir.resolve("test")).parse())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/SourceZipTest.java linha: 77 Método: assertThrows(IOException.class, () -> new SourceZip(testDir.resolve("test.txt")).parse())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 41 Método: assertTrue(isNullOrEmpty(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 42 Método: assertTrue(isNullOrEmpty(new ArrayList<>()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 44 Método: assertFalse(isNullOrEmpty(new ArrayList<>(Arrays.asList("foo", "bar"))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 50 Método: assertNotNull("foo")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 50 Método: assertEquals("foo", assertNotNull("foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 51 Método: assertNotNull(null)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 51 Método: assertThrows(AssertionError.class, () -> assertNotNull(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 56 Método: assertEquals("foo", assertNonEmpty("foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 57 Método: assertThrows(AssertionError.class, () -> assertNonEmpty(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 58 Método: assertThrows(AssertionError.class, () -> assertNonEmpty(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 64 Método: assertEquals((Number) 2, assertNonNegative(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 65 Método: assertThrows(AssertionError.class, () -> assertNonNegative(-2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 70 Método: assertEquals((Number) 2, assertPositive(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 71 Método: assertThrows(AssertionError.class, () -> assertPositive(-2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 76 Método: assertEquals("f\\no\\ro", escapeEndOfLines("f\no\ro"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 91 Método: assertEquals("", readerToString(reader))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 96 Método: assertEquals("foo", toCamelCase("foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 97 Método: assertEquals("foo", toCamelCase("Foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 98 Método: assertEquals("foo", toCamelCase("FOO"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 99 Método: assertEquals("foo", toCamelCase("fOo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 104 Método: assertEquals("abc", screamingToCamelCase("ABC"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 105 Método: assertEquals("abcDef", screamingToCamelCase("ABC_DEF"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 106 Método: assertEquals("abc", screamingToCamelCase("ABC_"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 111 Método: assertEquals("", camelCaseToScreaming(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 112 Método: assertEquals("ABC", camelCaseToScreaming("abc"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 113 Método: assertEquals("HELLO_HELLO", camelCaseToScreaming("HelloHello"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 114 Método: assertEquals("APE_TAIL", camelCaseToScreaming("apeTail"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 119 Método: assertEquals("foo", nextWord("foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 120 Método: assertEquals("foo", nextWord("foo bar"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 121 Método: assertEquals("foo", nextWord("foo bar Baz"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 126 Método: assertEquals("foo", indent(new StringBuilder("foo"), 0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 128 Método: assertEquals("foo\t", indent(new StringBuilder("foo"), 1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 130 Método: assertEquals("foo\t\t", indent(new StringBuilder("foo"), 2).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 132 Método: assertEquals("foo\t\t\t", indent(new StringBuilder("foo"), 3).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 138 Método: assertThrows(IllegalArgumentException.class, () -> capitalize(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 143 Método: assertEquals("F", capitalize("f"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 148 Método: assertEquals("Fo", capitalize("fo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 153 Método: assertThrows(IllegalArgumentException.class, () -> decapitalize(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 158 Método: assertEquals("f", decapitalize("F"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 163 Método: assertEquals("fo", decapitalize("Fo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 168 Método: assertTrue(valueIsNullOrEmpty(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 169 Método: assertTrue(valueIsNullOrEmpty(Optional.empty()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 170 Método: assertTrue(valueIsNullOrEmpty(new ArrayList<>()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 172 Método: assertFalse(valueIsNullOrEmpty(Optional.ofNullable("foo")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 174 Método: assertFalse(valueIsNullOrEmpty(new ArrayList<>(Arrays.asList("foo", "bar"))))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 180 Método: assertTrue(valueIsNullOrEmptyStringOrOptional(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 181 Método: assertTrue(valueIsNullOrEmptyStringOrOptional(Optional.empty()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 184 Método: assertFalse(valueIsNullOrEmptyStringOrOptional("foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 185 Método: assertFalse(valueIsNullOrEmptyStringOrOptional(Optional.ofNullable("foo")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 191 Método: assertEquals(-1, indexOfElementByObjectIdentity(new ArrayList<>(), "bar"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 193 Método: assertEquals(1, indexOfElementByObjectIdentity(new ArrayList<>(Arrays.asList("foo", "bar")), "bar"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 199 Método: assertEquals(new HashSet<>(Arrays.asList("bar", "foo", "baz")), set("foo", "bar", "baz"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 206 Método: assertEquals("Q Q Q", result)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 211 Método: assertEquals("foo", removeFileExtension("foo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 212 Método: assertEquals("foo", removeFileExtension("foo.txt"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 217 Método: assertEquals("abc", trimTrailingSpaces("abc"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 218 Método: assertEquals("  abc", trimTrailingSpaces("  abc"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 219 Método: assertEquals("abc", trimTrailingSpaces("abc  "))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 220 Método: assertEquals("  abc", trimTrailingSpaces("  abc  "))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 221 Método: assertEquals("abc", trimTrailingSpaces("abc\t\0"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 222 Método: assertEquals("", trimTrailingSpaces("    "))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/UtilsTest.java linha: 223 Método: assertEquals("", trimTrailingSpaces(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 42 Método: assertEquals(1, set.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 51 Método: assertEquals(2, set.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 60 Método: assertTrue(set.contains(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 71 Método: assertTrue(set.size() == 2 && set.containsAll(list))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 83 Método: assertEquals(x1, itr.next())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 85 Método: assertEquals(1, set.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 86 Método: assertEquals(x2, itr.next())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 88 Método: assertEquals(0, set.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 97 Método: assertTrue(set.remove(x1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 109 Método: assertEquals(0, set.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 122 Método: assertEquals(2, set.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/VisitorSetTest.java linha: 134 Método: assertTrue(set.contains(u))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 45 Método: assertTrue(contains)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 57 Método: assertFalse(contains)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 66 Método: assertTrue(contains)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 78 Método: assertFalse(contains, "Type and Name are separate branches of the AST, thus should not contain each other.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 88 Método: assertFalse(contains)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 109 Método: assertEquals(annotationB, o.getCommentedNode().get(), "Comment has been added to an unexpected node.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 112 Método: assertFalse(contains)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 134 Método: assertTrue(nodeContains(x, annotationA, false), formatRangeCompareResult(x, annotationA, "X", "A"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 135 Método: assertTrue(nodeContains(x, annotationB, false), formatRangeCompareResult(x, annotationB, "X", "B"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 136 Método: assertTrue(nodeContains(x, annotationC, false), formatRangeCompareResult(x, annotationC, "X", "C"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 137 Método: assertTrue(nodeContains(x, x, false), formatRangeCompareResult(x, x, "X", "X"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 140 Método: assertFalse(nodeContains(x, annotationA, true), formatRangeCompareResult(x, annotationA, "X", "A"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 141 Método: assertFalse(nodeContains(x, annotationB, true), formatRangeCompareResult(x, annotationB, "X", "B"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 142 Método: assertFalse(nodeContains(x, annotationC, true), formatRangeCompareResult(x, annotationC, "X", "C"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 143 Método: assertFalse(nodeContains(x, x, true), formatRangeCompareResult(x, x, "X", "X"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 177 Método: assertTrue(nodeContains(x, o, false), formatRangeCompareResult(x, o, "X", "o"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 178 Método: assertFalse(nodeContains(x, o, true), formatRangeCompareResult(x, o, "X", "o"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 206 Método: assertTrue(nodeContains(x, o, false), formatRangeCompareResult(x, o, "X", "o"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 207 Método: assertTrue(nodeContains(x, o, true), formatRangeCompareResult(x, o, "X", "o"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 234 Método: assertTrue(nodeContains(x, o, false), formatRangeCompareResult(x, o, "X", "o"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 235 Método: assertTrue(nodeContains(x, o, true), formatRangeCompareResult(x, o, "X", "o"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 237 Método: assertTrue(o.getCommentedNode().isPresent())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 271 Método: assertTrue(nodeContains(x, o, false), formatRangeCompareResult(x, o, "X", "o"))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/utils/PositionUtilsTest.java linha: 272 Método: assertTrue(nodeContains(x, o, true), formatRangeCompareResult(x, o, "X", "o"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 38 Método: assertEquals(6, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 39 Método: assertEquals(0, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 40 Método: assertEquals(0, actual.get(1).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 41 Método: assertEquals(0, actual.get(2).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 42 Método: assertEquals(0, actual.get(3).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 43 Método: assertEquals(0, actual.get(4).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 44 Método: assertEquals(0, actual.get(5).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 59 Método: assertEquals(6, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 61 Método: assertEquals(1, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 62 Método: assertEquals("org.junit.jupiter.api.Assertions.assertEquals", actual.get(0).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 64 Método: assertEquals(1, actual.get(1).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 65 Método: assertEquals("java.util.List", actual.get(1).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 67 Método: assertEquals(1, actual.get(2).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 68 Método: assertEquals("javax.swing", actual.get(2).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 70 Método: assertEquals(1, actual.get(3).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 71 Método: assertEquals("org.junit.jupiter.api.Assertions", actual.get(3).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 73 Método: assertEquals(1, actual.get(4).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 74 Método: assertEquals("com.example.Test", actual.get(4).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 76 Método: assertEquals(1, actual.get(5).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 77 Método: assertEquals("pt.example.OtherTest", actual.get(5).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 89 Método: assertEquals(6, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 91 Método: assertEquals(0, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 92 Método: assertEquals(0, actual.get(1).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 93 Método: assertEquals(0, actual.get(2).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 94 Método: assertEquals(0, actual.get(3).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 95 Método: assertEquals(2, actual.get(4).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 96 Método: assertEquals("com.example.A", actual.get(4).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 97 Método: assertEquals("com.example.B", actual.get(4).get(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/EclipseImportOrderingStrategyTest.java linha: 98 Método: assertEquals(0, actual.get(5).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 38 Método: assertEquals(3, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 39 Método: assertEquals(0, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 40 Método: assertEquals(0, actual.get(1).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 41 Método: assertEquals(0, actual.get(2).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 53 Método: assertEquals(3, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 55 Método: assertEquals(1, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 56 Método: assertEquals("com.example.Test", actual.get(0).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 58 Método: assertEquals(1, actual.get(1).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 59 Método: assertEquals("java.util.List", actual.get(1).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 61 Método: assertEquals(1, actual.get(2).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 62 Método: assertEquals("org.junit.jupiter.api.Assertions.assertEquals", actual.get(2).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 74 Método: assertEquals(3, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 76 Método: assertEquals(2, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 77 Método: assertEquals("com.example.A", actual.get(0).get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 78 Método: assertEquals("com.example.B", actual.get(0).get(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 79 Método: assertEquals(0, actual.get(1).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/IntelliJImportOrderingStrategyTest.java linha: 80 Método: assertEquals(0, actual.get(2).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 38 Método: assertEquals(1, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 39 Método: assertEquals(0, actual.get(0).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 51 Método: assertEquals(1, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 55 Método: assertEquals(3, actualImports.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 56 Método: assertEquals("org.junit.jupiter.api.Assertions.assertEquals", actualImports.get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 57 Método: assertEquals("java.util.List", actualImports.get(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 58 Método: assertEquals("com.example.Test", actualImports.get(2).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 70 Método: assertEquals(1, actual.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 74 Método: assertEquals(2, actualImports.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 75 Método: assertEquals("com.example.A", actualImports.get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/configuration/imports/DefaultImportOrderingStrategyTest.java linha: 76 Método: assertEquals("com.example.B", actualImports.get(1).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 44 Método: assertTrue(getOption(config, ConfigOption.PRINT_COMMENTS).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 45 Método: assertTrue(getOption(config, ConfigOption.PRINT_JAVADOC).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 46 Método: assertTrue(getOption(config, ConfigOption.SPACE_AROUND_OPERATORS).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 47 Método: assertTrue(getOption(config, ConfigOption.INDENT_CASE_IN_SWITCH).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 48 Método: assertTrue(getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 49 Método: assertTrue(getOption(config, ConfigOption.END_OF_LINE_CHARACTER).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 51 Método: assertEquals(getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue(), Integer.valueOf(5))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 53 Método: assertEquals(getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue(), Integer.valueOf(5))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 55 Método: assertTrue(getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue() == Integer.valueOf(5))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 57 Método: assertEquals(getOption(config, ConfigOption.END_OF_LINE_CHARACTER).get().asString(), Utils.SYSTEM_EOL)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 64 Método: assertThrows(IllegalArgumentException.class, () -> {
    getOption(config, ConfigOption.PRINT_COMMENTS).get().asValue();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 69 Método: assertThrows(IllegalArgumentException.class, () -> {
    config.addOption(new DefaultConfigurationOption(ConfigOption.PRINT_COMMENTS, "1"));
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 80 Método: assertEquals(getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue(), Integer.valueOf(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 86 Método: assertTrue(getOption(config, ConfigOption.PRINT_COMMENTS).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 87 Método: assertTrue(getOption(config, ConfigOption.END_OF_LINE_CHARACTER).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 90 Método: assertFalse(getOption(config, ConfigOption.PRINT_COMMENTS).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrinterConfigurationTest.java linha: 93 Método: assertFalse(getOption(config, ConfigOption.END_OF_LINE_CHARACTER).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 59 Método: assertEquals("int[]", vde1.getMaximumCommonType().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 62 Método: assertEquals("int[][][]", vde2.getMaximumCommonType().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 65 Método: assertEquals("int[][]", vde3.getMaximumCommonType().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 71 Método: assertEquals("int", vde1.getMaximumCommonType().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 74 Método: assertEquals("int[][] @Foo []", vde2.getMaximumCommonType().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 89 Método: assertEquals("Foo.class", print(expr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 100 Método: assertEquals("a=1+1;", print(statement1, conf1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 110 Método: assertEquals("a = 1 + 1;", print(statement1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 113 Método: assertEquals("a = 1 - 1;", print(statement2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 116 Método: assertEquals("a = 1 * 1;", print(statement3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 119 Método: assertEquals("a = 1 % 1;", print(statement4))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 122 Método: assertEquals("a = 1 / 1;", print(statement5))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 125 Método: assertEquals("if (1 > 2 && 1 < 3 || 1 < 3) {" + SYSTEM_EOL + "}", print(statement6))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 137 Método: assertEquals("a=1+1;", print(statement1, conf1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 141 Método: assertEquals("a=1+1;", print(statement2, conf2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 145 Método: assertEquals("a = 1 + 1;", print(statement3, conf3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 149 Método: assertEquals("a = 1 + 1;", print(statement4, conf4))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 157 Método: assertEquals("if (1>2&&1<3||1<3) {" + SYSTEM_EOL + "}", print(statement6, conf))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 165 Método: assertEquals("1+1", print(expression, spaces))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 171 Método: assertEquals("Foo[].class", print(expr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 177 Método: assertEquals("Foo<String>.class", print(expr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 183 Método: assertEquals("class A {" + SYSTEM_EOL + "}" + SYSTEM_EOL, print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 190 Método: assertEquals("class A {" + SYSTEM_EOL + SYSTEM_EOL + "    int a;" + SYSTEM_EOL + "}" + SYSTEM_EOL, print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 199 Método: assertEquals("int x(@O X A.B.this, int y) {" + SYSTEM_EOL + "}", print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 213 Método: assertEquals("Runnable r = (Runnable & Serializable) (() -> {" + SYSTEM_EOL + "});", print(methodDeclaration.getBody().get().getStatements().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 222 Método: assertEquals("Runnable & Serializable", print(type))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 234 Método: assertEquals("return (Comparator<Map.Entry<K, V>> & Serializable) (c1, c2) -> c1.getKey().compareTo(c2.getKey());", print(methodDeclaration.getBody().get().getStatements().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrintVisitorTest.java linha: 243 Método: assertEquals(String.format("public class A {%s    // stuff%s}%s", SYSTEM_EOL, SYSTEM_EOL, SYSTEM_EOL), content)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/XmlPrinterTest.java linha: 38 Método: assertEquals("<root type='BinaryExpr' operator='PLUS'><left type='IntegerLiteralExpr' value='1'></left><right type='IntegerLiteralExpr' value='1'></right></root>", output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/XmlPrinterTest.java linha: 49 Método: assertEquals("<root operator='PLUS'><left value='1'></left><right value='1'></right></root>", output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/XmlPrinterTest.java linha: 60 Método: assertEquals("<root type='MethodCallExpr'><name type='SimpleName' identifier='a'></name><arguments><argument type='IntegerLiteralExpr' value='1'></argument><argument type='IntegerLiteralExpr' value='2'></argument></arguments></root>", output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 83 Método: assertEquals("int a, b[];", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 86 Método: assertEquals("int[][] a, b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 89 Método: assertEquals("int[] a[][], b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 92 Método: assertEquals("int[] a, b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 95 Método: assertEquals("int[] a, b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 102 Método: assertEquals("int a, b[]", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 105 Método: assertEquals("int[][] a, b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 108 Método: assertEquals("int[] a[][], b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 111 Método: assertEquals("int[] a, b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 114 Método: assertEquals("int[] a, b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 127 Método: assertEquals("A", prettyPrintConfigurable(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 151 Método: assertEquals(expected, getDefaultPrinter(configuration).print(parse(code)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 169 Método: assertEquals(expected, getDefaultPrinter(configuration).print(parse(code)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 195 Método: assertEquals(expected, printed)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 213 Método: assertEquals(expected, getDefaultPrinter(configuration).print(parse(code)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 232 Método: assertEquals("int a, b;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 236 Método: assertEquals("??? a, b;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 240 Método: assertEquals("double a, b;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 522 Método: assertEquals(2, td.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 524 Método: assertEquals(2, td.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 545 Método: assertTrue(cu.toString().contains("        // TODO"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 546 Método: assertTrue(cu.toString().contains("        /* TODO */"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 553 Método: assertTrue(indentation.getSize() == 4)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 554 Método: assertEquals("    ", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 557 Método: assertTrue(indentation.getSize() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 558 Método: assertEquals("  ", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 564 Método: assertTrue(indentation.getSize() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 565 Método: assertEquals("\t\t", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 573 Método: assertTrue(indentation.getSize() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 574 Método: assertEquals("  ", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 576 Método: assertTrue(indentation.getType() == IndentType.TABS)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DefaultPrettyPrinterTest.java linha: 577 Método: assertEquals("\t\t", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 70 Método: assertEquals("int a, b[];", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 73 Método: assertEquals("int[][] a, b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 76 Método: assertEquals("int[] a[][], b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 79 Método: assertEquals("int[] a, b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 82 Método: assertEquals("int[] a, b;", prettyPrintField(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 89 Método: assertEquals("int a, b[]", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 92 Método: assertEquals("int[][] a, b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 95 Método: assertEquals("int[] a[][], b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 98 Método: assertEquals("int[] a, b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 101 Método: assertEquals("int[] a, b", prettyPrintVar(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 116 Método: assertEquals("test", prettyPrintConfigurable(code))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 137 Método: assertEquals(expected, new DefaultPrettyPrinter(config).print(parse(code)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 155 Método: assertEquals(expected, new DefaultPrettyPrinter(config).print(parse(code)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 177 Método: assertEquals(expected, new DefaultPrettyPrinter(config).print(parse(code)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 197 Método: assertEquals(expected, printed)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 216 Método: assertEquals("int a, b;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 220 Método: assertEquals("??? a, b;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 224 Método: assertEquals("double a, b;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 351 Método: assertFalse(printer.getConfiguration().get(new DefaultConfigurationOption(ConfigOption.PRINT_COMMENTS)).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 520 Método: assertEquals(2, td.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 522 Método: assertEquals(2, td.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 543 Método: assertTrue(cu.toString().contains("        // TODO"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 544 Método: assertTrue(cu.toString().contains("        /* TODO */"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 551 Método: assertTrue(indentation.getSize() == 4)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 552 Método: assertEquals("    ", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 555 Método: assertTrue(indentation.getSize() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 556 Método: assertEquals("  ", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 562 Método: assertTrue(indentation.getSize() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 563 Método: assertEquals("\t\t", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 571 Método: assertTrue(indentation.getSize() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 572 Método: assertEquals("  ", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 574 Método: assertTrue(indentation.getType() == IndentType.TABS)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/PrettyPrinterTest.java linha: 575 Método: assertEquals("\t\t", indentation.getIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DotPrinterTest.java linha: 57 Método: assertEquals(expectedOutput, output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/DotPrinterTest.java linha: 79 Método: assertEquals(expectedOutput, output)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/AnnotationMemberDeclarationTransformationsTest.java linha: 101 Método: assertTrue(md.getDefaultValue().get().remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/AnnotationMemberDeclarationTransformationsTest.java linha: 163 Método: assertTrue(it.getJavadocComment().get().remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/AnnotationDeclarationTransformationsTest.java linha: 117 Método: assertTrue(removed)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2592Test.java linha: 44 Método: assertTrue(md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2592Test.java linha: 47 Método: assertTrue(md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2592Test.java linha: 54 Método: assertTrue(md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2592Test.java linha: 63 Método: assertTrue(isReplaced)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2592Test.java linha: 68 Método: assertTrue(md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2620Test.java linha: 101 Método: assertFalse(detectedLineSeparator.equals(LineSeparator.MIXED))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2620Test.java linha: 102 Método: assertEquals(eol.asEscapedString(), detectedLineSeparator.asEscapedString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2620Test.java linha: 104 Método: assertEquals(normaliseNewlines(expected), normaliseNewlines(actual))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2620Test.java linha: 108 Método: assertEquals(expected, actual, "Failed due to EOL differences.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 37 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 39 Método: assertTrue(LexicalPreservingPrinter.print(expression).equals("private int[] i"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 47 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 49 Método: assertTrue(LexicalPreservingPrinter.print(expression).equals("private int [] i"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 57 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 59 Método: assertTrue(LexicalPreservingPrinter.print(expression).equals("private int [ ] i"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 67 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3358Test.java linha: 69 Método: assertTrue(LexicalPreservingPrinter.print(expression).equals("private int   [   ]   i"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2290Test.java linha: 50 Método: assertTrue(exprs.size() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2290Test.java linha: 52 Método: assertEquals("System.out.println(\"I'm a clone10\");", exprs.get(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 62 Método: assertEquals(2, csmOriginal.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 63 Método: assertEquals(new CsmChild(cu.getType(0)), csmOriginal.elements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 64 Método: assertEquals(new CsmToken(eolTokenKind()), csmOriginal.elements.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 73 Método: assertEquals(3, csmChanged.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 74 Método: assertEquals(new CsmChild(packageDeclaration), csmChanged.elements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 75 Método: assertEquals(new CsmChild(cu.getType(0)), csmChanged.elements.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 76 Método: assertEquals(new CsmToken(eolTokenKind()), csmChanged.elements.get(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 87 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.AT), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 88 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.INTERFACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 89 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 90 Método: assertEquals(new CsmChild(annotationDeclaration.getName()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 91 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 92 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.LBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 93 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 94 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(0)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 95 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 96 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(1)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 97 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 98 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(2)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 99 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 100 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(3)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 101 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 102 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(4)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 103 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 104 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(5)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 105 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 106 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.RBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 107 Método: assertEquals(i, csm.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 118 Método: assertEquals(new CsmChild(Modifier.publicModifier()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 119 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 120 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.AT), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 121 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.INTERFACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 122 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 123 Método: assertEquals(new CsmChild(annotationDeclaration.getName()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 124 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 125 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.LBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 126 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 127 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(0)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 128 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 129 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(1)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 130 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 131 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(2)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 132 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 133 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(3)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 134 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 135 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(4)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 136 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 137 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(5)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 138 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 139 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.RBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 140 Método: assertEquals(i, csm.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 153 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.AT), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 154 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.INTERFACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 155 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 156 Método: assertEquals(new CsmChild(newName), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 157 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 158 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.LBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 159 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 160 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(0)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 161 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 162 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(1)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 163 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 164 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(2)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 165 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 166 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(3)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 167 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 168 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(4)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 169 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 170 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(5)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 171 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 172 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.RBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 173 Método: assertEquals(i, csm.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 184 Método: assertEquals(new CsmChild(Modifier.publicModifier()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 185 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 186 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.AT), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 187 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.INTERFACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 188 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 189 Método: assertEquals(new CsmChild(annotationDeclaration.getName()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 190 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 191 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.LBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 192 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 193 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(0)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 194 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 195 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(1)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 196 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 197 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(2)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 198 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 199 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(3)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 200 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 201 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(4)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 202 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 203 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(5)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 204 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 205 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.RBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 206 Método: assertEquals(i, csm.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 218 Método: assertEquals(new CsmChild(Modifier.publicModifier()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 219 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 220 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.AT), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 221 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.INTERFACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 222 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 223 Método: assertEquals(new CsmChild(annotationDeclaration.getName()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 224 Método: assertEquals(new CsmToken(spaceTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 225 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.LBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 226 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 227 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(0)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 228 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 229 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(1)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 230 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 231 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(2)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 232 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 233 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(3)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 234 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 235 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(4)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 236 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 237 Método: assertEquals(new CsmChild(annotationDeclaration.getMember(5)), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 238 Método: assertEquals(new CsmToken(eolTokenKind()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 239 Método: assertEquals(new CsmToken(GeneratedJavaParserConstants.RBRACE), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 240 Método: assertEquals(i, csm.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 249 Método: assertEquals(new CsmChild(ecd.getName()), csm.elements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 250 Método: assertEquals(i, csm.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 274 Método: assertEquals(CsmElement.token(GeneratedJavaParserConstants.LBRACE), calculatedSyntaxModel.elements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 275 Método: assertEquals(CsmElement.newline(), calculatedSyntaxModel.elements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 276 Método: assertEquals(CsmElement.indent(), calculatedSyntaxModel.elements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 277 Método: assertTrue(isChild(calculatedSyntaxModel.elements.get(index++), ExpressionStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 278 Método: assertEquals(CsmElement.newline(), calculatedSyntaxModel.elements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 279 Método: assertEquals(CsmElement.unindent(), calculatedSyntaxModel.elements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 280 Método: assertEquals(CsmElement.token(GeneratedJavaParserConstants.RBRACE), calculatedSyntaxModel.elements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 281 Método: assertEquals(index, calculatedSyntaxModel.elements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 303 Método: assertEquals(DifferenceElement.kept(CsmElement.token(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 304 Método: assertEquals(DifferenceElement.kept(CsmElement.newline()), differenceElements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 305 Método: assertEquals(DifferenceElement.added(CsmElement.indent()), differenceElements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 306 Método: assertTrue(isAddedChild(differenceElements.get(index++), ExpressionStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 309 Método: assertTrue(CsmToken.class.isAssignableFrom(cmsElement.getClass()) && ((CsmToken) cmsElement).isNewLine())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 310 Método: assertEquals(DifferenceElement.added(CsmElement.unindent()), differenceElements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 311 Método: assertEquals(DifferenceElement.kept(CsmElement.token(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(index++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java linha: 312 Método: assertEquals(index, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 68 Método: assertEquals(1, getTextForNode(cu).numberOfElements())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 69 Método: assertTrue(getTextForNode(cu).getTextElement(0) instanceof ChildTextElement)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 70 Método: assertEquals(cu.getClassByName("A").get(), ((ChildTextElement) getTextForNode(cu).getTextElement(0)).getChild())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 75 Método: assertEquals(7, getTextForNode(classA).numberOfElements())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 76 Método: assertEquals("class", getTextForNode(classA).getTextElement(0).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 77 Método: assertEquals(" ", getTextForNode(classA).getTextElement(1).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 78 Método: assertEquals("A", getTextForNode(classA).getTextElement(2).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 79 Método: assertEquals(" ", getTextForNode(classA).getTextElement(3).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 80 Método: assertEquals("{", getTextForNode(classA).getTextElement(4).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 81 Método: assertEquals("}", getTextForNode(classA).getTextElement(5).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 82 Método: assertEquals("", getTextForNode(classA).getTextElement(6).expand())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 83 Método: assertTrue(getTextForNode(classA).getTextElement(6) instanceof TokenTextElement)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 84 Método: assertEquals(GeneratedJavaParserConstants.EOF, ((TokenTextElement) getTextForNode(classA).getTextElement(6)).getTokenKind())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 96 Método: assertEquals(Arrays.asList("int", " ", "i", ";"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 109 Método: assertEquals(Arrays.asList("i"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 121 Método: assertEquals(Arrays.asList("void", " ", "foo", "(", "int p1", ",", " ", "float p2", ")", " ", "{ }"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 134 Método: assertEquals(Arrays.asList("int", " ", "p1"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 148 Método: assertEquals(Arrays.asList("int"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 159 Método: assertEquals(Arrays.asList("import", " ", "a.b.c.D", ";", ""), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 181 Método: assertEquals(Arrays.asList("ParseResult", "<", "T", ">", " ", "result", ";"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 192 Método: assertEquals(Arrays.asList("public", " ", "@", "interface", " ", "ClassPreamble", " ", "{", " ", "String author();", " ", "}", ""), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 206 Método: assertEquals(Arrays.asList("String", " ", "author", "(", ")", ";"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 218 Método: assertEquals(Arrays.asList("String[]", " ", "author", "(", ")", ";"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 231 Método: assertEquals(Arrays.asList("String", "[", "]"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 242 Método: assertEquals(Arrays.asList("String[]", " ", "reviewers", "(", ")", ";"), nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 253 Método: assertEquals(Arrays.asList("[", "]"), nodeText.getElements().stream().map(TextElement::expand).filter(e -> !e.isEmpty()).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 265 Método: assertEquals(Arrays.asList("[", "123", "]"), nodeText.getElements().stream().map(TextElement::expand).filter(e -> !e.isEmpty()).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 279 Método: assertEquals(Arrays.asList(" ", " ", " "), indentation.stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 288 Método: assertEquals(Arrays.asList(" ", " ", " "), indentation.stream().map(TextElement::expand).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 301 Método: assertEquals(code, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 311 Método: assertEquals("class A {" + SYSTEM_EOL + "    int myField;" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(classA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 319 Método: assertEquals(code, LexicalPreservingPrinter.print(cu.getClassByName("A").get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 328 Método: assertEquals(code, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 329 Método: assertEquals(code, LexicalPreservingPrinter.print(cu.getClassByName("A").get()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 330 Método: assertEquals("void foo(int p  ) { return  'z'  \t; }", LexicalPreservingPrinter.print(cu.getClassByName("A").get().getMethodsByName("foo").get(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 344 Método: assertEquals("class /*a comment*/ A {\t\t" + SYSTEM_EOL + SYSTEM_EOL + "         void foo(int p  ) { return  'z'  \t; }}", LexicalPreservingPrinter.print(c))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 359 Método: assertEquals("class /*a comment*/ A {\t\t" + SYSTEM_EOL + " int f;" + SYSTEM_EOL + SYSTEM_EOL + SYSTEM_EOL + " int g;}", LexicalPreservingPrinter.print(c))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 371 Método: assertEquals("void foo(float p1) {}", LexicalPreservingPrinter.print(m))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 381 Método: assertEquals("void foo(char p1, float p2) {}", LexicalPreservingPrinter.print(m))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 391 Método: assertEquals("void foo() {}", LexicalPreservingPrinter.print(m))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 401 Método: assertEquals("void foo(int p2) {}", LexicalPreservingPrinter.print(m))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 411 Método: assertEquals("void foo(char p1) {}", LexicalPreservingPrinter.print(m))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 425 Método: assertEquals("void foo(char p1, int p2) {" + SYSTEM_EOL + "    10 + 2;" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(m))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 456 Método: assertEquals("class A {" + eol + "\t" + "foo(int a, int b) {" + eol + "\t\t" + "return a * b;" + eol + "\t" + "}" + eol + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 469 Método: assertEquals("import a.b.c.D;", LexicalPreservingPrinter.print(imp))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 478 Método: assertEquals("import com.github.javaparser.ast.CompilationUnit;", LexicalPreservingPrinter.print(imp))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 487 Método: assertEquals("import static com.github.javaparser.ParseStart.*;", LexicalPreservingPrinter.print(imp))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 494 Método: assertEquals("class A { private final Stack<Iterator<Triple>> its = new Stack<Iterator<Triple>>(); }", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 503 Método: assertEquals("class A {{try { doit(); } catch (Exception e) {}}}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 511 Método: assertEquals("class A {{try { doit(); } catch (Exception | AssertionError e) {}}}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 524 Método: assertEquals("Exception", LexicalPreservingPrinter.print(catchType))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 536 Método: assertEquals("Exception | AssertionError", LexicalPreservingPrinter.print(unionType))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 548 Método: assertEquals("Exception | AssertionError e", LexicalPreservingPrinter.print(parameter))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 556 Método: assertEquals("class A {Function<String,String> f = a -> a;}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 565 Método: assertEquals("class xyz { }", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 574 Método: assertEquals("class module { }", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 599 Método: assertEquals(code, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 611 Método: assertEquals(code, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 635 Método: assertEquals("public class TestPage extends Page {" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void test() {}" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void initializePage() {}" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 648 Método: assertEquals(readExample("ASimpleClassWithMoreFormatting"), LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 657 Método: assertEquals(readExample("ASimpleClassWithMoreFormatting_step1"), LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 669 Método: assertEquals("public void setAField() {" + SYSTEM_EOL + "    }", LexicalPreservingPrinter.print(setter))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 704 Método: assertEquals(4, LexicalPreservingPrinter.findIndentation(setter).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 705 Método: assertEquals(4, LexicalPreservingPrinter.findIndentation(setter.getBody().get()).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 714 Método: assertEquals(4, LexicalPreservingPrinter.findIndentation(setter).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 715 Método: assertEquals(4, LexicalPreservingPrinter.findIndentation(setter.getBody().get()).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 716 Método: assertEquals(8, LexicalPreservingPrinter.findIndentation(setter.getBody().get().getStatement(0)).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 748 Método: assertEquals(readExample("ASimpleClassWithMoreFormatting_step4"), LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 761 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(Modifier.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 762 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 763 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(VoidType.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 764 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 765 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(SimpleName.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 766 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LPAREN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 767 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(Parameter.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 768 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RPAREN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 769 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 770 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(BlockStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 771 Método: assertEquals(index, nodeText.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 775 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LBRACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 776 Método: assertTrue(nodeText.getElements().get(index++).isNewline())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 777 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 778 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 779 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 780 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 781 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 782 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 783 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 784 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 785 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(ExpressionStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 786 Método: assertTrue(nodeText.getElements().get(index++).isNewline())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 787 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 788 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 789 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 790 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 791 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RBRACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 792 Método: assertEquals(index, nodeText.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 796 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(AssignExpr.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 797 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SEMICOLON))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 798 Método: assertEquals(index, nodeText.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 816 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(Modifier.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 817 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 818 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(VoidType.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 819 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 820 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(SimpleName.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 821 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LPAREN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 822 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(Parameter.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 823 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RPAREN))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 824 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 825 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(BlockStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 826 Método: assertEquals(index, nodeText.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 830 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LBRACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 831 Método: assertTrue(nodeText.getElements().get(index++).isNewline())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 832 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 833 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 834 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 835 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 836 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 837 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 838 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 839 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 840 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(ExpressionStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 841 Método: assertTrue(nodeText.getElements().get(index++).isNewline())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 842 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 843 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 844 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 845 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 846 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RBRACE))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 847 Método: assertEquals(index, nodeText.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 851 Método: assertTrue(nodeText.getElements().get(index++).isChildOfClass(AssignExpr.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 852 Método: assertTrue(nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SEMICOLON))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 853 Método: assertEquals(index, nodeText.getElements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 901 Método: assertEquals("public class TestPage extends Page {" + SYSTEM_EOL + SYSTEM_EOL + "   protected void test() {}" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void initializePage() {}" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 935 Método: assertEquals("public class TestPage extends Page {" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void test() {}" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void initializePage() {}" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 966 Método: assertEquals("public class TestPage extends Page {" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void test() {}" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void initializePage() {}" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 990 Método: assertEquals("public class TestPage extends Page {" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void test() {}" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void initializePage() {}" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1014 Método: assertEquals("public class TestPage extends Page {" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void test() {}" + SYSTEM_EOL + SYSTEM_EOL + "   @Override" + SYSTEM_EOL + "   protected void initializePage() {}" + SYSTEM_EOL + "}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1040 Método: assertEquals("@Deprecated" + SYSTEM_EOL + "public final class A {}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1051 Método: assertEquals("@Deprecated" + SYSTEM_EOL + "public abstract class A {}", LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1167 Método: assertEquals("public class Foo {" + "\n" + "void mymethod() {" + "\n" + "}" + "\n" + "}", LexicalPreservingPrinter.print(cu))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1208 Método: fail("Could not read test code", ex)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1206 Método: assertEquals(expectedCode, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1272 Método: assertTrue(expression.isStringLiteralExpr())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1277 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1289 Método: assertEquals(expected, LexicalPreservingPrinter.print(statement))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1290 Método: assertEquals(expected, statement.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1297 Método: assertEquals(1, cu.findAll(ClassOrInterfaceDeclaration.class).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1303 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1311 Método: assertTrue(expression.isIntegerLiteralExpr())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1315 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1328 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1341 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1354 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1367 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1380 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1402 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1753 Método: assertTrue(LexicalPreservingPrinter.isAvailableOn(md))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java linha: 1754 Método: assertFalse(LexicalPreservingPrinter.isAvailableOn(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/AnnotationSpaceTest.java linha: 44 Método: assertTrue(result.contains("@Nullable String"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 64 Método: assertEquals(0, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 79 Método: assertEquals(4, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 80 Método: assertEquals(added(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 81 Método: assertEquals(added(new CsmChild(n1)), differenceElements.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 82 Método: assertEquals(added(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 83 Método: assertEquals(added(new CsmChild(n2)), differenceElements.get(3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 98 Método: assertEquals(4, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 99 Método: assertEquals(removed(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 100 Método: assertEquals(removed(new CsmChild(n1)), differenceElements.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 101 Método: assertEquals(removed(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 102 Método: assertEquals(removed(new CsmChild(n2)), differenceElements.get(3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 113 Método: assertEquals(3, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 114 Método: assertEquals(added(new CsmChild(packageDeclaration)), differenceElements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 115 Método: assertEquals(kept(new CsmChild(cu.getType(0))), differenceElements.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 116 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 129 Método: assertEquals(added(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 130 Método: assertEquals(added(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 131 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.AT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 132 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 133 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 134 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 135 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 136 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 137 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 138 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(0))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 139 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 140 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(1))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 141 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 142 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(2))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 143 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 144 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(3))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 145 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 146 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(4))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 147 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 148 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(5))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 149 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 150 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 151 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 166 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.AT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 167 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 168 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 169 Método: assertEquals(removed(new CsmChild(annotationDeclaration.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 170 Método: assertEquals(added(new CsmChild(newName)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 171 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 172 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 173 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 174 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(0))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 175 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 176 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(1))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 177 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 178 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(2))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 179 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 180 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(3))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 181 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 182 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(4))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 183 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 184 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(5))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 185 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 186 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 187 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 201 Método: assertEquals(kept(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 202 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 203 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.AT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 204 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 205 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 206 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 207 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 208 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 209 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 210 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(0))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 211 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 212 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(1))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 213 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 214 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(2))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 215 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 216 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(3))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 217 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 218 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(4))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 219 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 220 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(5))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 221 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 222 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 223 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 236 Método: assertEquals(kept(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 237 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 238 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.AT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 239 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 240 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 241 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 242 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 243 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 244 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 245 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(0))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 246 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 247 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(1))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 248 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 249 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(2))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 250 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 251 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(3))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 252 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 253 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(4))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 254 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 255 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(5))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 256 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 257 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 258 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 271 Método: assertEquals(removed(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 272 Método: assertEquals(removed(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 273 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.AT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 274 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 275 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 276 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 277 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 278 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 279 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 280 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(0))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 281 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 282 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(1))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 283 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 284 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(2))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 285 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 286 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(3))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 287 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 288 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(4))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 289 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 290 Método: assertEquals(kept(new CsmChild(annotationDeclaration.getMember(5))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 291 Método: assertEquals(kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 292 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 293 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 303 Método: assertEquals(kept(new CsmChild(md.getType())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 304 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 305 Método: assertEquals(kept(new CsmChild(md.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 306 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 307 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 308 Método: assertEquals(removed(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 309 Método: assertEquals(removed(new CsmToken(GeneratedJavaParserConstants._DEFAULT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 310 Método: assertEquals(removed(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 311 Método: assertEquals(removed(new CsmChild(md.getDefaultValue().get())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 312 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.SEMICOLON)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 313 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 324 Método: assertEquals(kept(new CsmChild(md.getType())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 325 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 326 Método: assertEquals(kept(new CsmChild(md.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 327 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 328 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 329 Método: assertEquals(added(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 330 Método: assertEquals(added(new CsmToken(GeneratedJavaParserConstants._DEFAULT)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 331 Método: assertEquals(added(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 332 Método: assertEquals(added(new CsmChild(defaultValue)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 333 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.SEMICOLON)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 334 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 345 Método: assertEquals(added(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 346 Método: assertEquals(added(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 347 Método: assertEquals(kept(new CsmChild(cd.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 348 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 349 Método: assertEquals(kept(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 350 Método: assertEquals(kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 351 Método: assertEquals(kept(new CsmChild(cd.getBody())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 352 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 364 Método: assertEquals(DifferenceElement.removed(new CsmChild(ecd.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 365 Método: assertEquals(DifferenceElement.added(new CsmChild(newName)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 366 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 382 Método: assertEquals(DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.LBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 383 Método: assertEquals(DifferenceElement.kept(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 384 Método: assertEquals(DifferenceElement.added(new CsmIndent()), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 385 Método: assertEquals(DifferenceElement.added(new CsmChild(s)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 386 Método: assertEquals(DifferenceElement.added(new CsmToken(eolTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 387 Método: assertEquals(DifferenceElement.added(new CsmUnindent()), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 388 Método: assertEquals(DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.RBRACE)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 389 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 399 Método: assertEquals(DifferenceElement.kept(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 400 Método: assertEquals(DifferenceElement.kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 401 Método: assertEquals(DifferenceElement.kept(new CsmChild(md.getType())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 402 Método: assertEquals(DifferenceElement.kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 403 Método: assertEquals(DifferenceElement.kept(new CsmChild(md.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 404 Método: assertEquals(DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 405 Método: assertEquals(DifferenceElement.removed(new CsmChild(md.getParameter(0))), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 406 Método: assertEquals(DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 407 Método: assertEquals(DifferenceElement.kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 408 Método: assertEquals(DifferenceElement.kept(new CsmChild(md.getBody().get())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 409 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 420 Método: assertEquals(DifferenceElement.kept(new CsmChild(Modifier.publicModifier())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 421 Método: assertEquals(DifferenceElement.kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 422 Método: assertEquals(DifferenceElement.kept(new CsmChild(md.getType())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 423 Método: assertEquals(DifferenceElement.kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 424 Método: assertEquals(DifferenceElement.kept(new CsmChild(md.getName())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 425 Método: assertEquals(DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.LPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 426 Método: assertEquals(DifferenceElement.added(new CsmChild(newParameter)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 427 Método: assertEquals(DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.RPAREN)), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 428 Método: assertEquals(DifferenceElement.kept(new CsmToken(spaceTokenKind())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 429 Método: assertEquals(DifferenceElement.kept(new CsmChild(md.getBody().get())), differenceElements.get(i++))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java linha: 430 Método: assertEquals(i, differenceElements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/changes/NoChangeTest.java linha: 51 Método: assertNotNull(o)
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/changes/NoChangeTest.java linha: 56 Método: assertThrows(RuntimeException.class, () -> {
    new NoChange().getValue(ObservableProperty.IMPORTS, new ClassOrInterfaceType());
}, "RuntimeException was expected")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue1634Test.java linha: 46 Método: assertEquals(expected, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue1793Test.java linha: 50 Método: assertEquals(LexicalPreservingPrinter.print(cu), LexicalPreservingPrinter.print(cu.clone()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2340Test.java linha: 37 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2340Test.java linha: 46 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2340Test.java linha: 55 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2340Test.java linha: 64 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2340Test.java linha: 73 Método: assertTrue(LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2351Test.java linha: 43 Método: assertTrue(decl.get().getEntries().size() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3750Test.java linha: 53 Método: assertEquals(expected, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3296Test.java linha: 42 Método: assertTrue(clazzOptional.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2806Test.java linha: 51 Método: assertThat(out, equalTo(junit5))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue3746Test.java linha: 61 Método: assertEquals(expected, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/lexicalpreservation/Issue2393Test.java linha: 37 Método: assertEquals("i > 0", ifStmt.getCondition().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 41 Método: assertEquals("Foo.class", print(expr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 47 Método: assertEquals("Foo[].class", print(expr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 53 Método: assertEquals("Foo<String>.class", print(expr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 59 Método: assertEquals("class A {" + SYSTEM_EOL + "}" + SYSTEM_EOL, print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 66 Método: assertEquals("class A {" + SYSTEM_EOL + SYSTEM_EOL + "    int a;" + SYSTEM_EOL + "}" + SYSTEM_EOL, print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 75 Método: assertEquals("int x(int y, int z) {" + SYSTEM_EOL + "}", print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 81 Método: assertEquals("int x(X A.B.this, int y, int z) {" + SYSTEM_EOL + "}", print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 87 Método: assertEquals("interface A {" + SYSTEM_EOL + "}" + SYSTEM_EOL, print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/printer/ConcreteSyntaxModelTest.java linha: 94 Método: assertEquals("public interface A {" + SYSTEM_EOL + "}" + SYSTEM_EOL, print(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/TokenRangeTest.java linha: 37 Método: assertEquals("X(){\n// hello\n}", cu.getClassByName("X").get().getDefaultConstructor().get().getTokenRange().get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/TokenRangeTest.java linha: 44 Método: assertEquals("1,1-5/6,1-1/7,1-1/8,1-1/9,1-1/10,1-1/1,2-1/2,2-1/3,2-1/4,2-1/5,2-1/6,2-1/1,3-8/9,3-1/1,4-1/2,4-1/1,5-1/1,5-1/", makeRangesString(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/TokenRangeTest.java linha: 51 Método: assertEquals("1,1-5/6,1-4/10,1-2/1,2-1/2,2-1/3,2-1/4,2-1/5,2-1/1,3-1/2,3-1/3,3-1/4,3-1/5,3-1/6,3-1/1,4-8/9,4-1/1,5-1/2,5-1/1,6-1/2,6-1/", makeRangesString(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/issues/Issue3255Test.java linha: 46 Método: assertEquals(0, parseResult.getProblems().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/issues/Issue3255Test.java linha: 61 Método: assertEquals(0, parseResult.getProblems().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/issues/Issue3255Test.java linha: 80 Método: assertEquals(0, parseResult.getProblems().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/issues/Issue3113Test.java linha: 55 Método: assertEquals("switch (value)\n" + "      {\n" + "       case 1 -> numericString = \"one\";\n" + "       default -> numericString = \"N/A\";\n" + "      }", modifiedSourceCode)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/issues/Issue2627Test.java linha: 76 Método: assertEquals(expectedStartLine, range.begin.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/issues/Issue2627Test.java linha: 77 Método: assertEquals(expectedEndLine, range.end.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/TokenTypesTest.java linha: 48 Método: assertEquals(tokenCount, switchEntries)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/TokenTypesTest.java linha: 53 Método: assertThrows(AssertionError.class, () -> {
    TokenTypes.getCategory(-1);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 61 Método: assertEquals(10, range_orderedPositions.begin.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 62 Método: assertEquals(11, range_orderedPositions.begin.column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 63 Método: assertEquals(20, range_orderedPositions.end.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 64 Método: assertEquals(21, range_orderedPositions.end.column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 69 Método: assertEquals(10, range_reversedPositions.begin.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 70 Método: assertEquals(11, range_reversedPositions.begin.column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 71 Método: assertEquals(20, range_reversedPositions.end.line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 72 Método: assertEquals(21, range_reversedPositions.end.column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 77 Método: assertTrue(rangePair_equalBeginEnd[0].contains(rangePair_equalBeginEnd[1]))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 82 Método: assertFalse(rangePair_equalBeginEnd[0].strictlyContains(rangePair_equalBeginEnd[1]))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 89 Método: assertFalse(r1.contains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 90 Método: assertFalse(r2.contains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 97 Método: assertFalse(r1.strictlyContains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 98 Método: assertFalse(r2.strictlyContains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 105 Método: assertFalse(r1.contains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 106 Método: assertFalse(r2.contains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 113 Método: assertFalse(r1.strictlyContains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 114 Método: assertFalse(r2.strictlyContains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 121 Método: assertTrue(r1.contains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 122 Método: assertFalse(r2.contains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 129 Método: assertTrue(r1.strictlyContains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 130 Método: assertFalse(r2.strictlyContains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 137 Método: assertFalse(r1.contains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 138 Método: assertFalse(r2.contains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 145 Método: assertFalse(r1.strictlyContains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 146 Método: assertFalse(r2.strictlyContains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 153 Método: assertFalse(r1.contains(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 154 Método: assertFalse(r2.contains(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 161 Método: assertTrue(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 162 Método: assertTrue(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 169 Método: assertFalse(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 170 Método: assertFalse(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 177 Método: assertEquals(5, r1.getLineCount())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 180 Método: assertEquals(32, r2.getLineCount())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 186 Método: assertTrue(r.contains(r.begin))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 192 Método: assertTrue(r.contains(r.end))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 198 Método: assertFalse(r.strictlyContains(r.begin))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 204 Método: assertFalse(r.strictlyContains(r.end))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 210 Método: assertTrue(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 211 Método: assertTrue(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 218 Método: assertFalse(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 219 Método: assertFalse(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 225 Método: assertTrue(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 226 Método: assertTrue(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 233 Método: assertFalse(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 234 Método: assertFalse(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 241 Método: assertTrue(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 242 Método: assertTrue(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 249 Método: assertTrue(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 250 Método: assertTrue(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 257 Método: assertTrue(r1.overlapsWith(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 258 Método: assertTrue(r2.overlapsWith(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 265 Método: assertTrue(r1.isBefore(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 273 Método: assertFalse(r2.isBefore(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 274 Método: assertFalse(r3.isBefore(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 281 Método: assertTrue(r2.isAfter(r1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 289 Método: assertFalse(r1.isAfter(r2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/RangeTest.java linha: 290 Método: assertFalse(r1.isAfter(r3))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/quality/PreconditionsTest.java linha: 39 Método: assertThrows(IllegalArgumentException.class, () -> checkArgument(false))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/quality/PreconditionsTest.java linha: 49 Método: assertThrows(IllegalArgumentException.class, () -> checkNotNull(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ExpectedTokensTest.java linha: 41 Método: assertEquals(23, chars.size())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ExpectedTokensTest.java linha: 70 Método: assertEquals(expectedTokenValue, expr.getValue(), "Node at " + line + "," + col)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParserConfigurationTest.java linha: 40 Método: assertFalse(result.getResult().get().getTokenRange().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParserConfigurationTest.java linha: 41 Método: assertTrue(result.getResult().get().findAll(Node.class).stream().noneMatch(node -> node.getTokenRange().isPresent()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParserConfigurationTest.java linha: 49 Método: assertTrue(result.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue3064Test.java linha: 48 Método: assertEquals(str, unit.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue3064Test.java linha: 59 Método: assertEquals(str.replace("\n", ""), unit.toString().replace("\n", ""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 46 Método: assertEquals(1, compilationUnit.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 48 Método: assertTrue(remove)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 49 Método: assertEquals(0, compilationUnit.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 57 Método: assertEquals(1, testClass.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 59 Método: assertTrue(remove)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 60 Método: assertEquals(0, testClass.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 70 Método: assertEquals(1, methodBody.getStatements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 72 Método: assertTrue(remove)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 73 Método: assertEquals(0, methodBody.getStatements().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 84 Método: assertTrue(children.size() == 2)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 86 Método: assertTrue(children.size() == 1)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/remove/NodeRemovalTest.java linha: 87 Método: assertTrue(children.stream().allMatch(n -> n.getParentNode() != null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 41 Método: assertEquals(UNPARSABLE, cu.getParsed())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 48 Método: assertEquals(UNPARSABLE, xxx.getParsed())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 55 Método: assertEquals(1, xxx.getChildNodes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 56 Método: assertTrue(xxx.getChildNodes().get(0) instanceof UnparsableStmt)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 63 Método: assertEquals(UNPARSABLE, xxx.getStatement().getParsed())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 69 Método: assertFalse(compilationUnit.getTypes().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 70 Método: assertFalse(compilationUnit.getTypes().get(0).getMembers().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 76 Método: assertFalse(compilationUnit.getTypes().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 77 Método: assertEquals(1, compilationUnit.getTypes().get(0).getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 83 Método: assertFalse(compilationUnit.getTypes().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ParseErrorRecoveryTest.java linha: 84 Método: assertEquals(1, compilationUnit.getTypes().get(0).getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue1017Test.java linha: 33 Método: Assertions.assertThrows(ParseProblemException.class, () -> {
    CompilationUnit cu = StaticJavaParser.parse(code);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/version/Java10PostProcessorTest.java linha: 47 Método: assertEquals(1, allVarTypes.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/version/Java10PostProcessorTest.java linha: 56 Método: assertEquals(0, allVarTypes.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/Issue3577Test.java linha: 42 Método: assertDoesNotThrow(() -> StaticJavaParser.parse(str))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProvidersTest.java linha: 37 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProvidersTest.java linha: 40 Método: assertTrue(parse.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProvidersTest.java linha: 46 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProvidersTest.java linha: 49 Método: assertFalse(parse.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProvidersTest.java linha: 58 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProvidersTest.java linha: 61 Método: assertTrue(parse.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProblemTest.java linha: 34 Método: assertEquals(TokenRange.INVALID, problem.getLocation().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProblemTest.java linha: 35 Método: assertEquals("Parse error", problem.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProblemTest.java linha: 36 Método: assertInstanceOf(Exception.class, problem.getCause().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProblemTest.java linha: 43 Método: assertEquals("(line ?,col ?) Parse error", problem.getVerboseMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ProblemTest.java linha: 50 Método: assertEquals("Parse error", problem.getVerboseMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/observer/PropagatingAstObserverTest.java linha: 51 Método: assertEquals(Arrays.asList(), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/observer/PropagatingAstObserverTest.java linha: 54 Método: assertEquals(Arrays.asList(), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/observer/PropagatingAstObserverTest.java linha: 55 Método: assertTrue(fieldDeclaration.isRegistered(observer))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/observer/PropagatingAstObserverTest.java linha: 58 Método: assertEquals(Arrays.asList("VariableDeclarator.name changed from foo to Bar"), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithTraversableScopeTest.java linha: 37 Método: assertInstanceOf(MethodCallExpr.class, expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithTraversableScopeTest.java linha: 39 Método: assertInstanceOf(FieldAccessExpr.class, expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithTraversableScopeTest.java linha: 41 Método: assertInstanceOf(MethodCallExpr.class, expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithTraversableScopeTest.java linha: 42 Método: assertFalse(expression.traverseScope().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithArgumentsTest.java linha: 51 Método: assertEquals(0, mce.getArgumentPosition(arg0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithArgumentsTest.java linha: 52 Método: assertEquals(0, mce.getArgumentPosition(innerExpr0, EXCLUDE_ENCLOSED_EXPR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithArgumentsTest.java linha: 53 Método: assertEquals(1, mce.getArgumentPosition(arg1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithArgumentsTest.java linha: 54 Método: assertEquals(1, mce.getArgumentPosition(innerExpr1, EXCLUDE_ENCLOSED_EXPR))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 38 Método: assertEquals(PrimitiveType.intType(), declaration.getCommonType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 48 Método: assertThrows(AssertionError.class, () -> parseVariableDeclarationExpr("int a[],b[][]").getCommonType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 53 Método: assertThrows(AssertionError.class, () -> {
    VariableDeclarationExpr declaration = parseVariableDeclarationExpr("int a,b");
    declaration.getVariable(1).setType(String.class);
    declaration.getCommonType();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 62 Método: assertThrows(AssertionError.class, () -> {
    VariableDeclarationExpr declaration = parseVariableDeclarationExpr("int a");
    declaration.getVariables().clear();
    declaration.getCommonType();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 72 Método: assertEquals(PrimitiveType.intType(), declaration.getElementType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 78 Método: assertEquals(PrimitiveType.intType(), declaration.getElementType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 88 Método: assertThrows(AssertionError.class, () -> {
    VariableDeclarationExpr declaration = parseVariableDeclarationExpr("int a,b");
    declaration.getVariable(1).setType(String.class);
    declaration.getElementType();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 97 Método: assertThrows(AssertionError.class, () -> {
    VariableDeclarationExpr declaration = parseVariableDeclarationExpr("int a");
    declaration.getVariables().clear();
    declaration.getElementType();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java linha: 108 Método: assertEquals("Dog a, b", declaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithBodyTest.java linha: 36 Método: assertTrue(forStmt.hasEmptyBody())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithBodyTest.java linha: 43 Método: assertTrue(forStmt.hasEmptyBody())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithBodyTest.java linha: 50 Método: assertFalse(forStmt.hasEmptyBody())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithBodyTest.java linha: 57 Método: assertFalse(forStmt.hasEmptyBody())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java linha: 46 Método: assertEquals(createModifierList(PUBLIC), decl.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java linha: 61 Método: assertEquals(1, changes.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java linha: 62 Método: assertEquals("property MODIFIERS is changed to [public ]", changes.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java linha: 69 Método: assertEquals(0, node.getModifiers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java linha: 77 Método: assertEquals(createModifierList(PUBLIC), node.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java linha: 85 Método: assertEquals(createModifierList(SYNCHRONIZED), node.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 40 Método: assertFalse(decl.removeJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 48 Método: assertFalse(decl.removeJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 49 Método: assertTrue(decl.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 57 Método: assertTrue(decl.removeJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 58 Método: assertFalse(decl.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 66 Método: assertFalse(method.getJavadocComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java linha: 67 Método: assertFalse(method.getJavadoc().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithOptionalScopeTest.java linha: 39 Método: assertTrue(methodCallExpr.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithOptionalScopeTest.java linha: 40 Método: assertFalse(objectCreationExpr.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/nodeTypes/NodeWithOptionalScopeTest.java linha: 49 Método: assertFalse(methodCallExpr.hasScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 46 Método: assertTrue(replaced)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 47 Método: assertEquals(3, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 48 Método: assertEquals("a", list.get(0).asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 49 Método: assertEquals("z", list.get(1).asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 50 Método: assertEquals("c", list.get(2).asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 57 Método: assertEquals(3, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 58 Método: assertEquals("[abc, bcd, cde]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 67 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 68 Método: assertEquals("[xxx, abc, bcd, cde]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 77 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 78 Método: assertEquals("[abc, bcd, cde, xxx]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 88 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 89 Método: assertEquals("[abc, xxx, bcd, cde]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 99 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 100 Método: assertEquals("[abc, bcd, xxx, cde]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 110 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 111 Método: assertEquals("[xxx, abc, bcd, cde]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 121 Método: assertEquals(4, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 122 Método: assertEquals("[abc, bcd, cde, xxx]", list.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 132 Método: assertFalse(first.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 133 Método: assertEquals("Optional.empty", first.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 142 Método: assertTrue(first.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 143 Método: assertEquals("Optional[abc]", first.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 152 Método: assertFalse(last.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 153 Método: assertEquals("Optional.empty", last.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 162 Método: assertTrue(last.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 163 Método: assertEquals("Optional[cde]", last.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 215 Método: assertEquals(0, propertyChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 216 Método: assertEquals(0, parentChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 217 Método: assertEquals(0, listChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 218 Método: assertEquals(0, listReplacements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 222 Método: assertEquals(0, propertyChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 223 Método: assertEquals(0, parentChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 224 Método: assertEquals(1, listChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 225 Método: assertEquals(0, listReplacements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 227 Método: assertEquals("Name ADDITION to/from NodeList at position 0", listChanges.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 234 Método: assertEquals(0, propertyChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 235 Método: assertEquals(0, parentChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 236 Método: assertEquals(1, listChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 237 Método: assertEquals(0, listReplacements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 242 Método: assertEquals(0, propertyChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 243 Método: assertEquals(0, parentChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 244 Método: assertEquals(2, listChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 245 Método: assertEquals(0, listReplacements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 247 Método: assertEquals("Name ADDITION to/from NodeList at position 0", listChanges.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 248 Método: assertEquals("Name REMOVAL to/from NodeList at position 0", listChanges.get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 255 Método: assertEquals(0, propertyChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 256 Método: assertEquals(0, parentChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 257 Método: assertEquals(1, listChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 258 Método: assertEquals(0, listReplacements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 263 Método: assertEquals(0, propertyChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 264 Método: assertEquals(0, parentChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 265 Método: assertEquals(1, listChanges.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 266 Método: assertEquals(1, listReplacements.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 268 Método: assertEquals("Name ADDITION to/from NodeList at position 0", listChanges.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 269 Método: assertEquals("Name replaced within NodeList at position 0", listReplacements.get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 305 Método: assertEquals(expected, LexicalPreservingPrinter.print(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 322 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 323 Método: assertFalse(iterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 326 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 327 Método: assertTrue(iterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 345 Método: assertThrows(NoSuchElementException.class, () -> {
    iterator.next();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 352 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 357 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 358 Método: assertFalse(iterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 361 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 362 Método: assertTrue(iterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 367 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 368 Método: assertFalse(iterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 369 Método: assertThrows(IllegalArgumentException.class, () -> {
    iterator.set(new Name("abc"));
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 374 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 375 Método: assertFalse(iterator.hasPrevious())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 394 Método: assertNotNull(next)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 399 Método: assertTrue(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 404 Método: assertTrue(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 405 Método: assertTrue(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 406 Método: assertTrue(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 407 Método: assertTrue(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 412 Método: assertTrue(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 414 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 415 Método: assertThrows(NoSuchElementException.class, () -> {
    iterator.next();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 424 Método: assertFalse(iterator.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeListTest.java linha: 425 Método: assertThrows(NoSuchElementException.class, () -> {
    iterator.next();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/FindNodeTest.java linha: 66 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/FindNodeTest.java linha: 104 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/AnnotationMemberDeclarationTest.java linha: 38 Método: assertTrue(name.getParentNode().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/AnnotationMemberDeclarationTest.java linha: 39 Método: assertSame(decl, name.getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/AnnotationMemberDeclarationTest.java linha: 50 Método: assertFalse(decl.getDefaultValue().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/AnnotationMemberDeclarationTest.java linha: 63 Método: assertFalse(defaultValue.getParentNode().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/TypeDeclarationTest.java linha: 79 Método: assertEquals(fqn, node.findAll(TypeDeclaration.class).stream().map(td -> (TypeDeclaration<?>) td).map(td -> td.getFullyQualifiedName().orElse("?")).collect(joining(",")))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 49 Método: assertThrows(AssertionFailedError.class, () -> {
    CompilationUnit cu = TestParser.parseCompilationUnit(languageLevel, s);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 65 Método: assertThrows(AssertionFailedError.class, () -> {
    CompilationUnit cu = TestParser.parseCompilationUnit(languageLevel, s);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 98 Método: assertTrue(recordDeclaration.isRecordDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 99 Método: assertTrue(recordDeclaration.getImplementedTypes().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 100 Método: assertTrue(recordDeclaration.getTypeParameters().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 101 Método: assertTrue(recordDeclaration.getFullyQualifiedName().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 102 Método: assertEquals("Point", recordDeclaration.getFullyQualifiedName().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 103 Método: assertTrue(recordDeclaration.isRecordDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 106 Método: assertEquals(2, parameters.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 109 Método: assertEquals("x", parameter0.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 110 Método: assertEquals("int", parameter0.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 112 Método: assertEquals("y", parameter1.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 113 Método: assertEquals("int", parameter1.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 115 Método: assertEquals(0, recordDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 193 Método: assertEquals(1, recordDeclarations.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 197 Método: assertEquals(2, parameters.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 200 Método: assertEquals("c1", parameter0.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 201 Método: assertEquals("T1", parameter0.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 202 Método: assertFalse(parameter0.isVarArgs())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 205 Método: assertEquals("cn", parameter1.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 206 Método: assertEquals("Tn", parameter1.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 207 Método: assertTrue(parameter1.isVarArgs())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 216 Método: assertEquals(1, recordDeclarations.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 220 Método: assertEquals(2, parameters.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 223 Método: assertEquals("rank", parameter0.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 224 Método: assertEquals("Rank", parameter0.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 225 Método: assertEquals(1, parameter0.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 228 Método: assertEquals("suit", parameter1.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 229 Método: assertEquals("Suit", parameter1.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 230 Método: assertEquals(1, parameter1.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 232 Método: assertEquals(0, recordDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 244 Método: assertEquals(0, recordDeclaration.getMembers().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 345 Método: assertFalse(recordDeclaration.hasModifier(Modifier.Keyword.FINAL))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 346 Método: assertTrue(recordDeclaration.isFinal(), "Records are implicitly final.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 359 Método: assertFalse(recordDeclaration.hasModifier(Modifier.Keyword.FINAL))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 360 Método: assertTrue(recordDeclaration.isFinal(), "Records are implicitly final.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 373 Método: assertFalse(recordDeclaration.getTypeParameters().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 374 Método: assertEquals("T", recordDeclaration.getTypeParameters().get(0).getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 452 Método: assertTrue(parameters.get(0).isFinal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 453 Método: assertTrue(parameters.get(1).isFinal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 471 Método: assertEquals(1, recordDeclarations.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 476 Método: assertTrue(member.isClassOrInterfaceDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 549 Método: assertEquals(3, recordDeclarations.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 563 Método: assertFalse(recordDeclaration.hasModifier(Modifier.Keyword.STATIC))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 564 Método: assertFalse(recordDeclaration.isStatic(), "Top level Records are NOT implicitly static.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 582 Método: assertFalse(recordDeclaration.hasModifier(Modifier.Keyword.STATIC))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 583 Método: assertTrue(recordDeclaration.isStatic(), "Nested Records are implicitly static.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 607 Método: assertEquals(1, objectCreationExprs.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 609 Método: assertEquals("Point", objectCreationExpr.getTypeAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 631 Método: assertThat(recordDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 632 Método: assertThat(recordDeclaration.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 654 Método: assertThat(recordDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 655 Método: assertThat(recordDeclaration.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 657 Método: assertThat(recordDeclaration.getConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 658 Método: assertThat(recordDeclaration.getCompactConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 680 Método: assertThat(recordDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 681 Método: assertThat(recordDeclaration.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 683 Método: assertThat(recordDeclaration.getConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 684 Método: assertThat(recordDeclaration.getCompactConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 708 Método: assertThat(recordDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 709 Método: assertThat(recordDeclaration.getModifiers())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 711 Método: assertThat(recordDeclaration.getConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 712 Método: assertThat(recordDeclaration.getCompactConstructors())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 737 Método: assertThat(recordDeclaration.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 745 Método: assertThrows(AssertionFailedError.class, () -> {
    CompilationUnit cu = TestParser.parseCompilationUnit(s);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 751 Método: assertThrows(AssertionFailedError.class, () -> {
    CompilationUnit cu = TestParser.parseCompilationUnit(s);
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 758 Método: assertEquals(1, recordDeclarations.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/RecordDeclarationTest.java linha: 763 Método: assertEquals(2, recordDeclarations.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/AnnotationDeclarationTest.java linha: 34 Método: assertThrows(IllegalStateException.class, () -> new AnnotationDeclaration().addField(Object.class, "oo"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/AnnotationDeclarationTest.java linha: 40 Método: assertEquals("TT tt = new <String> @TypeAnno @TA2 TT(\"S\");", statement.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 43 Método: assertEquals("Source.Inner.this", method.getReceiverParameter().get().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 49 Método: assertEquals("this", method.getReceiverParameter().get().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 55 Método: assertFalse(method.getReceiverParameter().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 62 Método: assertEquals(method1.getSignature(), method2.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 69 Método: assertEquals(method1.getSignature(), method2.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 76 Método: assertEquals(method1.getSignature(), method2.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 83 Método: assertNotEquals(method1.getSignature(), method2.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 90 Método: assertNotEquals(method1.getSignature(), method2.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 97 Método: assertNotEquals(method1.getSignature(), method2.getSignature())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 103 Método: assertEquals("x(int, String)", method1.getSignature().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 109 Método: assertTrue(method1.isVariableArityMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 111 Método: assertTrue(method2.isVariableArityMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 117 Método: assertTrue(method1.isFixedArityMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/MethodDeclarationTest.java linha: 119 Método: assertTrue(method2.isFixedArityMethod())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 38 Método: assertFalse(y.isInnerClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 39 Método: assertTrue(y.isNestedType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 40 Método: assertFalse(y.isLocalClassDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 48 Método: assertFalse(y.isInnerClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 49 Método: assertTrue(y.isNestedType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 50 Método: assertFalse(y.isLocalClassDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 58 Método: assertTrue(y.isInnerClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 59 Método: assertTrue(y.isNestedType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 60 Método: assertFalse(y.isLocalClassDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 68 Método: assertFalse(y.isInnerClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 69 Método: assertFalse(y.isNestedType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 70 Método: assertFalse(y.isLocalClassDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 78 Método: assertFalse(x.isInnerClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 79 Método: assertFalse(x.isNestedType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java linha: 80 Método: assertTrue(x.isLocalClassDeclaration())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 47 Método: assertEquals(var1, var1.getType().getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 48 Método: assertEquals(var2, var2.getType().getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 65 Método: assertTrue(modifiers.contains(Modifier.publicModifier()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 66 Método: assertTrue(modifiers.contains(Modifier.staticModifier()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 67 Método: assertTrue(modifiers.contains(Modifier.finalModifier()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 68 Método: assertEquals(3, modifiers.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 72 Método: assertEquals(0, modifiers.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 76 Método: assertTrue(modifiers.contains(Modifier.privateModifier()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 77 Método: assertTrue(modifiers.contains(Modifier.synchronizedModifier()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/FieldDeclarationTest.java linha: 78 Método: assertEquals(2, modifiers.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/body/ConstructorDeclarationTest.java linha: 35 Método: assertEquals(String.format("public Cons() {%1$s" + "    super();%1$s" + "}", SYSTEM_EOL), cons.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 46 Método: assertEquals(1, decl.getOrphanComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 47 Método: assertSame(decl, c.getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 48 Método: assertTrue(decl.removeOrphanComment(c))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 49 Método: assertEquals(0, decl.getOrphanComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 50 Método: assertFalse(c.getParentNode().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 61 Método: assertFalse(aClass.removeOrphanComment(c))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 62 Método: assertEquals(1, aField.getOrphanComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 63 Método: assertTrue(c.getParentNode().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 70 Método: assertTrue(decl.hasJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 77 Método: assertTrue(decl.hasJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 83 Método: assertFalse(decl.hasJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 90 Método: assertFalse(decl.hasJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 97 Método: assertFalse(decl.hasJavaDocComment())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 113 Método: assertTrue(comment.findCompilationUnit().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 128 Método: assertTrue(comment.findCompilationUnit().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodeTest.java linha: 137 Método: assertEquals(String.format("class X {%1$s}%1$s", SYSTEM_EOL), cu.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 59 Método: assertThat(expr.getType().getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 70 Método: assertThat(expr.getType().getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 80 Método: assertEquals("obj instanceof final @A @DA String s", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 87 Método: assertThat(expr.getType().getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 99 Método: assertEquals("obj", expr.getExpression().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 100 Método: assertEquals("String", expr.getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 101 Método: assertTrue(expr.getPattern().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 104 Método: assertEquals("String", patternExpr.getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 105 Método: assertEquals("s", patternExpr.getName().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 106 Método: assertFalse(patternExpr.isFinal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 109 Método: assertTrue(expr.getName().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 110 Método: assertEquals("s", expr.getName().get().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 118 Método: assertEquals("obj instanceof String s", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 126 Método: assertEquals("obj", expr.getExpression().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 127 Método: assertEquals(String.class.getSimpleName(), expr.getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 128 Método: assertFalse(expr.getPattern().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 131 Método: assertFalse(expr.getName().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 139 Método: assertEquals("obj", expr.getExpression().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 140 Método: assertEquals("String", expr.getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 141 Método: assertTrue(expr.getPattern().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 144 Método: assertEquals("String", patternExpr.getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 145 Método: assertEquals("s", patternExpr.getName().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 146 Método: assertTrue(patternExpr.isFinal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 149 Método: assertTrue(expr.getName().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 150 Método: assertEquals("s", expr.getName().get().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/InstanceOfExprTest.java linha: 158 Método: assertEquals("obj instanceof final String s", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/DoubleLiteralExprTest.java linha: 34 Método: Assertions.assertEquals(x, e.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/DoubleLiteralExprTest.java linha: 41 Método: Assertions.assertEquals(x, e.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/DoubleLiteralExprTest.java linha: 48 Método: Assertions.assertEquals(a, e.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/DoubleLiteralExprTest.java linha: 55 Método: Assertions.assertEquals(a, e.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/DoubleLiteralExprTest.java linha: 62 Método: Assertions.assertEquals(x, e.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/CharLiteralExprTest.java linha: 37 Método: assertEquals("a", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/CharLiteralExprTest.java linha: 43 Método: assertEquals("\\t", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/CharLiteralExprTest.java linha: 49 Método: assertEquals("Ω", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/CharLiteralExprTest.java linha: 55 Método: assertEquals("\\177", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/CharLiteralExprTest.java linha: 61 Método: assertEquals("\\u03a9", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/CharLiteralExprTest.java linha: 70 Método: assertEquals("\\'", c.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/AssignExprTest.java linha: 31 Método: assertEquals(BinaryExpr.Operator.PLUS, AssignExpr.Operator.PLUS.toBinaryOperator().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ObjectCreationExprTest.java linha: 33 Método: assertEquals("new @Test N()", e.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/MethodCallExprTest.java linha: 39 Método: assertEquals(2, methodCallExpr.getChildNodes().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/MethodCallExprTest.java linha: 40 Método: assertEquals(empty(), lambdaExpr.getParentNode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SuperExprTest.java linha: 34 Método: assertThrows(ParseProblemException.class, () -> parseExpression("super"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SuperExprTest.java linha: 43 Método: assertEquals("A", className.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SuperExprTest.java linha: 52 Método: assertEquals("a.B", className.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/MethodReferenceExprTest.java linha: 33 Método: assertNotNull(new MethodReferenceExpr().getScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ArrayCreationExprTest.java linha: 36 Método: assertEquals("new empty[] {}", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ArrayCreationExprTest.java linha: 43 Método: assertEquals("new byte[] {}", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ArrayCreationExprTest.java linha: 55 Método: assertEquals("new int[] { 1, 2, 3 }", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SimpleNameTest.java linha: 34 Método: assertEquals("empty", new SimpleName().getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SimpleNameTest.java linha: 39 Método: assertThrows(AssertionError.class, () -> new SimpleName(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SimpleNameTest.java linha: 44 Método: assertThrows(AssertionError.class, () -> new SimpleName(null))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SimpleNameTest.java linha: 50 Método: assertEquals("xxx\\u2122xxx", name.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 39 Método: assertEquals("c", name.getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 45 Método: assertEquals("a.b.c", name.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 50 Método: assertThrows(ParseProblemException.class, () -> parseName(""))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 57 Método: assertEquals("import java.util.List;" + SYSTEM_EOL, importDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 58 Método: assertEquals("import java.util.List;", ConcreteSyntaxModel.genericPrettyPrint(importDeclaration))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 65 Método: assertEquals("package p1.p2;" + SYSTEM_EOL + SYSTEM_EOL, cu.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 66 Método: assertEquals("package p1.p2;" + SYSTEM_EOL + SYSTEM_EOL, ConcreteSyntaxModel.genericPrettyPrint(cu))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 72 Método: assertFalse(name.isInternal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 78 Método: assertTrue(name.getQualifier().get().isInternal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 80 Método: assertTrue(name.getQualifier().get().getQualifier().get().isInternal())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 88 Método: assertFalse(name.getQualifier().get().isTopLevel())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 90 Método: assertFalse(name.getQualifier().get().getQualifier().get().isTopLevel())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/NameTest.java linha: 98 Método: assertTrue(name.isTopLevel())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 43 Método: assertEquals(3, entry2labels.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 44 Método: assertEquals("MONDAY", entry2labels.get(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 45 Método: assertEquals("FRIDAY", entry2labels.get(1).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 46 Método: assertEquals("SUNDAY", entry2labels.get(2).toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 76 Método: assertEquals(THROWS_STATEMENT, switchExpr.getEntry(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 87 Método: assertEquals(EXPRESSION, switchExpr.getEntry(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 102 Método: assertEquals(BLOCK, switchExpr.getEntry(2).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/SwitchExprTest.java linha: 103 Método: assertEquals(BlockStmt.class, switchExpr.getEntry(2).getStatements().get(0).getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 37 Método: assertThat(new CharLiteralExpr('\t').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 38 Método: assertThat(new CharLiteralExpr('\b').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 39 Método: assertThat(new CharLiteralExpr('\f').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 40 Método: assertThat(new CharLiteralExpr('\r').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 41 Método: assertThat(new CharLiteralExpr('\n').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 42 Método: assertThat(new CharLiteralExpr('\\').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 43 Método: assertThat(new CharLiteralExpr('\"').getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 45 Método: assertThat(new IntegerLiteralExpr("0B0").asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 46 Método: assertThat(new IntegerLiteralExpr("0b0").asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 47 Método: assertThat(new IntegerLiteralExpr("0X0").asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 48 Método: assertThat(new IntegerLiteralExpr("0x0").asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 49 Método: assertThat(new IntegerLiteralExpr(0).asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 50 Método: assertThat(new IntegerLiteralExpr(00).asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 51 Método: assertThat(new IntegerLiteralExpr(0B0).asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 52 Método: assertThat(new IntegerLiteralExpr(0b0).asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 53 Método: assertThat(new IntegerLiteralExpr(0X0).asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 54 Método: assertThat(new IntegerLiteralExpr(0x0).asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 56 Método: assertThat(new LongLiteralExpr("0B0L").asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 57 Método: assertThat(new LongLiteralExpr("0b0L").asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 58 Método: assertThat(new LongLiteralExpr("0X0L").asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 59 Método: assertThat(new LongLiteralExpr("0x0L").asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 60 Método: assertThat(new LongLiteralExpr(0L).asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 61 Método: assertThat(new LongLiteralExpr(00L).asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 62 Método: assertThat(new LongLiteralExpr(0B0L).asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 63 Método: assertThat(new LongLiteralExpr(0b0L).asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 64 Método: assertThat(new LongLiteralExpr(0X0L).asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 65 Método: assertThat(new LongLiteralExpr(0x0L).asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 67 Método: assertThat(new DoubleLiteralExpr("0.0f").asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 68 Método: assertThat(new DoubleLiteralExpr("0.0F").asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 69 Método: assertThat(new DoubleLiteralExpr("0.0d").asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 70 Método: assertThat(new DoubleLiteralExpr("0.0D").asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 71 Método: assertThat(new DoubleLiteralExpr(0.0F).asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 72 Método: assertThat(new DoubleLiteralExpr(0.0f).asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 73 Método: assertThat(new DoubleLiteralExpr(0.0D).asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 74 Método: assertThat(new DoubleLiteralExpr(0.0d).asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 87 Método: assertThat(dec.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 88 Método: assertThat(posOct.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 89 Método: assertThat(negOct.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 90 Método: assertThat(posHex.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 91 Método: assertThat(negHex.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 92 Método: assertThat(posBin.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 93 Método: assertThat(negBin.asInt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 106 Método: assertThat(literalIntExpr.asNumber())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 107 Método: assertThat(literalLongExpr.asNumber())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 123 Método: assertThat(dec.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 124 Método: assertThat(posOct.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 125 Método: assertThat(negOct.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 126 Método: assertThat(posHex.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 127 Método: assertThat(negHex.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 128 Método: assertThat(posBin.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 129 Método: assertThat(negBin.asLong())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 145 Método: assertThat(a.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 146 Método: assertThat(percent.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 147 Método: assertThat(tab.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 148 Método: assertThat(newLine.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 149 Método: assertThat(slash.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 150 Método: assertThat(quote.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 151 Método: assertThat(omega.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 152 Método: assertThat(unicode.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 153 Método: assertThat(ascii.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 154 Método: assertThat(trademark.asChar())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 166 Método: assertThat(posFloat.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 167 Método: assertThat(negFloat.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 168 Método: assertThat(posDouble.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 169 Método: assertThat(negDouble.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 170 Método: assertThat(posHexFloat.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 171 Método: assertThat(negHexFloat.asDouble())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 176 Método: assertThat(new StringLiteralExpr("\n").getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 177 Método: assertThat(new StringLiteralExpr("\r").getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 178 Método: assertThat(new StringLiteralExpr("").setEscapedValue("\n").getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 179 Método: assertThat(new StringLiteralExpr("").setEscapedValue("\r").getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 180 Método: assertThat(new StringLiteralExpr("").setEscapedValue("\n").asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 181 Método: assertThat(new StringLiteralExpr("").setEscapedValue("\r").asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LiteralStringValueExprTest.java linha: 182 Método: assertThat(new StringLiteralExpr("Hello\nWorld\rHello\"World\'").asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/StringLiteralExprTest.java linha: 33 Método: assertEquals("xxx\\u03a9xxx", omega.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ThisExprTest.java linha: 38 Método: assertTrue(expr.isThisExpr())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ThisExprTest.java linha: 47 Método: assertEquals("c", fieldAccess.getName().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ThisExprTest.java linha: 56 Método: assertEquals("A", className.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ThisExprTest.java linha: 65 Método: assertEquals("c", fieldAccess.getName().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ThisExprTest.java linha: 74 Método: assertEquals("a.B", className.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/ThisExprTest.java linha: 83 Método: assertEquals("c", fieldAccess.getName().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LambdaExprTest.java linha: 51 Método: assertEquals(startToken, tokenRange.getBegin().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LambdaExprTest.java linha: 52 Método: assertEquals(endToken, tokenRange.getEnd().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LambdaExprTest.java linha: 58 Método: assertEquals("Optional[y]", lambdaExpr.getExpressionBody().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LambdaExprTest.java linha: 64 Método: assertEquals("Optional.empty", lambdaExpr.getExpressionBody().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LambdaExprTest.java linha: 70 Método: assertEquals("a -> 5", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/LambdaExprTest.java linha: 82 Método: assertEquals("(a, b) -> 5", expr.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 34 Método: assertEquals(AssignExpr.Operator.PLUS, BinaryExpr.Operator.PLUS.toAssignOperator().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 61 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 72 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 83 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 94 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 105 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/BinaryExprTest.java linha: 117 Método: assertEquals(expected, actual)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 42 Método: assertEquals("              <html>\n" + "                  <body>\n" + "                      <p>Hello, world</p>\n" + "                  </body>\n" + "              </html>\n" + "              ", textBlock.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 49 Método: assertEquals(asList("<html>", "    <body>", "        <p>Hello, world</p>", "    </body>", "</html>", ""), textBlock.stripIndentOfLines().collect(toList()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 58 Método: assertEquals("<html>\n" + "    <body>\n" + "        <p>Hello, world</p>\n" + "    </body>\n" + "</html>\n", textBlock.stripIndent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 64 Método: assertEquals("<html>\n" + "    <body>\n" + "        <p>Hello, world</p>\n" + "    </body>\n" + "</html>\n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 81 Método: assertEquals("              <html>\n" + "                  <body>\n" + "                      <p>Hello, world</p>\n" + "                  </body>\n" + "              </html>\n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 99 Método: assertEquals("      <html>\n" + "          <body>\n" + "              <p>Hello, world</p>\n" + "          </body>\n" + "      </html>\n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 116 Método: assertEquals("<html>\n" + "    <body>\n" + "        <p>Hello, world</p>\n" + "    </body>\n" + "</html>\n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 145 Método: assertEquals("String text = \"\"\"\n" + "    A text block inside a text block\n" + "\"\"\";\n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 166 Método: assertEquals("The quick brown fox  \n" + "jumps over the lazy dog\n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 178 Método: assertEquals("Lorem ipsum dolor sit amet, consectetur adipiscing " + "elit, sed do eiusmod tempor incididunt ut labore " + "et dolore magna aliqua.", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 191 Método: assertEquals("red   \n" + "green \n" + "blue  \n", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java linha: 201 Método: assertEquals("\nHello\n" + "World", textBlock.translateEscapes())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 42 Método: assertEquals(1, compilationUnit.getAllContainedComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 52 Método: assertEquals(sourceRoot, sourceRoot1)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 57 Método: assertThrows(RuntimeException.class, () -> {
    Path sourceRoot = mavenModuleRoot(CompilationUnitTest.class).resolve(Paths.get("src", "test", "resources")).normalize();
    Path testFile = sourceRoot.resolve(Paths.get("com", "github", "javaparser", "storage", "A.java"));
    CompilationUnit cu = parse(testFile);
    cu.getStorage().get().getSourceRoot();
})
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 73 Método: assertEquals(sourceRoot, sourceRoot1)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 82 Método: assertEquals("PrimaryType", cu.getPrimaryTypeName().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 89 Método: assertFalse(cu.getPrimaryTypeName().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 97 Método: assertEquals("PrimaryType", cu.getPrimaryType().get().getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/CompilationUnitTest.java linha: 106 Método: assertFalse(cu.getPrimaryType().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 45 Método: assertEquals(cu, x.findCompilationUnit().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 52 Método: assertEquals("int x;", x.findAncestor(FieldDeclaration.class).get().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 59 Método: assertEquals(FieldDeclaration.class.getName(), vd.findAncestor(new Class[] { CompilationUnit.class, ClassOrInterfaceDeclaration.class, FieldDeclaration.class }).get().getClass().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 62 Método: assertEquals(ClassOrInterfaceDeclaration.class.getName(), vd.findAncestor(new Class[] { CompilationUnit.class, ClassOrInterfaceDeclaration.class }).get().getClass().getName())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 70 Método: assertFalse(x.findCompilationUnit().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 78 Método: assertEquals("1 + 111", b.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 86 Método: assertEquals("11", b.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 93 Método: assertEquals("[2, 3]", ints.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 100 Método: assertEquals("[1, 2, 3]", ints.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 107 Método: assertEquals("[1 + 2 + 3, 1 + 2, 1, 2, 3]", ints.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 114 Método: assertEquals("Optional[2]", ints.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 121 Método: assertEquals("Optional[1]", ints.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/WalkFindTest.java linha: 132 Método: assertEquals("[2, 3]", ints.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 42 Método: assertEquals("int", typeAsString("int x"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 43 Método: assertEquals("List<Long>", typeAsString("List<Long> x"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 44 Método: assertEquals("String", typeAsString("@A String x"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 45 Método: assertEquals("List<? extends Object>", typeAsString("List<? extends Object> x"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 50 Método: assertThrows(ParseProblemException.class, () -> typeAsString("List<long> x;"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 63 Método: assertTrue(result.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 66 Método: assertEquals("List<long>", decl.getVariable(0).getType().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 76 Método: assertTrue(type.isArrayType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 80 Método: assertNotNull(s[0])
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/TypeTest.java linha: 86 Método: assertEquals("TypeUtilsTest<String>.Tester", type.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 51 Método: assertThat(arrayType1.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 52 Método: assertThat(arrayType2.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 53 Método: assertThat(arrayType3.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 54 Método: assertThat(arrayType4.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 56 Método: assertThat(elementType.getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 57 Método: assertThat(fieldDeclaration.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 59 Método: assertThat(arrayType1.getParentNode().get().getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 73 Método: assertThat(arrayType1.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 74 Método: assertThat(arrayType2.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 75 Método: assertThat(arrayType3.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 76 Método: assertThat(arrayType4.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 78 Método: assertThat(elementType.getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 79 Método: assertThat(variableDeclarationExpr.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 81 Método: assertThat(arrayType1.getParentNode().get().getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 91 Método: assertThat(elementType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 93 Método: assertThat(arrayType1.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 94 Método: assertThat(arrayType2.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 95 Método: assertThat(methodDeclaration.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 97 Método: assertThat(methodDeclaration.getType().getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 111 Método: assertThat(elementType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 112 Método: assertThat(outerArrayType.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 113 Método: assertThat(innerArrayType.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 114 Método: assertThat(parameter.getAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 116 Método: assertThat(parameter.getType().getParentNode().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 125 Método: assertEquals("@C" + SYSTEM_EOL + "int[][] a;", variableDeclarationStatement.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 133 Método: assertEquals("Blob[][] a;", fieldDeclaration.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 141 Método: assertEquals("Blob[][] a() {" + SYSTEM_EOL + "}", method.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 149 Método: assertEquals(ArrayType.Origin.NAME, outerType.asArrayType().getOrigin())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 150 Método: assertEquals(ArrayType.Origin.TYPE, outerType.asArrayType().getComponentType().asArrayType().getOrigin())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 158 Método: assertEquals(ArrayType.Origin.NAME, outerType.asArrayType().getOrigin())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 159 Método: assertEquals(ArrayType.Origin.TYPE, outerType.asArrayType().getComponentType().asArrayType().getOrigin())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 167 Método: assertEquals("void a(Blob[][] a) {" + SYSTEM_EOL + "}", method.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 175 Método: assertThat(innerType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 182 Método: assertThat(p.getVarArgsAnnotations())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 183 Método: assertEquals("int[][]@X ... a", p.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 184 Método: assertEquals("int[][]@X... a", ConcreteSyntaxModel.genericPrettyPrint(p))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 190 Método: assertEquals(1, fd1.getVariable(0).getType().getArrayLevel())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 192 Método: assertEquals(2, fd2.getVariable(0).getType().getArrayLevel())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ArrayTypeTest.java linha: 198 Método: assertEquals(8, type.getRange().get().end.column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 42 Método: assertNotEquals("A", classOrInterfaceType.getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 44 Método: assertEquals("A", classOrInterfaceType.getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 53 Método: assertEquals("A.B", classB.getNameWithScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 61 Método: assertTrue(classB.getTypeArguments().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 62 Método: assertEquals(1, classB.getTypeArguments().get().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 63 Método: assertEquals(classA, classB.getTypeArguments().get().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 65 Método: assertEquals("A.B", classB.getNameWithScope())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 66 Método: assertEquals("A.B<A>", classB.asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 75 Método: assertEquals(1, classA.getAnnotations().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 76 Método: assertEquals(annotationExpr, classA.getAnnotation(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 82 Método: Assertions.assertThrows(IllegalStateException.class, classA::resolve)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 88 Método: Assertions.assertThrows(IllegalStateException.class, classA::toDescriptor)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 96 Método: assertTrue(newClass.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 97 Método: assertSame(classA, newClass.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 103 Método: assertSame(classA, classOrInterfaceType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 110 Método: assertTrue(classA.isClassOrInterfaceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 111 Método: assertEquals(classA, classA.asClassOrInterfaceType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 117 Método: assertEquals(classA, classA.clone())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 123 Método: assertEquals(JavaParserMetaModel.classOrInterfaceTypeMetaModel, classA.getMetaModel())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/type/ClassOrInterfaceTypeTest.java linha: 134 Método: assertEquals(classA, classOrInterfaceType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 40 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 42 Método: assertTrue(parse.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 50 Método: assertFalse(node.isAncestorOf(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 58 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 60 Método: assertTrue(parse.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 68 Método: assertFalse(node.isDescendantOf(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 76 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 78 Método: assertTrue(parse.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 88 Método: assertTrue(superNode.isAncestorOf(subNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 89 Método: assertFalse(subNode.isAncestorOf(superNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 90 Método: assertTrue(subNode.isDescendantOf(superNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 91 Método: assertFalse(superNode.isDescendantOf(subNode))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 99 Método: assertNotNull(providerA)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 101 Método: assertTrue(parseA.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 104 Método: assertNotNull(providerB)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 106 Método: assertTrue(parseB.isSuccessful())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 124 Método: assertFalse(superNodeA.isAncestorOf(superNodeB))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 125 Método: assertFalse(superNodeA.isDescendantOf(subNodeB))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 126 Método: assertFalse(superNodeB.isAncestorOf(superNodeA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/AncestorDescendantTests.java linha: 127 Método: assertFalse(superNodeB.isDescendantOf(subNodeA))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 52 Método: assertThat(node.getData(ABC))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 53 Método: assertThat(node.getData(LISTY))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 54 Método: assertThat(node.containsData(ABC))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 55 Método: assertThat(node.containsData(LISTY))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 56 Método: assertThat(node.containsData(DING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 66 Método: assertThat(node.containsData(ABC))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 73 Método: assertThrows(IllegalStateException.class, () -> node.getData(DING))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 83 Método: assertEquals("ABC!", clone.getData(ABC))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/DataKeyTest.java linha: 84 Método: assertEquals("DEF!", clone.getData(DEF))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 79 Método: assertEquals(Arrays.asList("'int a;' ADDITION in list at 1", "'int b;' ADDITION in list at 2", "'int c;' ADDITION in list at 3"), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 93 Método: assertEquals(Arrays.asList("'int a;' ADDITION in list at 0", "'int b;' ADDITION in list at 1", "'int c;' ADDITION in list at 2"), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 107 Método: assertEquals(Arrays.asList("'int a;' REMOVAL in list at 0", "'int b;' REMOVAL in list at 0", "'int c;' REMOVAL in list at 0"), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 121 Método: assertEquals(Arrays.asList("'int b;' REMOVAL in list at 1", "'int d;' ADDITION in list at 1"), changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 134 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 146 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 147 Método: assertEquals(cd.getMembers().size(), 4)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 150 Método: assertNotNull(cd.getMembers().removeFirst())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 151 Método: assertEquals(cd.getMembers().size(), i)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 154 Método: assertEquals(cd.getMembers().size(), 0)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 166 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 167 Método: assertEquals(cd.getMembers().size(), 4)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 170 Método: assertNotNull(cd.getMembers().removeLast())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 171 Método: assertEquals(cd.getMembers().size(), i)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 174 Método: assertEquals(cd.getMembers().size(), 0)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 186 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 198 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 212 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 232 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ListObservationTest.java linha: 247 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 53 Método: assertEquals(1, decl.getOrphanComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 54 Método: assertTrue(c.remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 55 Método: assertEquals(0, decl.getOrphanComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 63 Método: assertTrue(decl.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 64 Método: assertTrue(c.remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 65 Método: assertFalse(decl.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 71 Método: assertFalse(c.remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 78 Método: assertEquals(" xxx\\u2122xxx", comment.getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/comments/CommentTest.java linha: 202 Método: assertTrue(block.toString().contains("TODO"))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/imports/ImportDeclarationTest.java linha: 34 Método: assertEquals("a.b.c.X", i.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/imports/ImportDeclarationTest.java linha: 40 Método: assertEquals("a.b.c.D", i.getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/imports/ImportDeclarationTest.java linha: 41 Método: assertEquals("D", i.getName().getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/imports/ImportDeclarationTest.java linha: 47 Método: assertEquals("a.b.c.X", i.getName().getQualifier().get().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/imports/ImportDeclarationTest.java linha: 48 Método: assertEquals("def", i.getName().getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/imports/ImportDeclarationTest.java linha: 54 Método: assertEquals("a.b.c.X", i.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ReplaceNodeTest.java linha: 36 Método: assertEquals(String.format("package z;%1$s" + "%1$s" + "class Y {%1$s" + "}%1$s", SYSTEM_EOL), cu.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ReplaceNodeTest.java linha: 46 Método: assertEquals(String.format("package x;%1$s" + "%1$s" + "class B {%1$s" + "%1$s" + "    int y;%1$s" + "}%1$s", SYSTEM_EOL), cu.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 44 Método: assertThat(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 45 Método: assertThat(result.getResult().get().getParsed())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 46 Método: assertThat(result.getProblems())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 48 Método: assertThat(result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 55 Método: assertThat(result.getResult().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 56 Método: assertThat(result.getResult().get().getParsed())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 57 Método: assertThat(result.getProblems().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 60 Método: assertThat(problem.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ParseResultTest.java linha: 62 Método: assertThat(result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 52 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 55 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 58 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 63 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 82 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 85 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 88 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 91 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 94 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 110 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 113 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 116 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 121 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 127 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 146 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 149 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 152 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 157 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 165 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 187 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 205 Método: assertFalse(cu.getClassByName("A").get().getName().remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 206 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 228 Método: assertTrue(cu.getClassByName("A").get().getMethodsByName("foo").get(0).getBody().get().remove())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/ObservationTest.java linha: 229 Método: assertThat(changes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodePositionTest.java linha: 83 Método: assertTrue(res.getProblems().isEmpty())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/NodePositionTest.java linha: 87 Método: assertNotNull(n.getRange(), String.format("There should be no node without a range: %s (class: %s)", n, n.getClass().getCanonicalName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/HashCodeVisitorTest.java linha: 47 Método: assertEquals(p1.hashCode(), p2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/HashCodeVisitorTest.java linha: 54 Método: assertNotEquals(p1.hashCode(), p2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/CloneVisitorTest.java linha: 95 Método: assertEquals("javadoc", bodyDeclaration.getComment().get().getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/CloneVisitorTest.java linha: 90 Método: assertEquals("javadoc", typeDeclaration.getComment().get().getContent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/CloneVisitorTest.java linha: 104 Método: assertEquals("List<@C ? extends Object>", type.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 53 Método: assertEquals("<(2 + 3) + (4 + 5)> <(2 + 3)> <(4 + 5)> <2 + 3> <4 + 5> <2> <3> <4> <5> ", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 84 Método: assertEquals("<(2 + 3) + (4 + 5)> <(2 + 3)> <2 + 3> <2> <3> <(4 + 5)> <4 + 5> <4> <5> ", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 96 Método: assertEquals("<2> <3> <2 + 3> <(2 + 3)> <4> <5> <4 + 5> <(4 + 5)> <(2 + 3) + (4 + 5)> ", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 131 Método: assertEquals("x = 1", visitor.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 132 Método: assertEquals("int x = 1;", visitor.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 141 Método: assertFalse(visitor.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/TreeVisitorTest.java linha: 158 Método: assertEquals("<(2 + 3)> <(4 + 5)> ", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 47 Método: assertEquals(p1.hashCode(), p2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 54 Método: assertEquals(p1.hashCode(), p2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 55 Método: assertEquals(3, p1.getAllComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 56 Método: assertEquals(2, p2.getAllComments().size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 63 Método: assertNotEquals(p1.hashCode(), p2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 69 Método: assertEquals(0, NoCommentHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 77 Método: assertEquals(0, NoCommentHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java linha: 85 Método: assertEquals(0, NoCommentHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/GenericVisitorWithDefaultsTest.java linha: 76 Método: assertNull(node)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/GenericVisitorWithDefaultsTest.java linha: 704 Método: assertSame(argument, argumentCaptor.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentEqualsVisitorTest.java linha: 37 Método: assertTrue(NoCommentEqualsVisitor.equals(p1, p2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentEqualsVisitorTest.java linha: 44 Método: assertTrue(NoCommentEqualsVisitor.equals(p1, p2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/NoCommentEqualsVisitorTest.java linha: 51 Método: assertFalse(NoCommentEqualsVisitor.equals(p1, p2))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 68 Método: assertEquals("extra c", list.get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 69 Método: assertEquals("extra b", list.get(1).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 70 Método: assertEquals("extra a", list.get(2).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 71 Método: assertEquals("extra t", list.get(3).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 72 Método: assertEquals("x", list.get(4).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 73 Método: assertEquals("c", list.get(5).getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 74 Método: assertEquals(6, list.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 88 Método: assertEquals("2", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 102 Método: assertEquals("1", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 115 Método: assertNull(result)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ModifierVisitorTest.java linha: 128 Método: assertEquals("void x() {" + SYSTEM_EOL + "}", result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/VoidVisitorTest.java linha: 50 Método: Assertions.assertEquals(oce.size(), foundObjs.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/VoidVisitorTest.java linha: 79 Método: Assertions.assertEquals(2, oce.size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/VoidVisitorWithDefaultsTest.java linha: 73 Método: assertSame(argument, argumentCaptor.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/VoidVisitorWithDefaultsTest.java linha: 702 Método: assertSame(argument, argumentCaptor.getValue())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 44 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 50 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 56 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 62 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 68 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 74 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 80 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 86 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 92 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 98 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 104 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 110 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 116 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 122 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 128 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 134 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 140 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 146 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 152 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 158 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 164 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 170 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 176 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 182 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 188 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 194 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 200 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 206 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 212 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 218 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 224 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 230 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 236 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 242 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 248 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 254 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 260 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 266 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 272 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 278 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 284 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 292 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 298 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 304 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 310 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 316 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 322 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 328 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 334 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 340 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 346 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 352 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 358 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 364 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 370 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 376 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 382 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 388 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 394 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 400 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 406 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 412 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 418 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 424 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 430 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 436 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 442 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 448 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 454 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 460 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 466 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 472 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 478 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 484 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 490 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 496 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 502 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 508 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 514 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 520 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 526 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 532 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 538 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 544 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 550 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 556 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 562 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 568 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 574 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 580 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 586 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 592 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 598 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 604 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 610 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 616 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java linha: 622 Método: assertEquals(node.hashCode(), ObjectIdentityHashCodeVisitor.hashCode(node))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/SwitchStmtTest.java linha: 41 Método: assertEquals(STATEMENT_GROUP, switchStmt.getEntry(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/SwitchStmtTest.java linha: 42 Método: assertEquals(STATEMENT_GROUP, switchStmt.getEntry(1).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/SwitchStmtTest.java linha: 43 Método: assertEquals(STATEMENT_GROUP, switchStmt.getEntry(2).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/SwitchStmtTest.java linha: 44 Método: assertEquals(new NodeList<>(), switchStmt.getEntry(2).getLabels())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/SwitchStmtTest.java linha: 55 Método: assertEquals(EXPRESSION, switchStmt.getEntry(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 38 Método: assertEquals(BinaryExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 45 Método: assertEquals(EnclosedExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 47 Método: assertEquals(EnclosedExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 54 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 56 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 58 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 60 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 62 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 64 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 66 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 68 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 74 Método: assertEquals(EnclosedExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 80 Método: assertEquals(ConditionalExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 112 Método: assertEquals(NameExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 114 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/YieldStmtTest.java linha: 116 Método: assertEquals(MethodCallExpr.class, statement.getExpression().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 35 Método: assertFalse(ifStmt.hasElseBlock())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 36 Método: assertTrue(ifStmt.hasElseBranch())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 37 Método: assertFalse(ifStmt.hasCascadingIfStmt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 43 Método: assertTrue(ifStmt.hasElseBlock())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 44 Método: assertTrue(ifStmt.hasElseBranch())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 45 Método: assertFalse(ifStmt.hasCascadingIfStmt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 51 Método: assertFalse(ifStmt.hasElseBlock())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 52 Método: assertTrue(ifStmt.hasElseBranch())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/IfElseStmtTest.java linha: 53 Método: assertTrue(ifStmt.hasCascadingIfStmt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/ForEachStmtTest.java linha: 35 Método: assertFalse(statement.hasFinalVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/ForEachStmtTest.java linha: 36 Método: assertEquals(PrimitiveType.intType(), statement.getVariableDeclarator().getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/ForEachStmtTest.java linha: 37 Método: assertEquals("i", statement.getVariableDeclarator().getName().getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/ForEachStmtTest.java linha: 43 Método: assertTrue(statement.hasFinalVariable())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/ForEachStmtTest.java linha: 44 Método: assertEquals(new ClassOrInterfaceType(null, "Object"), statement.getVariableDeclarator().getType())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/ForEachStmtTest.java linha: 45 Método: assertEquals("o", statement.getVariableDeclarator().getName().getIdentifier())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 37 Método: assertFalse(statement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 43 Método: assertEquals("hond", statement.getLabel().get().asString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 49 Método: assertFalse(statement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 50 Método: assertEquals("break;", statement.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 56 Método: assertTrue(statement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 63 Método: assertTrue(statement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 64 Método: assertEquals(label, statement.getLabel().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 70 Método: assertTrue(statement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 73 Método: assertFalse(statement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 78 Método: assertTrue(new BreakStmt().isBreakStmt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 84 Método: assertSame(breakStatement, breakStatement.asBreakStmt())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 91 Método: assertTrue(optBreak.isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 92 Método: assertSame(breakStatement, optBreak.get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 99 Método: assertNotSame(breakStatement, clonedStatement)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 100 Método: assertEquals(breakStatement, clonedStatement)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 106 Método: assertTrue(breakStatement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 109 Método: assertTrue(breakStatement.remove(label))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 110 Método: assertFalse(breakStatement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 119 Método: assertTrue(breakStatement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 120 Método: assertSame(originalLabel, breakStatement.getLabel().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 123 Método: assertTrue(breakStatement.getLabel().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/BreakStmtTest.java linha: 124 Método: assertSame(replacementLabel, breakStatement.getLabel().get())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 42 Método: assertInstanceOf(VariableDeclarationExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 48 Método: assertInstanceOf(VariableDeclarationExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 54 Método: assertInstanceOf(VariableDeclarationExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 60 Método: assertInstanceOf(NameExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 66 Método: assertInstanceOf(NameExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 67 Método: assertInstanceOf(NameExpr.class, tryStmt.getResources().get(1))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 73 Método: assertInstanceOf(FieldAccessExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 79 Método: assertInstanceOf(FieldAccessExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 85 Método: assertInstanceOf(FieldAccessExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 91 Método: assertInstanceOf(VariableDeclarationExpr.class, tryStmt.getResources().get(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 97 Método: assertInstanceOf(VariableDeclarationExpr.class, tryStmt.getResources().get(0))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 103 Método: assertTrue(result.isSuccessful(), result.toString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 110 Método: assertTrue(result.isSuccessful(), result.toString())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing/src/test/java/com/github/javaparser/ast/stmt/TryStmtTest.java linha: 117 Método: assertTrue(result.isSuccessful(), result.toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/visitors/PositionTestVisitor.java linha: 546 Método: assertThat(begin.line, is(greaterThanOrEqualTo(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/visitors/PositionTestVisitor.java linha: 547 Método: assertThat(begin.column, is(greaterThanOrEqualTo(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/visitors/PositionTestVisitor.java linha: 548 Método: assertThat(end.line, is(greaterThanOrEqualTo(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/visitors/PositionTestVisitor.java linha: 549 Método: assertThat(end.column, is(greaterThanOrEqualTo(0)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/visitors/PositionTestVisitor.java linha: 554 Método: assertThat(begin.line, is(lessThanOrEqualTo(end.line)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/visitors/PositionTestVisitor.java linha: 552 Método: assertThat(begin.column, is(lessThanOrEqualTo(end.column)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 216 Método: assertNotEquals(compilationUnit, null)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 222 Método: assertNotEquals(compilationUnit, value)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 228 Método: assertThat(statementUnderTest.toString(), is(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 233 Método: assertThat(statement.toString(), is(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 238 Método: assertThat(expr.getParentNode().get(), is(tryStmt))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 243 Método: assertThat(tryStmt.getChildNodes().size(), is(0))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 250 Método: assertThat(method.getNameAsString(), is(expectedName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 259 Método: assertThat(method.getParameters().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 267 Método: assertThat(parameter.getType(), is(intType()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ManipulationSteps.java linha: 268 Método: assertThat(parameter.getNameAsString(), is(expectedName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java linha: 100 Método: assertThat(compilationUnit, is(equalTo(compilationUnit2)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java linha: 108 Método: assertThat(compilationUnit.hashCode(), is(equalTo(compilationUnit2.hashCode())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java linha: 116 Método: assertThat(compilationUnit, not(equalTo(compilationUnit2)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java linha: 124 Método: assertThat(compilationUnit.hashCode(), not(equalTo(compilationUnit2.hashCode())))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java linha: 130 Método: assertThat(compilationUnit.toString(), CoreMatchers.is(equalToCompressingWhiteSpace(classSrc)))
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ExistenceOfParentNodeVerifier.java linha: 53 Método: assertThat(n + " has no parent set!", n.getParentNode().orElse(null), is(notNullValue()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PrettyPrintingSteps.java linha: 110 Método: assertEquals(src.trim(), resultNode.toString().trim())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 100 Método: assertThat(constructor.getDeclarationAsString(), is(expectedString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 108 Método: assertThat(constructor.getDeclarationAsString(false, false), is(expectedString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 116 Método: assertThat(method.getDeclarationAsString(), is(expectedString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 124 Método: assertThat(method.getDeclarationAsString(false, false), is(expectedString))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 135 Método: assertThat(annotationUnderTest.getChildNodes().get(1).toString(), is(expectedValue))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 143 Método: assertThat(variableDeclarator.getNameAsString(), is(expectedName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 150 Método: assertThat(lambdaExpr.getBody().toString(), is(expectedBody))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 162 Método: assertThat(lambdaExpr.getBody().toString(), is(expectedBody))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 169 Método: assertEquals(true, blockStmt.getStatements().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 176 Método: assertThat(parameter.getType(), is(notNullValue()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 186 Método: assertThat(lambdaStmt.toString(), is(expectedBody))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 193 Método: assertThat(body.getParentNode().get(), is(lambdaExpr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 200 Método: assertThat(parameter.getParentNode().get(), is(lambdaExpr))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 207 Método: assertEquals(1, statementUnderTest.findAll(MethodReferenceExpr.class).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 209 Método: assertThat(methodReferenceUnderTest.getScope().toString(), is(expectedName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 216 Método: assertEquals(1, statementUnderTest.findAll(MethodReferenceExpr.class).size())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 218 Método: assertThat(methodReferenceUnderTest.getIdentifier(), is(expectedName))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 226 Método: assertThat(methodUnderTest.isDefault(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 234 Método: assertThat(methodUnderTest.isDefault(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 270 Método: assertThat(conditionalExpr.getElseExpr().getClass().getName(), is(LambdaExpr.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 276 Método: assertEquals(line, node.getBegin().get().line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 282 Método: assertEquals(column, node.getBegin().get().column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 288 Método: assertEquals(line, node.getEnd().get().line)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 294 Método: assertEquals(column, node.getEnd().get().column)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 306 Método: assertEquals(expected, node.getNameAsString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 307 Método: assertEquals(expected, node.getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 313 Método: assertEquals(expectedValue, expr.getType().isUsingDiamondOperator())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 320 Método: fail("Lexical error expected")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 331 Método: assertNotNull(assignExpr.getTarget())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 332 Método: assertEquals(NameExpr.class, assignExpr.getTarget().getClass())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ParsingSteps.java linha: 333 Método: assertEquals(assignExpr.getTarget().asNameExpr().getNameAsString(), "mString")
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 108 Método: fail("Lexical error expected")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 114 Método: assertThat(commentsCollection.size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 131 Método: assertThat(lineCommentUnderTest.getContent(), is(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 138 Método: assertThat(lineCommentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 145 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 158 Método: assertThat(underTestRange.begin.line, is(expectedRange.begin.line))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 159 Método: assertThat(underTestRange.begin.column, is(expectedRange.begin.column))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 160 Método: assertThat(underTestRange.end.line, is(expectedRange.end.line))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 161 Método: assertThat(underTestRange.end.column, is(expectedRange.end.column))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 176 Método: assertThat(underTestRange.begin.line, is(expectedRange.begin.line))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 177 Método: assertThat(underTestRange.begin.column, is(expectedRange.begin.column))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 178 Método: assertThat(underTestRange.end.line, is(expectedRange.end.line))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 179 Método: assertThat(underTestRange.end.column, is(expectedRange.end.column))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 194 Método: assertThat(underTestRange.begin.line, is(expectedRange.begin.line))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 195 Método: assertThat(underTestRange.begin.column, is(expectedRange.begin.column))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 196 Método: assertThat(underTestRange.end.line, is(expectedRange.end.line))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 197 Método: assertThat(underTestRange.end.column, is(expectedRange.end.column))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 204 Método: assertThat(prettyPrinter.print(compilationUnit).trim(), is(src.trim()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 209 Método: assertEquals(false, compilationUnit.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 214 Método: assertThat(compilationUnit.getComment().get().getContent(), is(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 219 Método: assertThat(compilationUnit.getComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 224 Método: assertThat(compilationUnit.getOrphanComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 230 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 236 Método: assertThat(commentUnderTest.isOrphan(), is(false))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 242 Método: assertThat(commentUnderTest.isOrphan(), is(true))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 248 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 254 Método: assertEquals(false, classUnderTest.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 260 Método: assertThat(classUnderTest.getComment().get().getContent(), is(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 266 Método: assertThat(classUnderTest.getAllContainedComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 273 Método: assertThat(classUnderTest.getOrphanComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 280 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 288 Método: assertThat(methodUnderTest.getComment().get().getContent(), equalToCompressingWhiteSpace(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 296 Método: assertThat(methodUnderTest.getAllContainedComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 305 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 313 Método: assertThat(methodUnderTest.getOrphanComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 322 Método: assertThat(blockStmtUnderTest.getAllContainedComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 331 Método: assertThat(blockStmtUnderTest.getOrphanComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 341 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 350 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 358 Método: assertThat(fieldUnderTest.getAllContainedComments().size(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 366 Método: assertEquals(false, fieldUnderTest.getComment().isPresent())
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 375 Método: assertThat(commentUnderTest.getContent(), is(equalToCompressingWhiteSpace(expectedContent)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 386 Método: assertThat(commentUnderTest.getContent(), is(expectedContent))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 392 Método: assertThat(commentUnderTest.getParentNode().get(), instanceOf(ClassOrInterfaceDeclaration.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 398 Método: assertThat(commentUnderTest.getCommentedNode().get(), instanceOf(ClassOrInterfaceDeclaration.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 404 Método: assertThat(commentUnderTest.getCommentedNode().get(), instanceOf(FieldDeclaration.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 410 Método: assertThat(commentUnderTest.getCommentedNode().get(), instanceOf(IntegerLiteralExpr.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 416 Método: assertThat(commentUnderTest.getCommentedNode().get(), instanceOf(ExpressionStmt.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java linha: 422 Método: assertThat(commentUnderTest.getCommentedNode().get(), instanceOf(PrimitiveType.class))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/ComparingSteps.java linha: 58 Método: assertThat(first, is(equalTo(second)))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/VisitorSteps.java linha: 154 Método: assertThat(collectedVariableName.get(), is(nameUnderTest))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/VisitorSteps.java linha: 159 Método: assertThat(returnedVariableName, is(nameUnderTest))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/VisitorSteps.java linha: 164 Método: assertThat(returnedVariableNames.get(0), is(nameUnderTest))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/VisitorSteps.java linha: 169 Método: assertThat(positionTestVisitor.getNumberOfNodesVisited(), is(expectedCount))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 83 Método: assertTrue(position.equals(secondPosition))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 91 Método: assertTrue(secondRange.isAfter(position))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 89 Método: assertTrue(secondPosition.isAfter(position))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 100 Método: assertTrue(secondRange.isBefore(position))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 98 Método: assertTrue(secondPosition.isBefore(position))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 106 Método: assertFalse(position.equals(secondPosition))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 111 Método: assertFalse(secondPosition.isAfter(position))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 116 Método: assertFalse(secondPosition.isBefore(position))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 121 Método: assertTrue(range.equals(secondRange))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/PositionRangeSteps.java linha: 126 Método: assertTrue(range.contains(secondRange))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-generators/src/test/java/com/github/javaparser/generator/core/utils/CodeUtilsTest.java linha: 41 Método: assertEquals(RETURN_VALUE, castValue(RETURN_VALUE, returnType, valueType.asString()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-generators/src/test/java/com/github/javaparser/generator/core/utils/CodeUtilsTest.java linha: 49 Método: assertEquals(String.format("(%s) %s", returnType, RETURN_VALUE), castValue(RETURN_VALUE, returnType, valueType.asString()))
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-generators/src/test/java/com/github/javaparser/generator/core/quality/NotNullGeneratorTest.java linha: 58 Método: assertEquals(expectedSourcesCus.size(), editedSourceCus.size())
Assert com mensagem: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core-generators/src/test/java/com/github/javaparser/generator/core/quality/NotNullGeneratorTest.java linha: 76 Método: fail("Actual code doesn't match with the expected code.")
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/utils/FileUtils.java linha: 41 Método: Utils.assertNotNull(filename)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/javacc-support/com/github/javaparser/GeneratedJavaParserBase.java linha: 146 Método: assertNotNull(firstChoice)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/javacc-support/com/github/javaparser/GeneratedJavaParserBase.java linha: 147 Método: assertNotNull(secondChoice)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 42 Método: assertNotNull(reader)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 46 Método: assertNotNull(input)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 47 Método: assertNotNull(encoding)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 62 Método: assertNotNull(file)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 62 Método: assertNotNull(encoding)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 66 Método: assertNotNull(file)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 70 Método: assertNotNull(path)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 70 Método: assertNotNull(encoding)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 74 Método: assertNotNull(path)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Providers.java linha: 78 Método: assertNotNull(source)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/TokenRange.java linha: 60 Método: assertNotNull(begin)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/TokenRange.java linha: 64 Método: assertNotNull(end)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Position.java linha: 139 Método: assertNotNull(alternativePosition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Position.java linha: 151 Método: assertNotNull(otherPosition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Position.java linha: 159 Método: assertNotNull(otherPosition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Position.java linha: 168 Método: assertNotNull(otherPosition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Position.java linha: 176 Método: assertNotNull(otherPosition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/Position.java linha: 182 Método: assertNotNull(otherPosition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/JavaParser.java linha: 117 Método: assertNotNull(start)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/JavaParser.java linha: 118 Método: assertNotNull(provider)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/JavaToken.java linha: 735 Método: assertNotNull(newToken)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/JavaToken.java linha: 748 Método: assertNotNull(newToken)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/JavaToken.java linha: 771 Método: assertNotNull(newToken)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceZip.java linha: 143 Método: assertNotNull(parserConfiguration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 122 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 123 Método: assertNotNull(filename)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 158 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 216 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 258 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 259 Método: assertNotNull(filename)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 296 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 297 Método: assertNotNull(filename)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 298 Método: assertNotNull(configuration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 299 Método: assertNotNull(callback)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 320 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 321 Método: assertNotNull(configuration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 322 Método: assertNotNull(callback)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 368 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 369 Método: assertNotNull(configuration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 370 Método: assertNotNull(callback)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 420 Método: assertNotNull(startPackage)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 421 Método: assertNotNull(filename)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 422 Método: assertNotNull(compilationUnit)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 435 Método: assertNotNull(compilationUnit)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 463 Método: assertNotNull(cu)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 464 Método: assertNotNull(path)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 476 Método: assertNotNull(root)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 541 Método: assertNotNull(parserConfiguration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/utils/SourceRoot.java linha: 550 Método: assertNotNull(printer)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/printer/configuration/PrettyPrinterConfiguration.java linha: 106 Método: assertNotNull(indentType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/printer/configuration/DefaultConfigurationOption.java linha: 62 Método: Utils.assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/printer/DotPrinter.java linha: 57 Método: assertNotNull(node)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/printer/YamlPrinter.java linha: 55 Método: assertNotNull(node)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/printer/XmlPrinter.java linha: 51 Método: assertNotNull(node)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter.java linha: 120 Método: assertNotNull(node)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleDeclaration.java linha: 100 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleDeclaration.java linha: 119 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleDeclaration.java linha: 174 Método: assertNotNull(directives)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleProvidesDirective.java linha: 134 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleProvidesDirective.java linha: 148 Método: assertNotNull(with)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleExportsDirective.java linha: 106 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleExportsDirective.java linha: 125 Método: assertNotNull(moduleNames)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleRequiresDirective.java linha: 90 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleRequiresDirective.java linha: 109 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleUsesDirective.java linha: 81 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleUsesDirective.java linha: 129 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleOpensDirective.java linha: 105 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/modules/ModuleOpensDirective.java linha: 124 Método: assertNotNull(moduleNames)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/MethodDeclaration.java linha: 140 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/BodyDeclaration.java linha: 81 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclaration.java linha: 125 Método: assertNotNull(extendedTypes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclaration.java linha: 139 Método: assertNotNull(implementedTypes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ClassOrInterfaceDeclaration.java linha: 163 Método: assertNotNull(typeParameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/EnumConstantDeclaration.java linha: 115 Método: assertNotNull(arguments)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/EnumConstantDeclaration.java linha: 129 Método: assertNotNull(classBody)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/EnumConstantDeclaration.java linha: 143 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/RecordDeclaration.java linha: 154 Método: assertNotNull(implementedTypes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/RecordDeclaration.java linha: 168 Método: assertNotNull(typeParameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/RecordDeclaration.java linha: 319 Método: assertNotNull(parameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/Parameter.java linha: 135 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/Parameter.java linha: 187 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/Parameter.java linha: 201 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/Parameter.java linha: 215 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/Parameter.java linha: 261 Método: assertNotNull(varArgsAnnotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/EnumDeclaration.java linha: 117 Método: assertNotNull(entries)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/EnumDeclaration.java linha: 131 Método: assertNotNull(implementedTypes)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/FieldDeclaration.java linha: 139 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/FieldDeclaration.java linha: 153 Método: assertNotNull(variables)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CallableDeclaration.java linha: 99 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CallableDeclaration.java linha: 119 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CallableDeclaration.java linha: 139 Método: assertNotNull(parameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CallableDeclaration.java linha: 159 Método: assertNotNull(thrownExceptions)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CallableDeclaration.java linha: 179 Método: assertNotNull(typeParameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/VariableDeclarator.java linha: 166 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/VariableDeclarator.java linha: 214 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CompactConstructorDeclaration.java linha: 137 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CompactConstructorDeclaration.java linha: 156 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CompactConstructorDeclaration.java linha: 175 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CompactConstructorDeclaration.java linha: 194 Método: assertNotNull(thrownExceptions)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/CompactConstructorDeclaration.java linha: 213 Método: assertNotNull(typeParameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/AnnotationMemberDeclaration.java linha: 159 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/AnnotationMemberDeclaration.java linha: 173 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/AnnotationMemberDeclaration.java linha: 187 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ReceiverParameter.java linha: 114 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ReceiverParameter.java linha: 140 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ReceiverParameter.java linha: 171 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/ConstructorDeclaration.java linha: 114 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/InitializerDeclaration.java linha: 97 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/TypeDeclaration.java linha: 114 Método: assertNotNull(members)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/TypeDeclaration.java linha: 129 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/body/TypeDeclaration.java linha: 144 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/NameExpr.java linha: 97 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ArrayInitializerExpr.java linha: 90 Método: assertNotNull(values)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/VariableDeclarationExpr.java linha: 146 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/VariableDeclarationExpr.java linha: 160 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/VariableDeclarationExpr.java linha: 174 Método: assertNotNull(variables)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/PatternExpr.java linha: 129 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/PatternExpr.java linha: 143 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/PatternExpr.java linha: 221 Método: assertNotNull(modifiers)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ObjectCreationExpr.java linha: 172 Método: assertNotNull(arguments)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ObjectCreationExpr.java linha: 205 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/UnaryExpr.java linha: 135 Método: assertNotNull(expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/UnaryExpr.java linha: 149 Método: assertNotNull(operator)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/LiteralStringValueExpr.java linha: 65 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/BinaryExpr.java linha: 168 Método: assertNotNull(left)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/BinaryExpr.java linha: 182 Método: assertNotNull(operator)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/BinaryExpr.java linha: 193 Método: assertNotNull(right)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ArrayAccessExpr.java linha: 95 Método: assertNotNull(index)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ArrayAccessExpr.java linha: 109 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/SwitchExpr.java linha: 116 Método: assertNotNull(entries)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/SwitchExpr.java linha: 130 Método: assertNotNull(selector)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/CastExpr.java linha: 98 Método: assertNotNull(expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/CastExpr.java linha: 112 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ArrayCreationExpr.java linha: 129 Método: assertNotNull(elementType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ArrayCreationExpr.java linha: 148 Método: assertNotNull(levels)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/AssignExpr.java linha: 163 Método: assertNotNull(operator)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/AssignExpr.java linha: 174 Método: assertNotNull(target)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/AssignExpr.java linha: 188 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ConditionalExpr.java linha: 104 Método: assertNotNull(condition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ConditionalExpr.java linha: 118 Método: assertNotNull(elseExpr)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ConditionalExpr.java linha: 132 Método: assertNotNull(thenExpr)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/MemberValuePair.java linha: 97 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/MemberValuePair.java linha: 111 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/TypeExpr.java linha: 91 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/FieldAccessExpr.java linha: 108 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/FieldAccessExpr.java linha: 133 Método: assertNotNull(scope)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/AnnotationExpr.java linha: 76 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/ClassExpr.java linha: 90 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/MethodCallExpr.java linha: 144 Método: assertNotNull(arguments)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/MethodCallExpr.java linha: 158 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/LambdaExpr.java linha: 127 Método: assertNotNull(parameters)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/LambdaExpr.java linha: 149 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/EnclosedExpr.java linha: 93 Método: assertNotNull(inner)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/MethodReferenceExpr.java linha: 109 Método: assertNotNull(scope)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/NormalAnnotationExpr.java linha: 86 Método: assertNotNull(pairs)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/SingleMemberAnnotationExpr.java linha: 86 Método: assertNotNull(memberValue)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/InstanceOfExpr.java linha: 251 Método: assertNotNull(expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/expr/InstanceOfExpr.java linha: 278 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/IntersectionType.java linha: 98 Método: assertNotNull(elements)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/PrimitiveType.java linha: 206 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/ClassOrInterfaceType.java linha: 160 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/UnionType.java linha: 97 Método: assertNotNull(elements)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/TypeParameter.java linha: 129 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/TypeParameter.java linha: 143 Método: assertNotNull(typeBound)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/ArrayType.java linha: 118 Método: assertNotNull(componentType)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/ArrayType.java linha: 209 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/ArrayType.java linha: 227 Método: assertNotNull(origin)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/ArrayType.java linha: 244 Método: assertNotNull(origin)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/type/Type.java linha: 85 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/PackageDeclaration.java linha: 112 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/PackageDeclaration.java linha: 131 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/comments/Comment.java linha: 86 Método: assertNotNull(content)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/CompilationUnit.java linha: 254 Método: assertNotNull(imports)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/CompilationUnit.java linha: 338 Método: assertNotNull(types)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/ImportDeclaration.java linha: 125 Método: assertNotNull(name)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/ArrayCreationLevel.java linha: 123 Método: assertNotNull(annotations)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/Modifier.java linha: 162 Método: assertNotNull(keyword)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SwitchStmt.java linha: 134 Método: assertNotNull(entries)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SwitchStmt.java linha: 148 Método: assertNotNull(selector)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SwitchEntry.java linha: 149 Método: assertNotNull(labels)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SwitchEntry.java linha: 163 Método: assertNotNull(statements)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SwitchEntry.java linha: 215 Método: assertNotNull(type)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt.java linha: 124 Método: assertNotNull(arguments)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/LocalRecordDeclarationStmt.java linha: 88 Método: assertNotNull(recordDeclaration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/CatchClause.java linha: 99 Método: assertNotNull(parameter)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/CatchClause.java linha: 118 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/DoStmt.java linha: 99 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/DoStmt.java linha: 113 Método: assertNotNull(condition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/IfStmt.java linha: 110 Método: assertNotNull(condition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/IfStmt.java linha: 143 Método: assertNotNull(thenStmt)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ExpressionStmt.java linha: 89 Método: assertNotNull(expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/BlockStmt.java linha: 88 Método: assertNotNull(statements)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/WhileStmt.java linha: 99 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/WhileStmt.java linha: 113 Método: assertNotNull(condition)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/YieldStmt.java linha: 87 Método: assertNotNull(expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/TryStmt.java linha: 168 Método: assertNotNull(catchClauses)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/TryStmt.java linha: 195 Método: assertNotNull(tryBlock)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/TryStmt.java linha: 209 Método: assertNotNull(resources)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ForStmt.java linha: 138 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ForStmt.java linha: 171 Método: assertNotNull(initialization)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ForStmt.java linha: 185 Método: assertNotNull(update)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/AssertStmt.java linha: 102 Método: assertNotNull(check)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SynchronizedStmt.java linha: 94 Método: assertNotNull(expression)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/SynchronizedStmt.java linha: 113 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/LabeledStmt.java linha: 94 Método: assertNotNull(statement)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/LabeledStmt.java linha: 113 Método: assertNotNull(label)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/LocalClassDeclarationStmt.java linha: 93 Método: assertNotNull(classDeclaration)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ForEachStmt.java linha: 114 Método: assertNotNull(body)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ForEachStmt.java linha: 128 Método: assertNotNull(iterable)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ForEachStmt.java linha: 142 Método: assertNotNull(variable)
Assert sem descrição: /home/vitor-otto/opensource/javaparser-javaparser-parent-3.25.1/javaparser-core/src/main/java/com/github/javaparser/ast/stmt/ThrowStmt.java linha: 90 Método: assertNotNull(expression)
Total asserts: 6158
Asserts sem descrição: 5981
Asserts com descrição: 158
Assertion Roulette: 4521
