
Projeto: /home/vitor-otto/opensource/JDA-5.0.0-beta.5

Antes do refactor: 
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/requests/restaction/operator/MapErrorRestAction.java linha: 79 Método: fail(Helpers.appendCause(e, error))
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/requests/restaction/operator/MapErrorRestAction.java linha: 84 Método: fail(error)
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/requests/restaction/operator/MapErrorRestAction.java linha: 101 Método: fail(error)
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/requests/restaction/operator/FlatMapErrorRestAction.java linha: 94 Método: fail(Helpers.appendCause(e, error))
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/requests/restaction/operator/FlatMapErrorRestAction.java linha: 96 Método: fail(error)
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/interactions/InteractionHookImpl.java linha: 91 Método: callback.fail(exception)
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/interactions/InteractionHookImpl.java linha: 103 Método: runnable.fail(exception)
Assert com mensagem: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/main/java/net/dv8tion/jda/internal/interactions/DeferrableInteractionImpl.java linha: 43 Método: hook.fail(new InteractionFailureException())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/JsonTest.java linha: 29 Método: Assertions.assertEquals(10, object.getInt("int", 0))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/JsonTest.java linha: 30 Método: Assertions.assertEquals(100, object.getLong("long", 0))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/JsonTest.java linha: 31 Método: Assertions.assertEquals(true, object.getBoolean("boolean", false))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/JsonTest.java linha: 32 Método: Assertions.assertEquals("test", object.getString("string", null))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/JsonTest.java linha: 41 Método: Assertions.assertEquals(object.toMap(), symmetric.toMap())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 35 Método: Assertions.assertEquals("ABCDEF", markdown.compute("**A_B||C~~D__E`F`__~~||_**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 41 Método: Assertions.assertEquals("", markdown.compute(""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 42 Método: Assertions.assertEquals("Hello World ~~~~", markdown.compute("Hello World ~~~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 43 Método: Assertions.assertEquals("Hello World ~", markdown.compute("Hello World ~~~~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 49 Método: Assertions.assertEquals("Hello", markdown.compute("**Hello**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 50 Método: Assertions.assertEquals("**Hello", markdown.compute("**Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 51 Método: Assertions.assertEquals("\\**Hello**", markdown.compute("\\**Hello**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 57 Método: Assertions.assertEquals("Hello", markdown.compute("*Hello*"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 58 Método: Assertions.assertEquals("Hello", markdown.compute("_Hello_"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 60 Método: Assertions.assertEquals("*Hello", markdown.compute("*Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 61 Método: Assertions.assertEquals("_Hello", markdown.compute("_Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 63 Método: Assertions.assertEquals("\\*Hello*", markdown.compute("\\*Hello*"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 64 Método: Assertions.assertEquals("\\_Hello_", markdown.compute("\\_Hello_"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 70 Método: Assertions.assertEquals("Hello", markdown.compute("***Hello***"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 71 Método: Assertions.assertEquals("***Hello", markdown.compute("***Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 72 Método: Assertions.assertEquals("\\***Hello***", markdown.compute("\\***Hello***"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 78 Método: Assertions.assertEquals("Hello", markdown.compute("__Hello__"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 79 Método: Assertions.assertEquals("__Hello", markdown.compute("__Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 80 Método: Assertions.assertEquals("\\__Hello__", markdown.compute("\\__Hello__"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 86 Método: Assertions.assertEquals("Hello", markdown.compute("~~Hello~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 87 Método: Assertions.assertEquals("~~Hello", markdown.compute("~~Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 88 Método: Assertions.assertEquals("\\~~Hello~~", markdown.compute("\\~~Hello~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 94 Método: Assertions.assertEquals("Hello", markdown.compute("||Hello||"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 95 Método: Assertions.assertEquals("||Hello", markdown.compute("||Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 96 Método: Assertions.assertEquals("\\||Hello||", markdown.compute("\\||Hello||"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 102 Método: Assertions.assertEquals("Hello", markdown.compute("`Hello`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 103 Método: Assertions.assertEquals("`Hello", markdown.compute("`Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 104 Método: Assertions.assertEquals("\\`Hello`", markdown.compute("\\`Hello`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 106 Método: Assertions.assertEquals("Hello **World**", markdown.compute("`Hello **World**`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 107 Método: Assertions.assertEquals("`Hello World", markdown.compute("`Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 108 Método: Assertions.assertEquals("\\`Hello World`", markdown.compute("\\`Hello **World**`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 114 Método: Assertions.assertEquals("Hello", markdown.compute("``Hello``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 115 Método: Assertions.assertEquals("``Hello", markdown.compute("``Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 116 Método: Assertions.assertEquals("\\``Hello``", markdown.compute("\\``Hello``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 118 Método: Assertions.assertEquals("Hello **World**", markdown.compute("``Hello **World**``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 119 Método: Assertions.assertEquals("``Hello World", markdown.compute("``Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 120 Método: Assertions.assertEquals("\\``Hello World``", markdown.compute("\\``Hello **World**``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 122 Método: Assertions.assertEquals("Hello `to` World", markdown.compute("``Hello `to` World``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 123 Método: Assertions.assertEquals("``Hello to World", markdown.compute("``Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 124 Método: Assertions.assertEquals("\\``Hello to World``", markdown.compute("\\``Hello `to` World``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 130 Método: Assertions.assertEquals("Hello", markdown.compute("```Hello```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 131 Método: Assertions.assertEquals("```Hello", markdown.compute("```Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 132 Método: Assertions.assertEquals("\\```Hello```", markdown.compute("\\```Hello```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 134 Método: Assertions.assertEquals("Hello **World**", markdown.compute("```Hello **World**```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 135 Método: Assertions.assertEquals("```Hello World", markdown.compute("```Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 136 Método: Assertions.assertEquals("\\```Hello World```", markdown.compute("\\```Hello **World**```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 138 Método: Assertions.assertEquals("Hello `to` World", markdown.compute("```Hello `to` World```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 139 Método: Assertions.assertEquals("```Hello to World", markdown.compute("```Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 140 Método: Assertions.assertEquals("\\```Hello to World```", markdown.compute("\\```Hello `to` World```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 142 Método: Assertions.assertEquals("Test", markdown.compute("```java\nTest```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 148 Método: Assertions.assertEquals("Hello > World", markdown.compute("> Hello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 149 Método: Assertions.assertEquals("Hello\nWorld", markdown.compute("> Hello\n> World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 150 Método: Assertions.assertEquals("Hello\nWorld", markdown.compute(">>> Hello\nWorld"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 151 Método: Assertions.assertEquals("Hello\nWorld", markdown.compute(">>>\nHello\nWorld"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 152 Método: Assertions.assertEquals("Hello > World", markdown.compute(">>>\nHello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 169 Método: Assertions.assertEquals("**A_B||C~~D__E`F`__~~||_**", markdown.compute("**A_B||C~~D__E`F`__~~||_**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 175 Método: Assertions.assertEquals("**Hello**", markdown.compute("**Hello**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 176 Método: Assertions.assertEquals("**Hello", markdown.compute("**Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 182 Método: Assertions.assertEquals("*Hello*", markdown.compute("*Hello*"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 183 Método: Assertions.assertEquals("_Hello_", markdown.compute("_Hello_"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 185 Método: Assertions.assertEquals("*Hello", markdown.compute("*Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 186 Método: Assertions.assertEquals("_Hello", markdown.compute("_Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 192 Método: Assertions.assertEquals("***Hello***", markdown.compute("***Hello***"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 193 Método: Assertions.assertEquals("***Hello", markdown.compute("***Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 194 Método: Assertions.assertEquals("\\***Hello***", markdown.compute("\\***Hello***"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 200 Método: Assertions.assertEquals("__Hello__", markdown.compute("__Hello__"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 201 Método: Assertions.assertEquals("__Hello", markdown.compute("__Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 207 Método: Assertions.assertEquals("~~Hello~~", markdown.compute("~~Hello~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 208 Método: Assertions.assertEquals("~~Hello", markdown.compute("~~Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 214 Método: Assertions.assertEquals("||Hello||", markdown.compute("||Hello||"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 215 Método: Assertions.assertEquals("||Hello", markdown.compute("||Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 221 Método: Assertions.assertEquals("`Hello`", markdown.compute("`Hello`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 222 Método: Assertions.assertEquals("`Hello", markdown.compute("`Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 224 Método: Assertions.assertEquals("`Hello **World**`", markdown.compute("`Hello **World**`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 225 Método: Assertions.assertEquals("`Hello **World**", markdown.compute("`Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 231 Método: Assertions.assertEquals("``Hello``", markdown.compute("``Hello``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 232 Método: Assertions.assertEquals("``Hello", markdown.compute("``Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 234 Método: Assertions.assertEquals("``Hello **World**``", markdown.compute("``Hello **World**``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 235 Método: Assertions.assertEquals("``Hello **World**", markdown.compute("``Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 237 Método: Assertions.assertEquals("``Hello `to` World``", markdown.compute("``Hello `to` World``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 238 Método: Assertions.assertEquals("``Hello `to` World", markdown.compute("``Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 244 Método: Assertions.assertEquals("```Hello```", markdown.compute("```Hello```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 245 Método: Assertions.assertEquals("```Hello", markdown.compute("```Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 247 Método: Assertions.assertEquals("```Hello **World**```", markdown.compute("```Hello **World**```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 248 Método: Assertions.assertEquals("```Hello **World**", markdown.compute("```Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 250 Método: Assertions.assertEquals("```Hello `to` World```", markdown.compute("```Hello `to` World```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 251 Método: Assertions.assertEquals("```Hello `to` World", markdown.compute("```Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 253 Método: Assertions.assertEquals("```java\nTest```", markdown.compute("```java\nTest```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 259 Método: Assertions.assertEquals("> Hello > World", markdown.compute("> Hello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 260 Método: Assertions.assertEquals("> Hello\n> World", markdown.compute("> Hello\n> World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 261 Método: Assertions.assertEquals(">>> Hello\nWorld", markdown.compute(">>> Hello\nWorld"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 262 Método: Assertions.assertEquals(">>>\nHello\nWorld", markdown.compute(">>>\nHello\nWorld"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 263 Método: Assertions.assertEquals(">>>\nHello > World", markdown.compute(">>>\nHello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 280 Método: Assertions.assertEquals("\\*\\*A\\_B\\||C\\~~D\\_\\_E\\`F\\`\\_\\_\\~~\\||\\_\\*\\*", markdown.compute("**A_B||C~~D__E`F`__~~||_**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 286 Método: Assertions.assertEquals("\\*\\*Hello\\*\\*", markdown.compute("**Hello**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 287 Método: Assertions.assertEquals("**Hello", markdown.compute("**Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 288 Método: Assertions.assertEquals("\\**Hello**", markdown.compute("\\**Hello**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 294 Método: Assertions.assertEquals("\\*Hello\\*", markdown.compute("*Hello*"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 295 Método: Assertions.assertEquals("\\_Hello\\_", markdown.compute("_Hello_"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 297 Método: Assertions.assertEquals("*Hello", markdown.compute("*Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 298 Método: Assertions.assertEquals("_Hello", markdown.compute("_Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 300 Método: Assertions.assertEquals("\\*Hello*", markdown.compute("\\*Hello*"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 301 Método: Assertions.assertEquals("\\_Hello_", markdown.compute("\\_Hello_"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 307 Método: Assertions.assertEquals("\\*\\*\\*Hello\\*\\*\\*", markdown.compute("***Hello***"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 308 Método: Assertions.assertEquals("***Hello", markdown.compute("***Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 309 Método: Assertions.assertEquals("\\***Hello***", markdown.compute("\\***Hello***"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 315 Método: Assertions.assertEquals("\\_\\_Hello\\_\\_", markdown.compute("__Hello__"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 316 Método: Assertions.assertEquals("__Hello", markdown.compute("__Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 317 Método: Assertions.assertEquals("\\__Hello__", markdown.compute("\\__Hello__"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 323 Método: Assertions.assertEquals("\\~~Hello\\~~", markdown.compute("~~Hello~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 324 Método: Assertions.assertEquals("~~Hello", markdown.compute("~~Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 325 Método: Assertions.assertEquals("\\~~Hello~~", markdown.compute("\\~~Hello~~"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 331 Método: Assertions.assertEquals("\\||Hello\\||", markdown.compute("||Hello||"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 332 Método: Assertions.assertEquals("||Hello", markdown.compute("||Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 333 Método: Assertions.assertEquals("\\||Hello||", markdown.compute("\\||Hello||"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 339 Método: Assertions.assertEquals("\\`Hello\\`", markdown.compute("`Hello`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 340 Método: Assertions.assertEquals("`Hello", markdown.compute("`Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 341 Método: Assertions.assertEquals("\\`Hello`", markdown.compute("\\`Hello`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 343 Método: Assertions.assertEquals("\\`Hello **World**\\`", markdown.compute("`Hello **World**`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 344 Método: Assertions.assertEquals("`Hello \\*\\*World\\*\\*", markdown.compute("`Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 345 Método: Assertions.assertEquals("\\`Hello \\*\\*World\\*\\*`", markdown.compute("\\`Hello **World**`"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 352 Método: Assertions.assertEquals("\\``Hello\\``", markdown.compute("``Hello``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 353 Método: Assertions.assertEquals("``Hello", markdown.compute("``Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 354 Método: Assertions.assertEquals("\\``Hello``", markdown.compute("\\``Hello``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 356 Método: Assertions.assertEquals("\\``Hello **World**\\``", markdown.compute("``Hello **World**``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 357 Método: Assertions.assertEquals("``Hello \\*\\*World\\*\\*", markdown.compute("``Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 358 Método: Assertions.assertEquals("\\``Hello \\*\\*World\\*\\*``", markdown.compute("\\``Hello **World**``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 360 Método: Assertions.assertEquals("\\``Hello `to` World\\``", markdown.compute("``Hello `to` World``"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 361 Método: Assertions.assertEquals("``Hello \\`to\\` World", markdown.compute("``Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 362 Método: Assertions.assertEquals("\\``Hello \\`to\\` World", markdown.compute("\\``Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 368 Método: Assertions.assertEquals("\\```Hello\\```", markdown.compute("```Hello```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 369 Método: Assertions.assertEquals("```Hello", markdown.compute("```Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 370 Método: Assertions.assertEquals("\\```Hello", markdown.compute("\\```Hello"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 372 Método: Assertions.assertEquals("\\```Hello **World**\\```", markdown.compute("```Hello **World**```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 373 Método: Assertions.assertEquals("```Hello \\*\\*World\\*\\*", markdown.compute("```Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 374 Método: Assertions.assertEquals("\\```Hello \\*\\*World\\*\\*", markdown.compute("\\```Hello **World**"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 376 Método: Assertions.assertEquals("\\```Hello `to` World\\```", markdown.compute("```Hello `to` World```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 377 Método: Assertions.assertEquals("```Hello \\`to\\` World", markdown.compute("```Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 378 Método: Assertions.assertEquals("\\```Hello \\`to\\` World", markdown.compute("\\```Hello `to` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 380 Método: Assertions.assertEquals("\\```java\nTest\\```", markdown.compute("```java\nTest```"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 386 Método: Assertions.assertEquals("\\> Hello > World", markdown.compute("> Hello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 387 Método: Assertions.assertEquals("\\> Hello\n\\> World", markdown.compute("> Hello\n> World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 388 Método: Assertions.assertEquals("\\>>> Hello\nWorld", markdown.compute(">>> Hello\nWorld"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 389 Método: Assertions.assertEquals("\\>>>\nHello\nWorld", markdown.compute(">>>\nHello\nWorld"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 390 Método: Assertions.assertEquals("\\>>>\nHello > World", markdown.compute(">>>\nHello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 391 Método: Assertions.assertEquals("\\> \\_Hello \n\\> World\\_", markdown.compute("> _Hello \n> World_"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 400 Método: Assertions.assertEquals("Hello\\*World", MarkdownSanitizer.escape("Hello*World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 401 Método: Assertions.assertEquals("Hello\\*\\*World", MarkdownSanitizer.escape("Hello**World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 402 Método: Assertions.assertEquals("Hello\\*\\*\\*World", MarkdownSanitizer.escape("Hello***World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 404 Método: Assertions.assertEquals("Hello\\*World", MarkdownSanitizer.escape("Hello\\*World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 405 Método: Assertions.assertEquals("Hello\\*\\*World", MarkdownSanitizer.escape("Hello\\*\\*World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 406 Método: Assertions.assertEquals("Hello\\*\\*\\*World", MarkdownSanitizer.escape("Hello\\*\\*\\*World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 412 Método: Assertions.assertEquals("Hello\\_World", MarkdownSanitizer.escape("Hello_World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 413 Método: Assertions.assertEquals("Hello\\_\\_World", MarkdownSanitizer.escape("Hello__World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 414 Método: Assertions.assertEquals("Hello\\_\\_\\_World", MarkdownSanitizer.escape("Hello___World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 416 Método: Assertions.assertEquals("Hello\\_World", MarkdownSanitizer.escape("Hello\\_World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 417 Método: Assertions.assertEquals("Hello\\_\\_World", MarkdownSanitizer.escape("Hello\\_\\_World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 418 Método: Assertions.assertEquals("Hello\\_\\_\\_World", MarkdownSanitizer.escape("Hello\\_\\_\\_World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 424 Método: Assertions.assertEquals("Hello\\`World", MarkdownSanitizer.escape("Hello`World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 425 Método: Assertions.assertEquals("Hello\\`\\`World", MarkdownSanitizer.escape("Hello``World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 426 Método: Assertions.assertEquals("Hello\\`\\`\\`World", MarkdownSanitizer.escape("Hello```World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 428 Método: Assertions.assertEquals("Hello\\`World", MarkdownSanitizer.escape("Hello\\`World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 429 Método: Assertions.assertEquals("Hello\\`\\`World", MarkdownSanitizer.escape("Hello\\`\\`World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 430 Método: Assertions.assertEquals("Hello\\`\\`\\`World", MarkdownSanitizer.escape("Hello\\`\\`\\`World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 436 Método: Assertions.assertEquals("Hello\\|\\|World", MarkdownSanitizer.escape("Hello||World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 437 Método: Assertions.assertEquals("Hello|World", MarkdownSanitizer.escape("Hello|World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 439 Método: Assertions.assertEquals("Hello\\|\\|World", MarkdownSanitizer.escape("Hello\\|\\|World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 440 Método: Assertions.assertEquals("Hello\\|World", MarkdownSanitizer.escape("Hello\\|World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 446 Método: Assertions.assertEquals("Hello\\~\\~World", MarkdownSanitizer.escape("Hello~~World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 447 Método: Assertions.assertEquals("Hello\\~\\~World", MarkdownSanitizer.escape("Hello\\~\\~World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 453 Método: Assertions.assertEquals("\\> Hello World", MarkdownSanitizer.escape("> Hello World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 454 Método: Assertions.assertEquals(">Hello World", MarkdownSanitizer.escape(">Hello World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 455 Método: Assertions.assertEquals("\\>\\>\\> Hello World", MarkdownSanitizer.escape(">>> Hello World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 456 Método: Assertions.assertEquals(">>>Hello World", MarkdownSanitizer.escape(">>>Hello World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 457 Método: Assertions.assertEquals("\\>\\>\\> Hello > World\n\\> Hello >>> World\n<@12345> > Hello\n \\> Hello world", MarkdownSanitizer.escape(">>> Hello > World\n> Hello >>> World\n<@12345> > Hello\n > Hello world", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 459 Método: Assertions.assertEquals("\\> Hello World", MarkdownSanitizer.escape("\\> Hello World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 460 Método: Assertions.assertEquals("\\>\\>\\> Hello World", MarkdownSanitizer.escape("\\>\\>\\> Hello World", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownTest.java linha: 461 Método: Assertions.assertEquals("Hello > World", MarkdownSanitizer.escape("Hello > World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 29 Método: Assertions.assertTrue(Helpers.isEmpty(null))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 30 Método: Assertions.assertTrue(Helpers.isEmpty(""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 31 Método: Assertions.assertFalse(Helpers.isEmpty("null"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 32 Método: Assertions.assertFalse(Helpers.isEmpty("testing with spaces"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 38 Método: Assertions.assertTrue(Helpers.containsWhitespace(" "))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 39 Método: Assertions.assertTrue(Helpers.containsWhitespace("testing with spaces"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 40 Método: Assertions.assertFalse(Helpers.containsWhitespace(null))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 41 Método: Assertions.assertFalse(Helpers.containsWhitespace(""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 42 Método: Assertions.assertFalse(Helpers.containsWhitespace("null"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 48 Método: Assertions.assertTrue(Helpers.isBlank(" "))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 49 Método: Assertions.assertTrue(Helpers.isBlank(null))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 50 Método: Assertions.assertTrue(Helpers.isBlank(""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 51 Método: Assertions.assertFalse(Helpers.isBlank("testing with spaces"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 52 Método: Assertions.assertFalse(Helpers.isBlank("null"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 58 Método: Assertions.assertEquals(3, Helpers.countMatches("Hello World", 'l'))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 59 Método: Assertions.assertEquals(1, Helpers.countMatches("Hello World", ' '))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 60 Método: Assertions.assertEquals(0, Helpers.countMatches("Hello World", '_'))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 61 Método: Assertions.assertEquals(0, Helpers.countMatches("", '!'))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 62 Método: Assertions.assertEquals(0, Helpers.countMatches(null, '?'))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 68 Método: Assertions.assertEquals("Hello", Helpers.truncate("Hello World", 5))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 69 Método: Assertions.assertEquals("Hello", Helpers.truncate("Hello", 5))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 70 Método: Assertions.assertEquals("Hello", Helpers.truncate("Hello", 10))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 71 Método: Assertions.assertEquals("", Helpers.truncate("", 10))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 72 Método: Assertions.assertEquals("", Helpers.truncate("Test", 0))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 73 Método: Assertions.assertNull(Helpers.truncate(null, 10))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 79 Método: Assertions.assertEquals("Hello    ", Helpers.rightPad("Hello", 9))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 80 Método: Assertions.assertEquals("Hello World", Helpers.rightPad("Hello World", 9))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 81 Método: Assertions.assertEquals("Hello", Helpers.rightPad("Hello", 5))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 87 Método: Assertions.assertEquals("    Hello", Helpers.leftPad("Hello", 9))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 88 Método: Assertions.assertEquals("Hello World", Helpers.leftPad("Hello World", 9))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 89 Método: Assertions.assertEquals("Hello", Helpers.leftPad("Hello", 5))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 95 Método: Assertions.assertTrue(Helpers.isNumeric("10"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 96 Método: Assertions.assertTrue(Helpers.isNumeric("1"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 97 Método: Assertions.assertTrue(Helpers.isNumeric("0"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 98 Método: Assertions.assertTrue(Helpers.isNumeric(String.valueOf(Long.MAX_VALUE)))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 99 Método: Assertions.assertFalse(Helpers.isNumeric(null))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 100 Método: Assertions.assertFalse(Helpers.isNumeric(""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 101 Método: Assertions.assertFalse(Helpers.isNumeric("Test"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 102 Método: Assertions.assertFalse(Helpers.isNumeric("1.0"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 103 Método: Assertions.assertFalse(Helpers.isNumeric("1e10"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 114 Método: Assertions.assertTrue(Helpers.deepEquals(a, a))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 115 Método: Assertions.assertTrue(Helpers.deepEquals(a, d))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 116 Método: Assertions.assertTrue(Helpers.deepEqualsUnordered(a, b))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 117 Método: Assertions.assertFalse(Helpers.deepEquals(a, b))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 118 Método: Assertions.assertFalse(Helpers.deepEquals(a, c))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/HelpersTest.java linha: 119 Método: Assertions.assertFalse(Helpers.deepEqualsUnordered(b, c))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 47 Método: Assertions.assertEquals("ban", data.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 48 Método: Assertions.assertEquals("Ban a user from this server", data.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 49 Método: Assertions.assertFalse(data.getBoolean("dm_permission"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 50 Método: Assertions.assertEquals(Permission.BAN_MEMBERS.getRawValue(), data.getUnsignedLong("default_member_permissions"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 55 Método: Assertions.assertTrue(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 56 Método: Assertions.assertEquals("user", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 57 Método: Assertions.assertEquals("The user to ban", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 60 Método: Assertions.assertFalse(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 61 Método: Assertions.assertEquals("reason", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 62 Método: Assertions.assertEquals("The ban reason", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 65 Método: Assertions.assertFalse(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 66 Método: Assertions.assertEquals("days", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 67 Método: Assertions.assertEquals("The duration of the ban", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 77 Método: Assertions.assertEquals(0, data.getUnsignedLong("default_member_permissions"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 81 Método: Assertions.assertTrue(data.isNull("default_member_permissions"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 94 Método: Assertions.assertEquals("mod", data.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 95 Método: Assertions.assertEquals("Moderation commands", data.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 98 Método: Assertions.assertEquals("ban", subdata.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 99 Método: Assertions.assertEquals("Ban a user from this server", subdata.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 104 Método: Assertions.assertTrue(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 105 Método: Assertions.assertEquals("user", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 106 Método: Assertions.assertEquals("The user to ban", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 109 Método: Assertions.assertFalse(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 110 Método: Assertions.assertEquals("reason", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 111 Método: Assertions.assertEquals("The ban reason", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 114 Método: Assertions.assertFalse(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 115 Método: Assertions.assertEquals("days", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 116 Método: Assertions.assertEquals("The duration of the ban", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 130 Método: Assertions.assertEquals("mod", data.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 131 Método: Assertions.assertEquals("Moderation commands", data.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 134 Método: Assertions.assertEquals("ban", group.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 135 Método: Assertions.assertEquals("Ban or unban a user from this server", group.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 138 Método: Assertions.assertEquals("add", subdata.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 139 Método: Assertions.assertEquals("Ban a user from this server", subdata.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 143 Método: Assertions.assertTrue(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 144 Método: Assertions.assertEquals("user", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 145 Método: Assertions.assertEquals("The user to ban", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 148 Método: Assertions.assertFalse(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 149 Método: Assertions.assertEquals("reason", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 150 Método: Assertions.assertEquals("The ban reason", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 153 Método: Assertions.assertFalse(option.getBoolean("required"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 154 Método: Assertions.assertEquals("days", option.getString("name"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 155 Método: Assertions.assertEquals("The duration of the ban", option.getString("description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 164 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> command.addOption(OptionType.STRING, "other", "desc", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 168 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> subcommand.addOption(OptionType.STRING, "other", "desc", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 174 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new CommandDataImpl("invalid name", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 175 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new CommandDataImpl("invalidName", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 176 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new CommandDataImpl("valid_name", ""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 178 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new SubcommandData("invalid name", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 179 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new SubcommandData("invalidName", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 180 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new SubcommandData("valid_name", ""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 182 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new SubcommandGroupData("invalid name", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 183 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new SubcommandGroupData("invalidName", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 184 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> new SubcommandGroupData("valid_name", ""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 191 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> option.addChoice("invalid name", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 192 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> option.addChoice("invalidName", "Valid description"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 193 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> option.addChoice("valid_name", ""))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 201 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> option.addChoice("name", 100))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 202 Método: Assertions.assertEquals(25, option.getChoices().size())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/CommandDataTest.java linha: 203 Método: Assertions.assertEquals(choices, option.getChoices())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 27 Método: Assertions.assertEquals("**Hello World**", bold("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 28 Método: Assertions.assertEquals("**Hello \\*\\*Test\\*\\* World**", bold("Hello **Test** World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 29 Método: Assertions.assertEquals("**Hello *Test* World**", bold("Hello *Test* World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 35 Método: Assertions.assertEquals("_Hello World_", italics("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 36 Método: Assertions.assertEquals("_Hello \\_Test\\_ World_", italics("Hello _Test_ World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 37 Método: Assertions.assertEquals("_Hello __Test__ World_", italics("Hello __Test__ World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 43 Método: Assertions.assertEquals("__Hello World__", underline("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 44 Método: Assertions.assertEquals("__Hello \\_\\_Test\\_\\_ World__", underline("Hello __Test__ World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 45 Método: Assertions.assertEquals("__Hello _Test_ World__", underline("Hello _Test_ World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 51 Método: Assertions.assertEquals("`Hello World`", monospace("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 52 Método: Assertions.assertEquals("`Hello \\`Test\\` World`", monospace("Hello `Test` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 53 Método: Assertions.assertEquals("`Hello ``Test`` World`", monospace("Hello ``Test`` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 59 Método: Assertions.assertEquals("```java\nHello World```", codeblock("java", "Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 60 Método: Assertions.assertEquals("```java\nHello \\```java\nTest\\``` World```", codeblock("java", "Hello ```java\nTest``` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 61 Método: Assertions.assertEquals("```java\nHello `Test` World```", codeblock("java", "Hello `Test` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 63 Método: Assertions.assertEquals("```Hello World```", codeblock("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 64 Método: Assertions.assertEquals("```Hello \\```java\nTest\\``` World```", codeblock("Hello ```java\nTest``` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 65 Método: Assertions.assertEquals("```Hello `Test` World```", codeblock("Hello `Test` World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 71 Método: Assertions.assertEquals("||Hello World||", spoiler("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 72 Método: Assertions.assertEquals("||Hello \\||Test\\|| World||", spoiler("Hello ||Test|| World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 73 Método: Assertions.assertEquals("||Hello |Test| World||", spoiler("Hello |Test| World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 79 Método: Assertions.assertEquals("~~Hello World~~", strike("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 80 Método: Assertions.assertEquals("~~Hello \\~~Test\\~~ World~~", strike("Hello ~~Test~~ World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 81 Método: Assertions.assertEquals("~~Hello ~Test~ World~~", strike("Hello ~Test~ World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 87 Método: Assertions.assertEquals("> Hello World", quote("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 88 Método: Assertions.assertEquals("> Hello \n> \\> Test World", quote("Hello \n> Test World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 89 Método: Assertions.assertEquals("> Hello > Test World", quote("Hello > Test World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 95 Método: Assertions.assertEquals(">>> Hello World", quoteBlock("Hello World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 96 Método: Assertions.assertEquals(">>> Hello \n>>> Test World", quoteBlock("Hello \n>>> Test World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 102 Método: Assertions.assertEquals("[Hello](World)", maskedLink("Hello", "World"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 103 Método: Assertions.assertEquals("[Hello](World%29)", maskedLink("Hello", "World)"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/MarkdownUtilTest.java linha: 104 Método: Assertions.assertEquals("[Hello\\]](World%29)", maskedLink("Hello]", "World)"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 35 Método: assertEquals("AnEntity", new EntityString(new AnEntity()).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 36 Método: assertEquals("AnEntity:AName", new EntityString(new AnEntity()).setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 43 Método: assertEquals("NotAnEntity", new EntityString("NotAnEntity").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 44 Método: assertEquals("NotAnEntity:AName", new EntityString("NotAnEntity").setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 51 Método: assertEquals("AnEntity[AType]", new EntityString(new AnEntity()).setType("AType").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 52 Método: assertEquals("AnEntity[AType]:AName", new EntityString(new AnEntity()).setType("AType").setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 53 Método: assertEquals("AnEntity[NEWS]:AName", new EntityString(new AnEntity()).setType(ChannelType.NEWS).setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 60 Método: assertEquals("AnEntity(Metadata1)", new EntityString(new AnEntity()).addMetadata(null, "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 61 Método: assertEquals("AnEntity(MetaKey=Metadata1)", new EntityString(new AnEntity()).addMetadata("MetaKey", "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 62 Método: assertEquals("AnEntity(MetaKey=42)", new EntityString(new AnEntity()).addMetadata("MetaKey", 42).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 63 Método: assertEquals("AnEntity(MetaKey1=Metadata1, MetaKey2=Metadata2)", new EntityString(new AnEntity()).addMetadata("MetaKey1", "Metadata1").addMetadata("MetaKey2", "Metadata2").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 73 Método: assertEquals("AnEntity:AName(Metadata1)", new EntityString(new AnEntity()).setName("AName").addMetadata(null, "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 77 Método: assertEquals("AnEntity:AName(MetaKey=Metadata1)", new EntityString(new AnEntity()).setName("AName").addMetadata("MetaKey", "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 81 Método: assertEquals("AnEntity:AName(MetaKey=42)", new EntityString(new AnEntity()).setName("AName").addMetadata("MetaKey", 42).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 85 Método: assertEquals("AnEntity:AName(MetaKey1=Metadata1, MetaKey2=Metadata2)", new EntityString(new AnEntity()).setName("AName").addMetadata("MetaKey1", "Metadata1").addMetadata("MetaKey2", "Metadata2").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 91 Método: assertEquals("AnEntity[Type]:AName(Metadata1)", new EntityString(new AnEntity()).setName("AName").setType("Type").addMetadata(null, "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 96 Método: assertEquals("AnEntity[Type]:AName(MetaKey=Metadata1)", new EntityString(new AnEntity()).setName("AName").setType("Type").addMetadata("MetaKey", "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 101 Método: assertEquals("AnEntity[Type]:AName(MetaKey=42)", new EntityString(new AnEntity()).setName("AName").setType("Type").addMetadata("MetaKey", 42).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 106 Método: assertEquals("AnEntity[Type]:AName(MetaKey1=Metadata1, MetaKey2=Metadata2)", new EntityString(new AnEntity()).setName("AName").setType("Type").addMetadata("MetaKey1", "Metadata1").addMetadata("MetaKey2", "Metadata2").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 118 Método: assertEquals("ASnowflake(id=42)", new EntityString(new ASnowflake()).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 119 Método: assertEquals("ASnowflake:AName(id=42)", new EntityString(new ASnowflake()).setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 126 Método: assertEquals("ASnowflake[AType](id=42)", new EntityString(new ASnowflake()).setType("AType").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 127 Método: assertEquals("ASnowflake[AType]:AName(id=42)", new EntityString(new ASnowflake()).setType("AType").setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 128 Método: assertEquals("ASnowflake[NEWS]:AName(id=42)", new EntityString(new ASnowflake()).setType(ChannelType.NEWS).setName("AName").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 135 Método: assertEquals("ASnowflake(id=42, Metadata1)", new EntityString(new ASnowflake()).addMetadata(null, "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 136 Método: assertEquals("ASnowflake(id=42, MetaKey=Metadata1)", new EntityString(new ASnowflake()).addMetadata("MetaKey", "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 137 Método: assertEquals("ASnowflake(id=42, MetaKey=42)", new EntityString(new ASnowflake()).addMetadata("MetaKey", 42).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 138 Método: assertEquals("ASnowflake(id=42, MetaKey1=Metadata1, MetaKey2=Metadata2)", new EntityString(new ASnowflake()).addMetadata("MetaKey1", "Metadata1").addMetadata("MetaKey2", "Metadata2").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 148 Método: assertEquals("ASnowflake:AName(id=42, Metadata1)", new EntityString(new ASnowflake()).setName("AName").addMetadata(null, "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 152 Método: assertEquals("ASnowflake:AName(id=42, MetaKey=Metadata1)", new EntityString(new ASnowflake()).setName("AName").addMetadata("MetaKey", "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 156 Método: assertEquals("ASnowflake:AName(id=42, MetaKey=42)", new EntityString(new ASnowflake()).setName("AName").addMetadata("MetaKey", 42).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 160 Método: assertEquals("ASnowflake:AName(id=42, MetaKey1=Metadata1, MetaKey2=Metadata2)", new EntityString(new ASnowflake()).setName("AName").addMetadata("MetaKey1", "Metadata1").addMetadata("MetaKey2", "Metadata2").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 166 Método: assertEquals("ASnowflake[Type]:AName(id=42, Metadata1)", new EntityString(new ASnowflake()).setName("AName").setType("Type").addMetadata(null, "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 171 Método: assertEquals("ASnowflake[Type]:AName(id=42, MetaKey=Metadata1)", new EntityString(new ASnowflake()).setName("AName").setType("Type").addMetadata("MetaKey", "Metadata1").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 176 Método: assertEquals("ASnowflake[Type]:AName(id=42, MetaKey=42)", new EntityString(new ASnowflake()).setName("AName").setType("Type").addMetadata("MetaKey", 42).toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/net/dv8tion/jda/entitystring/EntityStringTest.java linha: 181 Método: assertEquals("ASnowflake[Type]:AName(id=42, MetaKey1=Metadata1, MetaKey2=Metadata2)", new EntityString(new ASnowflake()).setName("AName").setType("Type").addMetadata("MetaKey1", "Metadata1").addMetadata("MetaKey2", "Metadata2").toString())
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 32 Método: Assertions.assertEquals(10, DataPath.getInt(object, "foo"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 35 Método: Assertions.assertEquals(20, DataPath.getInt(array, "[0]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 43 Método: Assertions.assertEquals(0L, DataPath.getLong(object, "foo?", 0))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 44 Método: Assertions.assertThrows(ParsingException.class, () -> DataPath.getLong(object, "foo"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 48 Método: Assertions.assertTrue(DataPath.getBoolean(array, "[0]?", true))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 49 Método: Assertions.assertThrows(ParsingException.class, () -> DataPath.getObject(array, "[0]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 58 Método: Assertions.assertEquals(10.0, DataPath.getDouble(array, "[0].foo"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 59 Método: Assertions.assertEquals(20.0, DataPath.getDouble(array, "[1]?.foo", 20.0))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 60 Método: Assertions.assertThrows(IndexOutOfBoundsException.class, () -> DataPath.getDouble(array, "[1].foo"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 69 Método: Assertions.assertEquals("hello", DataPath.getString(object, "foo[0]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 70 Método: Assertions.assertEquals("world", DataPath.getString(object, "foo[1]?", "world"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 71 Método: Assertions.assertThrows(IndexOutOfBoundsException.class, () -> DataPath.getString(object, "foo[1]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 79 Método: Assertions.assertEquals(10, DataPath.getUnsignedInt(array, "[0][0]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 80 Método: Assertions.assertEquals(20, DataPath.getUnsignedInt(array, "[0][1]?", 20))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 81 Método: Assertions.assertEquals(20, DataPath.getUnsignedInt(array, "[1]?[0]", 20))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 82 Método: Assertions.assertThrows(IndexOutOfBoundsException.class, () -> DataPath.getUnsignedInt(array, "[0][1]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 83 Método: Assertions.assertThrows(IndexOutOfBoundsException.class, () -> DataPath.getUnsignedInt(array, "[1][0]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 84 Método: Assertions.assertThrows(ParsingException.class, () -> DataPath.getUnsignedInt(array, "[0][1]?"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 85 Método: Assertions.assertThrows(ParsingException.class, () -> DataPath.getUnsignedInt(array, "[1]?[0]"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 97 Método: Assertions.assertEquals("hello", DataPath.getString(object, "array[0].foo.bar"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 98 Método: Assertions.assertEquals("world", DataPath.getString(object, "array[0].wrong?.bar", "world"))
Assert sem descrição: /home/vitor-otto/opensource/JDA-5.0.0-beta.5/src/test/java/DataPathTest.java linha: 99 Método: Assertions.assertThrows(ParsingException.class, () -> DataPath.getString(object, "array[0].wrong?.bar"))
Total asserts: 388
Asserts sem descrição: 379
Asserts com descrição: 8
Assertion Roulette: 375
