
Projeto: /home/vitor-otto/opensource/avro-release-1.11.1

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 103 Método: assertEquals(jsonData, run(new DataFileReadTool(), sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 109 Método: assertEquals(jsonData, run(new DataFileReadTool(), stdin, "-"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 114 Método: assertEquals(jsonData, run(new DataFileReadTool(), "--pretty", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 119 Método: assertEquals(jsonData, run(new DataFileReadTool(), "--reader-schema", "\"long\"", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 134 Método: assertEquals(jsonData, run(new DataFileReadTool(), "--reader-schema-file", readerSchemaFile.getPath(), sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 141 Método: assertEquals(expectedJson, run(new DataFileReadTool(), "--head", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 147 Método: assertEquals(expectedJson, run(new DataFileReadTool(), "--head=3", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 153 Método: assertEquals(expectedJson, run(new DataFileReadTool(), "--head", "5", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 158 Método: assertEquals(jsonData, run(new DataFileReadTool(), "--head=3000000000", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 163 Método: assertEquals("\n", run(new DataFileReadTool(), "--head=0", sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 168 Método: assertEquals("\n", run(new DataFileReadTool(), "--head=-5", sampleFile.getPath()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 174 Método: assertTrue(output, output.contains("avro.schema\t" + schema.toString() + "\n"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 175 Método: assertTrue(output, output.contains(ESCAPED_KEY + "\t\n"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 180 Método: assertEquals(schema.toString() + "\n", run(new DataFileGetMetaTool(), sampleFile.getPath(), "--key", "avro.schema"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 186 Método: assertEquals(schema.toString() + "\n", run(new DataFileGetSchemaTool(), sampleFile.getPath()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 223 Método: assertEquals(i, datum)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 226 Método: assertEquals(COUNT, i)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 227 Método: assertEquals(schema, fileReader.getSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 232 Método: assertEquals(expectedCodec, codecStr)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 249 Método: assertEquals(0, countRecords(outFile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 268 Método: assertEquals(5, countRecords(outFile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileTools.java linha: 289 Método: assertTrue(baos.toString().contains("Compression codec (default: null)"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestSpecificCompilerTool.java linha: 226 Método: Assert.assertEquals("Found file: " + found + " does not match expected file: " + expected, readFile(expected), readFile(found))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestIdlTool.java linha: 48 Método: assertEquals(readFileAsString(protocol), readFileAsString(outfile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestIdlTool.java linha: 51 Método: assertEquals("Warning: Found documentation comment at line 19, column 1. Ignoring previous one at line 1, column 1: \"" + "Licensed to the Apache Software Foundation (ASF) under one\n" + "or more contributor license agreements.  See the NOTICE file\n" + "distributed with this work for additional information\n" + "regarding copyright ownership.  The ASF licenses this file\n" + "to you under the Apache License, Version 2.0 (the\n" + "\"License\"); you may not use this file except in compliance\n" + "with the License.  You may obtain a copy of the License at\n\n" + "    https://www.apache.org/licenses/LICENSE-2.0\n\n" + "Unless required by applicable law or agreed to in writing, software\n" + "distributed under the License is distributed on an \"AS IS\" BASIS,\n" + "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n" + "See the License for the specific language governing permissions and\n" + "limitations under the License." + "\"\nDid you mean to use a multiline comment ( /* ... */ ) instead?", warnings)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestToTrevniTool.java linha: 65 Método: assertEquals(expected, found.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCreateRandomFileTool.java linha: 94 Método: assertEquals(expected, found.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCreateRandomFileTool.java linha: 105 Método: assertTrue(err.toString().contains("Need count (--count)"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCreateRandomFileTool.java linha: 134 Método: assertEquals(expected, found.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCreateRandomFileTool.java linha: 143 Método: assertTrue(err.toString().contains("Compression codec (default: deflate)"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTextFileTools.java linha: 99 Método: assertEquals(line, lines[i])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTextFileTools.java linha: 102 Método: assertEquals(COUNT, i)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTextFileTools.java linha: 135 Método: assertEquals(b, after.read())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTextFileTools.java linha: 137 Método: assertEquals(-1, after.read())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTextFileTools.java linha: 148 Método: Assert.assertTrue(baos.toString().contains("Compression codec (default: deflate)"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTetherTool.java linha: 104 Método: assertEquals(wc.key().toString(), WordCountUtil.COUNTS.get(wc.key().toString()), wc.value())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestTetherTool.java linha: 108 Método: assertEquals(WordCountUtil.COUNTS.size(), numWords)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestIdlToSchemataTool.java linha: 47 Método: assertEquals(4, files.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestIdlToSchemataTool.java linha: 50 Método: assertEquals("Warning: Found documentation comment at line 19, column 1. Ignoring previous one at line 1, column 1: \"" + "Licensed to the Apache Software Foundation (ASF) under one\n" + "or more contributor license agreements.  See the NOTICE file\n" + "distributed with this work for additional information\n" + "regarding copyright ownership.  The ASF licenses this file\n" + "to you under the Apache License, Version 2.0 (the\n" + "\"License\"); you may not use this file except in compliance\n" + "with the License.  You may obtain a copy of the License at\n\n" + "    https://www.apache.org/licenses/LICENSE-2.0\n\n" + "Unless required by applicable law or agreed to in writing, software\n" + "distributed under the License is distributed on an \"AS IS\" BASIS,\n" + "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n" + "See the License for the specific language governing permissions and\n" + "limitations under the License." + "\"\nDid you mean to use a multiline comment ( /* ... */ ) instead?", warnings)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecordCountTool.java linha: 69 Método: assertEquals(1, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecordCountTool.java linha: 81 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecordCountTool.java linha: 82 Método: assertEquals(inputSize.toString() + System.lineSeparator(), out.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecordCountTool.java linha: 95 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecordCountTool.java linha: 96 Método: assertEquals("220" + System.lineSeparator(), out.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestJsonToFromBinaryFragmentTools.java linha: 103 Método: assertEquals(json, baos.toString(UTF8).replace("\r", ""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestJsonToFromBinaryFragmentTools.java linha: 116 Método: assertEquals(avro, baos.toString(UTF8))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 124 Método: assertTrue(output, output.contains("Number of blocks: 2 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 125 Método: assertTrue(output, output.contains("Number of records: 5 Number of corrupt records: 0"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 131 Método: assertTrue(output, output.contains("Number of blocks: 3 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 132 Método: assertTrue(output, output.contains("Number of records: 8 Number of corrupt records: 2"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 138 Método: assertTrue(output, output.contains("Number of blocks: 2 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 139 Método: assertTrue(output, output.contains("Number of records: 5 Number of corrupt records: 0"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 146 Método: assertTrue(output, output.contains("Number of blocks: 3 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 147 Método: assertTrue(output, output.contains("Number of records: 8 Number of corrupt records: 2"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 154 Método: assertTrue(output, output.contains("Number of blocks: 2 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 155 Método: assertTrue(output, output.contains("Number of records: 5 Number of corrupt records: 0"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 162 Método: assertTrue(output, output.contains("Number of blocks: 3 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 163 Método: assertTrue(output, output.contains("Number of records: 8 Number of corrupt records: 2"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 170 Método: assertTrue(output, output.contains("Number of blocks: 2 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 171 Método: assertTrue(output, output.contains("Number of records: 5 Number of corrupt records: 0"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 178 Método: assertTrue(output, output.contains("Number of blocks: 3 Number of corrupt blocks: 1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 179 Método: assertTrue(output, output.contains("Number of records: 8 Number of corrupt records: 2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 186 Método: assertEquals(line, r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestDataFileRepairTool.java linha: 188 Método: assertFalse(r.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecodecTool.java linha: 81 Método: Assert.assertEquals(metaValue, reader.getMetaString(metaKey))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecodecTool.java linha: 85 Método: Assert.assertEquals(defaultOutputFile.length(), nullOutputFile.length())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRecodecTool.java linha: 98 Método: Assert.fail("Expected " + less + " to be less than " + more)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRpcProtocolTool.java linha: 89 Método: assertEquals("Expected the simple.avpr protocol to be echoed to standout", simpleProtocol, Protocol.parse(baos2.toString("UTF-8")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 154 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 156 Método: assertEquals(LIMIT_WITHIN_INPUT_BOUNDS, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 162 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 163 Método: assertEquals(LIMIT_WITHIN_INPUT_BOUNDS, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 169 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 170 Método: assertEquals(LIMIT_WITHIN_INPUT_BOUNDS, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 185 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 186 Método: assertEquals(ROWS_IN_INPUT_FILES - OFFSET, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 201 Método: assertEquals(0, returnCode)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 203 Método: assertTrue("Outputsize is not roughly (Inputsize - Offset) * samplerate", (ROWS_IN_INPUT_FILES - OFFSET) * SAMPLERATE - numRowsInFile(output) < 2)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 205 Método: assertTrue("", (ROWS_IN_INPUT_FILES - OFFSET) * SAMPLERATE - numRowsInFile(output) > -2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 221 Método: assertEquals(0, returnCode)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 222 Método: assertEquals("output does not start at offset", OFFSET, getFirstIntDatum(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 237 Método: assertEquals(0, returnCode)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 238 Método: assertEquals("output is not empty", 0, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 253 Método: assertEquals(0, returnCode)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 255 Método: assertEquals("output should only contain the record at offset", OFFSET, getFirstIntDatum(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 281 Método: assertEquals(0, returnCode)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestCatTool.java linha: 282 Método: assertTrue("should have lots of help", buffer.toString().trim().length() > 200)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRpcReceiveAndSendTools.java linha: 49 Método: assertTrue(baos1.toString("UTF-8").replace("\r", "").endsWith("hello\t{\"greeting\":\"Hi!\"}\n"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestRpcReceiveAndSendTools.java linha: 50 Método: assertEquals("\"Hello!\"\n", baos2.toString("UTF-8").replace("\r", ""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestUtil.java linha: 47 Método: Assert.assertEquals(String.format("zstandard[%d]", level), codec.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestMain.java linha: 32 Método: fail("Tool description too long: " + t.getName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestMain.java linha: 49 Método: fail("Tool name too long (" + t.getName().length() + "): " + t.getName() + ". Max length is: " + MAX_NAME_LENGTH)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 122 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 123 Método: assertEquals(ROWS_IN_INPUT_FILES * 3, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 139 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 140 Método: assertEquals(ROWS_IN_INPUT_FILES * 3, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 166 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 168 Método: assertEquals(ROWS_IN_INPUT_FILES * 3, numRowsInFile(output))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 169 Método: assertEquals(getCodec(input1).getClass(), getCodec(output).getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 184 Método: assertEquals(1, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 201 Método: assertEquals(2, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 216 Método: assertEquals(3, returnCode)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 226 Método: assertTrue("should have lots of help", buffer.toString().trim().length() > 200)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/tools/src/test/java/org/apache/avro/tool/TestConcatTool.java linha: 228 Método: assertEquals(0, returnCode)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 38 Método: Assert.assertEquals(0, in.tell())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 39 Método: Assert.assertEquals(0, in.length())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 49 Método: Assert.assertEquals(1, bytes.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 50 Método: Assert.assertEquals(0, bytes[0])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 52 Método: Assert.assertEquals(0, in.readInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 66 Método: Assert.assertEquals(random.nextBoolean(), in.readValue(ValueType.BOOLEAN))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 80 Método: Assert.assertEquals(random.nextInt(), in.readInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 94 Método: Assert.assertEquals(random.nextLong(), in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 108 Método: Assert.assertEquals(random.nextInt(), in.readFixed32())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 122 Método: Assert.assertEquals(random.nextLong(), in.readFixed64())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 136 Método: Assert.assertEquals(random.nextFloat(), in.readFloat(), 0)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 148 Método: Assert.assertEquals(Double.MIN_VALUE, in.readDouble(), 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 162 Método: Assert.assertEquals(TestUtil.randomBytes(random), in.readBytes(null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 176 Método: Assert.assertEquals(TestUtil.randomString(random), in.readString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 189 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 202 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 215 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 228 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 241 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 254 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 267 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 280 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 293 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 306 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestIOBuffers.java linha: 320 Método: Assert.assertEquals(sentinel, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 64 Método: Assert.assertEquals(0, in.getRowCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 65 Método: Assert.assertEquals(0, in.getColumnCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 75 Método: Assert.assertEquals(0, in.getRowCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 76 Método: Assert.assertEquals(1, in.getColumnCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 95 Método: Assert.assertEquals(COUNT, in.getRowCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 96 Método: Assert.assertEquals(1, in.getColumnCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 100 Método: Assert.assertEquals(TestUtil.randomLength(random), (int) i.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 103 Método: Assert.assertEquals(COUNT, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 118 Método: Assert.assertEquals(COUNT, in.getRowCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 119 Método: Assert.assertEquals(1, in.getColumnCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 123 Método: Assert.assertEquals(random.nextLong(), (long) i.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 126 Método: Assert.assertEquals(COUNT, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 141 Método: Assert.assertEquals(COUNT, in.getRowCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 142 Método: Assert.assertEquals(1, in.getColumnCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 146 Método: Assert.assertEquals(TestUtil.randomString(random), i.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 149 Método: Assert.assertEquals(COUNT, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 164 Método: Assert.assertEquals(COUNT, in.getRowCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 165 Método: Assert.assertEquals(2, in.getColumnCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 170 Método: Assert.assertEquals(random.nextInt(), i.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 171 Método: Assert.assertEquals(TestUtil.randomString(random), j.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 174 Método: Assert.assertEquals(COUNT, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 209 Método: Assert.assertEquals(seekValues[i], v.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestColumnFile.java linha: 249 Método: Assert.assertEquals(seekValues[i], v.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestInputBytes.java linha: 45 Método: Assert.assertArrayEquals(Arrays.copyOfRange(data, p, p + l), buffer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestUtil.java linha: 99 Método: Assert.assertEquals(0, min)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestUtil.java linha: 100 Método: Assert.assertTrue(max > 1024 * 32)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestUtil.java linha: 103 Método: Assert.assertTrue(average > 16.0f)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestUtil.java linha: 104 Método: Assert.assertTrue(average < 64.0f)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestAllCodecs.java linha: 63 Método: assertTrue(compressedSize > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestAllCodecs.java linha: 69 Método: assertTrue(compressedSize < inputSize || codec.equals("null"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestAllCodecs.java linha: 76 Método: assertEquals(decompressedBuffer, inputByteBuffer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestAllCodecs.java linha: 94 Método: assertTrue(compressedSize > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/core/src/test/java/org/apache/trevni/TestAllCodecs.java linha: 108 Método: assertEquals(decompressedBuffer, inputByteBuffer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestWordCount.java linha: 130 Método: assertEquals(WordCountUtil.TOTAL, total)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/WordCountUtil.java linha: 95 Método: assertEquals(wc.key(), COUNTS.get(wc.key()), wc.value())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/WordCountUtil.java linha: 99 Método: assertEquals(COUNTS.size(), numWords)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/WordCountUtil.java linha: 107 Método: assertEquals((String) wc.get("key"), COUNTS.get(wc.get("key")), wc.get("value"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/WordCountUtil.java linha: 112 Método: assertEquals(COUNTS.size(), numWords)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestEvolvedSchema.java linha: 86 Método: Assert.assertEquals(evolvedRecord, readRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestEvolvedSchema.java linha: 87 Método: Assert.assertFalse(acr.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestEvolvedSchema.java linha: 105 Método: Assert.assertEquals(evolvedRecord, readRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestEvolvedSchema.java linha: 106 Método: Assert.assertFalse(dfr.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestShredder.java linha: 193 Método: assertEquals(expected.length, shredded.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestShredder.java linha: 195 Método: assertEquals(expected[i].toString(), shredded[i].toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestShredder.java linha: 213 Método: assertEquals(expected, reader.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/mapreduce/TestKeyWordCount.java linha: 168 Método: assertEquals(WordCountUtil.TOTAL, total)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/mapreduce/TestKeyValueWordCount.java linha: 158 Método: assertEquals(WordCountUtil.TOTAL, total)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestCases.java linha: 74 Método: assertEquals(datum, reader.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 40 Método: assertTrue(metadata.get("test1") != null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 41 Método: assertTrue(new String(metadata.get("test1")).equals("1"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 42 Método: assertTrue(metadata.get("test2") != null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 43 Método: assertTrue(new String(metadata.get("test2")).equals("2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 44 Método: assertTrue(metadata.get("test5") != null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 45 Método: assertTrue(new String(metadata.get("test5")).equals("5"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 46 Método: assertTrue(metadata.get("test3") == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/trevni/avro/src/test/java/org/apache/trevni/avro/TestMetadataFiltering.java linha: 47 Método: assertTrue(metadata.get("test4") == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/thrift/src/test/java/org/apache/avro/thrift/TestThrift.java linha: 93 Método: assertEquals(test, o)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 97 Método: Assert.assertTrue(accept.stream().collect(Collectors.joining("\n\t")), accept.isEmpty())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 126 Método: Assert.fail(ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/specific/TestGeneratedCode.java linha: 54 Método: Assert.assertTrue("Test schema must allow for custom coders.", ((SpecificRecordBase) src).hasCustomCoders())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/specific/TestGeneratedCode.java linha: 67 Método: Assert.assertEquals(src, dst)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/specific/TestGeneratedCode.java linha: 74 Método: Assert.assertTrue("Test schema must allow for custom coders.", ((SpecificRecordBase) src).hasCustomCoders())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/specific/TestGeneratedCode.java linha: 88 Método: Assert.assertEquals(expected, dst)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 140 Método: assertTrue(compilesWithoutError)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 142 Método: assertEquals("Warnings produced when compiling generated code with -Xlint:all", 0, warnings.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 171 Método: assertTrue(new File(OUTPUT_DIR.getRoot(), "SimpleRecord.java").exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 178 Método: assertTrue(compiler.publicFields())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 179 Método: assertFalse(compiler.privateFields())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 181 Método: assertTrue(this.outputFile.exists())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 189 Método: assertFalse("Line started with a deprecated field declaration: " + line, line.startsWith("@Deprecated public int value"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 199 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 207 Método: assertTrue(foundAllArgsConstructor)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 235 Método: assertTrue(new SpecificCompiler(validSchema1).compile().size() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 238 Método: assertTrue(new SpecificCompiler(validSchema2).compile().size() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 241 Método: assertTrue(new SpecificCompiler(validSchema3).compile().size() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 244 Método: assertTrue(new SpecificCompiler(validSchema4).compile().size() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 257 Método: assertFalse(compiler.publicFields())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 258 Método: assertTrue(compiler.privateFields())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 260 Método: assertTrue(this.outputFile.exists())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 267 Método: assertFalse("Line started with a public field declaration: " + line, line.startsWith("public int value"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 268 Método: assertFalse("Line started with a deprecated field declaration: " + line, line.startsWith("@Deprecated public int value"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 277 Método: assertTrue(compiler.isCreateSetters())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 279 Método: assertTrue(this.outputFile.exists())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 291 Método: assertEquals("Found the wrong number of setters", 1, foundSetters)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 298 Método: assertFalse(compiler.isCreateSetters())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 300 Método: assertTrue(this.outputFile.exists())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 306 Método: assertFalse("No line should include the setter: " + line, line.startsWith("public void setValue("))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 335 Método: assertThat("Generated file should contain different bytes after setting non-default encoding", fileInDefaultEncoding, not(equalTo(fileInDifferentEncoding)))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 338 Método: assertThat("Generated files should contain the same characters in the proper encodings", new String(fileInDefaultEncoding), equalTo(new String(fileInDifferentEncoding, differentEncoding)))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 358 Método: Assert.assertEquals("Should use LocalDate for date type", "java.time.LocalDate", compiler.javaType(dateSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 359 Método: Assert.assertEquals("Should use LocalTime for time-millis type", "java.time.LocalTime", compiler.javaType(timeSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 361 Método: Assert.assertEquals("Should use DateTime for timestamp-millis type", "java.time.Instant", compiler.javaType(timestampSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 363 Método: Assert.assertEquals("Should use LocalDateTime for local-timestamp-millis type", "java.time.LocalDateTime", compiler.javaType(localTimestampSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 365 Método: Assert.assertEquals("Should use Java BigDecimal type", "java.math.BigDecimal", compiler.javaType(decimalSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 366 Método: Assert.assertEquals("Should use org.apache.avro.Conversions.UUIDConversion() type", "new org.apache.avro.Conversions.UUIDConversion()", compiler.conversionInstance(uuidSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 385 Método: Assert.assertEquals("Should use LocalDate for date type", "java.time.LocalDate", compiler.javaType(dateSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 386 Método: Assert.assertEquals("Should use LocalTime for time-millis type", "java.time.LocalTime", compiler.javaType(timeSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 388 Método: Assert.assertEquals("Should use DateTime for timestamp-millis type", "java.time.Instant", compiler.javaType(timestampSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 390 Método: Assert.assertEquals("Should use ByteBuffer type", "java.nio.ByteBuffer", compiler.javaType(decimalSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 391 Método: Assert.assertEquals("Should use org.apache.avro.Conversions.UUIDConversion() type", "new org.apache.avro.Conversions.UUIDConversion()", compiler.conversionInstance(uuidSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 406 Método: Assert.assertEquals("Should use java.time.LocalDate for date type", "java.time.LocalDate", compiler.javaType(dateSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 408 Método: Assert.assertEquals("Should use java.time.LocalTime for time-millis type", "java.time.LocalTime", compiler.javaType(timeSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 410 Método: Assert.assertEquals("Should use java.time.Instant for timestamp-millis type", "java.time.Instant", compiler.javaType(timestampSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 412 Método: Assert.assertEquals("Should use java.time.LocalTime for time-micros type", "java.time.LocalTime", compiler.javaType(timeMicrosSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 414 Método: Assert.assertEquals("Should use java.time.Instant for timestamp-micros type", "java.time.Instant", compiler.javaType(timestampMicrosSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 428 Método: Assert.assertEquals("Should use int for Type.INT", "int", compiler.javaUnbox(intSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 429 Método: Assert.assertEquals("Should use long for Type.LONG", "long", compiler.javaUnbox(longSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 430 Método: Assert.assertEquals("Should use float for Type.FLOAT", "float", compiler.javaUnbox(floatSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 431 Método: Assert.assertEquals("Should use double for Type.DOUBLE", "double", compiler.javaUnbox(doubleSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 432 Método: Assert.assertEquals("Should use boolean for Type.BOOLEAN", "boolean", compiler.javaUnbox(boolSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 436 Método: Assert.assertEquals("Should use void for Type.NULL", "void", compiler.javaUnbox(nullSchema, true))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 443 Método: Assert.assertEquals("Should use LocalDate for date type", "java.time.LocalDate", compiler.javaUnbox(dateSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 445 Método: Assert.assertEquals("Should use LocalTime for time-millis type", "java.time.LocalTime", compiler.javaUnbox(timeSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 447 Método: Assert.assertEquals("Should use DateTime for timestamp-millis type", "java.time.Instant", compiler.javaUnbox(timestampSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 460 Método: Assert.assertEquals("Should use java.time.LocalDate for date type", "java.time.LocalDate", compiler.javaUnbox(dateSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 462 Método: Assert.assertEquals("Should use java.time.LocalTime for time-millis type", "java.time.LocalTime", compiler.javaUnbox(timeSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 464 Método: Assert.assertEquals("Should use java.time.Instant for timestamp-millis type", "java.time.Instant", compiler.javaUnbox(timestampSchema, false))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 478 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableDecimalSchema1, false), "java.math.BigDecimal")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 480 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableDecimalSchema2, false), "java.math.BigDecimal")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 494 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableDecimalSchema1, false), "java.nio.ByteBuffer")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 496 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableDecimalSchema2, false), "java.nio.ByteBuffer")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 508 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableIntSchema1, false), "java.lang.Integer")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 509 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableIntSchema2, false), "java.lang.Integer")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 513 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableLongSchema1, false), "java.lang.Long")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 514 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableLongSchema2, false), "java.lang.Long")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 518 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableFloatSchema1, false), "java.lang.Float")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 519 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableFloatSchema2, false), "java.lang.Float")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 525 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableDoubleSchema1, false), "java.lang.Double")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 527 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableDoubleSchema2, false), "java.lang.Double")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 534 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableBooleanSchema1, false), "java.lang.Boolean")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 536 Método: Assert.assertEquals("Should return boxed type", compiler.javaUnbox(nullableBooleanSchema2, false), "java.lang.Boolean")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 555 Método: Assert.assertEquals(1, usedCustomLogicalTypeFactories.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 557 Método: Assert.assertEquals("string-custom", entry.getKey())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 558 Método: Assert.assertEquals("org.apache.avro.compiler.specific.TestSpecificCompiler.StringCustomLogicalTypeFactory", entry.getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 577 Método: Assert.assertEquals(0, usedCustomLogicalTypeFactories.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 591 Método: Assert.assertEquals(1, usedConversionClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 592 Método: Assert.assertEquals("org.apache.avro.Conversions.DecimalConversion", usedConversionClasses.iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 609 Método: Assert.assertEquals(2, conversions.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 610 Método: assertThat(conversions, hasItem("org.apache.avro.data.TimeConversions.TimestampMillisConversion"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 611 Método: assertThat(conversions, hasItem("org.apache.avro.data.TimeConversions.TimestampMicrosConversion"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 622 Método: Assert.assertEquals(1, usedConversionClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 623 Método: Assert.assertEquals("org.apache.avro.data.TimeConversions.DateConversion", usedConversionClasses.iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 634 Método: Assert.assertEquals(1, usedConversionClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 635 Método: Assert.assertEquals("org.apache.avro.data.TimeConversions.DateConversion", usedConversionClasses.iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 646 Método: Assert.assertEquals(1, usedConversionClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 647 Método: Assert.assertEquals("org.apache.avro.data.TimeConversions.DateConversion", usedConversionClasses.iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 658 Método: Assert.assertEquals(1, usedConversionClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 659 Método: Assert.assertEquals("org.apache.avro.data.TimeConversions.DateConversion", usedConversionClasses.iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 670 Método: Assert.assertEquals(1, usedConversionClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 671 Método: Assert.assertEquals("org.apache.avro.data.TimeConversions.DateConversion", usedConversionClasses.iterator().next())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 779 Método: Assert.assertEquals("Should use date conversion for date type", "new org.apache.avro.data.TimeConversions.DateConversion()", compiler.conversionInstance(dateSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 781 Método: Assert.assertEquals("Should use time conversion for time type", "new org.apache.avro.data.TimeConversions.TimeMillisConversion()", compiler.conversionInstance(timeSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 783 Método: Assert.assertEquals("Should use timestamp conversion for date type", "new org.apache.avro.data.TimeConversions.TimestampMillisConversion()", compiler.conversionInstance(timestampSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 786 Método: Assert.assertEquals("Should use null for decimal if the flag is off", "null", compiler.conversionInstance(decimalSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 788 Método: Assert.assertEquals("Should use org.apache.avro.Conversions.UUIDConversion() for uuid if the flag is off", "new org.apache.avro.Conversions.UUIDConversion()", compiler.conversionInstance(uuidSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 803 Método: Assert.assertEquals("Should use date conversion for date type", "new org.apache.avro.data.TimeConversions.DateConversion()", compiler.conversionInstance(dateSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 805 Método: Assert.assertEquals("Should use time conversion for time type", "new org.apache.avro.data.TimeConversions.TimeMillisConversion()", compiler.conversionInstance(timeSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 807 Método: Assert.assertEquals("Should use timestamp conversion for date type", "new org.apache.avro.data.TimeConversions.TimestampMillisConversion()", compiler.conversionInstance(timestampSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 810 Método: Assert.assertEquals("Should use null for decimal if the flag is off", "new org.apache.avro.Conversions.DecimalConversion()", compiler.conversionInstance(decimalSchema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 812 Método: Assert.assertEquals("Should use org.apache.avro.Conversions.UUIDConversion() for uuid if the flag is off", "new org.apache.avro.Conversions.UUIDConversion()", compiler.conversionInstance(uuidSchema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 820 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 825 Método: assertFalse(line.contains("Optional"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 836 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 847 Método: assertEquals(9, optionalFound)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 856 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 867 Método: assertEquals(5, optionalFound)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 876 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 887 Método: assertEquals(17, optionalFound)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 896 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 902 Método: assertFalse(line.contains("Optional"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 915 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 926 Método: assertEquals(1, itWorksFound)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 935 Método: assertTrue(this.outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 941 Método: assertTrue(line.contains("java.util.UUID"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 47 Método: Assert.assertNull(trimmed.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 48 Método: Assert.assertNotNull(recSchema.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 52 Método: Assert.assertEquals(SchemaCompatibility.SchemaCompatibilityType.COMPATIBLE, compat)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 54 Método: Assert.assertEquals(SchemaCompatibility.SchemaCompatibilityType.COMPATIBLE, compat)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 55 Método: Assert.assertNotNull(cv.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 74 Método: Assert.assertEquals("caca", trimmed.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 75 Método: Assert.assertNotNull(recSchema.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 79 Método: Assert.assertEquals(SchemaCompatibility.SchemaCompatibilityType.COMPATIBLE, compat)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 81 Método: Assert.assertEquals(SchemaCompatibility.SchemaCompatibilityType.COMPATIBLE, compat)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 102 Método: Assert.assertTrue(Schemas.hasGeneratedJavaClass(new Schema.Parser().parse("{\"type\": \"fixed\", \"name\": \"N\", \"size\": 10}")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 104 Método: Assert.assertFalse(Schemas.hasGeneratedJavaClass(new Schema.Parser().parse("{\"type\": \"int\"}")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 109 Método: Assert.assertEquals("N", Schemas.getJavaClassName(new Schema.Parser().parse("{\"type\": \"fixed\", \"name\": \"N\", \"size\": 10}")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 111 Método: Assert.assertEquals("N", Schemas.getJavaClassName(new Schema.Parser().parse("{\"type\": \"fixed\", \"name\": \"N\", \"size\": 10, \"namespace\": \"\"}")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 113 Método: Assert.assertEquals("com.example.N", Schemas.getJavaClassName(new Schema.Parser().parse("{\"type\": \"fixed\", \"name\": \"N\", \"size\": 10, \"namespace\": \"com.example\"}")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 162 Método: Assert.assertEquals("t1.", Schemas.visit(new Schema.Parser().parse(s1), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 169 Método: Assert.assertEquals("c1.\"int\"!", Schemas.visit(new Schema.Parser().parse(s2), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 177 Método: Assert.assertEquals("ss1.", Schemas.visit(new Schema.Parser().parse(s3), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 185 Método: Assert.assertEquals("st1.!", Schemas.visit(new Schema.Parser().parse(s4), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 194 Método: Assert.assertEquals("c1.c2.\"int\"!\"long\"!", Schemas.visit(new Schema.Parser().parse(s5), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 203 Método: Assert.assertEquals("c1.ss2.!", Schemas.visit(new Schema.Parser().parse(s6), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 212 Método: Assert.assertEquals("c1.css2.\"int\"!!", Schemas.visit(new Schema.Parser().parse(s7), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 228 Método: Assert.assertEquals("c1.ct2.\"int\"!", Schemas.visit(new Schema.Parser().parse(s9), new TestVisitor()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 249 Método: Assert.assertEquals("c1.c2.\"int\".!\"long\".!", Schemas.visit(new Schema.Parser().parse(s11), new TestVisitor() {

    public SchemaVisitorAction visitTerminal(Schema terminal) {
        sb.append(terminal).append('.');
        return SchemaVisitorAction.SKIP_SIBLINGS;
    }
}))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 262 Método: Assert.assertEquals("c1.ct2.\"int\".", Schemas.visit(new Schema.Parser().parse(s12), new TestVisitor() {

    public SchemaVisitorAction visitTerminal(Schema terminal) {
        sb.append(terminal).append('.');
        return SchemaVisitorAction.TERMINATE;
    }
}))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/schema/TestSchemas.java linha: 273 Método: Assert.assertEquals("\"int\".", Schemas.visit(new Schema.Parser().parse(s12), new TestVisitor() {

    public SchemaVisitorAction visitTerminal(Schema terminal) {
        sb.append(terminal).append('.');
        return SchemaVisitorAction.SKIP_SIBLINGS;
    }
}))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestSchemaResolver.java linha: 39 Método: Assert.assertEquals(5, protocol.getTypes().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 30 Método: assertEquals(DocCommentHelper.getDoc(), "This is a token.")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 32 Método: assertEquals("There should be no warnings", emptyList(), DocCommentHelper.getAndClearWarnings())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 58 Método: assertEquals(DocCommentHelper.getDoc(), "This is the second token.")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 59 Método: assertEquals("There should be a warning", singletonList("Found documentation comment at line 5, column 4. Ignoring previous one at line 3, column 2: \"This is the first token.\"\n" + "Did you mean to use a multiline comment ( /* ... */ ) instead?"), DocCommentHelper.getAndClearWarnings())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 70 Método: assertNull(DocCommentHelper.getDoc())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 71 Método: assertEquals("There should be a warning", singletonList("Ignoring out-of-place documentation comment at line 3, column 2: \"This is a token.\"\n" + "Did you mean to use a multiline comment ( /* ... */ ) instead?"), DocCommentHelper.getAndClearWarnings())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 80 Método: assertEquals(schemaComment, DocCommentHelper.stripIndents(parsedComment))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/DocCommentHelperTest.java linha: 86 Método: assertEquals(schemaComment, DocCommentHelper.stripIndents(parsedComment))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestCycle.java linha: 98 Método: Assert.assertEquals(data.toString(), read.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestReferenceAnnotationNotAllowed.java linha: 36 Método: assertEquals("Type references may not be annotated, at line 29, column 17", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestReferenceAnnotationNotAllowed.java linha: 34 Método: fail("Compilation should fail: annotations on type references are not allowed.")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 71 Método: assertTrue(TEST_DIR.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 72 Método: assertTrue(TEST_INPUT_DIR.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 73 Método: assertTrue(TEST_OUTPUT_DIR.exists())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 105 Método: fail(failed + " tests failed")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 125 Método: assertEquals("Documented Enum", protocol.getType("testing.DocumentedEnum").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 127 Método: assertEquals("Documented Fixed Type", protocol.getType("testing.DocumentedFixed").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 130 Método: assertEquals("Documented Error", documentedError.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 131 Método: assertEquals("Documented Reason Field", documentedError.getField("reason").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 132 Método: assertEquals("Default Doc Explanation Field", documentedError.getField("explanation").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 136 Método: assertEquals("Documented Method", documentedMethod.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 137 Método: assertEquals("Documented Parameter", documentedMethod.getRequest().getField("message").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 138 Método: assertEquals("Default Documented Parameter", documentedMethod.getRequest().getField("defMsg").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 140 Método: assertNull(protocol.getType("testing.UndocumentedEnum").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 141 Método: assertNull(protocol.getType("testing.UndocumentedFixed").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 142 Método: assertNull(protocol.getType("testing.UndocumentedRecord").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 143 Método: assertNull(messages.get("undocumentedMethod").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 149 Método: assertEquals(Arrays.asList(String.format(pattern1, 21, 47, 21, 10, "Dangling Enum1"), String.format(pattern2, 21, 47, "Dangling Enum2"), String.format(pattern1, 23, 9, 22, 9, "Dangling Enum3"), String.format(pattern1, 24, 9, 23, 9, "Dangling Enum4"), String.format(pattern1, 25, 5, 24, 9, "Dangling Enum5"), String.format(pattern2, 25, 5, "Dangling Enum6"), String.format(pattern1, 27, 5, 26, 5, "Dangling Enum7"), String.format(pattern1, 28, 5, 27, 5, "Dangling Enum8"), String.format(pattern2, 28, 5, "Dangling Enum9"), String.format(pattern1, 34, 5, 33, 5, "Dangling Fixed1"), String.format(pattern1, 35, 5, 34, 5, "Dangling Fixed2"), String.format(pattern1, 36, 5, 35, 5, "Dangling Fixed3"), String.format(pattern1, 37, 5, 36, 5, "Dangling Fixed4"), String.format(pattern2, 37, 5, "Dangling Fixed5"), String.format(pattern1, 43, 5, 42, 5, "Dangling Error1"), String.format(pattern2, 43, 5, "Dangling Field1"), String.format(pattern2, 46, 5, "Dangling Field2"), String.format(pattern2, 47, 5, "Dangling Error2"), String.format(pattern1, 55, 5, 54, 5, "Dangling Param1"), String.format(pattern2, 55, 5, "Dangling Param2"), String.format(pattern2, 58, 5, "Dangling Param3"), String.format(pattern1, 60, 5, 59, 5, "Dangling Method1"), String.format(pattern1, 61, 5, 60, 5, "Dangling Method2"), String.format(pattern2, 61, 5, "Dangling Method3")), warnings)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestIdl.java linha: 198 Método: assertEquals(slurped.trim(), output.replace("\\r", "").trim())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 42 Método: Assert.assertEquals(LogicalTypes.date(), logicalTypeOfField("aDate"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 47 Método: Assert.assertEquals(LogicalTypes.timeMillis(), logicalTypeOfField("aTime"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 52 Método: Assert.assertEquals(LogicalTypes.timestampMillis(), logicalTypeOfField("aTimestamp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 57 Método: Assert.assertEquals(LogicalTypes.localTimestampMillis(), logicalTypeOfField("aLocalTimestamp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 62 Método: Assert.assertEquals(LogicalTypes.decimal(6, 2), logicalTypeOfField("pocketMoney"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 67 Método: Assert.assertEquals(LogicalTypes.uuid(), logicalTypeOfField("identifier"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 72 Método: Assert.assertEquals(LogicalTypes.timestampMicros(), logicalTypeOfField("anotherTimestamp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 77 Método: Assert.assertEquals(LogicalTypes.decimal(6, 2), logicalTypeOfField("allowance"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 84 Método: Assert.assertNull(fieldSchema.getLogicalType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 85 Método: Assert.assertEquals("decimal", fieldSchema.getObjectProp("logicalType"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 86 Método: Assert.assertEquals(3000000000L, fieldSchema.getObjectProp("precision"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/compiler/src/test/java/org/apache/avro/compiler/idl/TestLogicalTypes.java linha: 87 Método: Assert.assertEquals(0, fieldSchema.getObjectProp("scale"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 80 Método: assertEquals(0, ((GenericRecord) request).get("x"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 90 Método: assertEquals(1, r.request("m", params))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 105 Método: assertTrue(o.contains("10 calls"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 119 Método: assertTrue(r.contains("m: 0ms"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 120 Método: assertTrue(r.contains("m: 100ms"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 125 Método: assertTrue(r.contains("Average: 500.0ms"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestStatsPluginAndServlet.java linha: 137 Método: assertTrue(resp.contains("Average: 2.0"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestBulkData.java linha: 59 Método: Assert.assertEquals(SIZE, data.remaining())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestBulkData.java linha: 79 Método: Assert.assertEquals(SIZE, proxy.read().remaining())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestProtocolHttp.java linha: 70 Método: assertTrue("Got unwanted exception: " + e.getCause(), e.getCause() instanceof SocketTimeoutException)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-jetty/src/test/java/org/apache/avro/ipc/jetty/TestProtocolHttp.java linha: 68 Método: fail("Should have failed with an exception")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestDataFileSpecific.java linha: 68 Método: Assert.assertEquals("" + (i++), f.getLabel())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestDataFileSpecific.java linha: 70 Método: Assert.assertEquals(10, i)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 120 Método: assertEquals(new Utf8("goodbye"), response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 133 Método: assertEquals(record, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 146 Método: assertEquals(data, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 158 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 159 Método: assertEquals("an error", ((GenericRecord) error.getValue()).get("message").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 174 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 175 Método: assertTrue(error.toString().contains("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 197 Método: assertEquals(new Utf8("goodbye"), response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolGeneric.java linha: 233 Método: assertEquals(rec, response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 54 Método: Assert.assertNotNull(context.requestHandshakeMeta())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 55 Método: Assert.assertNotNull(context.responseHandshakeMeta())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 56 Método: Assert.assertNull(context.getRequestPayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 57 Método: Assert.assertNull(context.getResponsePayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 63 Método: Assert.assertNotNull(buf)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 64 Método: Assert.assertNotNull(buf.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 67 Método: Assert.assertNotNull(partialstr)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 68 Método: Assert.assertEquals("partial string mismatch", "ap", partialstr)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 71 Método: Assert.assertTrue(buf.remaining() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 79 Método: Assert.assertNull(context.getRequestPayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 80 Método: Assert.assertNull(context.getResponsePayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 81 Método: Assert.assertNotNull(handshakeMeta)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 87 Método: Assert.assertNotNull(buf)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 88 Método: Assert.assertNotNull(buf.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 91 Método: Assert.assertNotNull(partialstr)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 92 Método: Assert.assertEquals("partial string mismatch", "apac", partialstr)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 95 Método: Assert.assertTrue(buf.remaining() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 105 Método: Assert.assertNotNull(context.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 106 Método: Assert.assertNotNull(context.getRequestPayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 107 Método: Assert.assertNull(context.getResponsePayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 114 Método: Assert.assertNotNull(meta)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 115 Método: Assert.assertNotNull(context.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 116 Método: Assert.assertNull(context.getResponsePayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 122 Método: Assert.assertNotNull(buf)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 123 Método: Assert.assertNotNull(buf.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 126 Método: Assert.assertNotNull(partialstr)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 127 Método: Assert.assertEquals("partial string mismatch", "ap", partialstr)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 130 Método: Assert.assertTrue(buf.remaining() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 136 Método: Assert.assertNotNull(context.requestCallMeta())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 137 Método: Assert.assertNotNull(context.responseCallMeta())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 139 Método: Assert.assertNotNull(context.getResponsePayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 145 Método: Assert.assertNotNull(buf)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 146 Método: Assert.assertNotNull(buf.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 149 Método: Assert.assertNotNull(partialstr)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 150 Método: Assert.assertEquals("partial string mismatch", "apa", partialstr)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 153 Método: Assert.assertTrue(buf.remaining() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 159 Método: Assert.assertNotNull(context.responseCallMeta())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 160 Método: Assert.assertNotNull(context.getRequestPayload())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 166 Método: Assert.assertNotNull(buf)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 167 Método: Assert.assertNotNull(buf.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 170 Método: Assert.assertNotNull(partialstr)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 171 Método: Assert.assertEquals("partial string mismatch", "apac", partialstr)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 174 Método: Assert.assertTrue(buf.remaining() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 181 Método: Assert.assertNotNull(rpcMeta)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 182 Método: Assert.assertTrue("key not present in map", rpcMeta.containsKey(key))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 185 Método: Assert.assertNotNull(keybuf)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 186 Método: Assert.assertTrue("key BB had nothing remaining", keybuf.remaining() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/RPCMetaTestPlugin.java linha: 189 Método: Assert.assertEquals("apache", str)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 65 Método: assertEquals("Field networkAddress type:STRING pos:1 not set and has no default value", amfe.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 66 Método: assertEquals("Path in schema: --> connection --> networkAddress", amfe.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 69 Método: fail("Should NEVER get here")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 87 Método: assertEquals(NetworkType.IPv4, request1.getConnection().getNetworkType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 88 Método: assertEquals("1.1.1.1", request1.getConnection().getNetworkAddress())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 89 Método: assertEquals("Chrome 123", request1.getHttpRequest().getUserAgent().getUseragent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 90 Método: assertEquals("Foo", request1.getHttpRequest().getUserAgent().getId())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 91 Método: assertEquals(HttpMethod.GET, request1.getHttpRequest().getURI().getMethod())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 92 Método: assertEquals("/index.html", request1.getHttpRequest().getURI().getPath())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 93 Método: assertEquals(1, request1.getHttpRequest().getURI().getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 94 Método: assertEquals("Foo", request1.getHttpRequest().getURI().getParameters().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 95 Método: assertEquals("Bar", request1.getHttpRequest().getURI().getParameters().get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 97 Método: assertEquals(NetworkType.IPv4, request2.getConnection().getNetworkType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 98 Método: assertEquals("2.2.2.2", request2.getConnection().getNetworkAddress())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 99 Método: assertEquals("Chrome 123", request2.getHttpRequest().getUserAgent().getUseragent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 100 Método: assertEquals("Bar", request2.getHttpRequest().getUserAgent().getId())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 101 Método: assertEquals(HttpMethod.GET, request2.getHttpRequest().getURI().getMethod())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 102 Método: assertEquals("/index.html", request2.getHttpRequest().getURI().getPath())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 103 Método: assertEquals(1, request2.getHttpRequest().getURI().getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 104 Método: assertEquals("Foo", request2.getHttpRequest().getURI().getParameters().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 105 Método: assertEquals("Bar", request2.getHttpRequest().getURI().getParameters().get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 127 Método: assertEquals(NetworkType.IPv4, request1.getConnection().getNetworkType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 128 Método: assertEquals("1.1.1.1", request1.getConnection().getNetworkAddress())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 129 Método: assertEquals("Chrome 123", request1.getHttpRequest().getUserAgent().getUseragent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 130 Método: assertEquals("Foo", request1.getHttpRequest().getUserAgent().getId())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 131 Método: assertEquals(HttpMethod.GET, request1.getHttpRequest().getURI().getMethod())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 132 Método: assertEquals("/index.html", request1.getHttpRequest().getURI().getPath())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 133 Método: assertEquals(1, request1.getHttpRequest().getURI().getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 134 Método: assertEquals("Foo", request1.getHttpRequest().getURI().getParameters().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 135 Método: assertEquals("Bar", request1.getHttpRequest().getURI().getParameters().get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 137 Método: assertEquals(NetworkType.IPv4, request2.getConnection().getNetworkType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 138 Método: assertEquals("2.2.2.2", request2.getConnection().getNetworkAddress())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 139 Método: assertEquals("Firefox 456", request2.getHttpRequest().getUserAgent().getUseragent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 140 Método: assertEquals("Bar", request2.getHttpRequest().getUserAgent().getId())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 141 Método: assertEquals(HttpMethod.POST, request2.getHttpRequest().getURI().getMethod())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 142 Método: assertEquals("/index.html", request2.getHttpRequest().getURI().getPath())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 143 Método: assertEquals(1, request2.getHttpRequest().getURI().getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 144 Método: assertEquals("Foo", request2.getHttpRequest().getURI().getParameters().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 145 Método: assertEquals("Bar", request2.getHttpRequest().getURI().getParameters().get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 170 Método: assertEquals(NetworkType.IPv4, request.getConnection().getNetworkType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 171 Método: assertEquals("1.1.1.1", request.getConnection().getNetworkAddress())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 172 Método: assertEquals(0, request.getHttpRequest().getURI().getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 174 Método: assertEquals("Firefox 321", request.getHttpRequest().getUserAgent().getUseragent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 175 Método: assertEquals("Bar", request.getHttpRequest().getUserAgent().getId())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 176 Método: assertEquals(HttpMethod.POST, request.getHttpRequest().getURI().getMethod())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 177 Método: assertEquals("/login.php", request.getHttpRequest().getURI().getPath())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 194 Método: assertEquals(NetworkType.IPv4, request.getConnection().getNetworkType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 195 Método: assertEquals("1.1.1.1", request.getConnection().getNetworkAddress())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 196 Método: assertEquals("Chrome 123", request.getHttpRequest().getUserAgent().getUseragent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 197 Método: assertEquals("Foo", request.getHttpRequest().getUserAgent().getId())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 198 Método: assertEquals(0, request.getHttpRequest().getURI().getParameters().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 200 Método: assertEquals(HttpMethod.GET, request.getHttpRequest().getURI().getMethod())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 201 Método: assertEquals("/index.html", request.getHttpRequest().getURI().getPath())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 208 Método: assertFalse(builder.hasNullableRecordBuilder())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 209 Método: assertFalse(builder.hasNullableRecord())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 210 Método: assertFalse(builder.hasNullableString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 211 Método: assertFalse(builder.hasNullableLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 212 Método: assertFalse(builder.hasNullableInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 213 Método: assertFalse(builder.hasNullableMap())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 214 Método: assertFalse(builder.hasNullableArray())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 218 Método: assertFalse(builderCopy.hasNullableRecordBuilder())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 219 Método: assertFalse(builderCopy.hasNullableRecord())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 220 Método: assertFalse(builderCopy.hasNullableString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 221 Método: assertFalse(builderCopy.hasNullableLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 222 Método: assertFalse(builderCopy.hasNullableInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 223 Método: assertFalse(builderCopy.hasNullableMap())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 224 Método: assertFalse(builderCopy.hasNullableArray())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 235 Método: assertFalse(builder.hasNullableRecordBuilder())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 236 Método: assertFalse(builder.hasNullableRecord())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 237 Método: assertFalse(builder.hasNullableString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 238 Método: assertFalse(builder.hasNullableLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 239 Método: assertFalse(builder.hasNullableInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 240 Método: assertFalse(builder.hasNullableMap())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 241 Método: assertFalse(builder.hasNullableArray())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 253 Método: assertFalse(builder.hasNullableRecordBuilder())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 256 Método: assertTrue(builder.hasNullableRecord())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 257 Método: assertTrue(builder.hasNullableString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 258 Método: assertTrue(builder.hasNullableLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 259 Método: assertTrue(builder.hasNullableInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 260 Método: assertTrue(builder.hasNullableMap())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 261 Método: assertTrue(builder.hasNullableArray())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 265 Método: assertTrue(builder.hasNullableRecordBuilder())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 266 Método: assertFalse(builder.hasNullableRecord())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 272 Método: assertTrue(builder.hasNullableRecordBuilder())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 273 Método: assertFalse(builder.hasNullableRecord())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 274 Método: assertTrue(builder.hasNullableString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 275 Método: assertTrue(builder.hasNullableLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 276 Método: assertTrue(builder.hasNullableInt())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 277 Método: assertTrue(builder.hasNullableMap())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 278 Método: assertTrue(builder.hasNullableArray())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 316 Método: assertEquals("Chrome 123", Optional.of(request).flatMap(Request::getOptionalHttpRequest).flatMap(HttpRequest::getOptionalUserAgent).flatMap(UserAgent::getOptionalUseragent).orElse("UNKNOWN"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 319 Método: assertFalse(Optional.of(request).flatMap(Request::getOptionalHttpRequest).flatMap(HttpRequest::getOptionalUserAgent).flatMap(UserAgent::getOptionalId).isPresent())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 322 Método: assertEquals(HttpMethod.GET, Optional.of(request).flatMap(Request::getOptionalHttpRequest).flatMap(HttpRequest::getOptionalURI).flatMap(HttpURI::getOptionalMethod).orElse(null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificBuilderTree.java linha: 325 Método: assertEquals("/index.html", Optional.of(request).flatMap(Request::getOptionalHttpRequest).flatMap(HttpRequest::getOptionalURI).flatMap(HttpURI::getOptionalPath).orElse(null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumReader.java linha: 78 Método: assertEquals(specificRecord, deserialized)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumReader.java linha: 100 Método: assertEquals(stringablesRecord, deserialized)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 47 Método: Assert.assertTrue(builder.hasName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 48 Método: Assert.assertEquals("James Gosling", builder.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 49 Método: Assert.assertTrue(builder.hasYearOfBirth())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 50 Método: Assert.assertEquals(1955, builder.getYearOfBirth())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 51 Método: Assert.assertFalse(builder.hasCountry())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 52 Método: Assert.assertNull(builder.getCountry())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 53 Método: Assert.assertTrue(builder.hasState())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 54 Método: Assert.assertEquals("CA", builder.getState())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 55 Método: Assert.assertFalse(builder.hasFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 56 Método: Assert.assertNull(builder.getFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 57 Método: Assert.assertFalse(builder.hasLanguages())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 58 Método: Assert.assertNull(builder.getLanguages())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 61 Método: Assert.assertEquals("James Gosling", person.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 62 Método: Assert.assertEquals(1955, person.getYearOfBirth())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 63 Método: Assert.assertEquals("US", person.getCountry())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 64 Método: Assert.assertEquals("CA", person.getState())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 65 Método: Assert.assertNotNull(person.getFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 66 Método: Assert.assertEquals(0, person.getFriends().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 67 Método: Assert.assertNotNull(person.getLanguages())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 68 Método: Assert.assertEquals(2, person.getLanguages().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 69 Método: Assert.assertEquals("English", person.getLanguages().get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 70 Método: Assert.assertEquals("Java", person.getLanguages().get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 73 Método: Assert.assertEquals(builder, Person.newBuilder(builder))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 74 Método: Assert.assertEquals(person, Person.newBuilder(person).build())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 77 Método: Assert.assertEquals("James Gosling", builderCopy.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 78 Método: Assert.assertEquals(1955, builderCopy.getYearOfBirth())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 79 Método: Assert.assertEquals("US", builderCopy.getCountry())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 80 Método: Assert.assertEquals("CA", builderCopy.getState())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 81 Método: Assert.assertNotNull(builderCopy.getFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 82 Método: Assert.assertEquals(0, builderCopy.getFriends().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 86 Método: Assert.assertFalse(builderCopy.hasFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 87 Método: Assert.assertFalse(builderCopy.hasCountry())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 88 Método: Assert.assertNull(builderCopy.getFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 89 Método: Assert.assertNull(builderCopy.getCountry())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 91 Método: Assert.assertNotNull(person2.getFriends())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 92 Método: Assert.assertTrue(person2.getFriends().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 101 Método: Assert.assertEquals(datetime, p.getDatetime())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 102 Método: Assert.assertEquals(ProductPage.class, p.getPageContext().getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 103 Método: Assert.assertEquals(product, ((ProductPage) p.getPageContext()).getProduct())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 107 Método: Assert.assertEquals(datetime, p2.getDatetime())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 108 Método: Assert.assertEquals(ProductPage.class, p2.getPageContext().getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 109 Método: Assert.assertEquals(product, ((ProductPage) p2.getPageContext()).getProduct())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 111 Método: Assert.assertEquals(p, p2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 125 Método: Assert.assertEquals(interop.getArrayField().size(), copy.getArrayField().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 126 Método: Assert.assertEquals(interop.getArrayField(), copy.getArrayField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 127 Método: Assert.assertEquals(interop.getBoolField(), copy.getBoolField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 128 Método: Assert.assertEquals(interop.getBytesField(), copy.getBytesField())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 129 Método: Assert.assertEquals(interop.getDoubleField(), copy.getDoubleField(), 0.001)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 130 Método: Assert.assertEquals(interop.getEnumField(), copy.getEnumField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 131 Método: Assert.assertEquals(interop.getFixedField(), copy.getFixedField())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 132 Método: Assert.assertEquals(interop.getFloatField(), copy.getFloatField(), 0.001)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 133 Método: Assert.assertEquals(interop.getIntField(), copy.getIntField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 134 Método: Assert.assertEquals(interop.getLongField(), copy.getLongField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 135 Método: Assert.assertEquals(interop.getMapField(), copy.getMapField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 136 Método: Assert.assertEquals(interop.getRecordField(), copy.getRecordField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 137 Método: Assert.assertEquals(interop.getStringField(), copy.getStringField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 138 Método: Assert.assertEquals(interop.getUnionField(), copy.getUnionField())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 139 Método: Assert.assertEquals(interop, copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 160 Método: Assert.assertTrue(e.getMessage().contains("name"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 157 Método: Assert.fail("Should have thrown " + AvroRuntimeException.class.getCanonicalName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 172 Método: Assert.assertTrue(e.getMessage().contains("year_of_birth"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificRecordBuilder.java linha: 169 Método: Assert.fail("Should have thrown " + AvroRuntimeException.class.getCanonicalName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 64 Método: assertEquals(expectedJson, out.toString("UTF-8"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 84 Método: assertTrue(e.getMessage().contains("null value for (non-nullable) string at TestRecord.name"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 82 Método: fail("Exception not thrown")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 98 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField[\"a\"].strField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 96 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 111 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("custom coders were used"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 109 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 125 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("null key in map at RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 123 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 139 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("custom coders were used"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 137 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 152 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField[\"a\"].enumField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 150 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 166 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("custom coders were used"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificDatumWriter.java linha: 163 Método: Assert.fail("expected to throw")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 34 Método: Assert.assertTrue(testErrorBuilder.hasValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 35 Método: Assert.assertNotNull(testErrorBuilder.getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 36 Método: Assert.assertTrue(testErrorBuilder.hasCause())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 37 Método: Assert.assertNotNull(testErrorBuilder.getCause())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 38 Método: Assert.assertTrue(testErrorBuilder.hasMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 39 Método: Assert.assertNotNull(testErrorBuilder.getMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 42 Método: Assert.assertEquals("value", testError.getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 43 Método: Assert.assertEquals("value", testError.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 44 Método: Assert.assertEquals("message$", testError.getMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 47 Método: Assert.assertEquals(testErrorBuilder, TestError.newBuilder(testErrorBuilder))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 48 Método: Assert.assertEquals(testErrorBuilder, TestError.newBuilder(testError))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 52 Método: Assert.assertEquals(error, TestError.newBuilder().setValue("value").setCause(new NullPointerException()).setMessage$("message").build())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 57 Método: Assert.assertFalse(testErrorBuilder.hasValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 58 Método: Assert.assertNull(testErrorBuilder.getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 60 Método: Assert.assertFalse(testErrorBuilder.hasCause())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 61 Método: Assert.assertNull(testErrorBuilder.getCause())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 63 Método: Assert.assertFalse(testErrorBuilder.hasMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificErrorBuilder.java linha: 64 Método: Assert.assertNull(testErrorBuilder.getMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 107 Método: Assert.assertEquals(TestRecord.getClassSchema(), TestRecord.SCHEMA$)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 108 Método: Assert.assertEquals(MD5.getClassSchema(), MD5.SCHEMA$)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 109 Método: Assert.assertEquals(Kind.getClassSchema(), Kind.SCHEMA$)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 141 Método: Assert.assertEquals(before, after)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 147 Método: Assert.assertEquals(Reserved.default$, SpecificData.get().createEnum("default", Reserved.SCHEMA$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java linha: 64 Método: assertEquals(nestedEvolve1.getRootName(), "RootName")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java linha: 65 Método: assertEquals(nestedEvolve1.getNested().getName(), "Name")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/message/TestCustomSchemaStore.java linha: 66 Método: assertEquals(nestedEvolve1.getNested().getValue(), 1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 142 Método: assertEquals(responder.getSpecificData().getClassLoader(), loader)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 145 Método: assertEquals(requestor.getSpecificData().getClassLoader(), loader)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 150 Método: assertEquals(Simple.PROTOCOL, SpecificRequestor.getRemote(proxy))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 156 Método: assertEquals("goodbye", response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 172 Método: assertEquals(record, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 173 Método: assertEquals(record.hashCode(), echoed.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 179 Método: assertEquals(3, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 190 Método: assertEquals(data, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 198 Método: assertEquals(data, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 209 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 210 Método: assertEquals("an error", error.getMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 224 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 225 Método: assertTrue(error.toString().contains("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 238 Método: assertEquals(2, ackCount)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 277 Método: assertEquals("goodbye", response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 310 Método: assertFalse(seenProtocols.contains(clientProtocol))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolSpecific.java linha: 318 Método: assertEquals("Expected number of handshakes did not take place.", expected, handshakes)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 89 Método: assertEquals(Schema.create(Type.NULL), new Schema.Parser().parse("\"null\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 90 Método: assertEquals(Schema.create(Type.NULL), new Schema.Parser().parse("{\"type\":\"null\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 96 Método: assertEquals(Schema.create(Type.BOOLEAN), new Schema.Parser().parse("\"boolean\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 97 Método: assertEquals(Schema.create(Type.BOOLEAN), new Schema.Parser().parse("{\"type\":\"boolean\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 103 Método: assertEquals(Schema.create(Type.STRING), new Schema.Parser().parse("\"string\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 104 Método: assertEquals(Schema.create(Type.STRING), new Schema.Parser().parse("{\"type\":\"string\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 110 Método: assertEquals(Schema.create(Type.BYTES), new Schema.Parser().parse("\"bytes\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 111 Método: assertEquals(Schema.create(Type.BYTES), new Schema.Parser().parse("{\"type\":\"bytes\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 118 Método: assertEquals(Schema.create(Type.INT), new Schema.Parser().parse("\"int\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 119 Método: assertEquals(Schema.create(Type.INT), new Schema.Parser().parse("{\"type\":\"int\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 125 Método: assertEquals(Schema.create(Type.LONG), new Schema.Parser().parse("\"long\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 126 Método: assertEquals(Schema.create(Type.LONG), new Schema.Parser().parse("{\"type\":\"long\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 132 Método: assertEquals(Schema.create(Type.FLOAT), new Schema.Parser().parse("\"float\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 133 Método: assertEquals(Schema.create(Type.FLOAT), new Schema.Parser().parse("{\"type\":\"float\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 142 Método: assertEquals(Schema.create(Type.DOUBLE), new Schema.Parser().parse("\"double\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 143 Método: assertEquals(Schema.create(Type.DOUBLE), new Schema.Parser().parse("{\"type\":\"double\"}"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 190 Método: assertEquals("bar", schema.getField("f").getProp("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 191 Método: assertEquals("bar", new Schema.Parser().parse(schema.toString()).getField("f").getProp("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 193 Método: assertEquals("boo", schema.getField("f").getProp("baz"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 266 Método: assertEquals(s1, s2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 293 Método: assertEquals(s1.hashCode(), s2.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 294 Método: assertEquals(s1, s2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 318 Método: assertTrue(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 326 Método: assertTrue(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 406 Método: assertNull(s.getProp("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 413 Método: assertEquals(json, s.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 419 Método: assertEquals(new Schema.Parser().parse("\"boolean\""), s)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 430 Método: assertEquals("p.Z", xs.getField("g").schema().getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 431 Método: assertEquals("q.Z", ys.getField("f").schema().getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 439 Método: assertEquals(xs, new Schema.Parser().parse(xs.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 447 Método: assertEquals(outer, new Schema.Parser().parse(outer.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 457 Método: assertEquals(outer, new Schema.Parser().parse(outer.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 465 Método: assertEquals(outer, new Schema.Parser().parse(outer.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 474 Método: assertEquals(outer, new Schema.Parser().parse(outer.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 484 Método: assertEquals(nullOuter, new Schema.Parser().parse(nullOuter.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 494 Método: assertEquals(nullOuter, new Schema.Parser().parse(nullOuter.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 503 Método: assertEquals("x.Y", u.getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 512 Método: assertThrows(NullPointerException.class, () -> checkBinary(schema, record, new GenericDatumWriter<>(), new GenericDatumReader<>()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 522 Método: fail("Should not have parsed: " + json)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 529 Método: fail("Union should not have constructed from: " + branchList)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 546 Método: assertEquals("This is not a world record.", schema.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 547 Método: assertEquals("Inner Fixed", schema.getField("inner_fixed").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 548 Método: assertEquals("Very Inner Fixed", schema.getField("inner_fixed").schema().getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 549 Método: assertEquals("Inner String", schema.getField("inner_string").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 550 Método: assertEquals("Inner Enum", schema.getField("inner_enum").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 551 Método: assertEquals("Very Inner Enum", schema.getField("inner_enum").schema().getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 552 Método: assertEquals("Inner Union", schema.getField("inner_union").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 562 Método: assertEquals("test", schema.getField("f").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 566 Método: assertEquals("test", schema.getField("f").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 578 Método: assertEquals(s1.getAliases(), Collections.emptySet())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 579 Método: assertEquals(s1.getField("f").aliases(), Collections.emptySet())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 580 Método: assertEquals(s2.getAliases(), Collections.singleton("a.b"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 581 Método: assertEquals(s2.getField("g").aliases(), Collections.singleton("f"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 584 Método: assertNotSame(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 585 Método: assertEquals(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 592 Método: assertNotSame(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 593 Método: assertEquals(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 600 Método: assertNotSame(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 601 Método: assertEquals(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 611 Método: assertEquals(s1.getAliases(), Collections.emptySet())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 612 Método: assertEquals(s2.getAliases(), Collections.singleton("a"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 615 Método: assertNotSame(s2, s3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 616 Método: assertEquals(s2, s3)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 637 Método: assertEquals("Induced schema does not match.", schema, induced)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 640 Método: assertTrue("Datum does not validate against schema " + datum, GenericData.get().validate(schema, datum))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 659 Método: assertNull(s0.getProp("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 662 Método: assertEquals("bar", s1.getProp("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 663 Método: assertNotEquals(s0, s1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 665 Método: assertEquals("bar", s2.getProp("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 666 Método: assertEquals(s1, s2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 667 Método: assertNotEquals(s0, s2)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 688 Método: assertEquals("Decoded data does not match.", datum, decoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 705 Método: assertEquals("Decoded data does not match.", datum, decoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 721 Método: assertEquals("Decoded data does not match.", datum, decoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 737 Método: assertEquals("Decoded data does not match.", datum, decoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 740 Método: assertEquals("Decoded data does not match.", datum, decoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 753 Método: assertEquals("Encoded data does not match.", json, encoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 759 Método: assertEquals("Decoded data does not match.", datum, decoded)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 777 Método: assertEquals("Decoded json does not match.", Json.toString(node), Json.toString(decoded))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 790 Método: assertEquals("Wrong default.", defaultValue, record.get("f"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 791 Método: assertEquals("Wrong toString", expected, new Schema.Parser().parse(expected.toString()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 800 Método: fail("Schema of type " + schemaJson + " should not have default " + defaultJson)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 826 Método: assertEquals("Wrong value", new GenericData.EnumSymbol(expected, "Y"), in.read(null, decoder))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 829 Método: fail("Should have thrown exception.")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 924 Método: assertEquals(schema, names.get(new Schema.Name("Name", "space")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 925 Método: assertEquals(schema, names.get("Name"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 934 Método: assertEquals(schema, names.get(new Schema.Name("Name", "")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 935 Método: assertEquals(schema, names.get("Name"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestSchema.java linha: 943 Método: assertNull(names.get("Name"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestNamespaceSpecific.java linha: 69 Método: assertEquals(record, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestNamespaceSpecific.java linha: 70 Método: assertEquals(record.hashCode(), echoed.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestNamespaceSpecific.java linha: 81 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestNamespaceSpecific.java linha: 82 Método: assertEquals("an error", error.getMessage$())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 41 Método: assertEquals(protocol.getDoc(), "Protocol used for testing.")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 42 Método: assertEquals(6, protocol.getMessages().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 43 Método: assertEquals("Pretend you're in a cave!", protocol.getMessages().get("echo").getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 56 Método: assertTrue(m.isOneWay())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 59 Método: assertTrue(m.isOneWay())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 78 Método: assertNotNull(msg)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 80 Método: assertNotNull(field)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 81 Método: assertTrue(field.aliases().contains("salute"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 88 Método: assertNotNull(msg)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 90 Método: assertNotNull(field)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolParsing.java linha: 91 Método: assertEquals("customValue", field.getProp("customProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/DataFileInteropTest.java linha: 91 Método: assertArrayEquals("someByteArray".getBytes(StandardCharsets.UTF_8), user_metadata)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/DataFileInteropTest.java linha: 97 Método: assertNotNull(datum)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/DataFileInteropTest.java linha: 99 Método: assertNotEquals(0, i)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/generic/TestBuilderCopy.java linha: 50 Método: assertEquals(duplicate, original)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/generic/TestDeepCopy.java linha: 84 Método: assertEquals(interop.get(field.pos()), SpecificData.get().deepCopy(field.schema(), interop.get(field.pos())))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/generic/TestDeepCopy.java linha: 81 Método: assertTrue(Arrays.equals(((ByteBuffer) interop.get(field.pos())).array(), ((ByteBuffer) GenericData.get().deepCopy(field.schema(), interop.get(field.pos()))).array()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/generic/TestDeepCopy.java linha: 93 Método: assertFalse("Field " + field.name() + " is same instance in deep copy", interop.get(field.pos()) == GenericData.get().deepCopy(field.schema(), interop.get(field.pos())))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/generic/TestDeepCopy.java linha: 116 Método: assertEquals(javaClassString.get(field.pos()), SpecificData.get().deepCopy(field.schema(), javaClassString.get(field.pos())))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 77 Método: assertEquals("\\\"", SpecificCompiler.javaEscape("\""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 83 Método: assertEquals("foo/bar/Baz.java".replace("/", File.separator), compiler.makePath("Baz", "foo.bar"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 84 Método: assertEquals("baz.java", compiler.makePath("baz", ""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 89 Método: assertEquals(0, new SpecificCompiler(new Schema.Parser().parse("\"double\"")).compile().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 96 Método: assertEquals(1, outputs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 98 Método: assertEquals(o.path, "Test.java")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 99 Método: assertTrue(o.contents.contains("public enum Test"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 105 Método: assertEquals("foo", SpecificCompiler.mangle("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 106 Método: assertEquals("goto$", SpecificCompiler.mangle("goto"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 116 Método: assertTrue(errType.contains("public class finally$ extends org.apache.avro.specific.SpecificExceptionBase"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 117 Método: assertTrue(errType.contains("private boolean catch$;"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 119 Método: assertTrue(protocol.contains("java.lang.CharSequence goto$(java.lang.CharSequence break$)"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 120 Método: assertTrue(protocol.contains("public interface default$"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 121 Método: assertTrue(protocol.contains(" finally$"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 138 Método: assertEquals(1, outputs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 141 Método: assertTrue(contents.contains("private java.lang.CharSequence package$;"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 142 Método: assertTrue(contents.contains("class volatile$ extends"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 143 Método: assertTrue(contents.contains("volatile$ short$;"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 153 Método: assertEquals(1, outputs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 156 Método: assertTrue(contents.contains("new$"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 181 Método: assertEquals(3, outputs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 186 Método: assertTrue(o.contents.contains("/** This is not a world record. */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 187 Método: assertTrue(o.contents.contains("/** Inner Fixed */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 188 Método: assertTrue(o.contents.contains("/** Inner Enum */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 189 Método: assertTrue(o.contents.contains("/** Inner String */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 193 Método: assertTrue(o.contents.contains("/** Very Inner Fixed */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 194 Método: assertTrue(o.contents.contains("@org.apache.avro.specific.FixedSize(1)"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 198 Método: assertTrue(o.contents.contains("/** Very Inner Enum */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 202 Método: assertEquals(3, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 209 Método: assertEquals(6, out.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 214 Método: assertTrue(o.contents.contains("/** Protocol used for testing. */"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 215 Método: assertTrue(o.contents.contains("* Send a greeting"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 218 Método: assertEquals("Missed generated protocol!", 1, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 235 Método: assertTrue(!outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 237 Método: assertTrue(!outputDir.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 239 Método: assertTrue(outputDir.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 240 Método: assertTrue(outputFile.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 245 Método: assertEquals(lastModified, outputFile.lastModified())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 251 Método: assertTrue(lastModified != outputFile.lastModified())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 280 Método: assertEquals("getHeight", SpecificCompiler.generateGetMethod(createRecord("test", false, height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 282 Método: assertEquals("getHeightAndWidth", SpecificCompiler.generateGetMethod(createRecord("test", false, height_and_width), height_and_width))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 285 Método: assertEquals("getMessage", SpecificCompiler.generateGetMethod(createRecord("test", false, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 287 Método: assertEquals("getMessage$", SpecificCompiler.generateGetMethod(createRecord("test", true, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 289 Método: assertEquals("getCause", SpecificCompiler.generateGetMethod(createRecord("test", false, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 291 Método: assertEquals("getCause$", SpecificCompiler.generateGetMethod(createRecord("test", true, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 293 Método: assertEquals("getClass$", SpecificCompiler.generateGetMethod(createRecord("test", false, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 295 Método: assertEquals("getClass$", SpecificCompiler.generateGetMethod(createRecord("test", true, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 297 Método: assertEquals("getSchema$", SpecificCompiler.generateGetMethod(createRecord("test", false, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 299 Método: assertEquals("getSchema$", SpecificCompiler.generateGetMethod(createRecord("test", true, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 303 Método: assertEquals("getHeight", SpecificCompiler.generateGetMethod(createRecord("test", false, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 307 Método: assertEquals("getHeight$0", SpecificCompiler.generateGetMethod(createRecord("test", false, height, Height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 312 Método: assertEquals("getHeight$1", SpecificCompiler.generateGetMethod(createRecord("test", false, height, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 317 Método: assertEquals("getMessage$", SpecificCompiler.generateGetMethod(createRecord("test", true, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 321 Método: assertEquals("getMessage$0", SpecificCompiler.generateGetMethod(createRecord("test", true, message, Message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 326 Método: assertEquals("getMessage$1", SpecificCompiler.generateGetMethod(createRecord("test", true, message, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 331 Método: assertEquals("getSchema$", SpecificCompiler.generateGetMethod(createRecord("test", false, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 335 Método: assertEquals("getSchema$0", SpecificCompiler.generateGetMethod(createRecord("test", false, schema, Schema$), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 340 Método: assertEquals("getSchema$1", SpecificCompiler.generateGetMethod(createRecord("test", false, schema, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 356 Método: assertEquals("setHeight", SpecificCompiler.generateSetMethod(createRecord("test", false, height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 358 Método: assertEquals("setHeightAndWidth", SpecificCompiler.generateSetMethod(createRecord("test", false, height_and_width), height_and_width))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 361 Método: assertEquals("setMessage", SpecificCompiler.generateSetMethod(createRecord("test", false, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 363 Método: assertEquals("setMessage$", SpecificCompiler.generateSetMethod(createRecord("test", true, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 365 Método: assertEquals("setCause", SpecificCompiler.generateSetMethod(createRecord("test", false, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 367 Método: assertEquals("setCause$", SpecificCompiler.generateSetMethod(createRecord("test", true, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 369 Método: assertEquals("setClass$", SpecificCompiler.generateSetMethod(createRecord("test", false, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 371 Método: assertEquals("setClass$", SpecificCompiler.generateSetMethod(createRecord("test", true, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 373 Método: assertEquals("setSchema$", SpecificCompiler.generateSetMethod(createRecord("test", false, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 375 Método: assertEquals("setSchema$", SpecificCompiler.generateSetMethod(createRecord("test", true, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 379 Método: assertEquals("setHeight", SpecificCompiler.generateSetMethod(createRecord("test", false, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 383 Método: assertEquals("setHeight$0", SpecificCompiler.generateSetMethod(createRecord("test", false, height, Height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 388 Método: assertEquals("setHeight$1", SpecificCompiler.generateSetMethod(createRecord("test", false, height, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 393 Método: assertEquals("setMessage$", SpecificCompiler.generateSetMethod(createRecord("test", true, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 397 Método: assertEquals("setMessage$0", SpecificCompiler.generateSetMethod(createRecord("test", true, message, Message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 402 Método: assertEquals("setMessage$1", SpecificCompiler.generateSetMethod(createRecord("test", true, message, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 407 Método: assertEquals("setSchema$", SpecificCompiler.generateSetMethod(createRecord("test", false, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 411 Método: assertEquals("setSchema$0", SpecificCompiler.generateSetMethod(createRecord("test", false, schema, Schema$), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 416 Método: assertEquals("setSchema$1", SpecificCompiler.generateSetMethod(createRecord("test", false, schema, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 432 Método: assertEquals("hasHeight", SpecificCompiler.generateHasMethod(createRecord("test", false, height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 434 Método: assertEquals("hasHeightAndWidth", SpecificCompiler.generateHasMethod(createRecord("test", false, height_and_width), height_and_width))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 437 Método: assertEquals("hasMessage", SpecificCompiler.generateHasMethod(createRecord("test", false, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 439 Método: assertEquals("hasMessage$", SpecificCompiler.generateHasMethod(createRecord("test", true, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 441 Método: assertEquals("hasCause", SpecificCompiler.generateHasMethod(createRecord("test", false, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 443 Método: assertEquals("hasCause$", SpecificCompiler.generateHasMethod(createRecord("test", true, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 445 Método: assertEquals("hasClass$", SpecificCompiler.generateHasMethod(createRecord("test", false, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 447 Método: assertEquals("hasClass$", SpecificCompiler.generateHasMethod(createRecord("test", true, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 449 Método: assertEquals("hasSchema$", SpecificCompiler.generateHasMethod(createRecord("test", false, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 451 Método: assertEquals("hasSchema$", SpecificCompiler.generateHasMethod(createRecord("test", true, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 455 Método: assertEquals("hasHeight", SpecificCompiler.generateHasMethod(createRecord("test", false, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 459 Método: assertEquals("hasHeight$0", SpecificCompiler.generateHasMethod(createRecord("test", false, height, Height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 464 Método: assertEquals("hasHeight$1", SpecificCompiler.generateHasMethod(createRecord("test", false, height, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 469 Método: assertEquals("hasMessage$", SpecificCompiler.generateHasMethod(createRecord("test", true, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 473 Método: assertEquals("hasMessage$0", SpecificCompiler.generateHasMethod(createRecord("test", true, message, Message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 478 Método: assertEquals("hasMessage$1", SpecificCompiler.generateHasMethod(createRecord("test", true, message, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 483 Método: assertEquals("hasSchema$", SpecificCompiler.generateHasMethod(createRecord("test", false, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 487 Método: assertEquals("hasSchema$0", SpecificCompiler.generateHasMethod(createRecord("test", false, schema, Schema$), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 492 Método: assertEquals("hasSchema$1", SpecificCompiler.generateHasMethod(createRecord("test", false, schema, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 508 Método: assertEquals("clearHeight", SpecificCompiler.generateClearMethod(createRecord("test", false, height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 510 Método: assertEquals("clearHeightAndWidth", SpecificCompiler.generateClearMethod(createRecord("test", false, height_and_width), height_and_width))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 513 Método: assertEquals("clearMessage", SpecificCompiler.generateClearMethod(createRecord("test", false, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 515 Método: assertEquals("clearMessage$", SpecificCompiler.generateClearMethod(createRecord("test", true, message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 517 Método: assertEquals("clearCause", SpecificCompiler.generateClearMethod(createRecord("test", false, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 519 Método: assertEquals("clearCause$", SpecificCompiler.generateClearMethod(createRecord("test", true, cause), cause))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 521 Método: assertEquals("clearClass$", SpecificCompiler.generateClearMethod(createRecord("test", false, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 523 Método: assertEquals("clearClass$", SpecificCompiler.generateClearMethod(createRecord("test", true, clasz), clasz))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 525 Método: assertEquals("clearSchema$", SpecificCompiler.generateClearMethod(createRecord("test", false, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 527 Método: assertEquals("clearSchema$", SpecificCompiler.generateClearMethod(createRecord("test", true, schema), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 531 Método: assertEquals("clearHeight", SpecificCompiler.generateClearMethod(createRecord("test", false, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 535 Método: assertEquals("clearHeight$0", SpecificCompiler.generateClearMethod(createRecord("test", false, height, Height), height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 540 Método: assertEquals("clearHeight$1", SpecificCompiler.generateClearMethod(createRecord("test", false, height, Height), Height))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 545 Método: assertEquals("clearMessage$", SpecificCompiler.generateClearMethod(createRecord("test", true, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 549 Método: assertEquals("clearMessage$0", SpecificCompiler.generateClearMethod(createRecord("test", true, message, Message), message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 554 Método: assertEquals("clearMessage$1", SpecificCompiler.generateClearMethod(createRecord("test", true, message, Message), Message))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 559 Método: assertEquals("clearSchema$", SpecificCompiler.generateClearMethod(createRecord("test", false, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 563 Método: assertEquals("clearSchema$0", SpecificCompiler.generateClearMethod(createRecord("test", false, schema, Schema$), schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 568 Método: assertEquals("clearSchema$1", SpecificCompiler.generateClearMethod(createRecord("test", false, schema, Schema$), Schema$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 575 Método: assertNotNull(Simple.class.getAnnotation(TestAnnotation.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 577 Método: assertNotNull(TestRecord.class.getAnnotation(TestAnnotation.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 579 Método: assertNotNull(MD5.class.getAnnotation(TestAnnotation.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 581 Método: assertNotNull(Kind.class.getAnnotation(TestAnnotation.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 584 Método: assertNotNull(TestRecord.class.getDeclaredField("name").getAnnotation(TestAnnotation.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 586 Método: assertNotNull(Simple.class.getMethod("ack").getAnnotation(TestAnnotation.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 596 Método: assertEquals(1, outputs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 598 Método: assertEquals(o.path, "X.java")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 599 Método: assertTrue(o.contents.contains("[\\\"Y\\\"]"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 600 Método: assertTrue(o.contents.contains("[\\\"g\\\"]"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 609 Método: assertNotNull(outputs)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 621 Método: assertNotNull(outputs)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 643 Método: assertTrue(cTask.call())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 653 Método: assertEquals(1, outputs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 656 Método: assertTrue(contents.contains("private java.net.URI"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 657 Método: assertTrue(contents.contains("catch (java.net.URISyntaxException e)"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 658 Método: assertTrue(contents.contains("private java.net.URL"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/compiler/specific/TestSpecificCompiler.java linha: 659 Método: assertTrue(contents.contains("catch (java.net.MalformedURLException e)"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 112 Método: assertEquals(responder.getReflectData().getClassLoader(), loader)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 115 Método: assertEquals(requestor.getReflectData().getClassLoader(), loader)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 121 Método: assertEquals("goodbye", response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 129 Método: assertEquals(record, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 135 Método: assertEquals(3, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 145 Método: assertArrayEquals(data, echoed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 156 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 157 Método: assertEquals("foo", error.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 171 Método: assertNotNull(error)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestProtocolReflect.java linha: 172 Método: assertTrue(error.toString().contains("foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestSaslDigestMd5.java linha: 114 Método: assertEquals(new Utf8("goodbye"), response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestSaslDigestMd5.java linha: 150 Método: assertEquals(new Utf8("goodbye"), response)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/specific/TestSpecificRequestor.java linha: 51 Método: fail(e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/specific/TestSpecificRequestor.java linha: 60 Método: fail(e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/specific/TestSpecificRequestor.java linha: 69 Método: fail(e.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestStopwatch.java linha: 33 Método: assertEquals(20, s.elapsedNanos())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestStopwatch.java linha: 37 Método: assertEquals(60, s.elapsedNanos())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestStopwatch.java linha: 76 Método: assertTrue(s.elapsedNanos() >= 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 45 Método: assertEquals(20, h.getCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 46 Método: assertArrayEquals(new int[] { 1, 1, 2, 4, 8, 4 }, h.getHistogram())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 48 Método: assertEquals("[0,1)=1;[1,2)=1;[2,4)=2;[4,8)=4;[8,16)=8;[16,infinity)=4", h.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 56 Método: assertEquals(correctBucketLabels[pos], it.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 59 Método: assertEquals(correctBucketLabels.length, pos)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 62 Método: assertEquals(correctBucketLabels.length, labels.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 65 Método: assertEquals(correctBucketLabels[i], labels.get(i))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 72 Método: assertEquals(correctBoundryLabels.length, boundryLabels.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 75 Método: assertEquals(correctBoundryLabels[i], boundryLabels.get(i))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 83 Método: assertEquals("[0,1)", entries.get(0).bucket)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 84 Método: assertEquals(4, entries.get(5).count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 85 Método: assertEquals(6, entries.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 90 Método: assertTrue(recent.contains(1010))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 91 Método: assertTrue(recent.contains(9191))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 137 Método: assertEquals(3, h.getCount())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 138 Método: assertEquals(14.0f, h.getMean(), 0.0001)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/stats/TestHistogram.java linha: 139 Método: assertEquals(5.291f, h.getUnbiasedStdDev(), 0.001)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 38 Método: assertEquals(0, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 42 Método: assertEquals(1, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 46 Método: assertEquals(6, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 50 Método: assertEquals(5, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 54 Método: assertEquals(2, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 58 Método: assertEquals(3, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestRpcPluginOrdering.java linha: 62 Método: assertEquals(4, orderCounter.getAndIncrement())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestLocalTransceiver.java linha: 44 Método: assertEquals(new Utf8("hello"), ((GenericRecord) request).get("x"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/ipc/TestLocalTransceiver.java linha: 58 Método: assertEquals(new Utf8("there"), r.request("m", params))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 48 Método: assertEquals(0, BinaryData.compare(b, 0, b, 0, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 188 Método: assertEquals(-1, BinaryData.compare(b1, 0, b2, 0, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 189 Método: assertEquals(1, BinaryData.compare(b2, 0, b1, 0, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 190 Método: assertEquals(0, BinaryData.compare(b1, 0, b1, 0, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 191 Método: assertEquals(0, BinaryData.compare(b2, 0, b2, 0, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 193 Método: assertEquals(-1, compare(o1, o2, schema, comparable, comparator))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 194 Método: assertEquals(1, compare(o2, o1, schema, comparable, comparator))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 195 Método: assertEquals(0, compare(o1, o1, schema, comparable, comparator))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 196 Método: assertEquals(0, compare(o2, o2, schema, comparable, comparator))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 211 Método: assertEquals(o1.hashCode(), BinaryData.hashCode(b1, 0, b1.length, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 212 Método: assertEquals(o2.hashCode(), BinaryData.hashCode(b2, 0, b2.length, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 216 Método: assertEquals(comparator.hashCode(o1, schema), BinaryData.hashCode(b1, 0, b1.length, schema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc/src/test/java/org/apache/avro/TestCompare.java linha: 217 Método: assertEquals(comparator.hashCode(o2, schema), BinaryData.hashCode(b2, 0, b2.length, schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 70 Método: Assert.assertEquals("Round-trip conversion should work", instant, roundTrip)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 71 Método: Assert.assertEquals("Known timestamp should be correct", May_28_2015_21_46_53_221_ts, conversion.fromLong(instant, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 73 Método: Assert.assertEquals("Known timestamp should be correct", instant, (long) conversion.toLong(May_28_2015_21_46_53_221_ts, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 80 Método: Assert.assertEquals("Round-trip conversion should work", instant, roundTrip)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 81 Método: Assert.assertEquals("Known timestamp should be correct", Jan_2_1900_3_4_5_678_ts, conversion.fromLong(instant, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 83 Método: Assert.assertEquals("Known timestamp should be correct", instant, (long) conversion.toLong(Jan_2_1900_3_4_5_678_ts, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 98 Método: Assert.assertEquals("Round-trip conversion should work", instant, roundTrip)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 99 Método: Assert.assertEquals("Known timestamp should be correct", May_28_2015_21_46_53_221_843_ts, conversion.fromLong(instant, TIMESTAMP_MICROS_SCHEMA, LogicalTypes.timestampMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 101 Método: Assert.assertEquals("Known timestamp should be correct", instant, (long) conversion.toLong(May_28_2015_21_46_53_221_843_ts, TIMESTAMP_MICROS_SCHEMA, LogicalTypes.timestampMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 108 Método: Assert.assertEquals("Round-trip conversion should work", instant, roundTrip)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 109 Método: Assert.assertEquals("Known timestamp should be correct", Jan_2_1900_3_4_5_678_901_ts, conversion.fromLong(instant, TIMESTAMP_MICROS_SCHEMA, LogicalTypes.timestampMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 111 Método: Assert.assertEquals("Known timestamp should be correct", instant, (long) conversion.toLong(Jan_2_1900_3_4_5_678_901_ts, TIMESTAMP_MICROS_SCHEMA, LogicalTypes.timestampMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 151 Método: Assert.assertEquals("Reflected schema should be logicalType timestampMillis", TIMESTAMP_MILLIS_SCHEMA, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtoConversions.java linha: 157 Método: Assert.assertEquals("Reflected schema should be logicalType timestampMicros", TIMESTAMP_MICROS_SCHEMA, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 87 Método: assertEquals(foo, o)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 101 Método: assertEquals(foo.getInt32(), o.getInt32())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 102 Método: assertEquals(foo.getBool(), o.getBool())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 103 Método: assertEquals(0, o.getFooArrayCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 109 Método: assertEquals(s.getField("fooArray").defaultVal(), Lists.newArrayList())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 115 Método: assertEquals(N.class.getName(), SpecificData.get().getClass(s).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 121 Método: assertEquals(org.apache.avro.protobuf.noopt.Test.class.getName(), s.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 127 Método: assertEquals(org.apache.avro.protobuf.multiplefiles.Foo.class.getPackage().getName(), fooSchema.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 130 Método: assertEquals(org.apache.avro.protobuf.multiplefiles.M.class.getName(), nSchema.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 140 Método: assertNotEquals(conversion.getRecommendedSchema(), s1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/protobuf/src/test/java/org/apache/avro/protobuf/TestProtobuf.java linha: 146 Método: assertEquals(conversion.getRecommendedSchema(), s2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibilityEnumDefaults.java linha: 74 Método: assertEquals("A", decodedDatum.get("field1").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibilityEnumDefaults.java linha: 88 Método: assertEquals("B", decodedDatum.get("field1").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibilityEnumDefaults.java linha: 103 Método: assertEquals("A", decodedDatum.get("field1").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestFixed.java linha: 32 Método: Assert.assertNotNull(field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestFixed.java linha: 33 Método: Assert.assertArrayEquals(new byte[16], (byte[]) field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 67 Método: assertEquals(value, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 75 Método: assertEquals(value, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 91 Método: assertEquals(new BigDecimal("99892.123400000000000"), result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 107 Método: assertEquals(value, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 115 Método: assertEquals(value, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 131 Método: assertEquals(new BigDecimal("99892.123400000000000"), result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 147 Método: assertEquals(value, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 155 Método: assertEquals(new BigDecimal("123.45"), result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 180 Método: assertEquals(decimal.getPrecision(), bigDecimal.precision())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 181 Método: assertTrue(decimal.getScale() >= bigDecimal.scale())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 188 Método: assertNotEquals(0, bigDecimal.compareTo(fromFixed))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 189 Método: assertNotEquals(bigDecimal, fromFixed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 191 Método: assertEquals(new BigDecimal("123.45"), fromFixed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 199 Método: assertEquals(decimal.getPrecision(), bigDecimal.precision())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 200 Método: assertTrue(decimal.getScale() >= bigDecimal.scale())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 206 Método: assertNotEquals(0, bigDecimal.compareTo(fromBytes))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 207 Método: assertNotEquals(bigDecimal, fromBytes)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDecimalConversion.java linha: 209 Método: assertEquals(new BigDecimal("123.45"), fromBytes)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 56 Método: Assert.assertEquals("myrecord", schema.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 57 Método: Assert.assertEquals("org.example", schema.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 58 Método: Assert.assertEquals("org.example.oldrecord", schema.getAliases().iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 59 Método: Assert.assertFalse(schema.isError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 61 Método: Assert.assertEquals(4, fields.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 62 Método: Assert.assertEquals(new Schema.Field("f0", Schema.create(Schema.Type.STRING)), fields.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 63 Método: Assert.assertTrue(fields.get(0).aliases().contains("f0alias"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 64 Método: Assert.assertEquals(new Schema.Field("f1", Schema.create(Schema.Type.LONG), "This is f1"), fields.get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 70 Método: Assert.assertEquals(new Schema.Field("f2", optional, null, true), fields.get(2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 77 Método: Assert.assertNotEquals(new Schema.Field("f3", optional2, null, (Object) null), fields.get(3))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 78 Método: Assert.assertEquals(new Schema.Field("f3", optional2, null, Schema.Field.NULL_DEFAULT_VALUE), fields.get(3))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 84 Método: Assert.assertEquals("mydoc", s.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 92 Método: Assert.assertEquals(2, size)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 93 Método: Assert.assertEquals("v1", s.getProp("p1"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 94 Método: Assert.assertEquals("v2real", s.getProp("p2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 104 Método: Assert.assertEquals(7, s.getObjectProps().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 105 Método: Assert.assertTrue(s.getObjectProp("booleanProp") instanceof Boolean)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 106 Método: Assert.assertEquals(true, s.getObjectProp("booleanProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 107 Método: Assert.assertTrue(s.getObjectProp("intProp") instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 108 Método: Assert.assertEquals(Integer.MAX_VALUE, s.getObjectProp("intProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 109 Método: Assert.assertTrue(s.getObjectProp("intProp") instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 110 Método: Assert.assertTrue(s.getObjectProp("longProp") instanceof Long)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 111 Método: Assert.assertEquals(Long.MAX_VALUE, s.getObjectProp("longProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 112 Método: Assert.assertTrue(s.getObjectProp("floatProp") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 114 Método: Assert.assertEquals(1.0d, s.getObjectProp("floatProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 115 Método: Assert.assertTrue(s.getObjectProp("doubleProp") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 116 Método: Assert.assertEquals(Double.MAX_VALUE, s.getObjectProp("doubleProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 118 Método: Assert.assertTrue(s.getObjectProp("byteProp") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 119 Método: Assert.assertEquals("ABC", s.getObjectProp("byteProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 120 Método: Assert.assertTrue(s.getObjectProp("stringProp") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 121 Método: Assert.assertEquals("abc", s.getObjectProp("stringProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 134 Método: Assert.assertEquals(7, f.getObjectProps().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 135 Método: Assert.assertTrue(f.getObjectProp("booleanProp") instanceof Boolean)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 136 Método: Assert.assertEquals(true, f.getObjectProp("booleanProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 137 Método: Assert.assertTrue(f.getObjectProp("intProp") instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 138 Método: Assert.assertEquals(Integer.MAX_VALUE, f.getObjectProp("intProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 139 Método: Assert.assertTrue(f.getObjectProp("intProp") instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 140 Método: Assert.assertTrue(f.getObjectProp("longProp") instanceof Long)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 141 Método: Assert.assertEquals(Long.MAX_VALUE, f.getObjectProp("longProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 142 Método: Assert.assertTrue(f.getObjectProp("floatProp") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 144 Método: Assert.assertEquals(1.0d, f.getObjectProp("floatProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 145 Método: Assert.assertTrue(f.getObjectProp("doubleProp") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 146 Método: Assert.assertEquals(Double.MAX_VALUE, f.getObjectProp("doubleProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 148 Método: Assert.assertTrue(f.getObjectProp("byteProp") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 149 Método: Assert.assertEquals("ABC", f.getObjectProp("byteProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 150 Método: Assert.assertTrue(f.getObjectProp("stringProp") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 151 Método: Assert.assertEquals("abc", f.getObjectProp("stringProp"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 168 Método: Assert.assertEquals(1, s.getObjectProps().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 170 Método: Assert.assertTrue(s.getObjectProp("arrayProp") instanceof Collection)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 174 Método: Assert.assertEquals(7, valueCollection.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 175 Método: Assert.assertEquals(true, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 176 Método: Assert.assertEquals(Integer.MAX_VALUE, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 177 Método: Assert.assertEquals(Long.MAX_VALUE, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 179 Método: Assert.assertEquals(1.0d, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 180 Método: Assert.assertEquals(Double.MAX_VALUE, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 182 Método: Assert.assertEquals("ABC", iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 183 Método: Assert.assertEquals("abc", iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 203 Método: Assert.assertEquals(1, f.getObjectProps().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 205 Método: Assert.assertTrue(f.getObjectProp("arrayProp") instanceof Collection)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 209 Método: Assert.assertEquals(7, valueCollection.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 210 Método: Assert.assertEquals(true, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 211 Método: Assert.assertEquals(Integer.MAX_VALUE, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 212 Método: Assert.assertEquals(Long.MAX_VALUE, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 214 Método: Assert.assertEquals(1.0d, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 215 Método: Assert.assertEquals(Double.MAX_VALUE, iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 217 Método: Assert.assertEquals("ABC", iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 218 Método: Assert.assertEquals("abc", iter.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 235 Método: Assert.assertTrue(s.getObjectProp("mapProp") instanceof Map)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 238 Método: Assert.assertEquals(values.size(), valueMap.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 240 Método: Assert.assertTrue(valueMap.get("booleanKey") instanceof Boolean)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 241 Método: Assert.assertEquals(true, valueMap.get("booleanKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 242 Método: Assert.assertTrue(valueMap.get("intKey") instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 243 Método: Assert.assertEquals(Integer.MAX_VALUE, valueMap.get("intKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 244 Método: Assert.assertTrue(valueMap.get("longKey") instanceof Long)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 245 Método: Assert.assertEquals(Long.MAX_VALUE, valueMap.get("longKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 247 Método: Assert.assertTrue(valueMap.get("floatKey") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 248 Método: Assert.assertEquals(1.0d, valueMap.get("floatKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 249 Método: Assert.assertTrue(valueMap.get("doubleKey") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 250 Método: Assert.assertEquals(Double.MAX_VALUE, valueMap.get("doubleKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 252 Método: Assert.assertTrue(valueMap.get("byteKey") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 253 Método: Assert.assertEquals("ABC", valueMap.get("byteKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 254 Método: Assert.assertTrue(valueMap.get("stringKey") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 255 Método: Assert.assertEquals("abc", valueMap.get("stringKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 275 Método: Assert.assertTrue(f.getObjectProp("mapProp") instanceof Map)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 278 Método: Assert.assertEquals(values.size(), valueMap.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 280 Método: Assert.assertTrue(valueMap.get("booleanKey") instanceof Boolean)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 281 Método: Assert.assertEquals(true, valueMap.get("booleanKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 282 Método: Assert.assertTrue(valueMap.get("intKey") instanceof Integer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 283 Método: Assert.assertEquals(Integer.MAX_VALUE, valueMap.get("intKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 284 Método: Assert.assertTrue(valueMap.get("longKey") instanceof Long)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 285 Método: Assert.assertEquals(Long.MAX_VALUE, valueMap.get("longKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 287 Método: Assert.assertTrue(valueMap.get("floatKey") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 288 Método: Assert.assertEquals(1.0d, valueMap.get("floatKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 289 Método: Assert.assertTrue(valueMap.get("doubleKey") instanceof Double)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 290 Método: Assert.assertEquals(Double.MAX_VALUE, valueMap.get("doubleKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 292 Método: Assert.assertTrue(valueMap.get("byteKey") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 293 Método: Assert.assertEquals("ABC", valueMap.get("byteKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 294 Método: Assert.assertTrue(valueMap.get("stringKey") instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 295 Método: Assert.assertEquals("abc", valueMap.get("stringKey"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 320 Método: Assert.assertEquals("myrecord", s1.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 321 Método: Assert.assertEquals("myrecord", s2.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 322 Método: Assert.assertEquals("myrecord", s3.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 323 Método: Assert.assertEquals("myrecord", s4.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 325 Método: Assert.assertEquals("org.example", s1.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 326 Método: Assert.assertEquals("org.example", s2.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 327 Método: Assert.assertEquals("org.example", s3.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 328 Método: Assert.assertEquals("org.example", s4.getNamespace())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 330 Método: Assert.assertEquals("org.example.myrecord", s1.getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 331 Método: Assert.assertEquals("org.example.myrecord", s2.getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 332 Método: Assert.assertEquals("org.example.myrecord", s3.getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 333 Método: Assert.assertEquals("org.example.myrecord", s4.getFullName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 348 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 357 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 366 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 375 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 384 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 393 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 402 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 411 Método: Assert.assertEquals(expected, built1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 417 Método: Assert.assertEquals(Schema.create(type), bareByName)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 418 Método: Assert.assertEquals(bareByName, bare)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 441 Método: Assert.assertEquals("LongList", schema.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 443 Método: Assert.assertEquals(2, fields.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 444 Método: Assert.assertEquals(new Schema.Field("value", Schema.create(Schema.Type.LONG), null), fields.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 446 Método: Assert.assertEquals(Schema.Type.UNION, fields.get(1).schema().getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 448 Método: Assert.assertEquals(Schema.Type.NULL, fields.get(1).schema().getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 450 Método: Assert.assertEquals(Schema.Type.RECORD, recordSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 451 Método: Assert.assertEquals("LongList", recordSchema.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 452 Método: Assert.assertEquals(NullNode.getInstance(), fields.get(1).defaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 461 Método: Assert.assertEquals(expected, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 471 Método: Assert.assertEquals(expected, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 479 Método: Assert.assertEquals(expected, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 488 Método: Assert.assertEquals(expected, schema1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 491 Método: Assert.assertEquals(expected, schema2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 495 Método: Assert.assertEquals(expected, schema3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 504 Método: Assert.assertEquals(expected, schema1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 507 Método: Assert.assertEquals(expected, schema2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 511 Método: Assert.assertEquals(expected, schema3)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 522 Método: Assert.assertEquals(expected, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 525 Método: Assert.assertEquals(expected, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 534 Método: Assert.assertEquals("documented", rec.getField("documented").doc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 535 Método: Assert.assertEquals(Order.ASCENDING, rec.getField("ascending").order())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 536 Método: Assert.assertEquals(Order.DESCENDING, rec.getField("descending").order())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 537 Método: Assert.assertEquals(Order.IGNORE, rec.getField("ignored").order())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 538 Método: Assert.assertTrue(rec.getField("aliased").aliases().contains("anAlias"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 563 Método: Assert.assertEquals(full, shortcut)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 583 Método: Assert.assertEquals(Schema.createFixed("Foo", null, null, 1), f)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 628 Método: Assert.assertEquals(expected, r.getField(name).schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 692 Método: Assert.assertEquals(false, newRec.get("boolF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 693 Método: Assert.assertEquals(false, newRec.get("boolU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 694 Método: Assert.assertEquals(1, newRec.get("intF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 695 Método: Assert.assertEquals(1, newRec.get("intU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 696 Método: Assert.assertEquals(2L, newRec.get("longF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 697 Método: Assert.assertEquals(2L, newRec.get("longU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 698 Método: Assert.assertEquals(3f, newRec.get("floatF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 699 Método: Assert.assertEquals(3f, newRec.get("floatU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 700 Método: Assert.assertEquals(4d, newRec.get("doubleF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 701 Método: Assert.assertEquals(4d, newRec.get("doubleU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 702 Método: Assert.assertEquals("def", newRec.get("stringF").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 703 Método: Assert.assertEquals("def", newRec.get("stringU").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 704 Método: Assert.assertEquals(bufdef, newRec.get("bytesF1"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 705 Método: Assert.assertEquals(bufdef, newRec.get("bytesF2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 706 Método: Assert.assertEquals(bufdef, newRec.get("bytesF3"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 707 Método: Assert.assertEquals(bufdef, newRec.get("bytesU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 708 Método: Assert.assertNull(newRec.get("nullF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 709 Método: Assert.assertNull(newRec.get("nullU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 710 Método: Assert.assertArrayEquals(bytedef, ((GenericData.Fixed) newRec.get("fixedF1")).bytes())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 711 Método: Assert.assertArrayEquals(bytedef, ((GenericData.Fixed) newRec.get("fixedF2")).bytes())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 712 Método: Assert.assertArrayEquals(bytedef, ((GenericData.Fixed) newRec.get("fixedF3")).bytes())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 713 Método: Assert.assertArrayEquals(bytedef, ((GenericData.Fixed) newRec.get("fixedU")).bytes())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 714 Método: Assert.assertEquals("S", newRec.get("enumF").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 715 Método: Assert.assertEquals("SS", newRec.get("enumU").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 718 Método: Assert.assertEquals(mapdef.size(), map.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 720 Método: Assert.assertEquals(mapdef.get(e.getKey().toString()), e.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 722 Método: Assert.assertEquals(newRec.get("mapF"), newRec.get("mapU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 725 Método: Assert.assertEquals(arrdef.size(), arr.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 727 Método: Assert.assertTrue(arrdef.contains(c.toString()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 729 Método: Assert.assertEquals(newRec.get("arrayF"), newRec.get("arrayU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 730 Método: Assert.assertEquals(recdef, newRec.get("recordF"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 731 Método: Assert.assertEquals(recdef2, newRec.get("recordU"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 732 Método: Assert.assertEquals("S", newRec.get("byName").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 758 Método: Assert.assertEquals(1, rec1.get("requiredInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 759 Método: Assert.assertEquals(null, rec1.get("optionalInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 760 Método: Assert.assertEquals(3, rec1.get("nullableIntWithDefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 765 Método: Assert.assertEquals(1, rec2.get("requiredInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 766 Método: Assert.assertEquals(2, rec2.get("optionalInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 767 Método: Assert.assertEquals(13, rec2.get("nullableIntWithDefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 788 Método: Assert.assertEquals(1, rec1read.get("requiredInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 789 Método: Assert.assertNull(rec1read.get("optionalInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 790 Método: Assert.assertEquals(3, rec1read.get("nullableIntWithDefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 791 Método: Assert.assertNull(rec1read.get("newOptionalInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 792 Método: Assert.assertEquals(5, rec1read.get("newNullableIntWithDefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 795 Método: Assert.assertEquals(1, rec2read.get("requiredInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 796 Método: Assert.assertEquals(2, rec2read.get("optionalInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 797 Método: Assert.assertEquals(13, rec2read.get("nullableIntWithDefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 798 Método: Assert.assertNull(rec2read.get("newOptionalInt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 799 Método: Assert.assertEquals(5, rec2read.get("newNullableIntWithDefault"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 814 Método: Assert.assertEquals("int field default type or value mismatch", intDef, schema.getField("int").defaultVal())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 815 Método: Assert.assertEquals("long field default type or value mismatch", longDef, schema.getField("long").defaultVal())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 816 Método: Assert.assertEquals("float field default type or value mismatch", floatDef, schema.getField("float").defaultVal())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 817 Método: Assert.assertEquals("double field default type or value mismatch", doubleDef, schema.getField("double").defaultVal())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 827 Método: Assert.assertEquals("Default behavior is to raise an exception due to record having an invalid default", "Invalid default for field IntegerField: \"Invalid\" not a \"int\"", e.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 840 Método: Assert.assertNull("Differing types, so this returns null", schema.getField(fieldName).defaultVal())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 841 Método: Assert.assertEquals("Schema is able to be successfully created as is without validation", defaultValue, schema.getField(fieldName).defaultValue().asText())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaBuilder.java linha: 857 Método: Assert.assertEquals(a2, a1)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 42 Método: Assert.assertTrue("Should be a Decimal", logicalType instanceof LogicalTypes.Decimal)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 44 Método: Assert.assertEquals("Should have correct precision", 9, decimal.getPrecision())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 45 Método: Assert.assertEquals("Should have correct scale", 2, decimal.getScale())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 55 Método: Assert.assertNull("Should ignore invalid logical type", LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 70 Método: assertThrows("Should reject type: " + schema.getType(), IllegalArgumentException.class, "Logical type decimal must be backed by fixed or bytes", () -> {
    decimal.addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 84 Método: Assert.assertNull("Should not return a LogicalType instance", logicalType)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 92 Método: Assert.assertEquals("Precision should be an Integer.MAX_VALUE", Integer.MAX_VALUE, ((LogicalTypes.Decimal) LogicalTypes.fromSchemaIgnoreInvalid(schema)).getPrecision())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 100 Método: assertThrows("Should reject precision", IllegalArgumentException.class, "fixed(4) cannot store 10 digits (max 9)", () -> {
    LogicalTypes.decimal(10).addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 105 Método: Assert.assertNull("Invalid logical type should not be set on schema", LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 109 Método: assertThrows("Should reject precision", IllegalArgumentException.class, "fixed(129) cannot store 311 digits (max 310)", () -> {
    LogicalTypes.decimal(311).addToSchema(schema129);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 114 Método: Assert.assertNull("Invalid logical type should not be set on schema", LogicalTypes.fromSchemaIgnoreInvalid(schema129))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 121 Método: assertThrows("Should reject precision", IllegalArgumentException.class, "Invalid decimal precision: 0 (must be positive)", () -> {
    LogicalTypes.decimal(0).addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 126 Método: Assert.assertNull("Invalid logical type should not be set on schema", LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 132 Método: assertThrows("Should reject precision", IllegalArgumentException.class, "Invalid decimal precision: -9 (must be positive)", () -> {
    LogicalTypes.decimal(-9).addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 137 Método: Assert.assertNull("Invalid logical type should not be set on schema", LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 143 Método: assertThrows("Should reject precision", IllegalArgumentException.class, "Invalid decimal scale: 10 (greater than precision: 9)", () -> {
    LogicalTypes.decimal(9, 10).addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 148 Método: Assert.assertNull("Invalid logical type should not be set on schema", LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 154 Método: assertThrows("Should reject precision", IllegalArgumentException.class, "Invalid decimal scale: -2 (must be positive)", () -> {
    LogicalTypes.decimal(9, -2).addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 159 Método: Assert.assertNull("Invalid logical type should not be set on schema", LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 166 Método: assertThrows("Should reject second logical type", AvroRuntimeException.class, "Can't overwrite property: scale", () -> {
    LogicalTypes.decimal(9, 2).addToSchema(schema);
    return null;
})
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 171 Método: Assert.assertEquals("First logical type should still be set on schema", LogicalTypes.decimal(9), LogicalTypes.fromSchemaIgnoreInvalid(schema))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 180 Método: Assert.assertEquals("Scale should be a 0", 0, ((LogicalTypes.Decimal) LogicalTypes.fromSchemaIgnoreInvalid(schema)).getScale())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 189 Método: Assert.assertEquals("Constructed and parsed schemas should match", schema, parsed)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 197 Método: Assert.assertEquals("Constructed and parsed schemas should match", schema, parsed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 219 Método: Assert.assertNotSame(schema1, schema2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 220 Método: Assert.assertNotSame(schema1, schema3)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 236 Método: assertThrows("Should error if type name was not provided", UnsupportedOperationException.class, "LogicalTypeFactory TypeName has not been provided", () -> {
    LogicalTypes.register(schema -> LogicalTypes.date());
    return null;
})
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 259 Método: MatcherAssert.assertThat(LogicalTypes.getCustomRegisteredTypes(), IsMapContaining.hasEntry("registered", factory))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 278 Método: MatcherAssert.assertThat(LogicalTypes.getCustomRegisteredTypes(), IsMapContaining.hasEntry("factory", factory))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 287 Método: MatcherAssert.assertThat(LogicalTypes.getCustomRegisteredTypes(), IsMapContaining.hasEntry("logicalTypeName", factory))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 293 Método: MatcherAssert.assertThat(LogicalTypes.getCustomRegisteredTypes(), IsMapContaining.hasEntry(equalTo("service-example"), instanceOf(LogicalTypes.LogicalTypeFactory.class)))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 298 Método: Assert.assertEquals("Should be equal (forward): " + message, o1, o2)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 299 Método: Assert.assertEquals("Should be equal (reverse): " + message, o2, o1)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 303 Método: Assert.assertNotEquals("Should be equal (forward): " + message, o1, o2)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 304 Método: Assert.assertNotEquals("Should be equal (reverse): " + message, o2, o1)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 322 Método: Assert.assertEquals(message, expected, actual.getClass())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 323 Método: Assert.assertTrue("Expected exception message (" + containedInMessage + ") missing: " + actual.getMessage(), actual.getMessage().contains(containedInMessage))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestLogicalType.java linha: 320 Método: Assert.fail("No exception was thrown (" + message + "), expected: " + expected.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java linha: 59 Método: assertThat(decoded.get("parentField1").toString(), equalTo("parentValue1"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java linha: 60 Método: assertThat(decoded.get("parentField2").toString(), equalTo("parentValue2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java linha: 62 Método: assertThat(((GenericData.Record) decoded.get("child1")).get("childField").toString(), equalTo("childValue1"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java linha: 89 Método: assertThat(decoded.get("parentField1").toString(), equalTo("parentValue1"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java linha: 90 Método: assertThat(decoded.get("parentField2").toString(), equalTo("parentValue2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestNestedRecords.java linha: 92 Método: assertThat(((GenericData.Record) decoded.get("child1")).get("childField").toString(), equalTo("childValue1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReader.java linha: 58 Método: fail("Reading on empty file is supposed to fail.")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReader.java linha: 73 Método: fail("File descriptor leaked from new DataFileReader() over " + maxTries + " tries: (" + sb.substring(0, sb.length() - 1) + ")")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReader.java linha: 103 Método: assertEquals("TestSchema", r.getSchema().getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReader.java linha: 107 Método: assertEquals("TestSchema", r2.getSchema().getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReader.java linha: 211 Método: assertEquals(legacySchema, r.getSchema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 65 Método: Assert.assertEquals("6 Jan 1970 should be 5", 5, (int) conversion.toInt(Jan_6_1970, DATE_SCHEMA, LogicalTypes.date()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 67 Método: Assert.assertEquals("1 Jan 1970 should be 0", 0, (int) conversion.toInt(Jan_1_1970, DATE_SCHEMA, LogicalTypes.date()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 69 Método: Assert.assertEquals("27 Dec 1969 should be -5", -5, (int) conversion.toInt(Dec_27_1969, DATE_SCHEMA, LogicalTypes.date()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 72 Método: Assert.assertEquals("6 Jan 1970 should be 5", conversion.fromInt(5, DATE_SCHEMA, LogicalTypes.date()), Jan_6_1970)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 73 Método: Assert.assertEquals("1 Jan 1970 should be 0", conversion.fromInt(0, DATE_SCHEMA, LogicalTypes.date()), Jan_1_1970)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 74 Método: Assert.assertEquals("27 Dec 1969 should be -5", conversion.fromInt(-5, DATE_SCHEMA, LogicalTypes.date()), Dec_27_1969)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 85 Método: Assert.assertEquals("Midnight should be 0", 0, (int) conversion.toInt(LocalTime.MIDNIGHT, TIME_MILLIS_SCHEMA, LogicalTypes.timeMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 87 Método: Assert.assertEquals("01:00 should be 3,600,000", 3_600_000, (int) conversion.toInt(oneAM, TIME_MILLIS_SCHEMA, LogicalTypes.timeMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 89 Método: Assert.assertEquals("15:14:15.926 should be " + afternoonMillis, afternoonMillis, (int) conversion.toInt(afternoon, TIME_MILLIS_SCHEMA, LogicalTypes.timeMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 92 Método: Assert.assertEquals("Midnight should be 0", LocalTime.MIDNIGHT, conversion.fromInt(0, TIME_MILLIS_SCHEMA, LogicalTypes.timeMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 94 Método: Assert.assertEquals("01:00 should be 3,600,000", oneAM, conversion.fromInt(3600000, TIME_MILLIS_SCHEMA, LogicalTypes.timeMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 96 Método: Assert.assertEquals("15:14:15.926 should be " + afternoonMillis, afternoon, conversion.fromInt(afternoonMillis, TIME_MILLIS_SCHEMA, LogicalTypes.timeMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 107 Método: Assert.assertEquals("Midnight should be 0", LocalTime.MIDNIGHT, conversion.fromLong(0L, TIME_MICROS_SCHEMA, LogicalTypes.timeMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 109 Método: Assert.assertEquals("01:00 should be 3,600,000,000", oneAM, conversion.fromLong(3_600_000_000L, TIME_MICROS_SCHEMA, LogicalTypes.timeMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 111 Método: Assert.assertEquals("15:14:15.926551 should be " + afternoonMicros, afternoon, conversion.fromLong(afternoonMicros, TIME_MICROS_SCHEMA, LogicalTypes.timeMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 114 Método: Assert.assertEquals("Midnight should be 0", 0, (long) conversion.toLong(LocalTime.MIDNIGHT, TIME_MICROS_SCHEMA, LogicalTypes.timeMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 116 Método: Assert.assertEquals("01:00 should be 3,600,000,000", 3_600_000_000L, (long) conversion.toLong(oneAM, TIME_MICROS_SCHEMA, LogicalTypes.timeMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 118 Método: Assert.assertEquals("15:14:15.926551 should be " + afternoonMicros, afternoonMicros, (long) conversion.toLong(afternoon, TIME_MICROS_SCHEMA, LogicalTypes.timeMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 130 Método: Assert.assertEquals("Round-trip conversion should work", nowInstant, roundTrip)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 138 Método: Assert.assertEquals("Known date should be correct", May_28_2015_21_46_53_221, conversion.fromLong(May_28_2015_21_46_53_221_instant, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 140 Método: Assert.assertEquals("Known date should be correct", May_28_2015_21_46_53_221_instant, (long) conversion.toLong(May_28_2015_21_46_53_221, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 144 Método: Assert.assertEquals("1970-01-01 should be 0", Instant.EPOCH, conversion.fromLong(0L, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 146 Método: Assert.assertEquals("1970-01-01 should be 0", 0L, (long) conversion.toLong(ZonedDateTime.ofInstant(Instant.EPOCH, ZoneOffset.UTC).toInstant(), TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 154 Método: Assert.assertEquals("Pre 1970 date should be correct", Jul_01_1969_12_00_00_123, conversion.fromLong(Jul_01_1969_12_00_00_123_instant, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 156 Método: Assert.assertEquals("Pre 1970 date should be correct", Jul_01_1969_12_00_00_123_instant, (long) conversion.toLong(Jul_01_1969_12_00_00_123, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 170 Método: Assert.assertEquals("Known date should be correct", May_28_2015_21_46_53_221_843, conversion.fromLong(May_28_2015_21_46_53_221_843_instant, TIMESTAMP_MICROS_SCHEMA, LogicalTypes.timestampMicros()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 173 Método: Assert.assertEquals("Known date should be correct", May_28_2015_21_46_53_221_843_instant, (long) conversion.toLong(May_28_2015_21_46_53_221_843, TIMESTAMP_MICROS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 177 Método: Assert.assertEquals("1970-01-01 should be 0", Instant.EPOCH, conversion.fromLong(0L, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 179 Método: Assert.assertEquals("1970-01-01 should be 0", 0L, (long) conversion.toLong(ZonedDateTime.ofInstant(Instant.EPOCH, ZoneOffset.UTC).toInstant(), TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 187 Método: Assert.assertEquals("Pre 1970 date should be correct", Jul_01_1969_12_00_00_000_123, conversion.fromLong(Jul_01_1969_12_00_00_000_123_instant, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 189 Método: Assert.assertEquals("Pre 1970 date should be correct", Jul_01_1969_12_00_00_000_123_instant, (long) conversion.toLong(Jul_01_1969_12_00_00_000_123, TIMESTAMP_MILLIS_SCHEMA, LogicalTypes.timestampMillis()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 196 Método: Assert.assertEquals("Reflected schema should be logicalType date", DATE_SCHEMA, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 202 Método: Assert.assertEquals("Reflected schema should be logicalType timeMillis", TIME_MILLIS_SCHEMA, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 208 Método: Assert.assertEquals("Reflected schema should be logicalType timeMicros", TIME_MICROS_SCHEMA, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 214 Método: Assert.assertEquals("Reflected schema should be logicalType timestampMillis", TIMESTAMP_MILLIS_SCHEMA, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/TestTimeConversions.java linha: 220 Método: Assert.assertEquals("Reflected schema should be logicalType timestampMicros", TIMESTAMP_MICROS_SCHEMA, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 52 Método: Assert.assertTrue(RecordBuilderBase.isValidValue(f, new Object()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 58 Método: Assert.assertFalse(RecordBuilderBase.isValidValue(f, null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 65 Método: Assert.assertTrue(RecordBuilderBase.isValidValue(new Field("f", Schema.create(Type.NULL), null, null), null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 74 Método: Assert.assertTrue(RecordBuilderBase.isValidValue(new Field("f", unionWithoutNull, null, null), new Object()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 75 Método: Assert.assertFalse(RecordBuilderBase.isValidValue(new Field("f", unionWithoutNull, null, null), null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 80 Método: Assert.assertTrue(RecordBuilderBase.isValidValue(new Field("f", unionWithNull, null, null), new Object()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/data/RecordBuilderBaseTest.java linha: 81 Método: Assert.assertTrue(RecordBuilderBase.isValidValue(new Field("f", unionWithNull, null, null), null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 61 Método: assertTrue(intClass.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 62 Método: assertFalse(integerClass.isPrimitive())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 67 Método: assertNotNull(Reflection.class.getMethod("primitive", intClass))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 77 Método: assertNotNull(Reflection.class.getMethod("primitiveWrapper", integerClass))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 143 Método: assertEquals(1, record.get("x"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 144 Método: assertEquals("str", record.get("y"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 160 Método: assertEquals(before, after)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificData.java linha: 172 Método: fail("Non stringable object should be rejected.")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificToFromByteArray.java linha: 51 Método: assertEquals(record, copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/specific/TestSpecificToFromByteArray.java linha: 63 Método: assertEquals(record, copy)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 131 Método: assertTrue(threwProperly, "failed to throw when expected")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 147 Método: assertNull(doubleCloseEx, "Double close() threw an unexpected exception")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 156 Método: assertEquals(expected, datum)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 185 Método: assertEquals(COUNT, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 204 Método: assertEquals(reader.previousSync(), (long) syncs.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 208 Método: assertNotNull(reader.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 227 Método: assertEquals(expected, datum)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 248 Método: assertNotNull(readerTrue.next(), "Should be able to reopen from arbitrary point")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 254 Método: assertEquals(validPos, sin.tell(), "Should not move from sync point on reopen")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 255 Método: assertNotNull(readerFalse.next(), "Should be able to reopen at sync point")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 270 Método: assertNotNull(datum)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 306 Método: assertTrue(out.flushCount < currentCount && out.flushCount >= flushCounter)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 332 Método: assertEquals(syncCounter, out.syncCount)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFile.java linha: 339 Método: assertNotNull(datum)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 65 Método: Assert.assertNotSame("Copy should not be the same object", copy, V2_RECORDS.get(0))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 66 Método: Assert.assertEquals("Record should be identical after round-trip", V2_RECORDS.get(0), copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 103 Método: Assert.assertEquals(allAsV2, decodedUsingV2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 126 Método: Assert.assertEquals(V2_BUILDER.set("id", 6L).set("message", "m-6").clear("data").build(), record)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 141 Método: Assert.assertEquals(V2_BUILDER.set("id", 4L).set("message", "m-4").clear("data").build(), record)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 158 Método: Assert.assertEquals(V1_RECORDS.get(2), record)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 171 Método: Assert.assertEquals(b0.array(), b1.array())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 174 Método: Assert.assertEquals("Buffer was reused, decode(b0) should be record 1", V1_RECORDS.get(1), decoder.decode(b0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 184 Método: Assert.assertNotEquals(b0.array(), b1.array())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestBinaryMessageEncoding.java linha: 189 Método: Assert.assertEquals("Buffer was copied, decode(b0) should be record 0", V1_RECORDS.get(0), decoder.decode(b0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/message/TestInteropSingleObjectEncoding.java linha: 63 Método: Assert.assertArrayEquals(fileBuffer, buffer.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 68 Método: assertThat(s.getField("a1").schema().getLogicalType(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 69 Método: assertThat(getCapturedStdErr(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 74 Método: assertThat(s.getField("a1").schema().getLogicalType(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 78 Método: assertThat(getCapturedStdErr(), containsString("Ignored the A.a1.logicalType property (\"date\"). It should" + " probably be nested inside the \"type\" for the field."))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 80 Método: assertThat(s.getField("a1").schema().getLogicalType(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 85 Método: assertThat(s.getField("a1").schema().getLogicalType(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 90 Método: assertThat(getCapturedStdErr(), is(""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 91 Método: assertThat(s.getField("a1").schema().getLogicalType(), is(LogicalTypes.date()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 106 Método: assertThat(s.getField("a1").schema().getLogicalType(), nullValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaWarnings.java linha: 107 Método: assertThat(getCapturedStdErr(), containsString("Ignoring invalid logical type for name: date"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 129 Método: assertEquals(1, data.resolveUnion(s, new ArrayList<Float>()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 136 Método: assertEquals(1, data.resolveUnion(s, new HashMap<String, Float>()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 145 Método: assertEquals(1, data.resolveUnion(s, map))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 153 Método: assertEquals(1, data.resolveUnion(s, new GenericData.Fixed(f)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 161 Método: assertEquals(1, data.resolveUnion(s, E.A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 168 Método: assertEquals(1, data.resolveUnion(s, ByteBuffer.wrap(new byte[] { 1 })))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 383 Método: assertEquals(Schema.Type.UNION, response.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 384 Método: assertEquals(Schema.Type.NULL, response.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 385 Método: assertEquals(Schema.Type.STRING, response.getTypes().get(1).getType())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 389 Método: assertNotNull("field 's' should not be null", field)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 391 Método: assertEquals(Schema.Type.UNION, param.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 392 Método: assertEquals(Schema.Type.NULL, param.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 393 Método: assertEquals(Schema.Type.STRING, param.getTypes().get(1).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 395 Método: assertEquals(String.class, ReflectData.get().getClass(response))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 396 Método: assertEquals(String.class, ReflectData.get().getClass(param))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 424 Método: assertEquals(Schema.Type.STRING, r10Schema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 425 Método: assertEquals(R10.class.getName(), r10Schema.getProp("java-class"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 448 Método: assertEquals(Schema.Type.RECORD, r11Record.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 450 Método: assertEquals(JsonProperties.NULL_VALUE, r11Field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 452 Método: assertEquals(Schema.Type.UNION, r11FieldSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 453 Método: assertEquals(Schema.Type.NULL, r11FieldSchema.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 455 Método: assertEquals(Schema.Type.STRING, r11String.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 474 Método: assertEquals(Schema.Type.UNION, response.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 475 Método: assertEquals(Schema.Type.NULL, response.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 476 Método: assertEquals(Schema.Type.STRING, response.getTypes().get(1).getType())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 480 Método: assertNotNull("field 's' should not be null", field)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 482 Método: assertEquals(Schema.Type.UNION, param.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 483 Método: assertEquals(Schema.Type.NULL, param.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 484 Método: assertEquals(Schema.Type.STRING, param.getTypes().get(1).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 486 Método: assertEquals(String.class, ReflectData.get().getClass(response))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 487 Método: assertEquals(String.class, ReflectData.get().getClass(param))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 502 Método: assertEquals(Schema.Type.INT, s.getField("x").schema().getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 503 Método: assertEquals(new Schema.Parser().parse("{\"type\":\"array\",\"items\":[\"null\",\"string\"]}"), s.getField("strings").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 514 Método: assertEquals(Schema.Type.NULL, s.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 526 Método: assertEquals(Schema.Type.INT, message.getResponse().getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 528 Método: assertEquals(Schema.Type.INT, field.schema().getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 543 Método: assertEquals(Schema.Type.RECORD, e1.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 544 Método: assertTrue(e1.isError())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 546 Método: assertNotNull("field 'detailMessage' should not be null", message)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 548 Método: assertEquals(Schema.Type.UNION, messageSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 549 Método: assertEquals(Schema.Type.NULL, messageSchema.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 550 Método: assertEquals(Schema.Type.STRING, messageSchema.getTypes().get(1).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 556 Método: assertEquals(Schema.Type.UNION, response.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 557 Método: assertEquals(Schema.Type.STRING, response.getTypes().get(0).getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 558 Método: assertEquals(e1, response.getTypes().get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 565 Método: assertEquals(noPackage.getName(), ReflectData.getClassName(s))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 578 Método: assertEquals(object, after)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 587 Método: assertEquals("setField", object, copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 717 Método: assertEquals(schemaJson, ReflectData.get().getSchema(type).toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 731 Método: assertEquals(record, decoded)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 816 Método: assertTrue(decoded.i1 == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 817 Método: assertTrue(decoded.i2 == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 818 Método: assertTrue(decoded.i3 == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 819 Método: assertTrue(decoded.i4 == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 820 Método: assertTrue(decoded.i5 == 5)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 821 Método: assertTrue(decoded.i6 == 6)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 822 Método: assertTrue(decoded.i7.getTime() == 7)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 823 Método: assertTrue(decoded.i8 == 8)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 824 Método: assertTrue(decoded.i9.getTime() == 9)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 825 Método: assertTrue(decoded.i10.getTime() == 10)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 826 Método: assertTrue(decoded.i11.getTime() == 11)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 832 Método: assertEquals(schm.toString(), "{\"type\":\"record\",\"name\":\"AvroEncRecord\",\"namespace" + "\":\"org.apache.avro.reflect.TestReflect\",\"fields\":[{\"name\":\"date\"," + "\"type\":{\"type\":\"long\",\"CustomEncoding\":\"DateAsLongEncoding\"}}]}")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 849 Método: assertEquals(record, decoded)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 869 Método: assertEquals(a, decoded)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 871 Método: assertEquals(b, decoded)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 976 Método: assertEquals(reflected, reparsed)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 1103 Método: assertEquals("{\"type\":\"string\",\"java-class\":\"" + c.getName() + "\"}", schema.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 1168 Método: assertEquals(0, reflectData.compare(datum, decoded, schema, equals))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 1182 Método: assertTrue(e.getMessage().contains(datum.getClass().getName()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 1229 Método: assertEquals(data.getSchema(data.getClass(s)).toString(), "{\"type\":\"record\",\"name\":\"Z\",\"namespace\":\"org.apache.avro.reflect.TestReflect\",\"fields\":[]}")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflect.java linha: 1239 Método: assertThat(data.getSchema(data.getClass(s)).getFullName(), is("org.apache.avro.reflect.TestReflect.SampleRecord.AnotherSampleRecord"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 72 Método: Assert.assertEquals(requiredSchema(boolean.class), primitives.getField("aBoolean").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 73 Método: Assert.assertEquals(requiredSchema(byte.class), primitives.getField("aByte").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 74 Método: Assert.assertEquals(requiredSchema(short.class), primitives.getField("aShort").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 75 Método: Assert.assertEquals(requiredSchema(int.class), primitives.getField("anInt").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 76 Método: Assert.assertEquals(requiredSchema(long.class), primitives.getField("aLong").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 77 Método: Assert.assertEquals(requiredSchema(float.class), primitives.getField("aFloat").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 78 Método: Assert.assertEquals(requiredSchema(double.class), primitives.getField("aDouble").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 85 Método: Assert.assertEquals(nullableSchema(boolean.class), wrappers.getField("aBoolean").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 86 Método: Assert.assertEquals(nullableSchema(byte.class), wrappers.getField("aByte").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 87 Método: Assert.assertEquals(nullableSchema(short.class), wrappers.getField("aShort").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 88 Método: Assert.assertEquals(nullableSchema(int.class), wrappers.getField("anInt").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 89 Método: Assert.assertEquals(nullableSchema(long.class), wrappers.getField("aLong").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 90 Método: Assert.assertEquals(nullableSchema(float.class), wrappers.getField("aFloat").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 91 Método: Assert.assertEquals(nullableSchema(double.class), wrappers.getField("aDouble").schema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 92 Método: Assert.assertEquals(nullableSchema(Primitives.class), wrappers.getField("anObject").schema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 99 Método: Assert.assertEquals("Should produce a nullable double", nullableSchema(double.class), withNullable.getField("aDouble").schema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 105 Método: Assert.assertEquals("Should add null to a non-null union", nullableDoubleOrLong, withNullable.getField("doubleOrLong").schema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 108 Método: Assert.assertEquals("Should add null to a non-null union", nullableDoubleOrLong, withNullable.getField("doubleOrLongOrNull1").schema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 114 Método: Assert.assertEquals("Should add null to a non-null union", doubleOrLongOrNull, withNullable.getField("doubleOrLongOrNull2").schema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectAllowNulls.java linha: 117 Método: Assert.assertEquals("Should add null to a non-null union", doubleOrLongOrNull, withNullable.getField("doubleOrLongOrNull3").schema())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 80 Método: Assert.assertEquals("Should use the UUID logical type", expected, actual)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 117 Método: Assert.assertEquals("Should have the correct record name", "org.apache.avro.reflect.TestReflectLogicalTypes", schema.getNamespace())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 119 Método: Assert.assertEquals("Should have the correct record name", "DecimalRecordBytes", schema.getName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 120 Método: Assert.assertEquals("Should have the correct logical type", LogicalTypes.decimal(9, 2), LogicalTypes.fromSchema(schema.getField("decimal").schema()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 127 Método: Assert.assertEquals("Should match the decimal after round trip", Collections.singletonList(record), read(REFLECT.createDatumReader(schema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 165 Método: Assert.assertEquals("Should have the correct record name", "org.apache.avro.reflect.TestReflectLogicalTypes", schema.getNamespace())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 167 Método: Assert.assertEquals("Should have the correct record name", "DecimalRecordFixed", schema.getName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 168 Método: Assert.assertEquals("Should have the correct logical type", LogicalTypes.decimal(9, 2), LogicalTypes.fromSchema(schema.getField("decimal").schema()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 175 Método: Assert.assertEquals("Should match the decimal after round trip", Collections.singletonList(record), read(REFLECT.createDatumReader(schema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 275 Método: Assert.assertEquals("Should have the correct record name", "org.apache.avro.reflect.TestReflectLogicalTypes", schema.getNamespace())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 277 Método: Assert.assertEquals("Should have the correct record name", "PairRecord", schema.getName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 278 Método: Assert.assertEquals("Should have the correct logical type", "pair", LogicalTypes.fromSchema(schema.getField("pair").schema()).getName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 289 Método: Assert.assertEquals("Data should match after serialization round-trip", 34L, (long) actual.first)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 290 Método: Assert.assertEquals("Data should match after serialization round-trip", 35L, (long) actual.second)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 313 Método: Assert.assertEquals("Should convert Strings to UUIDs", expected, read(REFLECT.createDatumReader(uuidSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 320 Método: Assert.assertEquals("Should not convert to UUID if accessor is String", Arrays.asList(r1, r2), read(REFLECT.createDatumReader(uuidStringSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 348 Método: Assert.assertEquals("Should read uuid as String without UUID conversion", expected, read(REFLECT.createDatumReader(uuidStringSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 352 Método: Assert.assertEquals("Should read uuid as String without UUID logical type", expected, read(ReflectData.get().createDatumReader(uuidStringSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 380 Método: Assert.assertEquals("Should read uuid as String without UUID conversion", expected, read(ReflectData.get().createDatumReader(nullableUuidStringSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 408 Método: Assert.assertEquals("Should read uuid as String without UUID conversion", expected, read(REFLECT.createDatumReader(uuidStringSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 433 Método: Assert.assertTrue("UUID should be a String (unsafe)", uuid instanceof String)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 514 Método: Assert.assertEquals("Should convert Strings to UUIDs", expected, read(REFLECT.createDatumReader(uuidSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 521 Método: Assert.assertEquals("Should not convert to UUID if accessor is String", Arrays.asList(r1, r2), read(REFLECT.createDatumReader(uuidStringSchema), test))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 542 Método: Assert.assertEquals("Should convert Strings to UUIDs", expected, read(REFLECT.createDatumReader(uuidArraySchema), test).get(0))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 570 Método: Assert.assertEquals("Should read UUIDs as Strings", expected, read(ReflectData.get().createDatumReader(stringArraySchema), test).get(0))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 592 Método: Assert.assertEquals("Should convert Strings to UUIDs", expected, read(REFLECT.createDatumReader(uuidListSchema), test).get(0))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 618 Método: Assert.assertEquals("Should read UUIDs as Strings", expected, read(REFLECT.createDatumReader(stringArraySchema), test).get(0))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 626 Método: Assert.assertEquals("Should have the correct record name", "org.apache.avro.reflect", actual.getNamespace())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 627 Método: Assert.assertEquals("Should have the correct record name", "RecordWithTimestamps", actual.getName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 628 Método: Assert.assertEquals("Should have the correct physical type", Schema.Type.LONG, actual.getField("localDateTime").schema().getType())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectLogicalTypes.java linha: 630 Método: Assert.assertEquals("Should have the correct logical type", LogicalTypes.localTimestampMillis(), LogicalTypes.fromSchema(actual.getField("localDateTime").schema()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectDatumReader.java linha: 60 Método: assertEquals(pojoWithList, deserialized)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectDatumReader.java linha: 78 Método: assertEquals(pojoWithArray, deserialized)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestByteBuffer.java linha: 80 Método: assertEquals("md5 for result differed from input", expected, actual)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestByteBuffer.java linha: 88 Método: assertTrue("missing first record", it.hasNext())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestByteBuffer.java linha: 90 Método: assertFalse("should be no more records - only wrote one out", it.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectDatumWithAnonymousInstances.java linha: 65 Método: assertEquals(pojo, deserializedPojo)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectDatumWithAnonymousInstances.java linha: 66 Método: assertTrue(deserializedPojo.getTestEnum().is_V())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 68 Método: assertTrue("Unable to read 'employees' map", employees instanceof GenericArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 71 Método: assertTrue(employeeRecord instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 74 Método: assertTrue(key instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 75 Método: assertTrue(value instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 79 Método: assertTrue((id.equals(1) && name.equals("Foo")) || (id.equals(2) && name.equals("Bar")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 84 Método: assertNotNull(co.getEmployees())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 85 Método: assertEquals(2, co.getEmployees().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 89 Método: assertTrue((id.equals(1) && name.equals("Foo")) || (id.equals(2) && name.equals("Bar")))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 93 Método: assertNotNull("Unable to serialize using jsonEncoder", jsonBytes)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 95 Método: assertEquals("JSON decoder output not same as Binary Decoder", record, jsonRecord)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 110 Método: assertTrue("Unable to read 'employees' map", employees instanceof GenericArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 114 Método: assertTrue(employeeMapElement instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 117 Método: assertEquals(11, key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 118 Método: assertTrue(value instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 121 Método: assertEquals("Foo", name)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 124 Método: assertTrue(companyMap instanceof GenericArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 128 Método: assertTrue(companyMapElement instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 131 Método: assertEquals(14, key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 134 Método: assertEquals("CompanyFoo", value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 139 Método: assertNotNull(co.getEmployees())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 140 Método: assertEquals(1, co.getEmployees().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 144 Método: assertTrue(id.equals(11) && name.equals("Foo"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 145 Método: assertEquals("CompanyFoo", e.getValue().companyMap.values().iterator().next())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 149 Método: assertNotNull("Unable to serialize using jsonEncoder", jsonBytes)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 151 Método: assertEquals("JSON decoder output not same as Binary Decoder", record, jsonRecord)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 166 Método: assertTrue("Unable to read map1", map1obj instanceof GenericArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 170 Método: assertTrue(map1element instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 173 Método: assertEquals(1, key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 174 Método: assertEquals("Foo", value.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 177 Método: assertEquals(map1obj, map2obj)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 182 Método: assertNotNull(entity.getMap1())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 183 Método: assertEquals(1, entity.getMap1().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 187 Método: assertEquals(1, key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 188 Método: assertEquals("Foo", value.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 190 Método: assertEquals(entity.getMap1(), entity.getMap2())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 191 Método: assertEquals(entity.getMap1(), entity.getMap3())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 192 Método: assertEquals(entity.getMap1(), entity.getMap4())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 204 Método: assertEquals(map1schema.getFullName(), "org.apache.avro.reflect.PairIntegerString")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 205 Método: assertEquals(map1schema, map2schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 206 Método: assertEquals(map1schema, map3schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 207 Método: assertEquals(map1schema, map4schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 210 Método: assertNotNull("Unable to serialize using jsonEncoder", jsonBytes)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 212 Método: assertEquals("JSON decoder output not same as Binary Decoder", record.get("map1"), jsonRecord.get("map1"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 213 Método: assertEquals("JSON decoder output not same as Binary Decoder", record.get("map2"), jsonRecord.get("map2"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 226 Método: assertNotNull("Unable to get schema for " + testType, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 255 Método: assertNotNull("Unable to get schema for " + testType, schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestNonStringMapKeys.java linha: 261 Método: fail("Fail with schema: " + schema)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 53 Método: assertThat("ReflectData cache should release references", classData.bySchema.size(), lessThan(numSchemas))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 61 Método: assertThat(protocol.getTypes(), contains(recordSchema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 63 Método: assertThat(protocol.getMessages().keySet(), containsInAnyOrder("store", "findById", "exists"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 66 Método: assertThat(storeArgument.schema(), equalTo(recordSchema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 69 Método: assertThat(findByIdArgument.schema(), equalTo(Schema.create(Schema.Type.STRING)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 72 Método: assertThat(findByIdResponse, equalTo(recordSchema))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 75 Método: assertThat(existsArgument.schema(), equalTo(Schema.create(Schema.Type.STRING)))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/reflect/TestReflectData.java linha: 130 Método: assertEquals("Invalid field " + field.name(), field.defaultVal(), testCases.get(field.name()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 50 Método: assertNotNull(parsedStringSchema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 51 Método: assertNotNull(parsedArrayOfStringSchema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 52 Método: assertEquals(parsedStringSchema.toString(), parsedArrayOfStringSchema.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 66 Método: assertTrue(are.getMessage().contains("Duplicate field field_name in record " + recordName))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 64 Método: fail("Should not be able to create a record with duplicate field name.")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 78 Método: assertEquals(expected, schema)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 85 Método: assertNotNull(schemaString)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 92 Método: assertNotNull(schemaString)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 99 Método: assertNotNull(schemaString)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 115 Método: assertNotNull(schemaString)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 116 Método: assertEquals(2, schema.getFields().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 127 Método: assertTrue(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 133 Método: assertTrue(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 139 Método: assertFalse(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 145 Método: assertFalse(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 151 Método: assertFalse(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 157 Método: assertFalse(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 163 Método: assertFalse(schema.isUnion())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 169 Método: assertTrue(schema.isNullable())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 175 Método: assertFalse(schema.isNullable())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 181 Método: assertFalse(schema.isNullable())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 200 Método: assertEquals(payload, sp)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 217 Método: assertEquals(parent, parentWithoutInlinedChildReference)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 223 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 224 Método: assertEquals(1, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 225 Método: assertEquals(1, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 228 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 229 Método: assertEquals(Integer.MIN_VALUE, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 230 Método: assertEquals(Integer.MIN_VALUE, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 233 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 234 Método: assertEquals(Integer.MAX_VALUE, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 235 Método: assertEquals(Integer.MAX_VALUE, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 241 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 242 Método: assertEquals(1, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 243 Método: assertEquals(1, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 246 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 247 Método: assertEquals(Integer.MIN_VALUE, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 248 Método: assertEquals(Integer.MIN_VALUE, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 251 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 252 Método: assertEquals(Integer.MAX_VALUE, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 253 Método: assertEquals(Integer.MAX_VALUE, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 269 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 270 Método: assertEquals(1L, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 271 Método: assertEquals(1L, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 274 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 275 Método: assertEquals(Long.MIN_VALUE, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 276 Método: assertEquals(Long.MIN_VALUE, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 279 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 280 Método: assertEquals(Long.MAX_VALUE, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 281 Método: assertEquals(Long.MAX_VALUE, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 287 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 288 Método: assertEquals(1L, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 289 Método: assertEquals(1L, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 300 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 301 Método: assertEquals(1.0d, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 302 Método: assertEquals(1.0d, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 308 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 309 Método: assertEquals(1.0d, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 310 Método: assertEquals(1.0d, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 316 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 317 Método: assertEquals(1.0d, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 318 Método: assertEquals(1.0d, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 324 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 325 Método: assertEquals(1.0d, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 326 Método: assertEquals(1.0d, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 332 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 333 Método: assertEquals(1.0f, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 334 Método: assertEquals(1.0f, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 340 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 341 Método: assertEquals(1.0f, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 342 Método: assertEquals(1.0f, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 348 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 349 Método: assertEquals(1.0f, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 350 Método: assertEquals(1.0f, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 356 Método: assertTrue(field.hasDefaultValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 357 Método: assertEquals(1.0f, field.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 358 Método: assertEquals(1.0f, GenericData.get().getDefaultValue(field))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 380 Método: assertEquals(schema, schema2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 387 Método: assertEquals("space." + t.getName(), name.getQualified("space"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 388 Método: assertEquals("space." + t.getName(), name.getQualified("otherdefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 391 Método: assertEquals("name", name.getQualified("space"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 392 Método: assertEquals("space.name", name.getQualified("otherdefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchema.java linha: 395 Método: assertEquals("Int", nameInt.getQualified("space"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 81 Método: check.assertEquals(datum, count++)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 83 Método: Assert.assertEquals(count, check.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 114 Método: check.assertEquals(datum, count++)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 116 Método: Assert.assertEquals(count, check.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 145 Método: Assert.assertEquals(bbr, deserialized)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 172 Método: check.assertEquals(datum, count++)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 174 Método: Assert.assertEquals(count, check.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 191 Método: Assert.assertNotNull(toCheck)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 193 Método: Assert.assertNotNull(o)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileReflect.java linha: 194 Método: Assert.assertEquals(toCheck, o)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumReader.java linha: 59 Método: assertEquals(StringBuilder.class, object.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumReader.java linha: 61 Método: assertEquals("Hello", builder.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 63 Método: assertEquals("Not in union [\"null\",\"string\"]: 100 (field=f)", uue.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 61 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 82 Método: assertEquals(r, o)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 114 Método: assertTrue(ex.getCause() instanceof ConcurrentModificationException)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 112 Método: fail("Expected ConcurrentModificationException")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 147 Método: assertTrue(ex.getCause() instanceof ConcurrentModificationException)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 145 Método: fail("Expected ConcurrentModificationException")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 351 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField[\"a\"].strField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 349 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 367 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("null key in map at RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 365 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 378 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("null value for (non-nullable) string"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 376 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 394 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField[\"a\"].strField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 392 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 405 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("value 42 (a java.lang.Integer) cannot be cast to expected type string"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 403 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 421 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("RecordWithRequiredFields.unionField[UnionRecord].arrayField[0].mapField[\"a\"].enumField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 423 Método: Assert.assertTrue("unexpected message " + expected.getMessage(), expected.getMessage().contains("42 (a java.lang.Integer) is not a MapRecordEnum"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericDatumWriter.java linha: 419 Método: Assert.fail("expected to throw")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 78 Método: Assertions.assertEquals(expected, read(GENERIC.createDatumReader(uuidSchema), test), "Should convert Strings to UUIDs")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 94 Método: Assertions.assertEquals(expected, read(GenericData.get().createDatumReader(stringSchema), test), "Should read UUIDs as Strings")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 113 Método: Assertions.assertEquals(expected, read(GenericData.get().createDatumReader(nullableStringSchema), test), "Should read UUIDs as Strings")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 134 Método: Assertions.assertEquals(expected, read(GENERIC.createDatumReader(decimalSchema), test), "Should convert fixed to BigDecimals")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 154 Método: Assertions.assertEquals(expected, read(GenericData.get().createDatumReader(fixedSchema), test), "Should read BigDecimals as fixed")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 172 Método: assertThat(conversion.fromBytes(d1bytes, bytesSchema, decimal), is(d1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 173 Método: assertThat(conversion.fromBytes(d2bytes, bytesSchema, decimal), is(d2))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 175 Método: assertThat("Ensure ByteBuffer not consumed by conversion", conversion.fromBytes(d1bytes, bytesSchema, decimal), is(d1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 192 Método: assertThat(conversion.fromFixed(d1fixed, fixedSchema, decimal), is(d1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 193 Método: assertThat(conversion.fromFixed(d2fixed, fixedSchema, decimal), is(d2))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 213 Método: Assertions.assertEquals(expected, read(GENERIC.createDatumReader(decimalSchema), test), "Should convert bytes to BigDecimals")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 234 Método: Assertions.assertEquals(expected, read(GenericData.get().createDatumReader(bytesSchema), test), "Should read BigDecimals as bytes")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 322 Método: Assertions.assertNotSame(original, copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 323 Método: Assertions.assertEquals(original, copy)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 343 Método: Assertions.assertEquals(expected, read(GENERIC.createDatumReader(timestampSchema), test), "Should convert long to LocalDateTime")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 363 Método: Assertions.assertEquals(expected, read(GenericData.get().createDatumReader(timestampSchema), test), "Should read LocalDateTime as longs")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 384 Método: Assertions.assertEquals(expected, read(GENERIC.createDatumReader(timestampSchema), test), "Should convert long to LocalDateTime")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericLogicalTypes.java linha: 404 Método: Assertions.assertEquals(expected, read(GenericData.get().createDatumReader(timestampSchema), test), "Should read LocalDateTime as longs")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 141 Método: assertEquals(r0, r1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 142 Método: assertEquals(r0, r2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 143 Método: assertEquals(r1, r2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 174 Método: assertFalse(record2.equals(record1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 175 Método: assertFalse(record1.equals(record2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 197 Método: assertTrue(forward.equals(backward))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 205 Método: assertEquals(Integer.valueOf(99), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 208 Método: assertEquals(array, list)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 209 Método: assertEquals(list, array)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 210 Método: assertEquals(list.hashCode(), array.hashCode())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 213 Método: fail("Expected IndexOutOfBoundsException getting index 2")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 217 Método: assertEquals(0, array.size())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 220 Método: fail("Expected IndexOutOfBoundsException getting index 0 after clear()")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 233 Método: assertEquals(5, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 235 Método: assertEquals(Integer.valueOf(6), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 236 Método: assertEquals(6, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 237 Método: assertEquals(Integer.valueOf(0), array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 238 Método: assertEquals(Integer.valueOf(4), array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 240 Método: assertEquals(Integer.valueOf(7), array.get(6))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 241 Método: assertEquals(7, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 242 Método: assertEquals(Integer.valueOf(6), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 243 Método: assertEquals(Integer.valueOf(4), array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 245 Método: assertEquals(Integer.valueOf(8), array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 246 Método: assertEquals(Integer.valueOf(0), array.get(2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 247 Método: assertEquals(Integer.valueOf(6), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 248 Método: assertEquals(8, array.size())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 251 Método: fail("Expected IndexOutOfBoundsException after adding elements")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 263 Método: assertEquals(10, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 264 Método: assertEquals(Integer.valueOf(0), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 265 Método: assertEquals(Integer.valueOf(9), array.get(9))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 268 Método: assertEquals(9, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 269 Método: assertEquals(Integer.valueOf(1), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 270 Método: assertEquals(Integer.valueOf(2), array.get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 271 Método: assertEquals(Integer.valueOf(9), array.get(8))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 276 Método: fail("Expected IndexOutOfBoundsException after removing an element")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 281 Método: fail("Expected IndexOutOfBoundsException after removing an element")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 286 Método: fail("Expected IndexOutOfBoundsException after removing an element")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 291 Método: assertEquals(Integer.valueOf(9), array.remove(8))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 292 Método: assertEquals(8, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 296 Método: assertEquals(Integer.valueOf(88), array.get(8))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 306 Método: assertEquals(10, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 307 Método: assertEquals(Integer.valueOf(0), array.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 308 Método: assertEquals(Integer.valueOf(5), array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 310 Método: assertEquals(Integer.valueOf(5), array.set(5, 55))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 311 Método: assertEquals(10, array.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 312 Método: assertEquals(Integer.valueOf(55), array.get(5))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 390 Método: assertEquals("\"a\\nb\"", data.toString(bytes))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 391 Método: assertEquals("\"a\\nb\"", data.toString(bytes))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 399 Método: assertEquals("{\"a\\n\\\\b\": \"a\\n\\\\b\"}", data.toString(m))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 405 Método: assertEquals("[97, 10, 98]", data.toString(new GenericData.Fixed(Schema.createFixed("test", null, null, 3), new byte[] { 'a', '\n', 'b' })))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 412 Método: assertEquals("\"/\"", data.toString("/"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 418 Método: assertEquals("\"Infinity\"", data.toString(Float.POSITIVE_INFINITY))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 419 Método: assertEquals("\"-Infinity\"", data.toString(Float.NEGATIVE_INFINITY))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 420 Método: assertEquals("\"NaN\"", data.toString(Float.NaN))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 421 Método: assertEquals("\"Infinity\"", data.toString(Double.POSITIVE_INFINITY))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 422 Método: assertEquals("\"-Infinity\"", data.toString(Double.NEGATIVE_INFINITY))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 423 Método: assertEquals("\"NaN\"", data.toString(Double.NaN))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 429 Método: assertEquals("\"1961-04-12T06:07:10Z\"", data.toString(Instant.parse("1961-04-12T06:07:10Z")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 430 Método: assertEquals("\"1961-04-12\"", data.toString(LocalDate.parse("1961-04-12")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 431 Método: assertEquals("\"1961-04-12T06:07:10\"", data.toString(LocalDateTime.parse("1961-04-12T06:07:10")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 432 Método: assertEquals("\"10:10:10\"", data.toString(LocalTime.parse("10:10:10")))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 473 Método: fail("IOException while writing records to output stream.")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 471 Método: assertEquals(-1, BinaryData.compare(b1.toByteArray(), start1, b2.toByteArray(), start2, record))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 482 Método: assertEquals(0, z.compareTo(z2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 484 Método: assertTrue(y.compareTo(z) > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 485 Método: assertTrue(z.compareTo(y) < 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 504 Método: assertEquals(buffer, buffer_copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 524 Método: assertTrue(GenericData.get().validate(schema, z))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 525 Método: assertTrue(GenericData.get().validate(schema, y))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 526 Método: assertTrue(GenericData.get().validate(schema, x))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 527 Método: assertFalse(GenericData.get().validate(schema, w))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 528 Método: assertTrue(GenericData.get().validate(schema, null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 536 Método: assertTrue(GenericData.get().validate(schema, z))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 537 Método: assertTrue(GenericData.get().validate(schema, y))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 538 Método: assertTrue(GenericData.get().validate(schema, x))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 539 Método: assertFalse(GenericData.get().validate(schema, w))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 540 Método: assertTrue(GenericData.get().validate(schema, null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 553 Método: assertTrue(gd.validate(schema, new GenericData.EnumSymbol(schema, "ONE")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 554 Método: assertTrue(gd.validate(schema, new GenericData.EnumSymbol(schema, anEnum.ONE)))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 557 Método: assertFalse("We don't expect GenericData to allow a String datum for an enum schema", gd.validate(schema, "ONE"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 558 Método: assertFalse("We don't expect GenericData to allow a Java Enum for an enum schema", gd.validate(schema, anEnum.ONE))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 572 Método: assertTrue(GenericData.get().validate(unionSchema, record))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 670 Método: assertFalse("Record with duplicated values results in wrong 'toString()'", testString.contains("CIRCULAR REFERENCE"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 724 Método: fail("StackOverflowError occurred")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 722 Método: assertNotNull(parent.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 744 Método: assertTrue(record == list.peek())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericData.java linha: 747 Método: assertNull(list.peek())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 44 Método: Assert.assertFalse("RecordBuilder should not have field " + field.name(), builder.has(field.name()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 45 Método: Assert.assertNull("Field " + field.name() + " should be null", builder.get(field.name()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 52 Método: Assert.assertTrue("anArray should be set", builder.has("anArray"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 53 Método: Assert.assertEquals(anArray, builder.get("anArray"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 54 Método: Assert.assertFalse("id should not be set", builder.has("id"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 55 Método: Assert.assertNull(builder.get("id"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 59 Método: Assert.assertEquals(1, record.get("intField"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 60 Método: Assert.assertEquals(anArray, record.get("anArray"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 61 Método: Assert.assertNotNull(record.get("id"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 62 Método: Assert.assertEquals("0", record.get("id").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 65 Método: Assert.assertEquals(builder, new GenericRecordBuilder(builder))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 66 Método: Assert.assertEquals(record, new GenericRecordBuilder(record).build())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 70 Método: Assert.assertFalse(builder.has("intField"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 71 Método: Assert.assertNull(builder.get("intField"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 90 Método: Assert.assertTrue(e.getMessage().contains("intField"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericRecordBuilder.java linha: 88 Método: Assert.fail("Should have thrown " + AvroRuntimeException.class.getCanonicalName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericConcreteEnum.java linha: 61 Método: assertEquals(0, GenericData.get().compare(specificRecord, deserialized, FooBarSpecificRecord.SCHEMA$))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/generic/TestGenericConcreteEnum.java linha: 77 Método: assertEquals(specificRecord, deserialized)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 129 Método: assertEquals(expectedResult, checkReaderWriterCompatibility(reader, WRITER_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 141 Método: assertEquals(expectedResult, checkReaderWriterCompatibility(reader, WRITER_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 154 Método: assertEquals(expectedResult, checkReaderWriterCompatibility(reader, WRITER_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 167 Método: assertEquals(expectedResult, checkReaderWriterCompatibility(reader, WRITER_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 178 Método: assertEquals(SchemaCompatibility.SchemaCompatibilityType.INCOMPATIBLE, compatibility.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 179 Método: assertEquals(SchemaCompatibility.SchemaCompatibilityResult.incompatible(SchemaIncompatibilityType.READER_FIELD_MISSING_DEFAULT_VALUE, reader, WRITER_SCHEMA, "newfield1", asList("", "fields", "1")), compatibility.getResult())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 182 Método: assertEquals(String.format("Data encoded using writer schema:%n%s%n" + "will or may fail to decode using reader schema:%n%s%n", WRITER_SCHEMA.toString(true), reader.toString(true)), compatibility.getDescription())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 185 Método: assertEquals(reader, compatibility.getReader())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 186 Método: assertEquals(WRITER_SCHEMA, compatibility.getWriter())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 205 Método: assertEquals(validResult, checkReaderWriterCompatibility(validReader, STRING_ARRAY_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 206 Método: assertEquals(invalidResult, checkReaderWriterCompatibility(invalidReader, STRING_ARRAY_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 223 Método: assertEquals(validResult, checkReaderWriterCompatibility(validReader, STRING_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 224 Método: assertEquals(invalidResult, checkReaderWriterCompatibility(INT_SCHEMA, STRING_SCHEMA))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 235 Método: assertEquals(SchemaCompatibilityType.INCOMPATIBLE, result.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 346 Método: assertEquals(reader, compatibility.getReader())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 347 Método: assertEquals(writer, compatibility.getWriter())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 348 Método: assertEquals(SchemaCompatibilityType.INCOMPATIBLE, compatibilityResult.getCompatibility())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 350 Método: assertEquals(incompatibilityTypes.size(), compatibilityResult.getIncompatibilities().size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 355 Método: assertEquals(incompatibilityTypes.get(i), incompatibility.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 356 Método: assertEquals(messages.get(i), incompatibility.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 357 Método: assertEquals(locations.get(i), incompatibility.getLocation())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 363 Método: assertEquals(description, compatibility.getDescription())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 378 Método: assertEquals(String.format("Expecting reader %s to be compatible with writer %s, but tested incompatible.", reader, writer), SchemaCompatibilityType.COMPATIBLE, result.getType())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 493 Método: assertEquals(String.format("Expecting decoded value %s when decoding value %s whose writer schema is %s " + "using reader schema %s, but value was %s.", expectedDecodedDatum, datum, writerSchema, readerSchema, decodedDatum), expectedDecodedDatum, decodedDatum)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 553 Método: assertNotNull(loc.get("lat"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaCompatibility.java linha: 555 Método: assertNull(loc.get("long_r2"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileDeflate.java linha: 57 Método: assertEquals("hello world", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileDeflate.java linha: 58 Método: assertEquals("hello moon", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileDeflate.java linha: 59 Método: assertEquals("bye bye world", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileDeflate.java linha: 60 Método: assertEquals("bye bye moon", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileDeflate.java linha: 61 Método: assertFalse(r.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 53 Método: assertEquals(JsonProperties.NULL_VALUE, leftField.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 55 Método: assertEquals(Type.UNION, leftFieldSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 56 Método: assertEquals("null", leftFieldSchema.getTypes().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 57 Método: assertEquals("Node", leftFieldSchema.getTypes().get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 60 Método: assertEquals(JsonProperties.NULL_VALUE, rightField.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 62 Método: assertEquals(Type.UNION, rightFieldSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 63 Método: assertEquals("null", rightFieldSchema.getTypes().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 64 Método: assertEquals("Node", rightFieldSchema.getTypes().get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 71 Método: assertEquals(JsonProperties.NULL_VALUE, leftField.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 73 Método: assertEquals(Type.UNION, leftFieldSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 74 Método: assertEquals("null", leftFieldSchema.getTypes().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 75 Método: assertEquals("string", leftFieldSchema.getTypes().get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 76 Método: assertEquals("Node", leftFieldSchema.getTypes().get(2).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 79 Método: assertEquals(JsonProperties.NULL_VALUE, rightField.defaultVal())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 81 Método: assertEquals(Type.UNION, rightFieldSchema.getType())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 82 Método: assertEquals("null", rightFieldSchema.getTypes().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 83 Método: assertEquals("string", rightFieldSchema.getTypes().get(1).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestUnionSelfReference.java linha: 84 Método: assertEquals("Node", rightFieldSchema.getTypes().get(2).getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileMeta.java linha: 45 Método: Assertions.assertThrows(AvroRuntimeException.class, () -> w.setMeta("avro.foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileMeta.java linha: 58 Método: assertTrue(r.getMetaKeys().contains("hello"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileMeta.java linha: 60 Método: assertEquals("bar", r.getMetaString("hello"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileMeta.java linha: 69 Método: Assertions.assertThrows(AvroRuntimeException.class, () -> w.setMeta("foo", "bar"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileMeta.java linha: 85 Método: assertEquals(33, exceptions)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 36 Método: assertFalse(p1.equals(p2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 51 Método: assertNotNull(parsedStringProtocol)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 52 Método: assertNotNull(parsedArrayOfStringProtocol)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 53 Método: assertEquals(parsedStringProtocol.toString(), parsedArrayOfStringProtocol.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 64 Método: assertEquals(m1.getName(), m2.getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 65 Método: assertEquals(m1.getDoc(), m2.getDoc())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestProtocol.java linha: 66 Método: assertEquals(m1.getProp("foo"), m2.getProp("foo"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java linha: 351 Método: Assert.assertEquals("Should correctly read back the parent id", 1L, actual.get("id"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java linha: 352 Método: Assert.assertEquals("Should correctly read back the parent data", new Utf8("parent data!"), actual.get("p"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java linha: 355 Método: Assert.assertEquals("Should correctly read back the child data", new Utf8("child data!"), actualChild.get("c"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java linha: 357 Método: Assert.assertTrue("Should have a parent Record object", childParent instanceof Record)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java linha: 360 Método: Assert.assertEquals("Should have the right parent id", 1L, childParentRecord.get("id"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestCircularReferences.java linha: 361 Método: Assert.assertEquals("Should have the right parent data", new Utf8("parent data!"), childParentRecord.get("p"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/SymbolTest.java linha: 59 Método: fail("invalid parsing tree should not contain nulls")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator.java linha: 84 Método: Assert.assertEquals("Incorrect exception message", "Found ns.MyRecord, expecting ns.MyRecord, missing required field field2", typeException.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator.java linha: 82 Método: Assert.fail("Expected exception not thrown")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator.java linha: 98 Método: Assert.assertEquals(genericEnumSymbol, readRecord(schema1, data).get("field"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator.java linha: 99 Método: Assert.assertEquals(genericEnumSymbol, readRecord(schema2, data).get("field"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 82 Método: Assert.assertTrue(grammar.production[1] instanceof Symbol.UnionAdjustAction)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 85 Método: Assert.assertEquals(2, action.rindex)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 95 Método: Assert.assertTrue(grammar.production[1] instanceof Symbol.UnionAdjustAction)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 98 Método: Assert.assertEquals(2, action.rindex)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 108 Método: Assert.assertTrue(grammar.production[1] instanceof Symbol.UnionAdjustAction)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 111 Método: Assert.assertEquals(2, action.rindex)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 121 Método: Assert.assertTrue(grammar.production[1] instanceof Symbol.UnionAdjustAction)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 124 Método: Assert.assertEquals(4, action.rindex)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 142 Método: assertThat(outer, not(outer2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 158 Método: assertThat(out.get("a1"), instanceOf(String.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/parsing/TestResolvingGrammarGenerator2.java linha: 159 Método: assertThat(((GenericRecord) out.get("inner")).get("b1"), instanceOf(String.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 207 Método: fail()
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 257 Método: fail()
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 327 Método: assertEquals(msg, values[p++], vi.readBoolean())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 330 Método: assertEquals(msg, values[p++], vi.readInt())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 333 Método: assertEquals(msg, values[p++], vi.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 337 Método: fail()
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 339 Método: assertEquals(msg, f, vi.readFloat(), Math.abs(f / 1000))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 343 Método: fail()
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 345 Método: assertEquals(msg, d, vi.readDouble(), Math.abs(d / 1000))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 354 Método: assertEquals(msg, new Utf8(s), vi.readString(null))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 364 Método: assertEquals(msg, new Utf8(s), vi.readString(null))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 377 Método: assertArrayEquals(msg, bb, actBytes)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 389 Método: assertArrayEquals(msg, bb, actBytes)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 398 Método: assertEquals(msg, e, vi.readEnum())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 425 Método: assertEquals(msg, 0, counts[level])
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 427 Método: assertEquals(msg, 0, vi.arrayNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 432 Método: assertEquals(0, counts[level])
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 434 Método: assertEquals(msg, 0, vi.mapNext())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 453 Método: assertEquals(msg, idx, vi.readIndex())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 460 Método: fail(msg)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 466 Método: assertEquals(msg, values.length, p)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 474 Método: assertEquals(msg, 0, vi.skipMap())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestValidatingIO.java linha: 472 Método: assertEquals(msg, 0, vi.skipArray())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryData.java linha: 38 Método: Assert.assertEquals(nextIndex, 10)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 158 Método: Assert.assertEquals(legacydata.length, result.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 159 Método: Assert.assertArrayEquals(legacydata, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 163 Método: Assert.assertEquals(complexdata.length, result2.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 164 Método: Assert.assertArrayEquals(complexdata, result2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 173 Método: Assert.assertEquals(legacydata.length, result.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 174 Método: Assert.assertArrayEquals(legacydata, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 178 Método: Assert.assertEquals(complexdata.length, result2.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 179 Método: Assert.assertArrayEquals(complexdata, result2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 188 Método: Assert.assertEquals(legacydata.length, result.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 189 Método: Assert.assertArrayEquals(legacydata, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 194 Método: Assert.assertEquals(complexdata.length + 2, result2.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryEncoderFidelity.java linha: 196 Método: Assert.assertEquals(complexdata[0] >>> 1, result2[0])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java linha: 58 Método: Assert.assertEquals(value, r.get("n"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java linha: 73 Método: Assert.assertEquals(100, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestJsonDecoder.java linha: 75 Método: Assert.assertEquals(200, in.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 80 Método: assertEquals(0, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 81 Método: assertTrue(countStack.peek().isArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 85 Método: assertEquals(0, count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 86 Método: assertFalse(countStack.peek().isArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 130 Método: assertTrue(countStack.peek().isArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 135 Método: assertFalse(countStack.peek().isArray)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 263 Método: assertEquals(n, buf.remaining())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 265 Método: assertEquals(s, s2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 276 Método: assertTrue(isArray[stackTop])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBlockingIO.java linha: 281 Método: assertFalse(isArray[stackTop])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 145 Método: Assert.assertEquals(b1.length, bb1.limit() - bb1.position())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 149 Método: Assert.assertEquals(b1.length, bb2.limit() - bb2.position())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 206 Método: Assert.assertEquals("InputStream based BinaryDecoder result does not match", datum, reader.read(null, fromInputStream))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 208 Método: Assert.assertEquals("Array based BinaryDecoder result does not match", datum, reader.read(null, fromArray))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 209 Método: Assert.assertEquals("offset Array based BinaryDecoder result does not match", datum, reader.read(null, fromOffsetArray))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 211 Método: Assert.assertEquals("InputStream initialized BinaryDecoder result does not match", datum, reader.read(null, initOnInputStream))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 213 Método: Assert.assertEquals("Array initialized BinaryDecoder result does not match", datum, reader.read(null, initOnArray))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 254 Método: Assert.assertFalse(bad.read() == check2.read())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 265 Método: Assert.assertFalse(bd.isEnd())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 283 Método: Assert.assertEquals(c, t)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 288 Método: Assert.assertEquals(c, t)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 289 Método: Assert.assertArrayEquals(bt, bc)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 294 Método: Assert.assertEquals(c, t)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 295 Método: Assert.assertArrayEquals(bt, bc)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 299 Método: Assert.assertEquals(0, test.skip(5))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 300 Método: Assert.assertEquals(0, test.available())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 301 Método: Assert.assertFalse(test.getClass() != ByteArrayInputStream.class && test.markSupported())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 309 Método: Assert.assertEquals(c2, t2)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 313 Método: Assert.assertEquals(-1, test.read())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 327 Método: Assert.assertEquals("Invalid int encoding", message)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 341 Método: Assert.assertEquals("Invalid long encoding", message)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 349 Método: Assert.assertThrows("Malformed data. Length is negative: -1", AvroRuntimeException.class, bd::readString)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 358 Método: Assert.assertThrows("Cannot read strings longer than " + BinaryDecoder.MAX_ARRAY_SIZE + " bytes", UnsupportedOperationException.class, bd::readString)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 367 Método: Assert.assertThrows("Malformed data. Length is negative: -1", AvroRuntimeException.class, () -> bd.readBytes(null))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 376 Método: Assert.assertThrows("Cannot read arrays longer than " + BinaryDecoder.MAX_ARRAY_SIZE + " bytes", UnsupportedOperationException.class, () -> bd.readBytes(null))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 389 Método: Assert.assertThrows("Bytes length " + (maxLength + 1) + " exceeds maximum allowed", AvroRuntimeException.class, () -> bd.readBytes(null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 439 Método: Assert.assertTrue(bd.isEnd())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 449 Método: Assert.assertTrue(bd.isEnd())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 479 Método: Assert.assertTrue(null != eof)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestBinaryDecoder.java linha: 490 Método: Assert.assertEquals(0x10000000000000L, d.readLong())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 65 Método: Assert.assertSame(enc, factory.binaryEncoder(out, enc))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 78 Método: Assert.assertSame(reuse, factory.blockingBinaryEncoder(out, reuse))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 91 Método: Assert.assertSame(enc, factory.directBinaryEncoder(out, enc))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 128 Método: Assert.assertEquals("1" + separator + "2", out.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 140 Método: Assert.assertEquals(mapper.readTree("{\"b\":\"myVal\",\"a\":1}"), mapper.readTree(fromAvroToJson(avroBytes, schema, false)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 153 Método: Assert.assertEquals(mapper.readTree("{\"b\":{\"string\":\"myVal\"},\"a\":1}"), mapper.readTree(fromAvroToJson(avroBytes, schema, true)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 173 Método: Assert.assertEquals("{\"a\": 1, \"b\": 2}", o.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 202 Método: Assert.assertEquals("{\"a\": {\"a1\": null, \"a2\": true}, \"b\": {\"b1\": \"h\", \"b2\": 3.14, \"b3\": 1.4}}", o.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 221 Método: Assert.assertEquals("{\"a\": {\"a1\": null, \"a2\": true}}", o.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 239 Método: Assert.assertEquals("{\"a\": {\"a1\": null, \"a2\": true}}", o.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 260 Método: assertThat(asList(buffer.position(), buffer.remaining()), is(asList(0, EXAMPLE_DATA_SIZE)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 270 Método: assertThat(output.toByteArray(), equalTo(avroEncoded(someBytes(EXAMPLE_DATA_SIZE))))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/io/TestEncoders.java linha: 271 Método: assertThat(asList(buffer.position(), buffer.remaining()), is(asList(0, EXAMPLE_DATA_SIZE)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 90 Método: assertEquals("Invalid sync!", e.getCause().getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 80 Método: assertEquals("apple", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 81 Método: assertEquals("banana", r.next().toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 84 Método: fail("Corrupt block should throw exception")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 86 Método: assertEquals("endive", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 87 Método: assertEquals("fig", r.next().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCorruption.java linha: 88 Método: assertFalse(r.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaNormalization.java linha: 59 Método: assertEquals(SchemaNormalization.toParsingForm(new Schema.Parser().parse(input)), expectedOutput)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaNormalization.java linha: 81 Método: assertEquals(carefulFP, Long.parseLong(expectedOutput))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaNormalization.java linha: 107 Método: assertEquals(carefulFP, Long.parseLong(expectedOutput))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaNormalization.java linha: 156 Método: assertTrue(m, expected == actual)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestZstandardCodec.java linha: 31 Método: assertTrue(codec instanceof ZstandardCodec)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestZstandardCodec.java linha: 32 Método: assertTrue(codec.getName().equals("zstandard"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestZstandardCodec.java linha: 33 Método: assertTrue(codec.toString().equals("zstandard[3]"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestSeekableByteArrayInput.java linha: 69 Método: Assert.assertNotNull(result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestSeekableByteArrayInput.java linha: 70 Método: Assert.assertTrue(result instanceof GenericRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestSeekableByteArrayInput.java linha: 71 Método: Assert.assertEquals(new Utf8("testValue"), ((GenericRecord) result).get("name"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestCustomCodec.java linha: 36 Método: assertTrue(customCodec.equals(new CustomCodec()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestCustomCodec.java linha: 37 Método: assertFalse(customCodec.equals(snappyCodec))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestCustomCodec.java linha: 52 Método: assertEquals(testString, new String(decompressed.array(), UTF_8))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 56 Método: assertTrue(codecClass.isInstance(codecInstance))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 57 Método: assertTrue(codecInstance.getName().equals(codec))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 65 Método: assertTrue(compressedSize > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 71 Método: assertTrue(compressedSize < inputSize || codec.equals("null"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 78 Método: Assert.assertEquals(decompressedBuffer, inputByteBuffer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 97 Método: assertTrue(compressedSize > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestAllCodecs.java linha: 111 Método: Assert.assertEquals(decompressedBuffer, inputByteBuffer)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestIOExceptionDuringWrite.java linha: 50 Método: fail("No bytes should have been written after IOException")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/file/TestIOExceptionDuringWrite.java linha: 73 Método: fail("IOException should have been thrown")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileConcat.java linha: 140 Método: assertEquals("at " + count++, expected, datum)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileConcat.java linha: 144 Método: assertEquals("at " + count++, expected, datum)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileConcat.java linha: 148 Método: assertEquals("at " + count++, expected, datum)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 146 Método: assertEquals(42.0, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 155 Método: assertEquals(42L, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 164 Método: assertEquals(42.0, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 173 Método: assertEquals(42.0, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 182 Método: assertEquals(42.0f, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 191 Método: assertEquals(42.0f, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 200 Método: assertEquals(42.0f, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 209 Método: assertEquals(42.0f, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 218 Método: assertEquals(42L, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 227 Método: assertEquals(42.0F, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 265 Método: assertEquals(42.0, decodeGenericBlob(DOUBLE_RECORD, writer, encoded).get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 266 Método: assertEquals(42.0f, decodeGenericBlob(FLOAT_RECORD, writer, encoded).get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 267 Método: assertEquals(42L, decodeGenericBlob(LONG_RECORD, writer, encoded).get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 268 Método: assertEquals(42, decodeGenericBlob(INT_RECORD, writer, encoded).get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 277 Método: assertArrayEquals("42".getBytes(StandardCharsets.UTF_8), actual.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 287 Método: assertArrayEquals(goeran.getBytes(StandardCharsets.UTF_8), actual.array())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 297 Método: assertEquals("42", read.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 307 Método: assertEquals(goeran, read.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 316 Método: assertEquals("A", decoded.get(FIELD_A).toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 325 Método: assertEquals("A", decoded.get(FIELD_A).toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 349 Método: assertEquals(42, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 354 Método: Assert.assertEquals("Not a valid schema field: newTopField", ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 352 Método: Assert.fail("get should throw a exception")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 382 Método: assertEquals(42, decoded.get(FIELD_A))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 383 Método: assertEquals(314, decoded.get("newFieldWithDefault"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestReadingWritingDataInEvolvedSchemas.java linha: 399 Método: assertEquals(1, decoded.get("fname"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCustomSync.java linha: 78 Método: assertFalse(Arrays.equals(randSyncFile, customSyncFile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestDataFileCustomSync.java linha: 86 Método: assertTrue(Arrays.equals(customSyncFile, sameCustomSyncFile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemaValidation.java linha: 312 Método: Assert.assertTrue(threw)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/TestSchemas.java linha: 191 Método: assertTrue(String.format("Subset '%s' not found in '%s'", subset, whole), whole.contains(subset))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestCaseFinder.java linha: 77 Método: assertTrue(pr(result), eq(result, expectedOutput))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 40 Método: assertEquals(bs.length, u.getByteLength())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 42 Método: assertEquals(bs[i], u.getBytes()[i])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 50 Método: assertEquals(5, u.getByteLength())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 53 Método: assertEquals(3, u.getByteLength())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 54 Método: assertSame(content, u.getBytes())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 56 Método: assertEquals(4, u.getByteLength())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 57 Método: assertSame(content, u.getBytes())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 62 Método: assertEquals(97, new Utf8("a").hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 63 Método: assertEquals(3904, new Utf8("zz").hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 64 Método: assertEquals(122, new Utf8("z").hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 65 Método: assertEquals(99162322, new Utf8("hello").hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 66 Método: assertEquals(3198781, new Utf8("hell").hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 69 Método: assertEquals(97, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 70 Método: assertEquals(97, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 73 Método: assertEquals(97, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 76 Método: assertEquals(97, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 78 Método: assertNotEquals(97, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 81 Método: assertEquals(3904, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 83 Método: assertEquals(122, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 86 Método: assertEquals(99162322, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 88 Método: assertEquals(3198781, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 91 Método: assertEquals(3904, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 93 Método: assertEquals(122, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 96 Método: assertEquals(99162322, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 98 Método: assertEquals(3198781, u.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 117 Método: assertThat(ois.readObject(), is(originalEmpty))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 118 Método: assertThat(ois.readObject(), is(originalBytes))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/TestUtf8.java linha: 119 Método: assertThat(ois.readObject(), is(originalString))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 53 Método: assertEquals(null, toJsonNode(null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 54 Método: assertEquals(NullNode.getInstance(), toJsonNode(JsonProperties.NULL_VALUE))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 55 Método: assertEquals(BooleanNode.TRUE, toJsonNode(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 56 Método: assertEquals(IntNode.valueOf(1), toJsonNode(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 57 Método: assertEquals(LongNode.valueOf(2), toJsonNode(2L))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 58 Método: assertEquals(FloatNode.valueOf(1.0f), toJsonNode(1.0f))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 59 Método: assertEquals(DoubleNode.valueOf(2.0), toJsonNode(2.0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 60 Método: assertEquals(TextNode.valueOf("\u0001\u0002"), toJsonNode(new byte[] { 1, 2 }))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 61 Método: assertEquals(TextNode.valueOf("a"), toJsonNode("a"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 62 Método: assertEquals(TextNode.valueOf("UP"), toJsonNode(Direction.UP))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 63 Método: assertEquals(BigIntegerNode.valueOf(BigInteger.ONE), toJsonNode(BigInteger.ONE))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 64 Método: assertEquals(DecimalNode.valueOf(BigDecimal.ONE), toJsonNode(BigDecimal.ONE))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 68 Método: assertEquals(an, toJsonNode(Collections.singletonList(1)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 72 Método: assertEquals(on, toJsonNode(Collections.singletonMap("a", 1)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 77 Método: assertEquals(null, toObject(null))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 78 Método: assertEquals(JsonProperties.NULL_VALUE, toObject(NullNode.getInstance()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 79 Método: assertEquals(true, toObject(BooleanNode.TRUE))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 80 Método: assertEquals(1, toObject(IntNode.valueOf(1)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 81 Método: assertEquals(2L, toObject(IntNode.valueOf(2), Schema.create(Schema.Type.LONG)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 82 Método: assertEquals(1.0f, toObject(DoubleNode.valueOf(1.0), Schema.create(Schema.Type.FLOAT)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 83 Método: assertEquals(2.0, toObject(DoubleNode.valueOf(2.0)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 84 Método: assertEquals(TextNode.valueOf("\u0001\u0002"), toJsonNode(new byte[] { 1, 2 }))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 85 Método: assertArrayEquals(new byte[] { 1, 2 }, (byte[]) toObject(TextNode.valueOf("\u0001\u0002"), Schema.create(Schema.Type.BYTES)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 87 Método: assertEquals("a", toObject(TextNode.valueOf("a")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 88 Método: assertEquals("UP", toObject(TextNode.valueOf("UP"), SchemaBuilder.enumeration("Direction").symbols("UP", "DOWN")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 92 Método: assertEquals(Collections.singletonList(1), toObject(an))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 96 Método: assertEquals(Collections.singletonMap("a", 1), toObject(on))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 97 Método: assertEquals(Collections.singletonMap("a", 1L), toObject(on, SchemaBuilder.record("r").fields().requiredLong("a").endRecord()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 100 Método: assertEquals(JsonProperties.NULL_VALUE, toObject(NullNode.getInstance(), SchemaBuilder.unionOf().nullType().and().intType().endUnion()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestJacksonUtils.java linha: 103 Método: assertEquals("a", toObject(TextNode.valueOf("a"), SchemaBuilder.unionOf().stringType().and().intType().endUnion()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestClassValueCache.java linha: 32 Método: assertThat(fromCache, is("class java.lang.String"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/avro/src/test/java/org/apache/avro/util/internal/TestClassValueCache.java linha: 34 Método: assertThat(cache.apply(String.class), sameInstance(fromCache))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/integration-test/codegen-test/src/test/java/org/apache/avro/codegentest/AbstractSpecificRecordTest.java linha: 49 Método: Assert.assertEquals(original, copy)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/integration-test/codegen-test/src/test/java/org/apache/avro/codegentest/AbstractSpecificRecordTest.java linha: 55 Método: Assert.assertEquals(original.hashCode(), copy.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/integration-test/codegen-test/src/test/java/org/apache/avro/codegentest/AbstractSpecificRecordTest.java linha: 56 Método: Assert.assertEquals(original.toString(), copy.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/integration-test/codegen-test/src/test/java/org/apache/avro/codegentest/TestLogicalTypesWithDefaults.java linha: 44 Método: Assert.assertEquals(DEFAULT_VALUE, instanceOfGeneratedClass.getNonNullDate())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/integration-test/codegen-test/src/test/java/org/apache/avro/codegentest/TestLogicalTypeForStringType.java linha: 41 Método: assertThat(stringLogicalType.getSomeIdentifier(), instanceOf(UUID.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/integration-test/codegen-test/src/test/java/org/apache/avro/codegentest/TestLogicalTypeForStringType.java linha: 42 Método: assertThat(StringLogicalType.getClassSchema().getField("someJavaString").schema().getProp(GenericData.STRING_PROP), equalTo("String"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroMarshaller.java linha: 70 Método: assertEquals(1, parsedArgs.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroMarshaller.java linha: 71 Método: assertEquals(record, parsedArgs[0])
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroMarshaller.java linha: 82 Método: assertEquals(record, parsedResponse)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 97 Método: assertEquals(record, echoedRecord)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 103 Método: assertEquals(10, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 112 Método: assertEquals(val1 + val2 + val3 + val4, stub.concatenate(val1, val2, val3, val4))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 119 Método: assertEquals(record, future.get(1, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 130 Método: assertEquals(0, oneWayCount.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 134 Método: assertEquals(3, oneWayCount.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 143 Método: assertEquals(declaredErrMsg, te.getMessage$())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 141 Método: fail("Expected exception but none thrown")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 153 Método: assertTrue(e.getMessage().contains(undeclaredErrMsg))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 151 Método: fail("Expected exception but none thrown")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 165 Método: assertEquals(null, stub.concatenate("foo", true, 42L, 42))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 183 Método: assertEquals(record, result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 200 Método: assertEquals(record, records[i].get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 201 Método: assertEquals(6 * i, (long) adds[i].get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 221 Método: assertEquals((3 * i) - 3, (long) adds[i].get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 222 Método: assertEquals((3 * i) + 3, (long) otherAdds[i].get())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/grpc/src/test/java/org/apache/avro/grpc/TestAvroProtocolGrpc.java linha: 253 Método: fail("thread interrupted when waiting for all one-way messages")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerializer.java linha: 43 Método: assertEquals(writerSchema, serializer.getWriterSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerializer.java linha: 60 Método: assertEquals("record1", record.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerializer.java linha: 63 Método: assertEquals("record2", record.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 62 Método: assertEquals("foo", converter.convert(avroKey).toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 73 Método: assertEquals(42, converter.convert(avroValue).intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 79 Método: assertEquals(true, converter.convert(new BooleanWritable(true)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 86 Método: assertEquals(1, bytes.get(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 87 Método: assertEquals(2, bytes.get(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 88 Método: assertEquals(3, bytes.get(2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 94 Método: assertEquals(42, converter.convert(new ByteWritable((byte) 42)).bytes()[0])
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 100 Método: assertEquals(2.0, converter.convert(new DoubleWritable(2.0)), 0.00001)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 106 Método: assertEquals(2.2f, converter.convert(new FloatWritable(2.2f)), 0.00001)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 112 Método: assertEquals(2, converter.convert(new IntWritable(2)).intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 118 Método: assertEquals(123L, converter.convert(new LongWritable(123L)).longValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 124 Método: assertNull(converter.convert(NullWritable.get()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroDatumConverterFactory.java linha: 130 Método: assertEquals("foo", converter.convert(new Text("foo")).toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 68 Método: assertNotNull(key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 69 Método: assertEquals("one", key.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 71 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 72 Método: assertEquals(1, value.datum().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 76 Método: assertNotNull(key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 77 Método: assertEquals("two", key.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 79 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 80 Método: assertEquals(2, value.datum().intValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 82 Método: assertNull("Should be no more records.", reader.next(key))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 109 Método: assertNotNull(key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 110 Método: assertEquals("one", key.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 112 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 113 Método: assertEquals(1, value.datum().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 117 Método: assertNotNull(key)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 118 Método: assertEquals("two", key.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 120 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 121 Método: assertEquals(2, value.datum().intValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 123 Método: assertNull("Should be no more records.", reader.next(key))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 145 Método: assertTrue(reader.next(key))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 146 Método: assertEquals("one", key.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 148 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 149 Método: assertEquals(1, value.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 152 Método: assertTrue(reader.next(key))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 153 Método: assertEquals("two", key.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 155 Método: assertNotNull(value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 156 Método: assertEquals(2, value.get())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSequenceFile.java linha: 158 Método: assertFalse("Should be no more records.", reader.next(key))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroValueDeserializer.java linha: 46 Método: assertEquals(writerSchema, deserializer.getWriterSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroValueDeserializer.java linha: 47 Método: assertEquals(readerSchema, deserializer.getReaderSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroValueDeserializer.java linha: 63 Método: assertEquals("record1", record.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroValueDeserializer.java linha: 66 Método: assertEquals("record2", record.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroKeyDeserializer.java linha: 45 Método: assertEquals(writerSchema, deserializer.getWriterSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroKeyDeserializer.java linha: 46 Método: assertEquals(readerSchema, deserializer.getReaderSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroKeyDeserializer.java linha: 62 Método: assertEquals("record1", record.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroKeyDeserializer.java linha: 65 Método: assertEquals("record2", record.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 49 Método: assertTrue(serialization.accept(AvroKey.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 50 Método: assertTrue(serialization.accept(AvroValue.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 51 Método: assertFalse(serialization.accept(AvroWrapper.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 52 Método: assertFalse(serialization.accept(String.class))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 66 Método: assertTrue(serializer instanceof AvroSerializer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 70 Método: assertEquals(writerSchema, avroSerializer.getWriterSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 84 Método: assertTrue(serializer instanceof AvroSerializer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 88 Método: assertEquals(writerSchema, avroSerializer.getWriterSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 102 Método: assertTrue(deserializer instanceof AvroKeyDeserializer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 106 Método: assertEquals(readerSchema, avroDeserializer.getReaderSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 120 Método: assertTrue(deserializer instanceof AvroValueDeserializer)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 124 Método: assertEquals(readerSchema, avroDeserializer.getReaderSchema())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 135 Método: Assert.assertEquals(loader, data.getClassLoader())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 164 Método: assertTrue(roundTrip(schema, "record", null) instanceof String)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/io/TestAvroSerialization.java linha: 165 Método: assertTrue(roundTrip(schema, "record", GenericData.class) instanceof Utf8)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 99 Método: assertEquals(codec, reader.getMetaString("avro.codec"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 123 Método: assertEquals("deflate", reader.getMetaString("avro.codec"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 134 Método: assertEquals("Unrecognized codec: foobar", e.getMessage())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 159 Método: assertTrue(directory.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 173 Método: assertEquals(2, indexRecords.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 174 Método: assertEquals("apple", indexRecords.get(0).getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 176 Método: assertEquals("carrot", indexRecords.get(1).getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 186 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 188 Método: assertEquals("apple", appleRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 189 Método: assertEquals("Apple", appleRecord.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 192 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 194 Método: assertEquals("carrot", carrotRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 195 Método: assertEquals("Carrot", carrotRecord.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 197 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 199 Método: assertEquals("durian", durianRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 200 Método: assertEquals("Durian", durianRecord.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 229 Método: assertEquals("Carrot", reader.get("carrot").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 230 Método: assertEquals("Banana", reader.get("banana").toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 231 Método: assertNull(reader.get("a-vegetable"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 232 Método: assertNull(reader.get("beet"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 233 Método: assertNull(reader.get("zzz"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 293 Método: assertEquals(new Stringy("Carrot"), reader.get(new Stringy("carrot")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 294 Método: assertEquals(new Stringy("Banana"), reader.get(new Stringy("banana")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 295 Método: assertNull(reader.get(new Stringy("a-vegetable")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 296 Método: assertNull(reader.get(new Stringy("beet")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestSortedKeyValueFile.java linha: 297 Método: assertNull(reader.get(new Stringy("zzz")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestHadoopCodecFactory.java linha: 31 Método: assertTrue(hadoopDeflateCodec.getClass().equals(avroDeflateCodec.getClass()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestHadoopCodecFactory.java linha: 38 Método: assertTrue(hadoopSnappyCodec.getClass().equals(avroSnappyCodec.getClass()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestHadoopCodecFactory.java linha: 45 Método: assertTrue(hadoopSnappyCodec.getClass().equals(avroSnappyCodec.getClass()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestHadoopCodecFactory.java linha: 52 Método: assertTrue(hadoopSnappyCodec.getClass().equals(avroSnappyCodec.getClass()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/file/TestHadoopCodecFactory.java linha: 58 Método: assertTrue(hadoopSnappyCodec == null)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 39 Método: assertEquals(0, mComparator.compare("", ""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 40 Método: assertThat(mComparator.compare("", "a"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 41 Método: assertThat(mComparator.compare("a", ""), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 43 Método: assertEquals(0, mComparator.compare("a", "a"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 44 Método: assertThat(mComparator.compare("a", "b"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 45 Método: assertThat(mComparator.compare("b", "a"), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 47 Método: assertEquals(0, mComparator.compare("ab", "ab"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 48 Método: assertThat(mComparator.compare("a", "aa"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 49 Método: assertThat(mComparator.compare("aa", "a"), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 51 Método: assertThat(mComparator.compare("abc", "abcdef"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 52 Método: assertThat(mComparator.compare("abcdef", "abc"), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 57 Método: assertEquals(0, mComparator.compare(new Utf8(""), new Utf8("")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 58 Método: assertThat(mComparator.compare(new Utf8(""), new Utf8("a")), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 59 Método: assertThat(mComparator.compare(new Utf8("a"), new Utf8("")), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 61 Método: assertEquals(0, mComparator.compare(new Utf8("a"), new Utf8("a")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 62 Método: assertThat(mComparator.compare(new Utf8("a"), new Utf8("b")), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 63 Método: assertThat(mComparator.compare(new Utf8("b"), new Utf8("a")), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 65 Método: assertEquals(0, mComparator.compare(new Utf8("ab"), new Utf8("ab")))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 66 Método: assertThat(mComparator.compare(new Utf8("a"), new Utf8("aa")), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 67 Método: assertThat(mComparator.compare(new Utf8("aa"), new Utf8("a")), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 69 Método: assertThat(mComparator.compare(new Utf8("abc"), new Utf8("abcdef")), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 70 Método: assertThat(mComparator.compare(new Utf8("abcdef"), new Utf8("abc")), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 75 Método: assertEquals(0, mComparator.compare(new Utf8(""), ""))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 76 Método: assertThat(mComparator.compare(new Utf8(""), "a"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 77 Método: assertThat(mComparator.compare(new Utf8("a"), ""), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 79 Método: assertEquals(0, mComparator.compare(new Utf8("a"), "a"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 80 Método: assertThat(mComparator.compare(new Utf8("a"), "b"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 81 Método: assertThat(mComparator.compare(new Utf8("b"), "a"), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 83 Método: assertEquals(0, mComparator.compare(new Utf8("ab"), "ab"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 84 Método: assertThat(mComparator.compare(new Utf8("a"), "aa"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 85 Método: assertThat(mComparator.compare(new Utf8("aa"), "a"), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 87 Método: assertThat(mComparator.compare(new Utf8("abc"), "abcdef"), lessThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/hadoop/util/TestAvroCharSequenceComparator.java linha: 88 Método: assertThat(mComparator.compare(new Utf8("abcdef"), "abc"), greaterThan(0))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 244 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 249 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 258 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 259 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 260 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 282 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 287 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 296 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 297 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 298 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 320 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 325 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 334 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 335 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 336 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 359 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 364 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 373 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 374 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 375 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 397 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 402 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 411 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 412 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 413 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 436 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 441 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 450 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 451 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 452 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 478 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 483 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 486 Método: Assert.assertNotNull(inputStream)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 488 Método: Assert.assertTrue(reader.ready())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 489 Método: Assert.assertEquals("apple\t3", reader.readLine())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 490 Método: Assert.assertEquals("banana\t2", reader.readLine())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 491 Método: Assert.assertEquals("carrot\t1", reader.readLine())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestWordCount.java linha: 492 Método: Assert.assertFalse(reader.ready())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyInputFormat.java linha: 55 Método: assertNotNull(inputFormat)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 71 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 72 Método: assertEquals(1, dataFileReader.next().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 73 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 74 Método: assertEquals(2, dataFileReader.next().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 75 Método: assertFalse(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 107 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 108 Método: assertEquals(2, dataFileReader.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 111 Método: assertTrue(dataFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordWriter.java linha: 112 Método: assertEquals(1, dataFileReader.next())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestCombineAvroKeyValueFileInputFormat.java linha: 93 Método: assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestCombineAvroKeyValueFileInputFormat.java linha: 100 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestCombineAvroKeyValueFileInputFormat.java linha: 104 Método: assertNotNull(mapRecord1.get())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestCombineAvroKeyValueFileInputFormat.java linha: 110 Método: fail("Unknown key " + mapRecord1.getKey().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestCombineAvroKeyValueFileInputFormat.java linha: 108 Método: assertEquals("apple banana", mapRecord1.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestCombineAvroKeyValueFileInputFormat.java linha: 106 Método: assertEquals("apple banana carrot", mapRecord1.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 138 Método: assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 145 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 148 Método: assertNotNull(appleRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 149 Método: assertEquals("apple", appleRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 151 Método: assertEquals(3, appleDocs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 152 Método: assertTrue(appleDocs.contains(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 153 Método: assertTrue(appleDocs.contains(2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 154 Método: assertTrue(appleDocs.contains(3))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 156 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 158 Método: assertNotNull(bananaRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 159 Método: assertEquals("banana", bananaRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 161 Método: assertEquals(2, bananaDocs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 162 Método: assertTrue(bananaDocs.contains(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 163 Método: assertTrue(bananaDocs.contains(2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 165 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 167 Método: assertEquals("carrot", carrotRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 169 Método: assertEquals(1, carrotDocs.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 170 Método: assertTrue(carrotDocs.contains(1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 172 Método: assertFalse(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 203 Método: assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 210 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 213 Método: assertNotNull(record1.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 214 Método: assertEquals(1, record1.getKey().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 215 Método: assertEquals("apple banana carrot", record1.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 217 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 219 Método: assertNotNull(record2.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 220 Método: assertEquals(2, record2.getKey().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 221 Método: assertEquals("apple banana", record2.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 223 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 225 Método: assertNotNull(record3.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 226 Método: assertEquals(3, record3.getKey().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 227 Método: assertEquals("apple", record3.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueInput.java linha: 229 Método: assertFalse(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 203 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 208 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 219 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 220 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 221 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 224 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 233 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 234 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 235 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 238 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 247 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 248 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 249 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 252 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 260 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 261 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 262 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 265 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 274 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 275 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 276 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 300 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 303 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 312 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 313 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 314 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 338 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 343 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 352 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 353 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 354 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 377 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 382 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 391 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 392 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputs.java linha: 393 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 204 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 209 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 218 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 219 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 220 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 223 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 232 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 233 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 234 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 237 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 246 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 247 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 248 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 251 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 259 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 260 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 261 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 264 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 273 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 274 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 275 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 300 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 303 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 312 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 313 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 314 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 338 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 343 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 352 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 353 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 354 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 377 Método: Assert.assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 382 Método: Assert.assertEquals(1, outputFiles.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 391 Método: Assert.assertEquals(3, counts.get("apple").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 392 Método: Assert.assertEquals(2, counts.get("banana").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroMultipleOutputsSyncable.java linha: 393 Método: Assert.assertEquals(1, counts.get("carrot").intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 90 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 92 Método: assertNotNull(firstRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 93 Método: assertEquals("apple", firstRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 94 Método: assertEquals("apple", firstRecord.getValue().getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 97 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 99 Método: assertNotNull(secondRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 100 Método: assertEquals("banana", secondRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 101 Método: assertEquals("banana", secondRecord.getValue().getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 104 Método: assertFalse(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 144 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 148 Método: assertNotNull(firstRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 149 Método: assertEquals("reflectionData", firstRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 150 Método: assertEquals(record.attribute, firstRecord.getValue().attribute)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 192 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 194 Método: assertNotNull(secondRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 195 Método: assertEquals("banana", secondRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 196 Método: assertEquals("banana", secondRecord.getValue().getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 200 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 202 Método: assertNotNull(firstRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 203 Método: assertEquals("apple", firstRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordWriter.java linha: 204 Método: assertEquals("apple", firstRecord.getValue().getName().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 76 Método: assertThat(actualByteCount, is(equalTo(expectedByteCount)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 88 Método: assertThat(actualByteCount, is(equalTo(expectedByteCount)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 94 Método: assertEquals(fsInput.length(), FILE_CONTENTS.length())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 103 Método: assertThat(actualBytes, is(equalTo(expectedBytes)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 104 Método: assertThat(actualByteCount, is(equalTo(expectedBytes.length)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 116 Método: assertThat(actualByte, is(equalTo(expectedByte)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestFsInput.java linha: 124 Método: assertThat(actualTellPos, is(equalTo(expectedTellPos)))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 95 Método: assertEquals("Progress should be zero before any records are read", 0.0f, recordReader.getProgress(), 0.0f)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 102 Método: assertTrue("Expected at least one record", recordReader.nextKeyValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 106 Método: assertNotNull("First record had null key", key)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 107 Método: assertNotNull("First record had null value", value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 109 Método: assertEquals("first", key.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 110 Método: assertEquals(1, value.datum().intValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 112 Método: assertTrue("getCurrentKey() returned different keys for the same record", key == recordReader.getCurrentKey())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 113 Método: assertTrue("getCurrentValue() returned different values for the same record", value == recordReader.getCurrentValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 117 Método: assertTrue("Expected to read a second record", recordReader.nextKeyValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 121 Método: assertNotNull("Second record had null key", key)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 122 Método: assertNotNull("Second record had null value", value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 124 Método: assertEquals("second", key.datum().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 125 Método: assertEquals(2, value.datum().intValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 127 Método: assertEquals("Progress should be complete (2 out of 2 records processed)", 1.0f, recordReader.getProgress(), 0.0f)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyValueRecordReader.java linha: 130 Método: assertFalse("Expected only 2 records", recordReader.nextKeyValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 100 Método: assertTrue(job.waitForCompletion(true))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 109 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 111 Método: assertNotNull(appleRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 112 Método: assertEquals("apple", appleRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 113 Método: assertEquals(3, appleRecord.getValue().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 115 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 117 Método: assertNotNull(bananaRecord.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 118 Método: assertEquals("banana", bananaRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 119 Método: assertEquals(2, bananaRecord.getValue().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 121 Método: assertTrue(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 123 Método: assertEquals("carrot", carrotRecord.getKey().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 124 Método: assertEquals(1, carrotRecord.getValue().intValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestKeyValueWordCount.java linha: 126 Método: assertFalse(avroFileReader.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyOutputFormat.java linha: 150 Método: assertNotNull(capturedCodecFactory.getValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyOutputFormat.java linha: 151 Método: assertEquals(expectedCodec.toString(), capturedCodecFactory.getValue().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyOutputFormat.java linha: 157 Método: assertNotNull(recordWriter)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyOutputFormat.java linha: 158 Método: assertSame(expectedRecordWriter, recordWriter)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 83 Método: assertEquals("Progress should be zero before any records are read", 0.0f, recordReader.getProgress(), 0.0f)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 90 Método: assertTrue("Expected at least one record", recordReader.nextKeyValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 94 Método: assertNotNull("First record had null key", key)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 95 Método: assertNotNull("First record had null value", value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 98 Método: assertEquals("first", firstString.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 100 Método: assertTrue("getCurrentKey() returned different keys for the same record", key == recordReader.getCurrentKey())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 101 Método: assertTrue("getCurrentValue() returned different values for the same record", value == recordReader.getCurrentValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 105 Método: assertTrue("Expected to read a second record", recordReader.nextKeyValue())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 109 Método: assertNotNull("Second record had null key", key)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 110 Método: assertNotNull("Second record had null value", value)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 113 Método: assertEquals("second", secondString.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 115 Método: assertEquals("Progress should be complete (2 out of 2 records processed)", 1.0f, recordReader.getProgress(), 0.0f)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapreduce/TestAvroKeyRecordReader.java linha: 118 Método: assertFalse("Expected only 2 records", recordReader.nextKeyValue())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWordCount.java linha: 132 Método: assertEquals(inputPair.datum().get(0), defaultRank)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWordCount.java linha: 137 Método: assertEquals(numOfCounts, WordCountUtil.COUNTS.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWordCount.java linha: 144 Método: assertEquals(sumOfCounts, actualSumOfCounts)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 169 Método: Assert.assertEquals(inputPair.datum().get(0), defaultRank)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 174 Método: Assert.assertEquals(numOfCounts, WordCountUtil.COUNTS.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 181 Método: Assert.assertEquals(sumOfCounts, actualSumOfCounts)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 209 Método: Assert.assertEquals(inputPair.datum().get(0), defaultRank)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 214 Método: Assert.assertEquals(numOfCounts, WordCountUtil.COUNTS.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 221 Método: Assert.assertEquals(sumOfCounts, actualSumOfCounts)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 244 Método: Assert.assertEquals(numOfCounts, WordCountUtil.COUNTS.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 249 Método: Assert.assertEquals(sumOfCounts, actualSumOfCounts)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 271 Método: Assert.assertEquals(numOfCounts, WordCountUtil.COUNTS.size())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 276 Método: Assert.assertEquals(sumOfCounts, actualSumOfCounts)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleOutputs.java linha: 316 Método: Assert.assertEquals(onel, testl)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestReflectJob.java linha: 160 Método: assertEquals(wc.word, WordCountUtil.COUNTS.get(wc.word), (Long) wc.count)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestReflectJob.java linha: 164 Método: assertEquals(WordCountUtil.COUNTS.size(), numWords)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleInputs.java linha: 289 Método: assertEquals(rec.id, numRecs)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleInputs.java linha: 290 Método: assertEquals(rec.balance - 100, rec.id)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleInputs.java linha: 291 Método: assertEquals(rec.name, "record" + rec.id)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroMultipleInputs.java linha: 296 Método: assertEquals(5, numRecs)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 33 Método: assertEquals(newSyncInterval, jobConf.getInt(AvroOutputFormat.SYNC_INTERVAL_KEY, -1))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 39 Método: assertNull(AvroOutputFormat.getCodecFactory(job))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 44 Método: assertNull(AvroOutputFormat.getCodecFactory(job))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 49 Método: assertNull(AvroOutputFormat.getCodecFactory(job))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 60 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 61 Método: assertEquals(factory.getClass(), avroBZip2Codec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 72 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 73 Método: assertEquals(factory.getClass(), avroBZip2Codec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 84 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 85 Método: assertEquals(factory.getClass(), avroDeflateCodec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 96 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 97 Método: assertEquals(factory.getClass(), avroDeflateCodec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 108 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 109 Método: assertEquals(factory.getClass(), avroSnappyCodec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 120 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 121 Método: assertEquals(factory.getClass(), avroSnappyCodec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 132 Método: assertNotNull(factory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroOutputFormat.java linha: 133 Método: assertEquals(factory.getClass(), avroDeflateCodec.getClass())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroWrapper.java linha: 30 Método: assertEquals(datum, wrapper.toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestPair.java linha: 35 Método: assertTrue(e.getMessage().startsWith("Cannot infer schema"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestPair.java linha: 38 Método: fail("Expected an AvroRuntimeException")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 74 Método: assertEquals("k1", asString(fileReader.next()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 75 Método: assertEquals("k2", asString(fileReader.next()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 76 Método: assertEquals("v1", asString(fileReader.next()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 77 Método: assertEquals("v2", asString(fileReader.next()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 78 Método: assertEquals("k3\tv3", asString(fileReader.next()))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 79 Método: assertEquals("k4\tv4", asString(fileReader.next()))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroTextOutputFormat.java linha: 80 Método: assertFalse("End", fileReader.hasNext())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 120 Método: assertEquals(wc.key().toString(), COUNTS.get(wc.key().toString()), wc.value())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 127 Método: assertEquals(COUNTS.size(), numWords)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 144 Método: assertEquals(expectedLine, new String(b, StandardCharsets.UTF_8).trim())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 146 Método: assertFalse(lines.hasNext())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 167 Método: assertEquals(STRING_META_VALUE, in.getMetaString(STRING_KEY))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 168 Método: assertEquals(LONG_META_VALUE, in.getMetaLong(LONG_KEY))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/WordCountUtil.java linha: 169 Método: assertTrue(Arrays.equals(BYTES_META_VALUE, in.getMeta(BYTES_KEY)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWeather.java linha: 91 Método: assertEquals(check.next(), w)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWeather.java linha: 166 Método: assertEquals(check.next(), w)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWeather.java linha: 172 Método: assertEquals(1, mapCloseCalls.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWeather.java linha: 173 Método: assertEquals(1, reducerCloseCalls.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWeather.java linha: 174 Método: assertEquals(1, mapConfigureCalls.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestWeather.java linha: 175 Método: assertEquals(1, reducerConfigureCalls.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestSequenceFileReader.java linha: 99 Método: assertEquals((Long) i, p.key())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestSequenceFileReader.java linha: 100 Método: assertEquals(Long.toString(i), p.value().toString())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestSequenceFileReader.java linha: 103 Método: assertEquals(COUNT, i)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/tether/TetherTask.java linha: 155 Método: fail(e.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/tether/TetherTask.java linha: 189 Método: fail(e.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/tether/TetherTask.java linha: 199 Método: fail(e.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/tether/TetherTask.java linha: 227 Método: outputClient.fail(message)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/tether/TestWordCountTether.java linha: 101 Método: assertEquals(wc.key().toString(), WordCountUtil.COUNTS.get(wc.key().toString()), wc.value())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/tether/TestWordCountTether.java linha: 106 Método: assertEquals(WordCountUtil.COUNTS.size(), numWords)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroInputFormat.java linha: 72 Método: assertEquals(1, statuses.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroInputFormat.java linha: 73 Método: assertEquals("somefile.avro", statuses[0].getPath().getName())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroInputFormat.java linha: 77 Método: assertEquals(2, statuses.length)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroInputFormat.java linha: 81 Método: assertTrue(names.contains("somefile.avro"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/mapred/src/test/java/org/apache/avro/mapred/TestAvroInputFormat.java linha: 82 Método: assertTrue(names.contains("someotherfile.txt"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/android/src/test/java/org/apache/avro/util/internal/TestClassValueCache.java linha: 31 Método: assertThat(fromCache, is("class java.lang.String"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/android/src/test/java/org/apache/avro/util/internal/TestClassValueCache.java linha: 34 Método: assertThat(cache.apply(String.class), not(sameInstance(fromCache)))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerConcurrentExecution.java linha: 119 Método: Assert.assertEquals("wait", response)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 91 Método: Assert.assertEquals("Hello, how are you?", simpleClient.hello("how are you?"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 96 Método: Assert.assertEquals("Hello, World!", future1.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 97 Método: Assert.assertNull(future1.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 112 Método: Assert.assertEquals("Hello, what's up?", future2.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 113 Método: Assert.assertNull(future2.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 123 Método: Assert.assertEquals(record, simpleClient.echo(record))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 128 Método: Assert.assertEquals(record, future1.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 129 Método: Assert.assertNull(future1.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 144 Método: Assert.assertEquals(record, future2.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 145 Método: Assert.assertNull(future2.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 151 Método: Assert.assertEquals(8, simpleClient.add(2, 6))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 156 Método: Assert.assertEquals(Integer.valueOf(16), future1.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 157 Método: Assert.assertNull(future1.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 172 Método: Assert.assertEquals(Integer.valueOf(768), future2.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 173 Método: Assert.assertNull(future2.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 181 Método: Assert.assertEquals(byteBuffer, simpleClient.echoBytes(byteBuffer))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 186 Método: Assert.assertEquals(byteBuffer, future1.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 187 Método: Assert.assertNull(future1.getError())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 202 Método: Assert.assertEquals(byteBuffer, future2.get(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 203 Método: Assert.assertNull(future2.getError())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 211 Método: Assert.fail("Expected " + TestError.class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 223 Método: Assert.assertTrue("Expected " + TestError.class.getCanonicalName(), e.getCause() instanceof TestError)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 221 Método: Assert.fail("Expected " + TestError.class.getCanonicalName() + " to be thrown")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 225 Método: Assert.assertNotNull(future.getError())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 226 Método: Assert.assertTrue("Expected " + TestError.class.getCanonicalName(), future.getError() instanceof TestError)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 227 Método: Assert.assertNull(future.getResult())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 235 Método: Assert.fail("Expected " + TestError.class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 244 Método: Assert.assertTrue("Timed out waiting for error", latch.await(2, TimeUnit.SECONDS))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 245 Método: Assert.assertNotNull(errorRef.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 246 Método: Assert.assertTrue(errorRef.get() instanceof TestError)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 253 Método: Assert.assertTrue("Expected ack flag to be set", ackFlag.get())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 258 Método: Assert.assertFalse("Expected ack flag to be cleared", ackFlag.get())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 276 Método: Assert.assertEquals(3, simpleClient2.add(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 281 Método: Assert.assertEquals(Integer.valueOf(3), addFuture.get())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 295 Método: Assert.assertTrue("Expected IOException", ioeCaught)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 292 Método: Assert.fail("Send after server close should have thrown Exception")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 300 Método: Assert.assertTrue("Expected IOException", ioeCaught)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 309 Método: Assert.fail("Send after server close should have thrown Exception")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 316 Método: Assert.assertTrue("Expected IOException", ioeCaught)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 340 Método: Assert.assertEquals(3, simpleClient2.add(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 353 Método: Assert.assertTrue(e.getCause() instanceof IOException)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 356 Método: Assert.fail("Unexpected Exception: " + e.toString())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 358 Método: Assert.assertTrue("Expected IOException to be thrown", ioeThrown)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 401 Método: Assert.fail("Expected an exception")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 426 Método: Assert.fail("Client request should not be blocked on server shutdown")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 452 Método: Assert.assertEquals(3, simpleClient2.add(1, 2))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 458 Método: Assert.fail("Client should not be able to invoke RPCs " + "because server is no longer running")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 468 Método: Assert.assertEquals(3, simpleClient2.add(1, 2))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 492 Método: Assert.assertEquals("Hello, World!", simpleClient.hello("World!"))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServerWithCallbacks.java linha: 504 Método: Assert.assertTrue("Timed out shutting down thread pool", threadPool.awaitTermination(2, TimeUnit.SECONDS))
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyTransceiverWhenServerStops.java linha: 116 Método: fail("Stopping NettyTransceiver and waiting for client threads to quit took too long.")
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyTransceiverWhenFailsToConnect.java linha: 47 Método: Assert.assertTrue("Channel not shut down", channel == null || channel.isShutdown())
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyTransceiverWhenFailsToConnect.java linha: 44 Método: Assert.fail("should have thrown an exception")
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServer.java linha: 73 Método: assertEquals(0, allMessages.getCount())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServer.java linha: 121 Método: Assert.assertEquals("Sent message to [wife] from [husband] with body [I love you!]", result)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServer.java linha: 153 Método: Assert.assertEquals(2, ((NettyServer) server).getNumActiveConnections())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServer.java linha: 164 Método: Assert.assertEquals(1, numActiveConnections)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/ipc-netty/src/test/java/org/apache/avro/ipc/netty/TestNettyServer.java linha: 186 Método: Assert.assertTrue("Connection should have been closed: " + bytesRead, bytesRead == -1)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 53 Método: assertNotNull(mojo)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 61 Método: assertTrue(outputDir.listFiles().length != 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 64 Método: assertEquals(ReflectData.get().getSchema(Person.class), new Schema.Parser().parse(personSchemaFile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 73 Método: assertTrue(file.getName().contains(".avsc"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 82 Método: assertTrue(outputDir.listFiles().length != 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 85 Método: assertEquals(ReflectData.get().getProtocol(Remote.class), Protocol.parse(remoteProtocolFile))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestInduceMojo.java linha: 94 Método: assertTrue(file.getName().contains(".avpr"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestSchemaMojo.java linha: 41 Método: assertNotNull(mojo)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestSchemaMojo.java linha: 51 Método: assertTrue(schemaUserContent.contains("java.time.Instant"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestSchemaMojo.java linha: 58 Método: assertNotNull(mojo)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestSchemaMojo.java linha: 68 Método: assertTrue("Got " + schemaUserContent + " instead", schemaUserContent.contains("It works!"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/AbstractAvroMojoTest.java linha: 49 Método: assertNotNull(directory)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/AbstractAvroMojoTest.java linha: 50 Método: assertTrue("Directory " + directory.toString() + " does not exists", directory.exists())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/AbstractAvroMojoTest.java linha: 51 Método: assertNotNull(expectedFiles)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/AbstractAvroMojoTest.java linha: 52 Método: assertTrue(expectedFiles.size() > 0)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/AbstractAvroMojoTest.java linha: 56 Método: assertEquals(expectedFiles, filesInDirectory)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java linha: 44 Método: assertNotNull(mojo)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java linha: 53 Método: assertTrue(idlUserContent.contains("java.time.Instant"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java linha: 55 Método: assertEquals(Collections.singletonList("[WARN] Found documentation comment at line 23, column 5. Ignoring previous one at line 22, column 5: \"Ignored Doc Comment\"" + "\nDid you mean to use a multiline comment ( /* ... */ ) instead?"), log.getLogEntries())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java linha: 67 Método: assertNotNull(mojo)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java linha: 77 Método: assertTrue(schemaUserContent.contains("It works!"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestIDLProtocolMojo.java linha: 80 Método: assertFalse(log.getLogEntries().isEmpty())
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestProtocolMojo.java linha: 41 Método: assertNotNull(mojo)
Assert com mensagem: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestProtocolMojo.java linha: 51 Método: assertTrue("Got " + protocolUserContent + " instead", protocolUserContent.contains("java.time.Instant"))
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestProtocolMojo.java linha: 58 Método: assertNotNull(mojo)
Assert sem descrição: /home/vitor-otto/opensource/avro-release-1.11.1/lang/java/maven-plugin/src/test/java/org/apache/avro/mojo/TestProtocolMojo.java linha: 68 Método: assertTrue(schemaUserContent.contains("It works!"))
Total asserts: 2618
Asserts sem descrição: 2144
Asserts com descrição: 474
Assertion Roulette: 1806
