
Projeto: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155

Antes do refactor: 
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/perf/io/github/classgraph/issues/issue400/Issue400.java linha: 54 Método: assertThat(scanResult.getAllClassesAsMap())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/perf/io/github/classgraph/issues/issue400/Issue400.java linha: 56 Método: assertThat(scanResult.getClasspathURLs())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/perf/io/github/classgraph/issues/issue400/Issue400.java linha: 61 Método: assertThat(ramAtStart)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/perf/io/github/classgraph/issues/issue400/Issue400.java linha: 68 Método: assertThat(ramAtStart)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 70 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.E").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 72 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.F").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 74 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.G").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 83 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.J").getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 92 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.L").getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 101 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.H").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 103 Método: assertThat(scanResult.getAnnotationsOnClass("com.xyz.meta.H").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 106 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.I").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 108 Método: assertThat(scanResult.getAnnotationsOnClass("com.xyz.meta.I").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 111 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.K").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 113 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.D").directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 122 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.I").getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 131 Método: assertThat(scanResult.getAnnotationsOnClass("com.xyz.meta.A").getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 133 Método: assertThat(scanResult.getAnnotationsOnClass("com.xyz.meta.C").getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 141 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.J").union(scanResult.getClassesWithAnnotation("com.xyz.meta.G")).directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 144 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.I").union(scanResult.getClassesWithAnnotation("com.xyz.meta.J")).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 148 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.I").union(scanResult.getClassesWithAnnotation("com.xyz.meta.J")).directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 158 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.I").intersect(scanResult.getClassesWithAnnotation("com.xyz.meta.J")).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/com/xyz/MetaAnnotationTest.java linha: 161 Método: assertThat(scanResult.getClassesWithAnnotation("com.xyz.meta.I").intersect(scanResult.getClassesWithAnnotation("com.xyz.meta.J")).directOnly().getNames())
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 51 Método: assertTrue(paths.remove(classesDir), "Classpath should have contained " + classesDir + ": " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 52 Método: assertTrue(paths.remove(Paths.get(getJreRtJarPath())), "Classpath should have contained system jars: " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 54 Método: assertEquals(0, paths.size(), "Classpath should have no other entries: " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 81 Método: assertTrue(paths.remove(classesDir), "Classpath should have contained " + classesDir + ": " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 82 Método: assertTrue(paths.remove(Paths.get(getJreRtJarPath())), "Classpath should have contained system jars: " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 84 Método: assertEquals(0, paths.size(), "Classpath should have no other entries: " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 109 Método: assertNotNull(moduleFinder, "ModuleFinder should be non-null")
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 110 Método: assertTrue(moduleFinder.getSystemModuleRefs().size() > 0, "ModuleFinder should have found system modules")
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 116 Método: assertTrue(paths.remove(classesDir), "Classpath should have contained " + classesDir + ": " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 117 Método: assertEquals(0, paths.size(), "Classpath should have no other entries: " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 142 Método: assertNotNull(moduleFinder, "ModuleFinder should be non-null")
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 143 Método: assertTrue(moduleFinder.getSystemModuleRefs().size() > 0, "ModuleFinder should have found system modules")
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 149 Método: assertTrue(paths.remove(classesDir), "Classpath should have contained " + classesDir + ": " + paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/nonapi/io/github/classgraph/classpath/ClasspathFinderTest.java linha: 150 Método: assertEquals(0, paths.size(), "Classpath should have no other entries: " + paths)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DisableRecursiveScanningTest.java linha: 56 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DisableRecursiveScanningTest.java linha: 57 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DisableRecursiveScanningTest.java linha: 68 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DisableRecursiveScanningTest.java linha: 69 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 83 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 84 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 85 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 86 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 87 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 98 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 99 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 100 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 101 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 102 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 114 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 115 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 116 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 117 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 118 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 129 Método: assertThat(subclasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 130 Método: assertThat(subclasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 131 Método: assertThat(subclasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 133 Método: assertThat(superclasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 134 Método: assertThat(superclasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 135 Método: assertThat(superclasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 146 Método: assertThat(subinterfaces)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 147 Método: assertThat(subinterfaces)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 148 Método: assertThat(subinterfaces)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 150 Método: assertThat(superinterfaces)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 151 Método: assertThat(superinterfaces)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 152 Método: assertThat(superinterfaces)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 162 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 164 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 167 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 168 Método: assertThat(scanResult.getClassesImplementing(IfaceSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 170 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 172 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 174 Método: assertThat(scanResult.getClassesImplementing(IfaceSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 176 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 178 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 180 Método: assertThat(scanResult.getClassesImplementing(IfaceSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 182 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 185 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 186 Método: assertThat(scanResult.getClassesImplementing(IfaceSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 188 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 190 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 192 Método: assertThat(scanResult.getClassesImplementing(IfaceSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 194 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 196 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 198 Método: assertThat(scanResult.getClassesImplementing(IfaceSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 200 Método: assertThat(scanResult.getClassesImplementing(IfaceSubSub.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 211 Método: assertThat(scanResult.getSuperclasses(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 213 Método: assertThat(scanResult.getSubclasses(Accepted.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 214 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 215 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 226 Método: assertThat(scanResult.getSuperclasses(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 236 Método: assertThat(scanResult.getSuperclasses(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 237 Método: assertThat(scanResult.getClassesWithAnnotation(RejectedAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 249 Método: assertThat(scanResult.getSuperclasses(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 250 Método: assertThat(scanResult.getSubclasses(Accepted.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 251 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 252 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 253 Método: assertThat(scanResult.getAnnotationsOnClass(AcceptedInterface.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 265 Método: assertThat(scanResult.getAnnotationsOnClass(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 276 Método: assertThat(scanResult.getAnnotationsOnClass(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 288 Método: assertThat(scanResult.getAnnotationsOnClass(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 299 Método: assertThat(scanResult.getSuperclasses(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 300 Método: assertThat(scanResult.getSubclasses(Accepted.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 301 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 302 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 303 Método: assertThat(scanResult.getClassesWithAnnotation(RejectedAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 313 Método: assertThat(scanResult.getSuperclasses(RejectedSuperclass.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 325 Método: assertThat(scanResult.getSuperclasses(RejectedSuperclass.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 335 Método: assertThat(scanResult.getSuperclasses(Accepted.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 337 Método: assertThat(scanResult.getSubclasses(Accepted.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 339 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 341 Método: assertThat(scanResult.getClassesImplementing(AcceptedInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 343 Método: assertThat(scanResult.getClassesWithAnnotation(RejectedAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 366 Método: assertThat(readFileContents.get())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 383 Método: assertThat(numInitializers)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 408 Método: assertThat("Static field contents")
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 411 Método: assertThat(Integer.valueOf(3))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 414 Método: assertThat(Boolean.valueOf(true))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 417 Método: assertThat(Character.valueOf('y'))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 428 Método: assertThat(numInitializers)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 439 Método: assertThat(dotFile)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 448 Método: assertThat(new ClassGraph().acceptPackages(ROOT_PACKAGE).enableAllInfo().getClasspathFiles().size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassGraphTest.java linha: 463 Método: assertThat(foundManifest.get())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation/MethodAnnotationTest.java linha: 58 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation/MethodAnnotationTest.java linha: 73 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation/MethodAnnotationTest.java linha: 78 Método: assertThat(mi.getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation/MethodAnnotationTest.java linha: 83 Método: assertThat(found)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/utils/LogNodeTest.java linha: 53 Método: assertTrue(systemErrMessages.contains("any logging message"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/utils/LogNodeTest.java linha: 54 Método: assertTrue(systemErrMessages.contains("-- child message"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/utils/LogNodeTest.java linha: 55 Método: assertTrue(systemErrMessages.contains("---- sub child message"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/utils/LogNodeTest.java linha: 56 Método: assertTrue(systemErrMessages.contains("another root"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 119 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> scanResult.getClassInfo(MethodInfoTest.class.getName()).getMethodInfo())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 131 Método: assertThat(scanResult.getClassInfo(MethodInfoTest.class.getName()).getMethodInfo().filter(new MethodInfoFilter() {

    @Override
    public boolean accept(final MethodInfo methodInfo) {
        return !methodInfo.getName().equals("$closeResource") && !methodInfo.getName().equals("lambda$0") && !methodInfo.isSynthetic();
    }
}).getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 164 Método: assertThat(scanResult.getClassInfo(MethodInfoTest.class.getName()).getConstructorInfo().getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 176 Método: assertThat(scanResult.getClassInfo(MethodInfoTest.class.getName()).getMethodInfo().filter(new MethodInfoFilter() {

    @Override
    public boolean accept(final MethodInfo methodInfo) {
        return !methodInfo.getName().equals("$closeResource") && !methodInfo.getName().equals("lambda$0") && !methodInfo.isSynthetic();
    }
}).getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 212 Método: assertThat(mi)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 216 Método: assertThat(mi.loadClassAndGetMethod())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 226 Método: assertThat(arrayClassInfoList.toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 229 Método: assertThat(p1.loadElementClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 230 Método: assertThat(p1.loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 231 Método: assertThat(p1.getElementClassInfo())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 232 Método: assertThat(p1.getNumDimensions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 234 Método: assertThat(p2.loadElementClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 235 Método: assertThat(p2.getElementClassInfo().getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 236 Método: assertThat(p2.loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 237 Método: assertThat(p2.getElementClassInfo().getMethodInfo().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 238 Método: assertThat(p2.getNumDimensions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 240 Método: assertThat(p3.loadElementClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 241 Método: assertThat(p3.loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 242 Método: assertThat(p3.getElementClassInfo())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 243 Método: assertThat(p3.getNumDimensions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 253 Método: assertThat(mi.getThrownExceptions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 254 Método: assertThat(mi.getThrownExceptions().get(0).getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 258 Método: assertThat(mi.getThrownExceptions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 259 Método: assertThat(mi.getThrownExceptions().get(0).getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodinfo/MethodInfoTest.java linha: 260 Método: assertThat(mi.getThrownExceptions().get(1).getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/fieldinfo/FieldInfoTest.java linha: 76 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> scanResult.getClassInfo(FieldInfoTest.class.getName()).getFieldInfo())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/fieldinfo/FieldInfoTest.java linha: 91 Método: assertThat(fieldInfoStrs)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/fieldinfo/FieldInfoTest.java linha: 109 Método: assertThat(fieldInfoStrs)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/classrefannotation/AnnotationClassRefTest.java linha: 89 Método: assertThat(testClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/classrefannotation/AnnotationClassRefTest.java linha: 92 Método: assertThat(method)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/classrefannotation/AnnotationClassRefTest.java linha: 94 Método: assertThat(annotations.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/classrefannotation/AnnotationClassRefTest.java linha: 97 Método: assertThat(paramVals.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/classrefannotation/AnnotationClassRefTest.java linha: 100 Método: assertThat(val instanceof AnnotationClassRef)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/classrefannotation/AnnotationClassRefTest.java linha: 102 Método: assertThat(classRefVal.loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 58 Método: assertThat(impls.contains(Impl1.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 66 Método: assertThat(scanResult.getAllClasses().filter(new ClassInfoFilter() {

    @Override
    public boolean accept(final ClassInfo ci) {
        return ci.getName().contains("ClsSub");
    }
}).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 79 Método: assertThat(scanResult.getAllClasses().filter(new ClassInfoFilter() {

    @Override
    public boolean accept(final ClassInfo ci) {
        return ci.getInterfaces().directOnly().getNames().contains(Iface.class.getName());
    }
}).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 92 Método: assertThat(scanResult.getAllClasses().filter(new ClassInfoFilter() {

    @Override
    public boolean accept(final ClassInfo ci) {
        return ci.getInterfaces().getNames().contains(Iface.class.getName());
    }
}).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 107 Método: assertThat(scanResult.getClassesImplementing(Iface.class).directOnly().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 116 Método: assertThat(scanResult.getClassesImplementing(Iface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/ClassInfoTest.java linha: 127 Método: assertThat(scanResult.getAllClasses().filter(new ClassInfoFilter() {

    @Override
    public boolean accept(final ClassInfo ci) {
        return ci.getInterfaces().getNames().contains(Iface.class.getName()) && ci.getSuperclasses().getNames().contains(Impl1.class.getName());
    }
}).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation2/TestMethodMetaAnnotation.java linha: 111 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation2/TestMethodMetaAnnotation.java linha: 127 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/methodannotation2/TestMethodMetaAnnotation.java linha: 142 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 24 Método: assertThat(scanResult.getAllStandardClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 39 Método: assertThat(scanResult.getAllStandardClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 55 Método: assertThat(scanResult.getAllStandardClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 58 Método: assertThat(scanResult.getSubclasses(ExternalSuperclass.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 60 Método: assertThat(scanResult.getAllInterfaces())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 61 Método: assertThat(scanResult.getClassesImplementing(ExternalInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 63 Método: assertThat(scanResult.getAllAnnotations().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 64 Método: assertThat(scanResult.getClassesWithAnnotation(ExternalAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 76 Método: assertThat(scanResult.getAllStandardClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 78 Método: assertThat(scanResult.getSubclasses(ExternalSuperclass.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 80 Método: assertThat(scanResult.getAllInterfaces().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 81 Método: assertThat(scanResult.getClassesImplementing(ExternalInterface.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 83 Método: assertThat(scanResult.getAllAnnotations().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/internal/InternalExternalTest.java linha: 85 Método: assertThat(scanResult.getClassesWithAnnotation(ExternalAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/parameterannotation/RetentionPolicyForFunctionParameterAnnotationsTest.java linha: 115 Método: assertThat(methodInfo.hasParameterAnnotation(ParamAnnoRuntime.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/parameterannotation/RetentionPolicyForFunctionParameterAnnotationsTest.java linha: 145 Método: assertThat(methodInfo.hasParameterAnnotation(ParamAnnoRuntime.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/parameterannotation/RetentionPolicyForFunctionParameterAnnotationsTest.java linha: 147 Método: assertThat(methodInfo.hasParameterAnnotation(SecondParamAnnoRuntime.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/parameterannotation/RetentionPolicyForFunctionParameterAnnotationsTest.java linha: 171 Método: assertThat(methodInfo.hasParameterAnnotation(ParamAnnoRuntime.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/parameterannotation/RetentionPolicyForFunctionParameterAnnotationsTest.java linha: 196 Método: assertThat(methodInfo.hasParameterAnnotation(ParamAnnoRuntime.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/parameterannotation/RetentionPolicyForFunctionParameterAnnotationsTest.java linha: 220 Método: assertThat(methodInfo.hasParameterAnnotation(ParamAnnoRuntime.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/fieldannotation/FieldAndMethodAnnotationTest.java linha: 65 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/fieldannotation/FieldAndMethodAnnotationTest.java linha: 79 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/test/fieldannotation/FieldAndMethodAnnotationTest.java linha: 94 Método: assertThat(testClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/json/JSONSerializationTest.java linha: 263 Método: assertThat(json0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/json/JSONSerializationTest.java linha: 269 Método: assertThat(json0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/json/JSONSerializationTest.java linha: 291 Método: assertThat(scanResultReserializedJSON)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/json/AnnotationDefaultVals.java linha: 41 Método: assertThat(scanResult.getClassInfo(MyClass.class.getName()).getAnnotationInfo().get(0).getDefaultParameterValues().get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/json/AnnotationDefaultVals.java linha: 47 Método: assertThat(scanResultReserializedJSON)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/json/AnnotationDefaultVals.java linha: 48 Método: assertThat(scanResultDeserialized.getClassInfo(MyClass.class.getName()).getAnnotationInfo().get(0).getDefaultParameterValues().get(0).getValue())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 74 Método: assertThat(y)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 75 Método: assertThat(x)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 80 Método: assertThat(annParamVal)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 82 Método: assertThat(annClassRef.getClassInfo().getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 86 Método: assertThat(yDeps)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 87 Método: assertThat(yDeps)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 94 Método: assertThat(arrayClassInfo.getElementClassInfo().equals(x))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 95 Método: assertThat(arrayClassInfo.loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue355/Issue355.java linha: 96 Método: assertThat(arrayClassInfo.loadElementClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue107/Issue107Test.java linha: 54 Método: assertThat(scanResult.getClassesWithAnnotation(PackageAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue107/Issue107Test.java linha: 55 Método: assertThat(scanResult.getPackageInfo().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue107/Issue107Test.java linha: 57 Método: assertThat(scanResult.getPackageInfo(Issue107Test.class.getPackage().getName()).getAnnotationInfo().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue329/Issue329.java linha: 33 Método: assertThat(classInfo.getClassDependencies().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue152/Issue152Test.java linha: 97 Método: assertThat(classInfo.getMethodInfo("testMethod").get(0).toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue152/Issue152Test.java linha: 110 Método: assertThat(classInfo.getFieldInfo("testField").toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue74/Issue74Test.java linha: 45 Método: assertThat(scanResult.getClassesImplementing(Function.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue407/Issue407Test.java linha: 60 Método: assertThat(resolvedFile)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue407/Issue407Test.java linha: 74 Método: assertThat(classNames)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue261/Issue261Test.java linha: 67 Método: assertThat(scanResult.getSubclasses(SuperSuperCls.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue289/Issue289.java linha: 33 Método: assertThat(resources)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue735/Issue735.java linha: 30 Método: assertThat(ci1.getMethodInfo().get(0).getTypeSignatureOrTypeDescriptor().getResultType().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue735/Issue735.java linha: 33 Método: assertThat(ci2.getMethodInfo().get(0).getTypeSignatureOrTypeDescriptor().getResultType().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue37/Issue37Test.java linha: 72 Método: assertThat(methodNames)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue370/Issue370Test.java linha: 55 Método: assertThat(clazzInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue370/Issue370Test.java linha: 59 Método: assertThat(value)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue238/Issue238Test.java linha: 98 Método: assertThat(classNames)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue223/Issue223Test.java linha: 67 Método: assertThat(innerClasses.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue223/Issue223Test.java linha: 74 Método: assertThat(innerInterface)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue223/Issue223Test.java linha: 76 Método: assertThat(innerInterface.getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue223/Issue223Test.java linha: 77 Método: assertThat(innerInterface.isInterface())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue223/Issue223Test.java linha: 79 Método: assertThat(innerClassRef)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue260/Issue260Test.java linha: 50 Método: assertThat(true)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue310/Issue310.java linha: 43 Método: assertThat(scanResult1.getClassInfo(Issue310.class.getName()).getFieldInfo("B"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue310/Issue310.java linha: 45 Método: assertThat(json1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue310/Issue310.java linha: 48 Método: assertThat(json1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue148/Issue148Test.java linha: 80 Método: assertThat(bufStr)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue387/Issue387Test.java linha: 65 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue387/Issue387Test.java linha: 66 Método: assertThat(CustomURLScheme.remappedURLs.entrySet().iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 63 Método: assertThat(ci)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 65 Método: assertThat(allFieldInfo.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 67 Método: assertThat(type0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 68 Método: assertThat(((BaseTypeSignature) type0).getType())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 70 Método: assertThat(type1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 71 Método: assertThat(((ArrayTypeSignature) type1).getNumDimensions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 73 Método: assertThat(elementTypeSignature)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 75 Método: assertThat(classRefTypeSignature.getBaseClassName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue140/Issue140Test.java linha: 76 Método: assertThat(classRefTypeSignature.loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue38/Issue38Test.java linha: 32 Método: assertThat(scanResult.getClassesImplementing(SuppressWarnings.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue99/Issue99Test.java linha: 52 Método: assertThat(scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue99/Issue99Test.java linha: 63 Método: assertThat(scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue167/Issue167Test.java linha: 71 Método: assertEquals(classNames, scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue167/Issue167Test.java linha: 84 Método: assertEquals(classNames, scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue93/Issue93.java linha: 53 Método: assertThat(scanResult.getClassesWithAnnotation(RetentionClass.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue93/Issue93.java linha: 55 Método: assertThat(scanResult.getClassesWithAnnotation(RetentionRuntime.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue93/Issue93.java linha: 68 Método: assertThat(scanResult.getClassesWithAnnotation(RetentionClass.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue93/Issue93.java linha: 69 Método: assertThat(scanResult.getClassesWithAnnotation(RetentionRuntime.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue151/Issue151Test.java linha: 64 Método: assertThat(methodInfo.toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue171/Issue171Test.java linha: 29 Método: assertThat(classNames)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue739/Issue739.java linha: 31 Método: assertThat(paths)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue739/Issue739.java linha: 32 Método: assertThat(paths)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue739/Issue739.java linha: 33 Método: assertThat(paths)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue739/Issue739.java linha: 34 Método: assertThat(paths)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 69 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 95 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 120 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 147 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 181 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 243 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 270 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 306 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue175/Issue175Test.java linha: 330 Método: assertThat(methods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue83/Issue83Test.java linha: 28 Método: assertThat(jarPathURL)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue83/Issue83Test.java linha: 36 Método: assertThat(paths)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue83/Issue83Test.java linha: 45 Método: assertThat(jarPathURL)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue83/Issue83Test.java linha: 53 Método: assertThat(paths)
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue600/Issue600Test.java linha: 31 Método: assertFalse(resources.isEmpty(), "Test is meaningless without resources to open.")
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue600/Issue600Test.java linha: 45 Método: assertFalse(resources.isEmpty(), "Test is meaningless without resources to open.")
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue600/Issue600Test.java linha: 61 Método: assertThat(consume(input))
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue600/Issue600Test.java linha: 57 Método: assertDoesNotThrow(new Executable() {

    @Override
    public void execute() throws Throwable {
        try (InputStream input = resource.open()) {
            assertThat(consume(input)).isGreaterThan(0);
        }
    }
}, "Resource " + resource.getPath() + " should be closed.")
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue600/Issue600Test.java linha: 85 Método: assertTrue(buffer.hasRemaining())
Assert com mensagem: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue600/Issue600Test.java linha: 80 Método: assertDoesNotThrow(new Executable() {

    @Override
    public void execute() throws Throwable {
        final ByteBuffer buffer = resource.read();
        try {
            assertTrue(buffer.hasRemaining());
        } finally {
            resource.close();
        }
    }
}, "Resource " + resource.getPath() + " should be closed.")
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue80/Issue80Test.java linha: 20 Método: assertThat(scanResult.getAllStandardClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue101/Issue101Test.java linha: 49 Método: assertThat(scanResult.getClassesWithAnnotation(NonInheritedAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue101/Issue101Test.java linha: 61 Método: assertThat(scanResult.getClassesWithAnnotation(InheritedMetaAnnotation.class).getStandardClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue101/Issue101Test.java linha: 73 Método: assertThat(scanResult.getClassesWithAnnotation(InheritedAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 39 Método: assertThat(subClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 40 Método: assertThat(subClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 42 Método: assertThat(superClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 43 Método: assertThat(superClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 56 Método: assertThat(subClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 57 Método: assertThat(subClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 59 Método: assertThat(superClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 60 Método: assertThat(superClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 72 Método: assertThat(superClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 73 Método: assertThat(superClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 85 Método: assertThat(outerClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 86 Método: assertThat(outerClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 98 Método: assertThat(innerClassInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 99 Método: assertThat(innerClassInfo.getResource())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 121 Método: assertThat(scanResult.getClassInfo(Issue345.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 123 Método: assertThat(scanResult.getClassInfo(Test.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 153 Método: assertThat(ciA.getModifiersStr())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 155 Método: assertThat(ciB.getModifiersStr())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue345/Issue345.java linha: 157 Método: assertThat(ciC.getModifiersStr())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue468/Issue468Test.java linha: 50 Método: assertThat(resources.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue468/Issue468Test.java linha: 51 Método: assertThat(resources.getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue468/Issue468Test.java linha: 84 Método: assertThat(urlStr)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue495/Issue495Test.java linha: 58 Método: assertThat(resourceURL)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue495/Issue495Test.java linha: 59 Método: assertThat(new File(resourceURL.toURI()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue495/Issue495Test.java linha: 67 Método: assertThat(allClasses.getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue495/Issue495Test.java linha: 69 Método: assertThat(scalaClassInfo.getTypeSignature())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue495/Issue495Test.java linha: 71 Método: assertThat(scalaClassClass)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue146/Issue146Test.java linha: 56 Método: assertThat(classInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue146/Issue146Test.java linha: 60 Método: assertThat(methodInfo.toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/TestGetUniqueClasspathElements.java linha: 22 Método: assertThat(classpathElements)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue318/Issue318.java linha: 82 Método: assertThat(scanResult.getClassesWithAnnotation(MyAnn.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue318/Issue318.java linha: 84 Método: assertThat(scanResult.getClassInfo(With3MyAnn.class.getName()).getAnnotationInfoRepeatable(MyAnn.class).size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue128/Issue128Test.java linha: 95 Método: assertThat(filesInsideLevel3)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue305/Issue305.java linha: 61 Método: assertThat(systemErrMessages.indexOf("Found Class-Path entry in manifest file: " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/charsets.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/deploy.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/access-bridge-64.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/cldrdata.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/dnsns.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/jaccess.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/jfxrt.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/localedata.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/nashorn.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/sunec.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/sunjce_provider.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/sunmscapi.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/sunpkcs11.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/ext/zipfs.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/javaws.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/jce.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/jfr.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/jfxswt.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/jsse.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/management-agent.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/plugin.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/resources.jar " + "file:/C:/Program%20Files/Java/jdk1.8.0_162/jre/lib/rt.jar " + "file:/Z:/classgraphtest/target/classes/ " + "file:/C:/Users/flame/.m2/repository/io/github/classgraph/classgraph/4.6.19/classgraph-4.6.19.jar " + "file:/C:/Program%20Files/JetBrains/IntelliJ%20IDEA%20Community%20Edition%202018.2.1/lib/idea_rt.jar"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue216/Issue216Test.java linha: 54 Método: assertThat(result.getAllClasses().filter(new ClassInfoFilter() {

    @Override
    public boolean accept(final ClassInfo ci) {
        return ci.hasAnnotation(Entity.class);
    }
}).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue267/ClassLoadingWorksWithParentLastLoaders.java linha: 60 Método: assertThat(ClassLoadingWorksWithParentLastLoaders.class.getClassLoader().getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue267/ClassLoadingWorksWithParentLastLoaders.java linha: 62 Método: assertThat(a.getClass().getClassLoader().getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue267/ClassLoadingWorksWithParentLastLoaders.java linha: 69 Método: assertThat(classGraph.getClass().getClassLoader().getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue267/ClassLoadingWorksWithParentLastLoaders.java linha: 89 Método: assertThat(((ClassLoader) classLoadersField.get(classInfo)).getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue267/ClassLoadingWorksWithParentLastLoaders.java linha: 94 Método: assertThat(aClassLoadedThroughClassGraph.getClassLoader().getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue267/ClassLoadingWorksWithParentLastLoaders.java linha: 97 Método: assertThat(a.getClass().isAssignableFrom(aClassLoadedThroughClassGraph))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue348/Issue348.java linha: 28 Método: assertThat(jarResourceUris)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue348/Issue348.java linha: 36 Método: assertThat(cpUris)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue348/Issue348.java linha: 41 Método: assertThat(jarResourceUrisMinusCpUris)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue348/Issue348.java linha: 42 Método: assertThat(jarResourceUrisMinusCpUris.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue348/Issue348.java linha: 45 Método: assertThat(cpUrisMinusJarResourceUris)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue348/Issue348.java linha: 50 Método: assertThat(leaf)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue100/Issue100Test.java linha: 71 Método: assertThat(fieldNames1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue100/Issue100Test.java linha: 87 Método: assertThat(fieldNames2)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/GenericInnerClassTypedField.java linha: 47 Método: assertThat(classRefTypeSignature.toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/GenericInnerClassTypedField.java linha: 49 Método: assertThat(classRefTypeSignature.getFullyQualifiedClassName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue314/Issue314.java linha: 40 Método: assertThat(scanResult1.getClassInfo(A.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue314/Issue314.java linha: 41 Método: assertThat(scanResult1.getClassInfo(B.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue314/Issue314.java linha: 43 Método: assertThat(json1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue314/Issue314.java linha: 46 Método: assertThat(json1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue314/Issue314.java linha: 47 Método: assertThat(scanResult1.getSubclasses(A.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue314/Issue314.java linha: 48 Método: assertThat(scanResult2.getSubclasses(A.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue303/Issue303Test.java linha: 70 Método: assertThat(packageClassNamesRecursive.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue303/Issue303Test.java linha: 71 Método: assertThat(packageClassNamesNonRecursive0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue303/Issue303Test.java linha: 72 Método: assertThat(packageClassNamesNonRecursive0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue303/Issue303Test.java linha: 73 Método: assertThat(packageClassNamesRecursive)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue303/Issue303Test.java linha: 74 Método: assertThat(packageClassNamesNonRecursive0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue368/Issue368Test.java linha: 62 Método: assertThat(json)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue368/Issue368Test.java linha: 65 Método: assertThat(deserialized.innerClassField == Issue368Test.class)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue673/Issue673Test.java linha: 19 Método: assertThat(aURL != null)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue673/Issue673Test.java linha: 21 Método: assertThat(bURL != null)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue673/Issue673Test.java linha: 25 Método: assertThat(scanResult.getClasspathFiles().stream().map(f -> f.getName()).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue673/Issue673Test.java linha: 27 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue673/Issue673Test.java linha: 32 Método: assertThat(scanResult.getClasspathFiles().stream().map(f -> f.getName()).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue673/Issue673Test.java linha: 34 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 24 Método: assertThat(scanResult.getSubclasses(Object.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 35 Método: assertThat(scanResult.getSubclasses(Object.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 36 Método: assertThat(scanResult.getSuperclasses(Impl1Sub.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 48 Método: assertThat(scanResult.getSuperclasses(InternalExtendsExternal.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 61 Método: assertThat(scanResult.getSuperclasses(InternalExtendsExternal.class.getName()).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 73 Método: assertThat(scanResult.getSubclasses(ExternalSuperclass.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/IssuesTest.java linha: 86 Método: assertThat(scanResult.getSubclasses(ExternalSuperclass.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeParameterAnnotationTest.java linha: 52 Método: assertThat(annotationInfoList.get(0).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeParameterAnnotationTest.java linha: 53 Método: assertThat(annotationInfoList.get(1).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeParameterAnnotationTest.java linha: 54 Método: assertThat(annotationInfoList.get(2).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeParameterAnnotationTest.java linha: 55 Método: assertThat(annotationInfoList.get(3).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeArgumentAnnotationTest.java linha: 56 Método: assertThat(annotationInfoList.get(0).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeArgumentAnnotationTest.java linha: 57 Método: assertThat(annotationInfoList.get(1).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeArgumentAnnotationTest.java linha: 58 Método: assertThat(annotationInfoList.get(2).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue741/TypeArgumentAnnotationTest.java linha: 59 Método: assertThat(annotationInfoList.get(3).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 109 Método: assertThat(getClassGraphMethodNames.apply(superClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 112 Método: assertThat(getClassMethodNames.apply(SuperClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 116 Método: assertThat(getClassGraphMethodNames.apply(subClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 120 Método: assertThat(getClassMethodNames.apply(SubClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 125 Método: assertThat(getClassGraphDeclaredMethodNames.apply(superClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 128 Método: assertThat(getClassDeclaredMethodNames.apply(SuperClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 133 Método: assertThat(getClassGraphDeclaredMethodNames.apply(subClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 136 Método: assertThat(getClassDeclaredMethodNames.apply(SubClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 156 Método: assertThat(getClassGraphFieldNames.apply(superClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 159 Método: assertThat(getClassFieldNames.apply(SuperClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 163 Método: assertThat(getClassGraphFieldNames.apply(subClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 168 Método: assertThat(getClassFieldNames.apply(SubClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 173 Método: assertThat(getClassGraphDeclaredFieldNames.apply(superClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 176 Método: assertThat(getClassDeclaredFieldNames.apply(SuperClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 181 Método: assertThat(getClassGraphDeclaredFieldNames.apply(subClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/DeclaredVsNonDeclaredTest.java linha: 184 Método: assertThat(getClassDeclaredFieldNames.apply(SubClass.class))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 24 Método: assertThat(FastPathResolver.resolve("", "../../x"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 25 Método: assertThat(FastPathResolver.resolve("/", "../../x"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 26 Método: assertThat(FastPathResolver.resolve("/x", "y"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 27 Método: assertThat(FastPathResolver.resolve("/x", "../y"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 28 Método: assertThat(FastPathResolver.resolve("/x", "../../y"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 29 Método: assertThat(FastPathResolver.resolve("/x/y/z", "..//..////w"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 30 Método: assertThat(FastPathResolver.resolve("/x/y/z", "//p//q"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue340/Issue340.java linha: 39 Método: assertThat(scanResult.getAllResources().stream().map(Resource::getPath).filter(path -> path.startsWith("file")).collect(Collectors.toList()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue696/Issue696.java linha: 43 Método: assertThat(paramInfo.length)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue696/Issue696.java linha: 44 Método: assertThat(paramInfo[0].getAnnotationInfo())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue696/Issue696.java linha: 45 Método: assertThat(paramInfo[1].getAnnotationInfo().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue696/Issue696.java linha: 46 Método: assertThat(paramInfo[2].getAnnotationInfo().get(0).getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue420/Issue420Test.java linha: 76 Método: assertThat(scanResult.getClassInfo("mrj.Cls"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue420/Issue420Test.java linha: 104 Método: assertThat(Files.exists(memFsCopyOfClassFile))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue420/Issue420Test.java linha: 113 Método: assertThat(scanResult.getClassInfo(classFullyQualifiedName))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 59 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/all").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 61 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/all").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 63 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/groupreadwrite").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 66 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/groupreadwrite").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 69 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/owneronlyread").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 72 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/owneronlyread").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 75 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/ownerreadwrite").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 78 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/ownerreadwrite").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 96 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/all").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 98 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/all").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 105 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/execute").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 107 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/execute").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 113 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/groupreadwrite").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 116 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/groupreadwrite").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 122 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/owneronlyread").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 125 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/owneronlyread").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 129 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/ownerreadwrite").get(0).getLastModified())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue364/Issue364Test.java linha: 132 Método: assertThat(result.getResourcesWithPath("META-INF/resources/webjars/permissions-jar/1.0.0/bin/ownerreadwrite").get(0).getPosixFilePermissions())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue209/Issue209Test.java linha: 55 Método: assertThat(result.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue209/Issue209Test.java linha: 63 Método: assertThat(result.getClassInfo("org.springframework.boot.loader.util.SystemPropertyUtils").loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue209/Issue209Test.java linha: 65 Método: assertThat(result.getClassInfo("com.foo.externalApp.ExternalAppApplication").loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue209/Issue209Test.java linha: 66 Método: assertThat(result.getClassInfo("com.foo.externalApp.SomeClass").loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue209/Issue209Test.java linha: 67 Método: assertThat(result.getClassInfo("issue209lib.Issue209Lib").loadClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue431/Issue431Test.java linha: 80 Método: assertThat(Objects.equals(classInfo1.getFieldInfo(fieldName).getConstantInitializerValue(), classInfo2.getFieldInfo(fieldName).getConstantInitializerValue()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue431/Issue431Test.java linha: 91 Método: assertThat(classInfo1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue431/Issue431Test.java linha: 95 Método: assertThat(classInfo2)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue46/Issue46Test.java linha: 51 Método: assertThat(scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 220 Método: assertThat(classInfo.getAnnotationInfo().getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 230 Método: assertThat(classInfo.getFieldInfo("testField").getAnnotationInfo().getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 233 Método: assertThat(classInfo.getMethodInfo("testMethod").get(0).getAnnotationInfo().getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 236 Método: assertThat(classInfo.getFieldInfo("testFieldWithAndWitoutDefault").getAnnotationInfo().getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 240 Método: assertThat(classInfo.getFieldInfo("testFieldWithOnlyDefault").getAnnotationInfo().getAsStrings())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 248 Método: assertThat(bananaRef.getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue153/Issue153Test.java linha: 249 Método: assertThat(bananaRef.toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue78/Issue78Test.java linha: 20 Método: assertThat(scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue166/Issue166Test.java linha: 51 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue166/Issue166Test.java linha: 62 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue166/Issue166Test.java linha: 74 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue286/Issue286Test.java linha: 52 Método: assertThat(jarURL)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue286/Issue286Test.java linha: 57 Método: assertThat(gotResult)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue352/Issue352.java linha: 30 Método: assertThat(resolvedFile)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue352/Issue352.java linha: 35 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue352/Issue352.java linha: 39 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue352/Issue352.java linha: 47 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue352/Issue352.java linha: 51 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue339/Issue339.java linha: 61 Método: assertThat(Math.abs((Double) annotationParamVals.get("points").getValue() - 0.4))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue339/Issue339.java linha: 62 Método: assertThat(Math.abs((Double) annotationParamVals.get("maxPoints").getValue() - 0.4))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue350/Issue350.java linha: 73 Método: assertThat(scanResult.getClassesWithFieldAnnotation(SuperclassAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue350/Issue350.java linha: 75 Método: assertThat(scanResult.getClassesWithMethodAnnotation(SuperclassAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue350/Issue350.java linha: 81 Método: assertThat(scanResult.getClassesWithFieldAnnotation(SuperclassAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue350/Issue350.java linha: 83 Método: assertThat(scanResult.getClassesWithMethodAnnotation(SuperclassAnnotation.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/ResolveTypeVariableTest.java linha: 34 Método: assertThat(((TypeVariableSignature) fields.get(0).getTypeSignature()).resolve().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 152 Método: assertThat(shortNames(mapField))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 153 Método: assertThat(mapField.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 157 Método: assertThat(shortNames(arrField))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 158 Método: assertThat(arrField.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 161 Método: assertThat(shortNames(comparableField))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 163 Método: assertThat(comparableField.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 167 Método: assertThat(shortNames(inner1Field))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 168 Método: assertThat(inner1Field.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 170 Método: assertThat(shortNames(classInfo.getFieldInfo("inner2")))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 173 Método: assertThat(shortNames(classInfo.getFieldInfo("inner3")))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 176 Método: assertThat(shortNames(classInfo.getFieldInfo("inner4")))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 180 Método: assertThat(shortNames(xyzField))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 181 Método: assertThat(xyzField.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 183 Método: assertThat(shortNames(classInfo.getFieldInfo("xyz2")))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 185 Método: assertThat(shortNames(classInfo.getFieldInfo("xyz3")))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 187 Método: assertThat(shortNames(classInfo.getFieldInfo("xyz4")))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 189 Método: assertThat(shortNames(classInfo.getMethodInfo("t").get(0)))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 192 Método: assertThat(classInfo.getMethodInfo("t").get(0).toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 198 Método: assertThat(shortNames(emailsField))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 199 Método: assertThat(emailsField.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 201 Método: assertThat(shortNames(((ClassRefTypeSignature) emailsField.getTypeSignatureOrTypeDescriptor()).getTypeArguments().get(0).getTypeSignature().getTypeAnnotationInfo().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 205 Método: assertThat(shortNames(personClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 206 Método: assertThat(personClassInfo.toStringWithSimpleNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 210 Método: assertThat(shortNames(pClassInfo))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue402/TypeAnnotationTest.java linha: 212 Método: assertThat(shortNames(pClassInfo.getMethodInfo("explicitReceiver").get(0).getTypeSignatureOrTypeDescriptor().getReceiverTypeAnnotationInfo().get(0)))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue255/Issue255Test.java linha: 59 Método: assertThat(resources.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue255/Issue255Test.java linha: 61 Método: assertThat(new String(byteArray))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue245/Issue245Test.java linha: 58 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue246/Issue246Test.java linha: 51 Método: assertEquals(0, scanResult.getClassInfo(Issue246Test.class.getName()).getMethodInfo().getSingleMethod("dummyMethodWithParameter").getParameterInfo()[0].getAnnotationInfo().size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue706/Issue706.java linha: 29 Método: assertThat(bypassTParamFromSuperclassArg.toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue193/Issue193Test.java linha: 60 Método: assertThat(resolvedFile)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue193/Issue193Test.java linha: 75 Método: assertThat(classes)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue384/Issue384Test.java linha: 63 Método: assertThat(scanResult.getAllResources().getPaths())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue384/Issue384Test.java linha: 64 Método: assertThat(CustomURLScheme.remappedURLs.entrySet().iterator().next())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue694/Issue694.java linha: 39 Método: assertThat(foundMethodInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/issues/issue694/Issue694.java linha: 41 Método: assertThat(foundMethods)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 42 Método: assertThat(classInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 46 Método: assertThat(getVersionStatic.invoke(null))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 49 Método: assertThat(constructor)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 51 Método: assertThat(clsInstance)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 54 Método: assertThat(getVersion.invoke(clsInstance))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 57 Método: assertThat(resources.size())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 59 Método: assertThat(new String(byteArray).trim())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 77 Método: assertThat(scanResult.getResourcesWithPath("mrj/Cls.class"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MultiReleaseJarTest.java linha: 78 Método: assertThat(scanResult.getResourcesWithPathIgnoringAccept("mrj/Cls.class"))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 89 Método: assertThat(classInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 92 Método: assertThat(X.class.isInstance(annotation))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 95 Método: assertThat(X.class.isInstance(proxyAnnotationGeneric))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 97 Método: assertThat(proxyAnnotation.b())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 98 Método: assertThat(proxyAnnotation.c())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 99 Método: assertThat(annotation.hashCode())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationEqualityTest.java linha: 100 Método: assertThat(annotation)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/ClassTypeAnnotation.java linha: 80 Método: assertThat(scanResult.getClassInfo(E.class.getName()).getTypeSignature().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/ClassTypeAnnotation.java linha: 88 Método: assertThat(scanResult.getClassInfo(F.class.getName()).getTypeSignatureOrTypeDescriptor().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/ClassTypeAnnotation.java linha: 96 Método: assertThat(scanResult.getClassInfo(G.class.getName()).getTypeSignatureOrTypeDescriptor().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/ClassTypeAnnotation.java linha: 104 Método: assertThat(scanResult.getClassInfo(H.class.getName()).getTypeSignatureOrTypeDescriptor().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/ClassTypeAnnotation.java linha: 109 Método: assertThat(scanResult.getClassInfo(I.class.getName()).getTypeSignatureOrTypeDescriptor().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EncapsulationCircumventionTest.java linha: 29 Método: assertThat(ReflectionUtils.getStaticFieldVal(true, ReflectionUtils.class, "reflectionDriver").getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EncapsulationCircumventionTest.java linha: 34 Método: assertThat(scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EncapsulationCircumventionTest.java linha: 43 Método: assertThat(ReflectionUtils.getStaticFieldVal(true, ReflectionUtils.class, "reflectionDriver").getClass().getSimpleName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EncapsulationCircumventionTest.java linha: 48 Método: assertThat(scanResult.getAllClasses().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 107 Método: assertThat(v0.getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 108 Método: assertThat(v1.getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 109 Método: assertThat(v2.getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 110 Método: assertThat(v3.getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 112 Método: assertThat(v4.getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 114 Método: assertThat(v0)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 115 Método: assertThat(v1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 116 Método: assertThat(v2)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 117 Método: assertThat(v3)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 118 Método: assertThat(Arrays.toString((Object[]) v4))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 123 Método: assertThat(annotation.v0())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 124 Método: assertThat(annotation.v1())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 125 Método: assertThat(annotation.v2())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 126 Método: assertThat(annotation.v3())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 127 Método: assertThat(annotation.v4().getClass())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 128 Método: assertThat(annotation.v4()[0].str())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/AnnotationParamWithPrimitiveTypedArrayTest.java linha: 129 Método: assertThat(annotation.v4()[0].intArray())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 127 Método: assertThat(B.getFieldInfo("x").getClassInfo().getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 128 Método: assertThat(B.getFieldInfo("z").getClassInfo().getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 129 Método: assertThat(A.getFieldInfo().get(0).getTypeDescriptor().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 130 Método: assertThat(B.getFieldInfo().get(0).getTypeDescriptor().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 131 Método: assertThat(B.getMethodInfo().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 134 Método: assertThat(B.getDeclaredMethodInfo().toString())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 153 Método: assertThat(annotationInfossOnA)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 156 Método: assertThat(annotationsInfosOnB)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 158 Método: assertThat(annotationInfossOnA.directOnly())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 160 Método: assertThat(annotationsInfosOnB.directOnly())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 161 Método: assertThat(C.getAnnotationInfo().directOnly())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 165 Método: assertThat(annotationsOnAw)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 170 Método: assertThat(annotationsOnBw)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 176 Método: assertThat(annotationsOnBw.directOnly())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 193 Método: assertThat(annotationsOnA.loadClasses())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 195 Método: assertThat(annotationsOnB.loadClasses())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 197 Método: assertThat(annotationsOnA.directOnly().loadClasses())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 199 Método: assertThat(annotationsOnB.directOnly())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 211 Método: assertThat(B.getFieldInfo("x").loadClassAndGetField().getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/DeclaredVsNonDeclaredTest.java linha: 212 Método: assertThat(B.getMethodInfo("y").get(0).loadClassAndGetMethod().getName())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/RecordTest.java linha: 34 Método: assertThat(classInfoList)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/RecordTest.java linha: 37 Método: assertThat(fieldInfo)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 39 Método: assertThat(scanResult.getAllEnums().size() == 1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 41 Método: assertThat(myEnum.getName().equals(MyEnumWithoutMethod.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 42 Método: assertThat(myEnum.getEnumConstants().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 51 Método: assertThat(scanResult.getAllEnums().size() == 1)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 53 Método: assertThat(myEnum.getName().equals(EnumWithMethod.class.getName()))
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 54 Método: assertThat(myEnum.getEnumConstants().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 55 Método: assertThat(((EnumWithMethod) myEnum.getEnumConstantObjects().get(0)).getVal())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/EnumTest.java linha: 56 Método: assertThat(((EnumWithMethod) myEnum.getEnumConstantObjects().get(1)).getVal())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MethodParameterAnnotationsTest.java linha: 67 Método: assertThat(scanResult.getClassInfo(Y.class.getName()).getMethodParameterAnnotations().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MethodParameterAnnotationsTest.java linha: 69 Método: assertThat(scanResult.getClassInfo(Z.class.getName()).getMethodParameterAnnotations().getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MethodParameterAnnotationsTest.java linha: 71 Método: assertThat(scanResult.getClassesWithMethodParameterAnnotation(W.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/io/github/classgraph/features/MethodParameterAnnotationsTest.java linha: 73 Método: assertThat(scanResult.getClassesWithMethodParameterAnnotation(X.class).getNames())
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 56 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 57 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 58 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 59 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 60 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 61 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 72 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 73 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 74 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 75 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 76 Método: assertThat(allClasses)
Assert sem descrição: /home/vitor-otto/opensource/classgraph-classgraph-4.8.155/src/test/java/DefaultPackageTest.java linha: 77 Método: assertThat(allClasses)
Total asserts: 583
Asserts sem descrição: 565
Asserts com descrição: 18
Assertion Roulette: 472
