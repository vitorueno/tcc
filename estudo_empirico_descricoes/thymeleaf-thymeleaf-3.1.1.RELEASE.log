
Projeto: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE

Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/templateparser/markup/HtmlBlockSelectorMarkupHandlerTest.java linha: 129 Método: Assertions.assertEquals(output, writer.toString(), "Test failed for file: " + templateName)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/templateparser/reader/PrototypeOnlyCommentTextReaderTest.java linha: 119 Método: Assertions.assertEquals(expected, result, "Checking: '" + message + "' (" + j + "," + k + "," + l + ")")
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/templateparser/reader/PrototypeOnlyCommentMarkupReaderTest.java linha: 120 Método: Assertions.assertEquals(expected, result, "Checking: '" + message + "' (" + j + "," + k + "," + l + ")")
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/templateparser/reader/ParserLevelCommentMarkupReaderTest.java linha: 127 Método: Assertions.assertEquals(expected, result, "Checking: '" + message + "' (" + j + "," + k + "," + l + ")")
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/templateparser/reader/ParserLevelCommentTextReaderTest.java linha: 99 Método: Assertions.assertEquals(expected, result, "Checking: '" + message + "' (" + j + "," + k + "," + l + ")")
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/engine/BareHtmlEngineTest.java linha: 99 Método: Assertions.assertEquals(output, writer.toString(), "Test failed for file: " + templateName)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/util/StringUtilsTest.java linha: 248 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> {
    Object s = "abcdef";
    StringUtils.substring(s, -2);
})
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-core/src/test/java/org/thymeleaf/util/StringUtilsTest.java linha: 258 Método: Assertions.assertThrows(IllegalArgumentException.class, () -> {
    Object s = "abcdef";
    StringUtils.substring(s, 7);
})
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 187 Método: Assertions.assertTrue(bufferCount == 1, "No limit set on buffer size, and non-data-driven: there should only be one result buffer instead of " + bufferCount)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 182 Método: Assertions.assertTrue(resultBuffer.readableByteCount() <= responseMaxChunkSizeBytes, "Buffer returned by stream is of size larger than " + responseMaxChunkSizeBytes)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 258 Método: Assertions.assertTrue(bufferCount == 1, "No limit set on buffer size, and non-data-driven: there should only be one result buffer instead of " + bufferCount)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 253 Método: Assertions.assertTrue(resultBuffer.readableByteCount() <= responseMaxChunkSizeBytes, "Buffer returned by stream is of size larger than " + responseMaxChunkSizeBytes)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 52 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e${lala}::le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 53 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e${lala} :: le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 54 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e${x} :: le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 55 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le (a=23)", mockRequest("a/e${lala} :: le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring5/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 57 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e", "p0", "${lala} :: le")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 187 Método: Assertions.assertTrue(bufferCount == 1, "No limit set on buffer size, and non-data-driven: there should only be one result buffer instead of " + bufferCount)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 182 Método: Assertions.assertTrue(resultBuffer.readableByteCount() <= responseMaxChunkSizeBytes, "Buffer returned by stream is of size larger than " + responseMaxChunkSizeBytes)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 258 Método: Assertions.assertTrue(bufferCount == 1, "No limit set on buffer size, and non-data-driven: there should only be one result buffer instead of " + bufferCount)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/spring/reactive/AbstractSpringReactiveTest.java linha: 253 Método: Assertions.assertTrue(resultBuffer.readableByteCount() <= responseMaxChunkSizeBytes, "Buffer returned by stream is of size larger than " + responseMaxChunkSizeBytes)
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 52 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e${lala}::le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 53 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e${lala} :: le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 54 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e${x} :: le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 55 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le (a=23)", mockRequest("a/e${lala} :: le//")))
Assert com mensagem: /home/vitor-otto/opensource/thymeleaf-thymeleaf-3.1.1.RELEASE/tests/thymeleaf-tests-spring6/src/test/java/org/thymeleaf/templateengine/springintegration/util/SpringRequestUtilsTest.java linha: 57 Método: Assertions.assertThrows(TemplateProcessingException.class, () -> SpringRequestUtils.checkViewNameNotInRequest("${lala} :: le", mockRequest("a/e", "p0", "${lala} :: le")))
Total asserts: 5275
Asserts sem descrição: 5249
Asserts com descrição: 26
Assertion Roulette: 4894
