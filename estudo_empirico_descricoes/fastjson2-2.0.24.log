
Projeto: /home/vitor-otto/opensource/fastjson2-2.0.24

Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/adapter/src/test/java/com/alibaba/fastjson2/adapter/jackson/databind/ObjectMapperTest1.java linha: 14 Método: assertThrows(Exception.class, () -> objectMapper.readValue(carJson, Car.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/adapter/src/test/java/com/alibaba/fastjson2/adapter/jackson/databind/ObjectMapperTest3.java linha: 64 Método: assertThrows(Exception.class, () -> mapper.readValue("{\"bean_id\":null}", Bean1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/adapter/src/test/java/com/alibaba/fastjson2/adapter/jackson/databind/ObjectMapperTest3.java linha: 68 Método: assertThrows(Exception.class, () -> mapper.readValue("{}", Bean1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/adapter/src/test/java/com/alibaba/fastjson2/adapter/jackson/databind/jackson_support/JsonPropertyTest.java linha: 86 Método: assertThrows(Exception.class, () -> JSON.parseObject("{\"bean_id\":null}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/adapter/src/test/java/com/alibaba/fastjson2/adapter/jackson/databind/jackson_support/JsonPropertyTest.java linha: 90 Método: assertThrows(Exception.class, () -> JSON.parseObject("{}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension-spring5/src/test/java/com/alibaba/fastjson2/spring/GenericFastJsonJSONBRedisSerializerTest.java linha: 49 Método: assertThrows(SerializationException.class, () -> {
    User user = new User(1, "土豆", 25);
    byte[] serializedValue = serializer.serialize(user);
    Arrays.sort(serializedValue);
    serializer.deserialize(serializedValue);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension-spring5/src/test/java/com/alibaba/fastjson2/spring/FastJsonRedisSerializerTest.java linha: 54 Método: assertThrows(SerializationException.class, () -> serializer.deserialize(serializedValue))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension-spring5/src/test/java/com/alibaba/fastjson2/spring/FastJsonJSONBRedisSerializerTest.java linha: 54 Método: assertThrows(SerializationException.class, () -> serializer.deserialize(serializedValue))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension-spring5/src/test/java/com/alibaba/fastjson2/spring/GenericFastJsonRedisSerializerTest.java linha: 49 Método: assertThrows(SerializationException.class, () -> {
    User user = new User(1, "土豆", 25);
    byte[] serializedValue = serializer.serialize(user);
    Arrays.sort(serializedValue);
    serializer.deserialize(serializedValue);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension-spring5/src/test/java/com/alibaba/fastjson2/spring/MappingFastJsonJSONBMessageConverterTest.java linha: 39 Método: assertThrows(IllegalArgumentException.class, () -> converter.setSerializedPayloadClass(String.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension-spring5/src/test/java/com/alibaba/fastjson2/issues/IssueLiXiaoFei.java linha: 15 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Object.class, JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathCompilerReflectTest.java linha: 36 Método: assertThrows(Exception.class, () -> path.remove(bean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathCompilerReflectTest.java linha: 37 Método: assertThrows(Exception.class, () -> path.extract(JSONReader.of("")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathCompilerReflectTest.java linha: 38 Método: assertThrows(Exception.class, () -> path.extractScalar(JSONReader.of("")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest.java linha: 167 Método: assertThrows(JSONException.class, () -> jsonPath.set(new Object(), new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest.java linha: 171 Método: assertThrows(JSONException.class, () -> jsonPath.set(new Object(), new Object(), JSONReader.Feature.ErrorOnEnumNotMatch))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest.java linha: 175 Método: assertThrows(JSONException.class, () -> jsonPath.setCallback(new Object(), (BiFunction) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest.java linha: 179 Método: assertThrows(JSONException.class, () -> jsonPath.setInt(new Object(), 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest.java linha: 183 Método: assertThrows(JSONException.class, () -> jsonPath.setLong(new Object(), 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest.java linha: 187 Método: assertThrows(JSONException.class, () -> jsonPath.remove(new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 25 Método: assertEquals(2, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 27 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 48 Método: assertEquals(3, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 50 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 71 Método: assertEquals(1, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 73 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 94 Método: assertEquals(2, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 96 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 117 Método: assertEquals(3, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 119 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 139 Método: assertEquals(5, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 141 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 164 Método: assertEquals(1, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 167 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class).longValue(), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 188 Método: assertEquals(2, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 190 Método: assertEquals(val, JSONB.parseObject(bytes, Number.class).longValue(), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 211 Método: assertEquals(3, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 233 Método: assertEquals(5, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 255 Método: assertEquals(9, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 259 Método: assertEquals(Byte.valueOf((byte) val), JSONB.parseObject(bytes, Byte.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 260 Método: assertEquals(Short.valueOf((short) val), JSONB.parseObject(bytes, Short.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 261 Método: assertEquals(Integer.valueOf((int) val), JSONB.parseObject(bytes, Integer.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 262 Método: assertEquals(Long.valueOf(val), JSONB.parseObject(bytes, Long.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 263 Método: assertEquals(Float.valueOf(val), JSONB.parseObject(bytes, Float.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 264 Método: assertEquals(Double.valueOf(val), JSONB.parseObject(bytes, Double.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 265 Método: assertEquals(BigInteger.valueOf(val), JSONB.parseObject(bytes, BigInteger.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 266 Método: assertEquals(BigDecimal.valueOf(val), JSONB.parseObject(bytes, BigDecimal.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 280 Método: assertEquals(2, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 303 Método: assertEquals(3, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 326 Método: assertEquals(4, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 348 Método: assertEquals(5, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 357 Método: assertEquals(Byte.valueOf((byte) val), JSONB.parseObject(bytes, Byte.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 358 Método: assertEquals(Short.valueOf((short) val), JSONB.parseObject(bytes, Short.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 378 Método: assertEquals(1, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 400 Método: assertEquals(2, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 423 Método: assertEquals(3, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 446 Método: assertEquals(4, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 468 Método: assertEquals(6, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 493 Método: assertEquals(9, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 502 Método: assertEquals(Byte.valueOf((byte) val), JSONB.parseObject(bytes, Byte.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 503 Método: assertEquals(Short.valueOf((short) val), JSONB.parseObject(bytes, Short.class), "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 525 Método: assertEquals(val.length() + 1, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/JSONBSizeTest.java linha: 534 Método: assertEquals(val.length() + 3, bytes.length, "input " + val)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/Calendar1Test.java linha: 340 Método: assertEquals(id, id2, str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/Date1Test.java linha: 342 Método: assertEquals(date0.getTime(), date1.getTime(), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/Date1Test.java linha: 363 Método: assertEquals(date0.getTime(), date1.getTime(), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/primitves/Date1Test.java linha: 390 Método: assertEquals(date0.getTime(), date1.getTime(), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/annotation/JSONFieldTest5.java linha: 90 Método: assertThrows(Exception.class, () -> JSON.parseObject("{\"bean_id\":null}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/annotation/JSONFieldTest5.java linha: 94 Método: assertThrows(Exception.class, () -> JSON.parseObject("{}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 768 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDate8())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 787 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDate9())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 844 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDate10())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 1380 Método: assertThrows(JSONException.class, () -> jsonReader.readBinary())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 1463 Método: assertThrows(JSONException.class, () -> jsonReader.nextIfMatch((byte) 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 1481 Método: assertThrows(JSONException.class, () -> JSONReader.of((InputStream) null, StandardCharsets.ISO_8859_1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 1489 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDate11())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 1493 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDate11())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest1.java linha: 1905 Método: assertEquals(epochMilli, millis, ldt.toString())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/jsonb/basic/MapTest.java linha: 49 Método: assertEquals(bytes.length, 2 + keyBytes.length, valueBytes.length)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/jsonb/EnumTest.java linha: 74 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Bean3.class, JSONReader.Feature.SupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONBTest6.java linha: 36 Método: assertThrows(IllegalArgumentException.class, () -> JSONB.parseObject(in, bytes.length + 1, Bean.class, JSONReader.Feature.SupportArrayToBean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONBTest6.java linha: 40 Método: assertThrows(IllegalArgumentException.class, () -> JSONB.parseObject(in, bytes.length + 1, (Type) Bean.class, JSONReader.Feature.SupportArrayToBean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest8.java linha: 119 Método: assertThrows(JSONException.class, () -> path.extract("{}"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest3.java linha: 36 Método: assertThrows(JSONException.class, () -> JSONObject.of("id", 1).getObject("id", Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/write/ErrorOnNoneSerializableTest.java linha: 17 Método: assertThrows(JSONException.class, () -> JSON.toJSONString(bean, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/write/ErrorOnNoneSerializableTest.java linha: 21 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(bean, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/write/ErrorOnNoneSerializableTest.java linha: 34 Método: assertThrows(JSONException.class, () -> JSON.toJSONString(bean, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/write/ErrorOnNoneSerializableTest.java linha: 38 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(bean, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/write/ErrorOnNoneSerializableTest.java linha: 42 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(bean, new JSONWriter.Context(JSONWriter.Feature.ErrorOnNoneSerializable)))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 27 Método: assertThrows(JSONException.class, () -> new ToByte((byte) 0).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 28 Método: assertThrows(JSONException.class, () -> new ToShort((short) 0).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 29 Método: assertThrows(JSONException.class, () -> new ToInteger(0).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 30 Método: assertThrows(JSONException.class, () -> new ToLong(0L).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 31 Método: assertThrows(JSONException.class, () -> new ToNumber(0L).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 32 Método: assertThrows(JSONException.class, () -> new ToFloat((float) 0).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 33 Método: assertThrows(JSONException.class, () -> new ToDouble((double) 0).apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 34 Método: assertThrows(JSONException.class, () -> new ToBigInteger().apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 35 Método: assertThrows(JSONException.class, () -> new ToBigDecimal().apply(object))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/function/ConvertTest.java linha: 36 Método: assertThrows(JSONException.class, () -> new StringToAny(Enum.class, null).apply("object"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/OneOfTest.java linha: 14 Método: assertThrows(JSONException.class, () -> JSONSchema.of(JSONObject.of("oneOf", JSONArray.of())))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/AnyOfTest.java linha: 14 Método: assertThrows(JSONException.class, () -> JSONSchema.of(JSONObject.of("anyOf", JSONArray.of())))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 28 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 45 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 62 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 79 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 96 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean4.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 113 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean5.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 130 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean6.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 147 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean7.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 164 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean8.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 181 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean9.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 198 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean10.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 215 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean11.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 232 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean12.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 249 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean13.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 266 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean14.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 283 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean15.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 297 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":[]}", Bean16.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 311 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":[]}", Bean17.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 325 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":[]}", Bean18.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 339 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":[]}", Bean19.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 373 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":{}}", Bean22.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 387 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":\"\"}", Bean23.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 401 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":{}}", Bean24.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 417 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":{\"id\":\"123\", \"name\":\"xx\"}}", Bean25.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest2.java linha: 438 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"id\":\"123\", \"name\":\"xx\"}", Bean26.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1630 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":\"too long\"}", BeanAnyOf.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1634 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":-5}", BeanAnyOf.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1679 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":2}", BeanOneOf.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1682 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":15}", BeanOneOf.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1696 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":2}", BeanOneOf2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1699 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":15}", BeanOneOf2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1733 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":\"string\"}", BeanNot.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest.java linha: 1746 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":42}", BeanNot2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 27 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 77 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 102 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 127 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean4.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 152 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean5.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 177 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean6.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 202 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean7.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 227 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean8.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 252 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean9.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 277 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean10.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 302 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean11.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 327 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean12.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 352 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean13.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 377 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean14.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 402 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":0}", Bean15.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 424 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":[]}", Bean16.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 442 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":[]}", Bean17.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 460 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"value\":\"\"}", Bean23.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/schema/JSONSchemaTest3.java linha: 484 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"id\":\"123\", \"name\":\"xx\"}", Bean26.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 12 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 19 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("/dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 26 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("//dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 33 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("///dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 40 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("////dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 47 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("/////dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 54 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("//////dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 61 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 68 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("/dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 75 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("//dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 82 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("///dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 89 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("////dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 96 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("/////dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_3600/Issue3689.java linha: 103 Método: assertThrows(JSONException.class, () -> {
    JSON.parseArray("//////dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_4200/Issue4272.java linha: 15 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_4200/Issue4272.java linha: 16 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_4200/Issue4272.java linha: 17 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.toCharArray(), Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_4200/Issue4272.java linha: 18 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.getBytes(StandardCharsets.UTF_8), Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_2900/Issue2962.java linha: 49 Método: assertEquals(vo.date.getTime(), result.date.getTime(), "timeZone " + id)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_2900/Issue2962.java linha: 50 Método: assertEquals(JSON.toJSONString(vo.date), JSON.toJSONString(result.date), "timeZone " + id)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_2900/Issue2962.java linha: 76 Método: assertEquals(vo.date.getTime(), result.date.getTime(), "timeZone " + id)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/v1issues/issue_2900/Issue2962.java linha: 77 Método: assertEquals(JSON.toJSONString(vo.date), JSON.toJSONString(result.date), "timeZone " + id)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/FieldTest.java linha: 24 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Invoker.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/FieldTest.java linha: 46 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Invoker.class, JSONReader.Feature.SupportArrayToBean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/FieldTest.java linha: 64 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, Invoker.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/FieldTest.java linha: 82 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, Invoker.class, JSONReader.Feature.SupportArrayToBean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 20 Método: assertThrows(NullPointerException.class, () -> JSONReader.of((String) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 413 Método: assertThrows(Exception.class, () -> jsonReader.readBigDecimal())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 420 Método: assertThrows(Exception.class, () -> jsonReader.readBigDecimal())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 544 Método: assertTrue(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 550 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 558 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 566 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 574 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 597 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 605 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 628 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 636 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 659 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 667 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 690 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 698 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 721 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 729 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 752 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 760 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 783 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 791 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 814 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderTest.java linha: 822 Método: assertFalse(jsonReader.hasComma(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 12 Método: assertThrows(JSONException.class, () -> to(Byte[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 13 Método: assertThrows(JSONException.class, () -> to(byte[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 14 Método: assertThrows(JSONException.class, () -> to(Short[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 15 Método: assertThrows(JSONException.class, () -> to(short[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 16 Método: assertThrows(JSONException.class, () -> to(Integer[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 17 Método: assertThrows(JSONException.class, () -> to(int[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 18 Método: assertThrows(JSONException.class, () -> to(Long[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 19 Método: assertThrows(JSONException.class, () -> to(long[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 20 Método: assertThrows(JSONException.class, () -> to(Float[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 21 Método: assertThrows(JSONException.class, () -> to(float[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 22 Método: assertThrows(JSONException.class, () -> to(Double[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 23 Método: assertThrows(JSONException.class, () -> to(double[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1047.java linha: 24 Método: assertThrows(JSONException.class, () -> to(char[].class, "[1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues_1000/Issue1058.java linha: 12 Método: assertThrows(JSONException.class, () -> JSON.parseArray("[{[]}]"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 99 Método: assertThrows(JSONException.class, () -> jsonReader.nextIfMatch('A'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 100 Método: assertThrows(JSONException.class, () -> jsonReader.readNullOrNewDate())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 101 Método: assertThrows(JSONException.class, () -> jsonReader.readNumber0())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 102 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDateTime16())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 103 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDateTime17())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 104 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalTime10())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 105 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalTime11())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 106 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDate11())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 107 Método: assertThrows(JSONException.class, () -> jsonReader.readLocalDateTime18())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 108 Método: assertThrows(JSONException.class, () -> jsonReader.readZonedDateTimeX(10))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 109 Método: assertThrows(JSONException.class, () -> jsonReader.skipLineComment())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 110 Método: assertThrows(JSONException.class, () -> jsonReader.readPattern())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 111 Método: assertThrows(JSONException.class, () -> jsonReader.nextIfMatchIdent('0', '1', '2'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 112 Método: assertThrows(JSONException.class, () -> jsonReader.nextIfMatchIdent('0', '1', '2', '3'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONReaderJSONBTest.java linha: 113 Método: assertThrows(JSONException.class, () -> jsonReader.nextIfMatchIdent('0', '1', '2', '3', '4', '5'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 18 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, ByteValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 25 Método: assertThrows(JSONException.class, () -> JSON.parseObject(jsonBytes, ByteValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 35 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, ByteValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 48 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, ShortValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 55 Método: assertThrows(JSONException.class, () -> JSON.parseObject(jsonBytes, ShortValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 65 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, ShortValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 78 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, Int1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 85 Método: assertThrows(JSONException.class, () -> JSON.parseObject(jsonBytes, Int1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 95 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, Int1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 108 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, LongValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 115 Método: assertThrows(JSONException.class, () -> JSON.parseObject(jsonBytes, LongValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 125 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, LongValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 138 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, BooleanValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 145 Método: assertThrows(JSONException.class, () -> JSON.parseObject(jsonBytes, BooleanValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 156 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, BooleanValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 168 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, FloatValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 172 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json.getBytes(), FloatValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 182 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, FloatValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 192 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json, DoubleValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 196 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json.getBytes(), DoubleValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 206 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, DoubleValue1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 233 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Bean.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 244 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string.getBytes(StandardCharsets.UTF_8), Bean.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 255 Método: assertThrows(JSONException.class, () -> JSON.parseObject(object.toJSONBBytes(JSONWriter.Feature.WriteNulls), Bean.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 350 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Bean1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 361 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string.getBytes(StandardCharsets.UTF_8), Bean1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 372 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(object.toJSONBBytes(JSONWriter.Feature.WriteNulls), Bean1.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 424 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Bean4.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 435 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string.getBytes(StandardCharsets.UTF_8), Bean4.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/ReaderFeatureErrorOnNullForPrimitivesTest.java linha: 446 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(object.toJSONBBytes(JSONWriter.Feature.WriteNulls), Bean4.class, ErrorOnNullForPrimitives))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1221 Método: assertThrows(JSONException.class, () -> proxy.f(1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1224 Método: assertThrows(JSONException.class, () -> proxy.f1(1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1234 Método: assertThrows(JSONException.class, () -> proxy.set(101))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1237 Método: assertThrows(JSONException.class, () -> proxy.get())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1240 Método: assertThrows(JSONException.class, () -> proxy.getX())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1243 Método: assertThrows(JSONException.class, () -> proxy.is())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1246 Método: assertThrows(JSONException.class, () -> proxy.x0())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1249 Método: assertThrows(JSONException.class, () -> proxy.x(0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONObjectTest.java linha: 1252 Método: assertThrows(UnsupportedOperationException.class, () -> proxy.xx(0, 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 58 Método: assertThrows(JSONException.class, () -> jsonWriter.startArray())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 59 Método: assertThrows(JSONException.class, () -> jsonWriter.writeRaw(""))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 60 Método: assertThrows(JSONException.class, () -> jsonWriter.writeComma())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 61 Método: assertThrows(JSONException.class, () -> jsonWriter.write0('A'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 62 Método: assertThrows(JSONException.class, () -> jsonWriter.writeDateTimeISO8601(2001, 1, 1, 12, 13, 14, 0, 0, true))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 63 Método: assertThrows(JSONException.class, () -> jsonWriter.writeDateYYYMMDD10(2001, 1, 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 64 Método: assertThrows(JSONException.class, () -> jsonWriter.writeTimeHHMMSS8(12, 13, 14))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 65 Método: assertThrows(JSONException.class, () -> jsonWriter.writeBase64(new byte[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 66 Método: assertThrows(JSONException.class, () -> jsonWriter.writeRaw('A'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 67 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new byte[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 68 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new byte[0], 0, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 69 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new char[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 70 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new char[0], 0, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 71 Método: assertThrows(JSONException.class, () -> jsonWriter.writeColon())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterJSONBTest.java linha: 72 Método: assertThrows(JSONException.class, () -> jsonWriter.flushTo(null, null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest.java linha: 51 Método: assertThrows(JSONException.class, () -> path.extract("{"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest.java linha: 56 Método: assertThrows(JSONException.class, () -> path.extract("{\"media\":{"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest1.java linha: 73 Método: assertThrows(JSONException.class, () -> path.extract("{"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest1.java linha: 74 Método: assertThrows(JSONException.class, () -> path.extract("{\"root\":"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest1.java linha: 75 Método: assertThrows(JSONException.class, () -> path.extract("{\"root\":{"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest1.java linha: 76 Método: assertThrows(JSONException.class, () -> path.extract("{\"root\":{\"media\":"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest1.java linha: 77 Método: assertThrows(JSONException.class, () -> path.extract("{\"root\":{\"media\":{"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/eishay/JSONPathTest1.java linha: 78 Método: assertThrows(JSONException.class, () -> path.extract("{\"root\":{\"media\":123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest3.java linha: 45 Método: assertThrows(JSONException.class, () -> jsonPath.extract("12"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest3.java linha: 258 Método: assertThrows(JSONException.class, () -> jsonPath.extract("{\"p2\":{\"x\":\"异常\"}}"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONArrayTest.java linha: 1065 Método: assertThrows(JSONException.class, () -> JSONArray.of(1, 2).toJavaList(Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONArrayTest.java linha: 1115 Método: assertThrows(JSONException.class, () -> JSONArray.of(1).getObject(0, Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/support/sql/JdbcTimeTest.java linha: 141 Método: assertEquals(d.value.toString(), d1.value.toString(), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue235.java linha: 21 Método: assertThrows(JSONException.class, () -> JSON.parseArray(json))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue235.java linha: 22 Método: assertThrows(JSONException.class, () -> JSON.parseArray(json, TModal.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue383.java linha: 41 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, Employee.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue383.java linha: 42 Método: assertThrows(JSONException.class, () -> JSON.parseArray(utf8, Employee.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue383.java linha: 43 Método: assertThrows(JSONException.class, () -> JSON.parseArray(utf8, 0, utf8.length, StandardCharsets.US_ASCII, Employee.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue383.java linha: 44 Método: assertThrows(JSONException.class, () -> TestUtils.createJSONReaderStr(str).readArray(Employee.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 35 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 39 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, Long.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 43 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, Float.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 47 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, Double.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 51 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, Number.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 55 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, String.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 59 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 65 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars, Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 69 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars, Long.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 73 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars, Float.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 77 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars, Double.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 81 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars, Number.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 85 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars, String.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 89 Método: assertThrows(JSONException.class, () -> JSON.parseArray(chars))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 95 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 99 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, Long.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 103 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, Float.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 107 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, Double.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 111 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, Number.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 115 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, String.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 119 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 124 Método: assertThrows(JSONException.class, () -> JSON.parseArray(bytes, 0, bytes.length, StandardCharsets.US_ASCII))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 129 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 134 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray(Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 139 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray(Long.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 144 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray(Float.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 149 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray(Double.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 154 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray(Number.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 159 Método: assertThrows(JSONException.class, () -> JSONReader.of(bytes, 0, bytes.length, StandardCharsets.US_ASCII).readArray(String.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 165 Método: assertThrows(JSONException.class, () -> new JSONReaderStr(str).readArray())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 170 Método: assertThrows(JSONException.class, () -> new JSONReaderStr(str).readArray(Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 175 Método: assertThrows(JSONException.class, () -> new JSONReaderStr(str).readArray(Long.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 180 Método: assertThrows(JSONException.class, () -> new JSONReaderStr(str).readArray(Float.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 185 Método: assertThrows(JSONException.class, () -> new JSONReaderStr(str).readArray(Double.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 190 Método: assertThrows(JSONException.class, () -> new JSONReaderStr(str).readArray(String.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 201 Método: assertThrows(JSONException.class, () -> jsonReader.read(new JSONArray()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 208 Método: assertThrows(JSONException.class, () -> jsonReader.readArray(new JSONArray(), Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 229 Método: assertThrows(JSONException.class, () -> jsonReader.readArray(type))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 241 Método: assertThrows(JSONException.class, () -> jsonReader.read(new JSONArray()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 248 Método: assertThrows(JSONException.class, () -> jsonReader.readArray(new JSONArray(), Integer.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 269 Método: assertThrows(JSONException.class, () -> jsonReader.readArray(type))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue709.java linha: 290 Método: assertThrows(JSONException.class, () -> jsonReader.readObject())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue597.java linha: 25 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Invoker.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue597.java linha: 47 Método: assertThrows(JSONException.class, () -> JSON.parseObject(string, Invoker.class, JSONReader.Feature.SupportArrayToBean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue597.java linha: 65 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, Invoker.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue597.java linha: 83 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(jsonbBytes, Invoker.class, JSONReader.Feature.SupportArrayToBean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue239.java linha: 75 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"longitude\":220.1552,\"latitude\":30.2741}", Point1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue239.java linha: 80 Método: assertThrows(JSONSchemaValidException.class, () -> JSONObject.of("longitude", 220.1552, "latitude", 30.2741).to(Point1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue239.java linha: 104 Método: assertThrows(JSONSchemaValidException.class, () -> JSON.parseObject("{\"longitude\":220.1552,\"latitude\":30.2741}", Point2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue239.java linha: 109 Método: assertThrows(JSONSchemaValidException.class, () -> JSONObject.of("longitude", 220.1552, "latitude", 30.2741).to(Point2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue727.java linha: 14 Método: assertThrows(JSONException.class, () -> JSON.parseObject("{\"dateTime\":\"20220-09-01 10:41:00\"}", Test.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Canal_Issue4186.java linha: 30 Método: assertThrows(JSONException.class, () -> JSON.parseObject(jsonString, Position.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Canal_Issue4186.java linha: 48 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Position.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue757.java linha: 30 Método: assertTrue(jsonReader.isEnd(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue757.java linha: 36 Método: assertTrue(jsonReader.isEnd(), jsonReader.getClass().getName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue610.java linha: 12 Método: assertThrows(JSONException.class, () -> JSON.parse("{\"bbbb\":\"cccc\"\f[+D�HPndroid 10\"}"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue997.java linha: 98 Método: assertThrows(Exception.class, () -> JSON.parseObject(string, Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue997.java linha: 99 Método: assertThrows(Exception.class, () -> JSONReader.of(string.toCharArray()).read(Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue997.java linha: 100 Método: assertThrows(Exception.class, () -> JSONReader.of(string.getBytes()).read(Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 42 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 48 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 75 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 81 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 95 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 101 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 116 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 122 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 138 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 144 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 161 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 167 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 185 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 191 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 210 Método: assertThrows(JSONException.class, () -> JSONB.toBytes(noneSerializable, JSONWriter.Feature.WriteClassName, JSONWriter.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue756.java linha: 216 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.Feature.SupportAutoType, JSONReader.Feature.ErrorOnNoneSerializable))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue410.java linha: 18 Método: assertThrows(JSONException.class, () -> JSON.parseObject(json))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 19 Método: assertThrows(JSONException.class, () -> JSON.parse(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 24 Método: assertThrows(JSONException.class, () -> JSON.parse(str.getBytes()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 29 Método: assertThrows(JSONException.class, () -> JSON.parse(str.toCharArray()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 43 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 48 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.getBytes()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 53 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.toCharArray()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 67 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, 0, str.length()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 72 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.getBytes(), 0, str.length()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 77 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.toCharArray(), 0, str.length()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 91 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, 0, str.length(), Map.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 96 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.getBytes(), 0, str.length(), Map.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 101 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.toCharArray(), 0, str.length(), Map.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 115 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 120 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str.getBytes()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue711.java linha: 125 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str.toCharArray()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue669.java linha: 13 Método: assertThrows(JSONException.class, () -> JSON.parseArray("[\"3330354\"]", Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue912.java linha: 22 Método: assertThrows(DateTimeParseException.class, () -> jsonObject.getDate("time"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue912.java linha: 27 Método: assertThrows(DateTimeParseException.class, () -> JSONObject.of("time", "2000-01-00 00:00:00").getDate("time"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue912.java linha: 31 Método: assertThrows(DateTimeParseException.class, () -> JSONObject.of("time", "2000-02-30 00:00:00").getDate("time"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue912.java linha: 35 Método: assertThrows(DateTimeParseException.class, () -> JSONObject.of("time", "2000-01-32 00:00:00").getDate("time"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue912.java linha: 39 Método: assertThrows(DateTimeParseException.class, () -> JSONObject.of("time", "2000-03-32 00:00:00").getDate("time"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue912.java linha: 43 Método: assertThrows(DateTimeParseException.class, () -> JSONObject.of("time", "2000-04-31 00:00:00").getDate("time"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue435.java linha: 40 Método: assertEquals(str, JSON.parse(json), "fail " + i)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue435.java linha: 50 Método: assertEquals(str, JSON.parse(jsonBytes), "fail " + i)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/issues/Issue435.java linha: 68 Método: assertEquals(str, JSON.parse(json), "fail " + i)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/TypeReferenceTest.java linha: 80 Método: assertThrows(NullPointerException.class, () -> TypeReference.get(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/TypeReferenceTest.java linha: 87 Método: assertThrows(NullPointerException.class, () -> error1(User.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/TypeReferenceTest.java linha: 94 Método: assertThrows(NullPointerException.class, () -> error1(User.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 309 Método: assertThrows(JSONException.class, () -> jsonWriter.writeRaw((byte) 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 310 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new byte[0], 0, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 311 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new byte[0], 0L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 312 Método: assertThrows(JSONException.class, () -> jsonWriter.startArray(0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 313 Método: assertThrows(JSONException.class, () -> jsonWriter.startArray(null, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 314 Método: assertThrows(JSONException.class, () -> jsonWriter.flushTo((OutputStream) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 315 Método: assertThrows(JSONException.class, () -> jsonWriter.flushTo(null, null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 316 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new byte[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 317 Método: assertThrows(JSONException.class, () -> jsonWriter.writeRaw(new byte[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 323 Método: assertThrows(JSONException.class, () -> jsonWriter.writeRaw(new char[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 324 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new char[0]))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 325 Método: assertThrows(JSONException.class, () -> jsonWriter.writeNameRaw(new char[0], 0, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 326 Método: assertThrows(JSONException.class, () -> jsonWriter.writeTypeName(""))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONWriterTest.java linha: 327 Método: assertThrows(JSONException.class, () -> jsonWriter.writeTypeName(new byte[0], 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/features/NotSupportAutoTypeErrorTest.java linha: 20 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Object.class, JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/features/NotSupportAutoTypeErrorTest.java linha: 27 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Object.class, JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest1.java linha: 414 Método: assertThrows(JSONException.class, () -> {
    segment.setCallback(context, (obj, v) -> {
        return v;
    });
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/jackson_support/JsonPropertyTest.java linha: 86 Método: assertThrows(Exception.class, () -> JSON.parseObject("{\"bean_id\":null}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/jackson_support/JsonPropertyTest.java linha: 90 Método: assertThrows(Exception.class, () -> JSON.parseObject("{}", Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeTest48.java linha: 16 Método: assertThrows(JSONException.class, () -> {
    JSON.parse((String) JSONB.parse(Base64.getDecoder().decode("eThueyJAdHlwZSI6Iltjb20uc3VuLnJvd3NldC5KZGJjUm93U2V0SW1wbCIsWyJkYXRhU291cmNlTmFtZSI6ImxkYXA6Ly8xMjcuMC4wLjE6MTM4OS9qcnRmbnkiLCJhdXRvQ29tbWl0Ijp0cnVlXX0=")), JSONReader.Feature.SupportAutoType);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 23 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Object.class, filter, JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 36 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Object.class, filter, JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 47 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 93 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 139 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 185 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 231 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 267 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 303 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 339 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 375 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 411 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 447 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 493 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 538 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 583 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 628 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 673 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 718 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/autoType/AutoTypeFilterTest2.java linha: 753 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes, Object.class, JSONReader.autoTypeFilter("Object"), JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 127 Método: assertThrows(JSONException.class, () -> jsonPath.set(new Object(), 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 131 Método: assertThrows(JSONException.class, () -> jsonPath.set(new Object(), 1, JSONReader.Feature.DuplicateKeyValueAsArray))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 135 Método: assertThrows(JSONException.class, () -> jsonPath.setCallback(null, (Function) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 139 Método: assertThrows(JSONException.class, () -> jsonPath.setCallback(null, (BiFunction) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 143 Método: assertThrows(JSONException.class, () -> jsonPath.setInt(null, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 147 Método: assertThrows(JSONException.class, () -> jsonPath.setLong(null, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 158 Método: assertThrows(JSONException.class, () -> jsonPath.isRef())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 162 Método: assertThrows(JSONException.class, () -> jsonPath.contains(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 166 Método: assertThrows(JSONException.class, () -> jsonPath.eval(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 170 Método: assertThrows(JSONException.class, () -> jsonPath.extract((JSONReader) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 174 Método: assertThrows(JSONException.class, () -> jsonPath.extractScalar((JSONReader) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 178 Método: assertThrows(JSONException.class, () -> jsonPath.set(new Object(), 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 182 Método: assertThrows(JSONException.class, () -> jsonPath.set(new Object(), 1, JSONReader.Feature.DuplicateKeyValueAsArray))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 186 Método: assertThrows(JSONException.class, () -> jsonPath.setCallback(new Object(), (BiFunction) null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 190 Método: assertThrows(JSONException.class, () -> jsonPath.setInt(new Object(), 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 194 Método: assertThrows(JSONException.class, () -> jsonPath.setLong(new Object(), 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTest7.java linha: 198 Método: assertThrows(JSONException.class, () -> jsonPath.remove(new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 99 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 100 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str, JSONReader.Feature.ErrorOnNotSupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 101 Método: assertThrows(JSONException.class, () -> JSON.parseArray(str.toCharArray()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 104 Método: assertThrows(JSONException.class, () -> JSON.parseArray(strBytes, 0, strBytes.length, StandardCharsets.UTF_8))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 115 Método: assertThrows(JSONException.class, () -> JSON.parseObject("{\"date\":\"20180131022733000-0800\"}", (Type) Date1.class, ""))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 134 Método: assertThrows(JSONException.class, () -> JSON.parseObject("{\"date\":\"20180131022733000-0800\"}".getBytes(StandardCharsets.UTF_8), (Type) Date1.class, ""))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 148 Método: assertThrows(JSONException.class, () -> JSON.parseObject(new ByteArrayInputStream(dateBytes), Date1.class, ""))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 1005 Método: assertThrows(JSONException.class, () -> JSON.writeTo(out, JSONObject.of("id", 123)))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 1010 Método: assertThrows(JSONException.class, () -> JSON.writeTo(out, JSONObject.of("id", 123), new Filter[] { new NameFilter() {

    @Override
    public String process(Object object, String name, Object value) {
        throw new UnsupportedOperationException();
    }
} }))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 1020 Método: assertThrows(JSONException.class, () -> JSON.writeTo(out, JSONObject.of("id", 123), "", new Filter[] { new NameFilter() {

    @Override
    public String process(Object object, String name, Object value) {
        throw new UnsupportedOperationException();
    }
} }))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 1091 Método: assertThrows(JSONException.class, () -> JSON.config(JSONReader.Feature.SupportAutoType))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONTest.java linha: 1092 Método: assertThrows(JSONException.class, () -> JSON.config(JSONReader.Feature.SupportAutoType, true))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 54 Método: assertThrows(Exception.class, () -> JSON.parseObject(str, Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 55 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.toCharArray(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 56 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.getBytes(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 97 Método: assertThrows(Exception.class, () -> JSON.parseObject(str, Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 98 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.toCharArray(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 99 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.getBytes(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 105 Método: assertThrows(Exception.class, () -> JSON.parseObject(str, Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 106 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.toCharArray(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 107 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.getBytes(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 148 Método: assertThrows(Exception.class, () -> JSON.parseObject(str, Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 149 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.toCharArray(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 150 Método: assertThrows(Exception.class, () -> JSON.parseObject(str.getBytes(), Date.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 286 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime("3 AAA 2008 11:05:30"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 287 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime("13 AAA 2008 11:05"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 288 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime("3 AAA 2008 11:05"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 289 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime("13 AAA 2008 11:05:30"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 294 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("3 AAA 2008 11:05"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 295 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("3 AAA 2008 11:05:30"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 296 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("13 AAA 2008 11:05"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 297 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("13 AAA 2008 11:05:30"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 321 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate("3 AAA 2008"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/time/EnglishDateTest.java linha: 322 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate("13 AAA 2008"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 19 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 47 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 48 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 49 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 50 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 51 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 80 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 81 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 82 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 83 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFuncTest.java linha: 84 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 31 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 62 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 63 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 64 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 96 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 97 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FuncTest.java linha: 98 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 42 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 70 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 71 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 72 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 73 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 74 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 75 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 76 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Date()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 191 Método: assertThrows(JSONException.class, () -> objectReader.readObject(JSONReader.of("{\"id\":101, \"value\":\"xxx\"}")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFuncTest.java linha: 226 Método: assertThrows(Exception.class, () -> objectReader.readObject(JSONReader.of("{\"id\":101, \"value\":\"xxx\"}")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 19 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 47 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 48 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 49 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 50 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 51 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 67 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 68 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 69 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 70 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 71 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 100 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 101 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 102 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 103 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFuncTest.java linha: 104 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 25 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 55 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 86 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 87 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFuncTest.java linha: 88 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 50 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 51 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 83 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 84 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 85 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 86 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueFuncTest.java linha: 87 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 55 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 72 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 73 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 74 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 75 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 76 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 106 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 107 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 108 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 109 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFuncTest.java linha: 110 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderListMethodTest.java linha: 27 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderListMethodTest.java linha: 64 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 25 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 69 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 124 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 169 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 211 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, epochMilli))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 230 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 275 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 315 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, epochMilli))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 330 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 380 Método: assertThrows(Exception.class, () -> fieldReader.accept(null, instant))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateTest.java linha: 422 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, epochMilli))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFieldTest.java linha: 34 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 43 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 44 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 45 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 66 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 67 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalMethodTest.java linha: 68 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 55 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, Integer.valueOf(123)))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 85 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 86 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 87 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 88 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFuncTest.java linha: 89 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 50 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 51 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 70 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 71 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 72 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 73 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 74 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 103 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 104 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 105 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 106 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FuncTest.java linha: 107 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueFuncTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatValueFieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFieldTest.java linha: 34 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16MethodTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 25 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 65 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 66 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 67 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 68 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 69 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 70 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 111 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 112 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 113 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 114 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 115 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32ValueMethodTest.java linha: 116 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 31 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 60 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 61 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 62 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 63 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 64 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFuncTest.java linha: 65 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 55 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 72 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 73 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 74 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 75 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 76 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 106 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 107 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 108 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 109 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderFloatFuncTest.java linha: 110 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueMethodTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64MethodTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8MethodTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 50 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 51 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 83 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 84 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 85 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 86 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32FuncTest.java linha: 87 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 41 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 42 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 43 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 44 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 45 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FieldTest.java linha: 46 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 43 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 44 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 45 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 66 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 67 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerMethodTest.java linha: 68 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFieldTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigDecimalFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 25 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 48 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 77 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 78 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 79 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 80 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 81 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFuncTest.java linha: 82 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 55 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 72 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 73 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 74 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 75 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 76 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 106 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 107 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 108 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 109 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleFuncTest.java linha: 110 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderListFuncTest.java linha: 28 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderListFuncTest.java linha: 53 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderListFuncTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64FieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderTest.java linha: 55 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 'A'))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderTest.java linha: 73 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderTest.java linha: 74 Método: assertThrows(Exception.class, () -> fieldReader.readFieldValue(JSONReader.of("1"), bean))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt32MethodTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFieldTest.java linha: 42 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFieldTest.java linha: 139 Método: assertThrows(JSONException.class, () -> objectReader.readObject(JSONReader.of("{\"id\":101, \"value\":\"xxx\"}")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateFieldTest.java linha: 166 Método: assertThrows(Exception.class, () -> objectReader.readObject(JSONReader.of("{\"id\":101, \"value\":\"xxx\"}")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 42 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 70 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 71 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 72 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 73 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 74 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 75 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 76 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Date()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 191 Método: assertThrows(JSONException.class, () -> objectReader.readObject(JSONReader.of("{\"id\":101, \"value\":\"xxx\"}")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDateMethodTest.java linha: 226 Método: assertThrows(Exception.class, () -> objectReader.readObject(JSONReader.of("{\"id\":101, \"value\":\"xxx\"}")))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 31 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 60 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 61 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 62 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 63 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 64 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFuncTest.java linha: 65 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFieldTest.java linha: 34 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderDoubleValueFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 31 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 62 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 63 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 64 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 96 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 97 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFuncTest.java linha: 98 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderObjectFieldTest.java linha: 40 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderObjectFieldTest.java linha: 43 Método: assertThrows(Exception.class, () -> fr8.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderObjectFieldTest.java linha: 100 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderObjectFieldTest.java linha: 103 Método: assertThrows(Exception.class, () -> fr8.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt64ValueFieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderCharValueFieldTest.java linha: 24 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 24 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 52 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 83 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 84 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFuncTest.java linha: 85 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16FieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 60 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 93 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 94 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueMethodTest.java linha: 95 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 59 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, Integer.valueOf(123)))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 88 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 89 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 90 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 91 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringMethodTest.java linha: 92 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanFieldTest.java linha: 28 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 32 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 61 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 62 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 63 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 64 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 65 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 66 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 96 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 97 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 98 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 99 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 100 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8FuncTest.java linha: 101 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFieldTest.java linha: 23 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBigIntegerFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 25 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 53 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "95"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 54 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, (short) 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 55 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 56 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 57 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 58 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 95D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 87 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 88 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 89 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, (short) 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 90 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 91 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt8ValueMethodTest.java linha: 92 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/ObjectArrayReaderTest.java linha: 63 Método: assertThrows(JSONException.class, () -> JSON.parseObject("{\"value\":[a}", Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/ObjectArrayReaderTest.java linha: 64 Método: assertThrows(JSONException.class, () -> JSON.parseObject("{\"value\":{}}", Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderBooleanValueFieldTest.java linha: 27 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 54 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 55 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 56 Método: assertThrows(Exception.class, () -> fieldReader.accept(bean, Integer.valueOf(123)))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 77 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 78 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 79 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 80 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderStringFieldTest.java linha: 81 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/ObjectReaderBaseModuleTest.java linha: 27 Método: assertThrows(JSONException.class, () -> impl.createInstance(0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFieldTest.java linha: 22 Método: assertThrows(JSONException.class, () -> fieldReader.accept(bean, new Object()))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFieldTest.java linha: 35 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, "123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFieldTest.java linha: 36 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFieldTest.java linha: 37 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123L))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFieldTest.java linha: 38 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123F))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/reader/FieldReaderInt16ValueFieldTest.java linha: 39 Método: assertThrows(JSONSchemaValidException.class, () -> fieldReader.accept(bean, 123D))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 119 Método: assertThrows(JSONException.class, () -> provider.checkAutoType(longTypeName, null, 0), "autoType is not support. " + longTypeName)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 138 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("java.lang.Short", String.class, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 142 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("java.lang.Short", String.class, JSONReader.Feature.SupportAutoType.mask))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 152 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("java.lang.Thread", Object.class, 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 159 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("java.lang.Long", String.class, JSONReader.Feature.SupportAutoType.mask))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 164 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("com.alibaba.fastjson2.read.ObjectReaderProviderTest$MyDataSource", DataSource.class, JSONReader.Feature.SupportAutoType.mask))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 169 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("com.alibaba.fastjson2.read.ObjectReaderProviderTest$MyRowSet", RowSet.class, JSONReader.Feature.SupportAutoType.mask))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/ObjectReaderProviderTest.java linha: 176 Método: assertThrows(JSONException.class, () -> provider.checkAutoType("com.alibaba.fastjson2.read.ObjectReaderProviderTest$B", C.class, JSONReader.Feature.SupportAutoType.mask))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 15 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean1.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 39 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean1P.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 53 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean2.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 68 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean3.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 84 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean4.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 101 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean5.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 119 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean6.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 138 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean7.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 158 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean8.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/read/SingleItemListTest.java linha: 179 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean8P.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest.java linha: 157 Método: assertThrows(JSONException.class, () -> {
    context.current.eval(context);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest.java linha: 516 Método: assertThrows(JSONException.class, () -> {
    context1.current.accept(JSONReader.of("aaaaaa"), context1);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest.java linha: 520 Método: assertThrows(JSONException.class, () -> {
    context2.current.accept(JSONReader.of("%%%"), context2);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest.java linha: 564 Método: assertThrows(JSONException.class, () -> {
    context.current.set(context, 100);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest.java linha: 581 Método: assertThrows(JSONException.class, () -> {
    context.current.setCallback(context, (root, value) -> {
        return (int) value + 10;
    });
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathSegmentIndexTest.java linha: 605 Método: assertThrows(JSONException.class, () -> {
    context.current.set(context, 100);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONBTest.java linha: 51 Método: assertNotNull(object, type.getTypeName())
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONBTest.java linha: 1091 Método: assertThrows(JSONException.class, () -> JSONB.parseObject(bytes))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/JSONPathTypedMultiTest5.java linha: 91 Método: assertThrows(JSONException.class, () -> jsonPath.extract("{\"dy\":\"ZGluZ3hpYW9ibw==\"}"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 311 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("202212X"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 312 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate("202212X", 0, 7))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 548 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("6 XXX 2021"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 549 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate("6 XXX 2021"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 550 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate("6 XXX 2021", 0, 15))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 551 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate10("6 XXX 2021", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 556 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 557 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate("16 XXX 2021", 0, 11))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 558 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDate11("16 XXX 2021", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 584 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("6 XXX 2021 1:2:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 585 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011X12"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 586 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011X12-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 587 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-12X03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 588 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-12-03X01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 589 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-12-03+01X00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 590 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("201X-12-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 591 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("20X1-12-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 592 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2X11-12-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 593 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("X011-12-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 594 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-X2-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 595 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-1X-03+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 596 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-12-X3+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 597 Método: assertThrows(Exception.class, () -> DateUtils.parseZonedDateTime16("2011-12-0X+01:00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 642 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 1:2:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 643 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("1 XXX 2021 11:2:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 644 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("1 XXX 2021 1:12:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 645 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("1 XXX 2021 1:2:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 730 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 11:2:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 731 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 1:12:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 732 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 1:2:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 733 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("6 XXX 2021 1:12:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 734 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("6 XXX 2021 11:2:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 735 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("6 XXX 2021 11:12:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 800 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("6 XXX 2021 11:12:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 801 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 1:12:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 802 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 11:2:13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 803 Método: assertThrows(Exception.class, () -> DateUtils.parseDate("16 XXX 2021 11:12:3"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 838 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("16_Dec 1960 12:13:14", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 839 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("16 Dec_1960 12:13:14", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 840 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("16 Dec 1960_12:13:14", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 841 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("16 Dec 1960 12_13:14", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 842 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("16 Dec 1960 12:13_14", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 843 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("16 Dec 1960 32:13:14", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 844 Método: assertThrows(Exception.class, () -> DateUtils.parseLocalDateTime20("6 XXX 2021", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 917 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate8("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 919 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("A0000000"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 920 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000A000"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 921 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("20001300"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 922 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("200001A0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 923 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("20000100"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 924 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("20000140"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 931 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate9("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 933 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("A000-0-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 934 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-A-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 935 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-1-40"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 936 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 937 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 938 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-13-1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 939 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000A13-1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 957 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate10("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 959 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000A00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 960 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("A000-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 961 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2A00-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 962 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("20A0-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 963 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("200A-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 964 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("$000-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 965 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2$00-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 966 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("20$0-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 967 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("200$-00-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 968 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("A000/00/00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 969 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("00.00.A000"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 970 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("00-00-A000"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 971 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-0A-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 972 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-A0-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 973 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-0$-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 974 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-$0-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 975 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-40"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 976 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-0A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 977 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-A0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 978 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 979 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-$0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 980 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-01-00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 981 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000-13-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 982 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000A13-01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 983 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年1月40日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 984 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年13月1日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 985 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000년1월40일"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 986 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000년13월1일"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 993 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate11("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 995 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("A000年00月00日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 996 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年00月00日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 997 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年20月00日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 998 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年A0月00日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 999 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年0A月00日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1000 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年10月40日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1001 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年10月A0日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1002 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年10月0A日"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1003 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000年10月40A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1004 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDate("2000년00월00일"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1062 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("xxxx"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1067 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime12("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1069 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("202A01021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1070 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20A001021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1071 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2A0001021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1072 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A00001021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1074 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$00001021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1075 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2$0001021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1076 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20$001021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1077 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200$01021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1079 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000A0021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1080 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000A021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1081 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000$0021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1082 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000$021213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1084 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010A1213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1085 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001A01213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1086 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010$1213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1087 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001$01213"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1089 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101A013"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1090 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001010A13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1091 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101$013"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1092 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001010$13"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1094 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101010A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1095 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010101A0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1096 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101010$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1097 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010101$0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1102 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime14("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1104 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A0000101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1105 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("0A000101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1106 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("00A00101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1107 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("000A0101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1109 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$0000101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1110 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("0$000101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1111 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("00$00101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1112 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("000$0101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1114 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000A101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1115 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000A01010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1116 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000$101010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1117 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000$01010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1119 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001A1010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1120 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010A010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1121 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001$1010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1122 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010$010101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1124 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101A00101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1125 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001010A0101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1126 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101$00101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1127 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001010$0101"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1129 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010101A001"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1130 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101010A01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1131 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010101$001"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1132 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101010$01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1134 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001010101A0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1135 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010101010A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1136 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001010101$0"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1137 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010101010$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1142 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime16("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1144 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101X010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1146 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A0000101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1147 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("0A000101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1148 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("00A00101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1149 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("000A0101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1150 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$0000101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1151 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("0$000101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1152 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("00$00101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1153 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("000$0101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1155 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000A101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1156 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000A01T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1157 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000$101T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1158 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000$01T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1160 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001A1T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1161 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010AT010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1162 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200001$1T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1163 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000010$T010101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1165 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101TA00101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1166 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T0A0101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1167 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T$00101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1168 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T0$0101Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1170 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T01A001Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1171 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T010A01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1172 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T01$001Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1173 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T010$01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1175 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T0101A0Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1176 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T01010AZ"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1177 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T0101$0Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1178 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20000101T01010$Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1183 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime17("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1185 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1186 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:01X"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1188 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A000-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1189 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2A00-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1190 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20A0-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1191 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200A-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1193 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$000-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1194 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2$00-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1195 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20$0-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1196 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200$-01-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1198 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-A1-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1199 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0A-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1200 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-$1-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1201 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0$-01T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1203 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-A1T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1204 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-0AT01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1205 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-$1T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1206 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-0$T01:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1208 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01TA1:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1209 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T0A:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1210 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T$1:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1211 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T0$:01Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1213 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:A1Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1214 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:0AZ"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1215 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:$1Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1216 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:0$Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1219 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-1 01:01:A1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1220 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-1 01:01:0A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1221 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-1 01:01:$1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1222 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-1 01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1227 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime18("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1229 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01X01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1230 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01A01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1232 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A000-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1233 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2A00-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1234 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20A0-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1235 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200A-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1237 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$000-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1238 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2$00-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1239 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20$0-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1240 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200$-1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1242 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-A1-1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1243 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0A-1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1244 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-$1-1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1245 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0$-1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1247 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-A1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1248 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-0AT01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1249 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-$1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1250 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-0$T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1252 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01TA1:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1253 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T0A:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1254 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T$1:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1255 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T0$:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1257 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T01:A1:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1258 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T01:0A:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1259 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T01:$1:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1260 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01T01:0$:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1263 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01 01:01:A1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1264 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01 01:01:0A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1265 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01 01:01:$1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1266 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-1-01 01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1271 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime19("00", 0))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1273 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1274 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01A01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1276 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A000-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1277 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2A00-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1278 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20A0-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1279 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200A-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1281 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$000-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1282 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2$00-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1283 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20$0-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1284 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200$-01-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1286 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-A1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1287 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0A-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1288 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-$1-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1289 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0$-01T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1291 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-A1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1292 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-0AT01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1293 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-$1T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1294 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-0$T01:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1296 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01TA1:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1297 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T0A:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1298 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T$1:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1299 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T0$:01:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1301 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:A1:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1302 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:0A:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1303 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:$1:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1304 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:0$:01"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1307 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:A1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1308 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:0A"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1309 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:$1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1310 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1312 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000/01/01 01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1313 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000/01/01T01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1314 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("01/01/2000 01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1315 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("01/01/2000T01:01:0$"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1323 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTimeX("00", 0, 1))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1325 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1326 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.12"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1327 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1328 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.1234"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1329 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.12345"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1330 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.123456"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1331 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.1234567"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1332 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.12345678"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1333 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01X01:01:01.123456789"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1335 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01A01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1337 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("A000-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1338 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2A00-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1339 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20A0-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1340 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200A-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1342 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("$000-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1343 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2$00-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1344 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("20$0-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1345 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("200$-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1347 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-A1-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1348 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0A-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1349 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-$1-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1350 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-0$-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1352 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-A1T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1353 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-0AT01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1354 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-$1T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1355 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-0$T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1357 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01TA1:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1358 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T0A:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1359 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T$1:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1360 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T0$:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1362 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:A1:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1363 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:0A:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1364 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:$1:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1365 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01T01:0$:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1368 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:A1.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1369 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:0A.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1370 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:$1.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1371 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000-01-01 01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1373 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000/01/01 01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1374 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("2000/01/01T01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1375 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("01/01/2000 01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1376 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseLocalDateTime("01/01/2000T01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1384 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("00"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1386 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.1"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1387 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.12"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1388 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1389 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.1234"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1390 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.12345"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1391 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.123456"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1392 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.1234567"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1393 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.12345678"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1394 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01X01:01:01.123456789"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1396 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01A01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1398 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("A000-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1399 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2A00-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1400 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("20A0-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1401 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("200A-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1403 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("$000-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1404 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2$00-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1405 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("20$0-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1406 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("200$-01-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1408 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-A1-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1409 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-0A-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1410 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-$1-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1411 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-0$-01T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1413 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-A1T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1414 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-0AT01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1415 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-$1T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1416 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-0$T01:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1418 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01TA1:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1419 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T0A:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1420 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T$1:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1421 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T0$:01:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1423 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T01:A1:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1424 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T01:0A:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1425 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T01:$1:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1426 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01T01:0$:01.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1429 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01 01:01:A1.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1430 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01 01:01:0A.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1431 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01 01:01:$1.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1432 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-01 01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1434 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000/01/01 01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1435 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000/01/01T01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1436 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("01/01/2000 01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1437 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("01/01/2000T01:01:0$.123"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1439 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-0A 01:01:01+800"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1440 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-0A 01:01:01.123Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1441 Método: assertThrows(DateTimeException.class, () -> DateUtils.parseZonedDateTime("2000-01-0A 01:01:01.123456789Z"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1460 Método: assertEquals(of, LocalDateTime.of(DateUtils.parseLocalDate9(str, 0), LocalTime.MIN), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1465 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 9), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1504 Método: assertEquals(of, LocalDateTime.of(DateUtils.parseLocalDate9(str, 0), LocalTime.MIN), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1509 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 9), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1534 Método: assertEquals(of, LocalDateTime.of(DateUtils.parseLocalDate9(str, 0), LocalTime.MIN), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1539 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 9), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1579 Método: assertEquals(of, LocalDateTime.of(DateUtils.parseLocalDate10(str, 0), LocalTime.MIN), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1584 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 10), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1624 Método: assertEquals(of, LocalDateTime.of(DateUtils.parseLocalDate11(str, 0), LocalTime.MIN), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1629 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 11), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1672 Método: assertEquals(of, DateUtils.parseLocalDateTime16(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1677 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 16), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1721 Método: assertEquals(of, DateUtils.parseLocalDateTime16(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1726 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 16), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1782 Método: assertEquals(of, DateUtils.parseLocalDateTime18(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1787 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 18), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1831 Método: assertEquals(of, DateUtils.parseLocalDateTime18(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1836 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 18), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1879 Método: assertEquals(of, DateUtils.parseLocalDateTime18(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1884 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 18), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1927 Método: assertEquals(of, DateUtils.parseLocalDateTime18(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1932 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 18), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1975 Método: assertEquals(of, DateUtils.parseLocalDateTime18(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 1980 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 18), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2024 Método: assertEquals(of, DateUtils.parseLocalDateTime19(str, 0), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2029 Método: assertEquals(of, DateUtils.parseLocalDateTime(str, 0, 19), str)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2170 Método: assertThrows(NullPointerException.class, () -> DateUtils.parseMillis19(null, null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2171 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("xxx", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2173 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("A000-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2174 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2A00-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2175 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("20A0-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2176 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("200A-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2177 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-A1-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2178 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-0A-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2179 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-A2 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2180 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-0A 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2181 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 A3:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2182 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 0A:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2183 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:A4:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2184 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:0A:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2185 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:04:A5", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2186 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:04:0A", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2188 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("$000-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2189 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2$00-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2190 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("20$0-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2191 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("200$-01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2192 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-$1-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2193 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-0$-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2194 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-$2 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2195 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-0$ 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2196 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 $3:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2197 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 0$:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2198 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:$4:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2199 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:0$:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2200 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:04:$5", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2201 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:04:0$", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2203 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000X01-02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2204 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01X02 03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2205 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02X03:04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2206 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03X04:05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2207 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02 03:04X05", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/DateUtilsTest.java linha: 2208 Método: assertThrows(DateTimeParseException.class, () -> DateUtils.parseMillis19("2000-01-02T03:04:0A", null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/BeanUtilsTest.java linha: 72 Método: assertThrows(Exception.class, () -> BeanUtils.setterName("setUserId", "x"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/BeanUtilsTest.java linha: 73 Método: assertThrows(Exception.class, () -> BeanUtils.getterName("setUserId", "x"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/BeanUtilsTest.java linha: 74 Método: assertThrows(Exception.class, () -> BeanUtils.fieldName("setUserId", "x"))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/BeanUtilsTest.java linha: 173 Método: assertThrows(Exception.class, () -> new BeanUtils.WildcardTypeImpl(new Type[] { null }, new Type[] { Object.class }))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/core/src/test/java/com/alibaba/fastjson2/util/BeanUtilsTest.java linha: 177 Método: assertThrows(Exception.class, () -> new BeanUtils.WildcardTypeImpl(new Type[] { Object.class }, new Type[] { null }))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 12 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 19 Método: assertThrows(com.alibaba.fastjson2.JSONException.class, () -> {
    JSONArray.parseArray("/dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 26 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("//dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 33 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("///dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 40 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("////dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 47 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("/////dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 54 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("//////dfdfdf");
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 61 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 68 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("/dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 75 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("//dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 82 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("///dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 89 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("////dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 96 Método: assertThrows(com.alibaba.fastjson.JSONException.class, () -> {
    JSONArray.parseArray("/////dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_3600/Issue3689.java linha: 103 Método: assertThrows(JSONException.class, () -> {
    JSONArray.parseArray("//////dfdfdf", String.class);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/JSONPathTest.java linha: 32 Método: assertThrows(Exception.class, () -> JSONPath.compile(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/JSONObjectTest.java linha: 525 Método: assertThrows(IllegalArgumentException.class, () -> new JSONObject(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/support/spring/FastJsonRedisSerializerTest.java linha: 55 Método: assertThrows(SerializationException.class, () -> serializer.deserialize(serializedValue))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/support/spring/GenericFastJsonRedisSerializerTest.java linha: 52 Método: assertThrows(SerializationException.class, () -> {
    User user = new User(1, "土豆", 25);
    byte[] serializedValue = serializer.serialize(user);
    Arrays.sort(serializedValue);
    serializer.deserialize(serializedValue);
})
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/support/jaxrs/FastJsonAutoDiscoverableTest.java linha: 11 Método: assertThrows(Exception.class, () -> obj.configure(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_4200/Issue4272.java linha: 15 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_4200/Issue4272.java linha: 16 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_4200/Issue4272.java linha: 17 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.toCharArray(), Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_4200/Issue4272.java linha: 18 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str.getBytes(StandardCharsets.UTF_8), Bean.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_2900/Issue2962.java linha: 51 Método: assertEquals(vo.date.getTime(), result.date.getTime(), "timeZone " + id)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/issue_2900/Issue2962.java linha: 52 Método: assertEquals(JSON.toJSONString(vo.date), JSON.toJSONString(result.date), "timeZone " + id)
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/parser/DefaultJSONParserTest.java linha: 171 Método: assertThrows(Exception.class, () -> parser.accept(token))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/JSONTest.java linha: 772 Método: assertThrows(JSONException.class, () -> JSON.parseArray("[", Long.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/v2issues/Issue369.java linha: 18 Método: assertThrows(JSONException.class, () -> JSON.parseObject(str, Class.class))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/fastjson1-compatible/src/test/java/com/alibaba/fastjson/util/TypeUtilsTest.java linha: 34 Método: assertThrows(Exception.class, () -> TypeUtils.cast(new Object(), (Type) HashMap.class, ParserConfig.global))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension/src/test/java/com/alibaba/fastjson2/retrofit/Retrofit2ConverterFactoryTest.java linha: 17 Método: assertThrows(NullPointerException.class, () -> Retrofit2ConverterFactory.create(null))
Assert com mensagem: /home/vitor-otto/opensource/fastjson2-2.0.24/extension/src/test/java/com/alibaba/fastjson2/retrofit/Retrofit2ConverterFactoryTest.java linha: 42 Método: assertThrows(NullPointerException.class, () -> Retrofit2ConverterFactory.create().responseBodyConverter(null, null, null).convert(null))
Total asserts: 20392
Asserts sem descrição: 18920
Asserts com descrição: 1472
Assertion Roulette: 16241
