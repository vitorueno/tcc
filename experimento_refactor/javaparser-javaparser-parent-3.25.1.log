"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result0 + " <type.describe()>"
"Era esperado que o tempo de execução " + result1 + " <Duration.ofMillis(1000L)> não fosse ultrapassado, mas foi"
"Era esperado verdadeiro, mas " + result2 + " <fae.calculateResolvedType().describe().equals('java.lang.String')> é falso"
"Era esperado verdadeiro, mas " + result3 + " <value.getName().equals('AFIELD')> é falso"
"Era esperado valores iguais, mas  'a' é diferente de " + result4 + " <fd.get().getVariable(0).getInitializer().get().asStringLiteralExpr().getValue()>"
"Era esperado valores iguais, mas  'X.A.bar' é diferente de " + result5 + " <mce.resolve().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Runnable' é diferente de " + result6 + " <resolved.getParam(0).getType().describe()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'MyAnnotation' é diferente de " + result7 + " <declaration.getNameAsString()>"
"Era esperado valores iguais, mas  'MyAnnotationWithElements' é diferente de " + result8 + " <declaration.getNameAsString()>"
"Era esperado valores iguais, mas  'VoidVisitor' é diferente de " + result9 + " <declaration.getNameAsString()>"
"Era esperado valores iguais, mas  true é diferente de " + result10 + " <declaration.isInterface()>"
"Era esperado valores iguais, mas  'AccessSpecifier' é diferente de " + result11 + " <declaration.getNameAsString()>"
"Era esperado valores iguais, mas  'AccessSpecifier' é diferente de " + result12 + " <enumDeclaration.getNameAsString()>"
"Era esperado valores iguais, mas  'PUBLIC' é diferente de " + result13 + " <declaration.getNameAsString()>"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result14 + " <classDeclaration.getNameAsString()>"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result15 + " <classDeclaration.getNameAsString()>"
"Era esperado valores iguais, mas  'getComments' é diferente de " + result16 + " <resolvedDeclaration.getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result17 + " <resolvedDeclaration.getNumberOfParams()>"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result18 + " <classDeclaration.getNameAsString()>"
"Era esperado valores iguais, mas  'bar(Optional.of(new Derived()))' é diferente de " + result19 + " <mces.get(0).toString()>"
"Era esperado valores iguais, mas  'Base.bar(java.util.OptionalBase)' é diferente de " + result20 + " <mces.get(0).resolve().getQualifiedSignature()>"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  true é diferente de " + result21 + " <pr.isSuccessful()>"
"Era esperado valores iguais, mas  'com.github.javaparser.symbolsolver.testingclasses.UtilityClass.method(com.github.javaparser.symbolsolver.testingclasses.SomeClass.InnerEnum)' é diferente de " + result22 + " <rmd.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'CONSTANT' é diferente de " + result23 + " <rvd.getName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.symbolsolver.testingclasses.SomeClass.InnerEnum' é diferente de " + result24 + " <rvd.getType().describe()>"
"Era esperado valores iguais, mas  'A.method' é diferente de " + result25 + " <mce.resolve().getQualifiedName()>"
"Era esperado valores iguais, mas  'Test.setRunnable(java.lang.String, java.lang.Runnable)' é diferente de " + result26 + " <mce.get(0).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'Test.getContext(Test)' é diferente de " + result27 + " <mce.get(1).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'Test.getContext(Test)' é diferente de " + " sig"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result28 + " <exprs.get(0).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result29 + " <exprs.get(1).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result30 + " <exprs.get(2).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'float' é diferente de " + result31 + " <exprs.get(3).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'double' é diferente de " + result32 + " <exprs.get(4).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result33 + " <exprs.get(5).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result34 + " <exprs.get(6).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result35 + " <exprs.get(7).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result36 + " <exprs.get(8).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result37 + " <exprs.get(9).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result38 + " <exprs.get(10).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result39 + " <exprs.get(11).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result40 + " <exprs.get(12).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result41 + " <exprs.get(13).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'InnerClass(int)' é diferente de " + result42 + " <rcd.getSignature()>"
"Era esperado valores iguais, mas  'InnerClass(int)' é diferente de " + result43 + " <rcd.getSignature()>"
"Era esperado valores iguais, mas  'InnerClass(int)' é diferente de " + result44 + " <rcd.getSignature()>"
"Era esperado valores iguais, mas  'void' é diferente de " + " (mce.calculateResolvedType().describe())"
"Era esperado valores iguais, mas  'java.util.concurrent.TimeUnit' é diferente de " + " (mce.getArgument(0).calculateResolvedType().describe())"
"Era esperado verdadeiro, mas " + result45 + " <method.isSolved()> é falso"
"Era esperado não nulo, mas " + result46 + " <javaParserFacade.solve(expression)> é nulo"
"Era esperado não nulo, mas " + result47 + " <javaParserFacade.convertToUsage(expression.getType())> é nulo"
"Era esperado verdadeiro, mas " + result48 + " <parseResult.isSuccessful()> é falso"
"Era esperado valores iguais, mas  'D' é diferente de " + result49 + " <javaParserFacade.solve(methodCallExprs.get(0)).getCorrespondingDeclaration().getReturnType().describe()>"
"Era esperado valores iguais, mas  'D' é diferente de " + result50 + " <javaParserFacade.solve(methodCallExprs.get(2)).getCorrespondingDeclaration().getReturnType().describe()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result51 + " <javaParserFacade.solve(methodCallExprs.get(1)).getCorrespondingDeclaration().getReturnType().describe()>"
"Era esperado valores iguais, mas  'D' é diferente de " + result52 + " <javaParserFacade.solve(methodCallExprs.get(4)).getCorrespondingDeclaration().getReturnType().describe()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result53 + " <a.getQualifiedName()>"
"Era esperado valores iguais, mas " + result54 + " <resultsQualifiedName.get(expr.toString())> é diferente de " + " qName"
"Era esperado valores iguais, mas " + result55 + " <resultsResolvedType.get(expr.toString())> é diferente de " + " resolvedType"
"Era esperado verdadeiro, mas " + result56 + " <parseResult.isSuccessful()> é falso"
"Era esperado verdadeiro, mas " + result57 + " <parseResult.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result58 + " <'int'.contentEquals(resolve.getType().describe())> é falso"
"Era esperado valores iguais, mas  'Test1.Test2' é diferente de " + result59 + " <oce.get(0).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'Test1.Test3' é diferente de " + result60 + " <oce.get(1).calculateResolvedType().describe()>"
"Era esperado verdadeiro, mas " + result61 + " <methodType.isPresent()> é falso"
"Era esperado valores iguais, mas  'java.util.ArrayList' é diferente de " + " resolvedType"
"Era esperado valores iguais, mas  'foo(new Object[5])' é diferente de " + result62 + " <mce.toString()>"
"Era esperado valores iguais, mas  'TestClass2.foo(java.lang.Object)' é diferente de " + result63 + " <mce.resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result64 + " <mce.calculateResolvedType().describe()>"
"Era esperado verdadeiro, mas " + result65 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.BinaryExpr.Operator' é diferente de " + result66 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'OR' é diferente de " + result67 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result68 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.BinaryExpr.Operator' é diferente de " + result69 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'AND' é diferente de " + result70 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result71 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.BinaryExpr.Operator' é diferente de " + result72 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'OR' é diferente de " + result73 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result74 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.BinaryExpr.Operator' é diferente de " + result75 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'AND' é diferente de " + result76 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result77 + " <parseResult.isSuccessful()> é falso"
"Era esperado valores iguais, mas  syntacticClassification é diferente de " + result78 + " <NameLogic.syntacticClassificationAccordingToContext(nameNode)>"
"Era esperado valores iguais, mas  nameCategory é diferente de " + result79 + " <NameLogic.classifyReference(nameNode, typeSolver)>"
"Era esperado valores iguais, mas  nameCategory é diferente de " + result80 + " <NameLogic.syntacticClassificationAccordingToContext(nameNode)>"
"Era esperado valores iguais, mas  nameRole é diferente de " + result81 + " <NameLogic.classifyRole(nameNode)>"
"Era esperado verdadeiro, mas " + result82 + " <NameLogic.isSimpleName(nameNode)> é falso"
"Era esperado verdadeiro, mas " + result83 + " <NameLogic.isQualifiedName(nameNode)> é falso"
"Era esperado valores iguais, mas  false é diferente de " + result84 + " <NameLogic.isAName(cu)>"
"Era esperado valores iguais, mas  false é diferente de " + result85 + " <NameLogic.isAName(cu.getPackageDeclaration().get())>"
"Era esperado valores iguais, mas  true é diferente de " + result86 + " <NameLogic.isAName(packageName)>"
"Era esperado valores iguais, mas  true é diferente de " + result87 + " <NameLogic.isAName(packageName.getQualifier().get())>"
"Era esperado valores iguais, mas  true é diferente de " + result88 + " <NameLogic.isAName(packageName.getQualifier().get().getQualifier().get())>"
"Era esperado valores iguais, mas  false é diferente de " + result89 + " <NameLogic.isAName(classA)>"
"Era esperado valores iguais, mas  true é diferente de " + result90 + " <NameLogic.isAName(classA.getName())>"
"Era esperado valores iguais, mas  false é diferente de " + result91 + " <NameLogic.isAName(methodFoo)>"
"Era esperado valores iguais, mas  true é diferente de " + result92 + " <NameLogic.isAName(methodFoo.getName())>"
"Era esperado valores iguais, mas  false é diferente de " + result93 + " <NameLogic.isAName(methodFoo.getParameter(0))>"
"Era esperado valores iguais, mas  true é diferente de " + result94 + " <NameLogic.isAName(methodFoo.getParameter(0).getName())>"
"Era esperado valores iguais, mas  false é diferente de " + result95 + " <NameLogic.isAName(methodFoo.getParameter(0).getType())>"
"Era esperado valores iguais, mas  false é diferente de " + result96 + " <NameLogic.isAName(methodFoo.getType())>"
"Era esperado valores iguais, mas  false é diferente de " + result97 + " <NameLogic.isAName(returnStmt)>"
"Era esperado valores iguais, mas  true é diferente de " + result98 + " <NameLogic.isAName(returnStmt.getExpression().get())>"
"Era esperado valores iguais, mas  true é diferente de " + result99 + " <NameLogic.isAName(fieldAccessExpr.getScope())>"
"Era esperado valores iguais, mas  true é diferente de " + result100 + " <NameLogic.isAName(fieldAccessExpr.getScope().asFieldAccessExpr().getScope())>"
"Era esperado valores iguais, mas  true é diferente de " + result101 + " <NameLogic.isAName(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope())>"
"Era esperado valores iguais, mas  true é diferente de " + result102 + " <NameLogic.isAName(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope())>"
"Era esperado valores iguais, mas  DECLARATION é diferente de " + result103 + " <NameLogic.classifyRole(packageName)>"
"Era esperado valores iguais, mas  DECLARATION é diferente de " + result104 + " <NameLogic.classifyRole(packageName.getQualifier().get())>"
"Era esperado valores iguais, mas  DECLARATION é diferente de " + result105 + " <NameLogic.classifyRole(packageName.getQualifier().get().getQualifier().get())>"
"Era esperado valores iguais, mas  DECLARATION é diferente de " + result106 + " <NameLogic.classifyRole(classA.getName())>"
"Era esperado valores iguais, mas  DECLARATION é diferente de " + result107 + " <NameLogic.classifyRole(methodFoo.getName())>"
"Era esperado valores iguais, mas  DECLARATION é diferente de " + result108 + " <NameLogic.classifyRole(methodFoo.getParameter(0).getName())>"
"Era esperado valores iguais, mas  REFERENCE é diferente de " + result109 + " <NameLogic.classifyRole(returnStmt.getExpression().get())>"
"Era esperado valores iguais, mas  REFERENCE é diferente de " + result110 + " <NameLogic.classifyRole(fieldAccessExpr.getScope())>"
"Era esperado valores iguais, mas  REFERENCE é diferente de " + result111 + " <NameLogic.classifyRole(fieldAccessExpr.getScope().asFieldAccessExpr().getScope())>"
"Era esperado valores iguais, mas  REFERENCE é diferente de " + result112 + " <NameLogic.classifyRole(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope())>"
"Era esperado valores iguais, mas  REFERENCE é diferente de " + result113 + " <NameLogic.classifyRole(fieldAccessExpr.getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope().asFieldAccessExpr().getScope())>"
"Era esperado valores iguais, mas  'com.mydeveloperplanet.jpmshello' é diferente de " + result114 + " <NameLogic.nameAsString(md.getName())>"
"Era esperado valores iguais, mas  'Foo' é diferente de " + result115 + " <NameLogic.nameAsString(cu.getType(0).getName())>"
"Era esperado valores iguais, mas  1 é diferente de " + result116 + " <parseResult.getProblems().size()>"
"Era esperado valores iguais, mas  'Use of patterns with instanceof is not supported.' é diferente de " + result117 + " <parseResult.getProblem(0).getMessage()>"
"Era esperado valores iguais, mas  1 é diferente de " + result118 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result119 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result120 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  'java.lang.String.contains(java.lang.CharSequence)' é diferente de " + result121 + " <resolve.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result122 + " <resolve.getReturnType().describe()>"
"Era esperado valores iguais, mas  'contains' é diferente de " + result123 + " <resolve.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result124 + " <resolve.getNumberOfParams()>"
"Era esperado valores iguais, mas  'contains(java.lang.CharSequence)' é diferente de " + result125 + " <resolve.getSignature()>"
"Era esperado verdadeiro, mas " + result126 + " <inScopeMethodCall.hasScope()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result127 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result128 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result129 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  's.contains(\'in scope\')' é diferente de " + result130 + " <inScopeMethodCall.toString()>"
"Era esperado valores iguais, mas  'java.lang.String.contains(java.lang.CharSequence)' é diferente de " + result131 + " <resolve.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result132 + " <resolve.getReturnType().describe()>"
"Era esperado valores iguais, mas  'contains' é diferente de " + result133 + " <resolve.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result134 + " <resolve.getNumberOfParams()>"
"Era esperado valores iguais, mas  'contains(java.lang.CharSequence)' é diferente de " + result135 + " <resolve.getSignature()>"
"Era esperado verdadeiro, mas " + result136 + " <inScopeMethodCall.hasScope()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result137 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result138 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result139 + " <binaryExprs.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result140 + " <nameExprs.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result141 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result142 + " <binaryExprs.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result143 + " <methodCallExprs.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result144 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result145 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result146 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result147 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  'java.lang.String.contains(java.lang.CharSequence)' é diferente de " + result148 + " <resolve.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result149 + " <resolve.getReturnType().describe()>"
"Era esperado valores iguais, mas  'contains' é diferente de " + result150 + " <resolve.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result151 + " <resolve.getNumberOfParams()>"
"Era esperado valores iguais, mas  'contains(java.lang.CharSequence)' é diferente de " + result152 + " <resolve.getSignature()>"
"Era esperado verdadeiro, mas " + result153 + " <inScopeMethodCall.hasScope()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result154 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result155 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  'java.lang.String.contains(java.lang.CharSequence)' é diferente de " + result156 + " <resolve.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result157 + " <resolve.getReturnType().describe()>"
"Era esperado valores iguais, mas  'contains' é diferente de " + result158 + " <resolve.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result159 + " <resolve.getNumberOfParams()>"
"Era esperado valores iguais, mas  'contains(java.lang.CharSequence)' é diferente de " + result160 + " <resolve.getSignature()>"
"Era esperado valores iguais, mas  1 é diferente de " + result161 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  'java.util.List.contains(java.lang.Object)' é diferente de " + result162 + " <resolve.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result163 + " <resolve.getReturnType().describe()>"
"Era esperado valores iguais, mas  'contains' é diferente de " + result164 + " <resolve.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result165 + " <resolve.getNumberOfParams()>"
"Era esperado valores iguais, mas  'contains(java.lang.Object)' é diferente de " + result166 + " <resolve.getSignature()>"
"Era esperado valores iguais, mas  1 é diferente de " + result167 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  'java.util.List.contains(java.lang.Object)' é diferente de " + result168 + " <resolve.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result169 + " <resolve.getReturnType().describe()>"
"Era esperado valores iguais, mas  'contains' é diferente de " + result170 + " <resolve.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result171 + " <resolve.getNumberOfParams()>"
"Era esperado valores iguais, mas  'contains(java.lang.Object)' é diferente de " + result172 + " <resolve.getSignature()>"
"Era esperado valores iguais, mas  1 é diferente de " + result173 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result174 + " <methodCalls.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result175 + " <nameExprs.size()>"
"Era esperado verdadeiro, mas " + result176 + " <resolved.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result177 + " <resolved.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result178 + " <reference.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result179 + " <reference.isSolved()> é falso"
"Era esperado valores iguais, mas  'JavaParserTypeSolver.java' é diferente de " + result180 + " <wrappedNode.findCompilationUnit().get().getStorage().get().getFileName()>"
"Era esperado verdadeiro, mas " + result181 + " <folder.mkdirs()> é falso"
"Era esperado verdadeiro, mas " + result182 + " <testJava.createNewFile()> é falso"
"Era esperado verdadeiro, mas " + result183 + " <x.isSolved()> é falso"
"Era esperado não nulo, mas " + result184 + " <x.getCorrespondingDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result185 + " <x.getCorrespondingDeclaration().isClass()> é falso"
"Era esperado verdadeiro, mas " + result186 + " <x.isSolved()> é falso"
"Era esperado não nulo, mas " + result187 + " <x.getCorrespondingDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result188 + " <x.getCorrespondingDeclaration().isClass()> é falso"
"Era esperado verdadeiro, mas " + result189 + " <x.isSolved()> é falso"
"Era esperado não nulo, mas " + result190 + " <x.getCorrespondingDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result191 + " <x.getCorrespondingDeclaration().isEnum()> é falso"
"Era esperado verdadeiro, mas " + result192 + " <x.isSolved()> é falso"
"Era esperado não nulo, mas " + result193 + " <x.getCorrespondingDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result194 + " <x.getCorrespondingDeclaration().isInterface()> é falso"
"Era esperado verdadeiro, mas " + result195 + " <x.isSolved()> é falso"
"Era esperado não nulo, mas " + result196 + " <x.getCorrespondingDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result197 + " <x.getCorrespondingDeclaration().isInterface()> é falso"
"Era esperado verdadeiro, mas " + result198 + " <memoryTypeSolver.tryToSolveType(expectedExistingClass.getCanonicalName()).isSolved()> é falso"
"Era esperado valores iguais, mas  solver1 é diferente de " + " solver2"
"Era esperado valores diferentes, mas  solver1 é igual a " + " solver2"
"Era esperado valores iguais, mas  solver1 é diferente de " + " solver2"
"Era esperado valores iguais, mas " + result199 + " <solver1.hashCode()> é diferente de " + result200 + " <solver2.hashCode()>"
"Era esperado valores diferentes, mas " + result201 + " <solver1.hashCode()> é igual a " + result202 + " <solver2.hashCode()>"
"Era esperado valores iguais, mas " + result203 + " <solver1.hashCode()> é diferente de " + result204 + " <solver2.hashCode()>"
"Era esperado verdadeiro, mas " + result205 + " <solvedType.isSolved()> é falso"
"Era esperado valores iguais, mas  expectedCanonicalName é diferente de " + result206 + " <resolvedDeclaration.getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result207 + " <ts.hasType(String.class.getCanonicalName())>"
"Era esperado valores iguais, mas  true é diferente de " + result208 + " <ts.hasType(Object.class.getCanonicalName())>"
"Era esperado valores iguais, mas  false é diferente de " + result209 + " <ts.hasType('foo.zum.unexisting')>"
"Era esperado nulo, mas " + result210 + " <solver.getParent()> não é nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  parentSolver é diferente de " + " returnedSolver"
"Era esperado valores iguais, mas  typeSolverToRegister é diferente de " + " createdTypeSolver"
"Era esperado valores iguais, mas  true é diferente de " + result211 + " <aarTypeSolver.tryToSolveType('android.support.v4.app.ActivityCompat').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result212 + " <aarTypeSolver.tryToSolveType('android.support.v4.app.ActivityManagerCompat').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result213 + " <aarTypeSolver.tryToSolveType('android.support.v4.app.NotificationCompat').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result214 + " <aarTypeSolver.tryToSolveType('android.support.v4.app.NotificationCompat.Action').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result215 + " <aarTypeSolver.tryToSolveType('android.support.v4.app.NotificationCompat.Action.Builder').isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result216 + " <aarTypeSolver.tryToSolveType('com.github.javaparser.ASTParser.Foo').isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result217 + " <aarTypeSolver.tryToSolveType('com.github.javaparser.Foo').isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result218 + " <aarTypeSolver.tryToSolveType('Foo').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result219 + " <jarTypeSolver.tryToSolveType('com.github.javaparser.SourcesHelper').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result220 + " <jarTypeSolver.tryToSolveType('com.github.javaparser.Token').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result221 + " <jarTypeSolver.tryToSolveType('com.github.javaparser.ASTParser.JJCalls').isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result222 + " <jarTypeSolver.tryToSolveType('com.github.javaparser.ASTParser.Foo').isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result223 + " <jarTypeSolver.tryToSolveType('com.github.javaparser.Foo').isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result224 + " <jarTypeSolver.tryToSolveType('Foo').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result225 + " <jarTypeSolver1.tryToSolveType('foo.bar.A').isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result226 + " <jarTypeSolver2.tryToSolveType('foo.zum.B').isSolved()>"
"Era esperado valores iguais, mas  1 é diferente de " + result227 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result228 + " <nodeType.getQualifiedName()>"
"Era esperado valores iguais, mas " + result229 + " <Sets.newHashSet(typeA)> é diferente de " + result230 + " <jarTypeSolver1.getKnownClasses()>"
"Era esperado verdadeiro, mas " + result231 + " <jarTypeSolver1.tryToSolveType(typeA).isSolved()> é falso"
"Era esperado valores iguais, mas " + result232 + " <Sets.newHashSet(typeB)> é diferente de " + result233 + " <jarTypeSolver2.getKnownClasses()>"
"Era esperado verdadeiro, mas " + result234 + " <jarTypeSolver2.tryToSolveType(typeB).isSolved()> é falso"
"Era esperado valores iguais, mas  'foo.bar.MyAnnotation' é diferente de " + result235 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'foo.bar' é diferente de " + result236 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'MyAnnotation' é diferente de " + result237 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'foo.bar.MyAnnotationWithSingleValue' é diferente de " + result238 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'foo.bar' é diferente de " + result239 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'MyAnnotationWithSingleValue' é diferente de " + result240 + " <resolved.getName()>"
"Era esperado valores iguais, mas  IntegerLiteralExpr.class é diferente de " + result241 + " <memberValue.getClass()>"
"Era esperado valores iguais, mas  'foo.bar.MyAnnotationWithElements' é diferente de " + result242 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'foo.bar' é diferente de " + result243 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'MyAnnotationWithElements' é diferente de " + result244 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'java.lang.Override' é diferente de " + result245 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang' é diferente de " + result246 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'Override' é diferente de " + result247 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'BooleanLiteralExpr' é diferente de " + result248 + " <expr.getClass().getSimpleName()>"
"Era esperado valores iguais, mas  true é diferente de " + result249 + " <((BooleanLiteralExpr) expr).getValue()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result250 + " <rt.describe()>"
"Era esperado valores iguais, mas  'java.lang.SuppressWarnings' é diferente de " + result251 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang' é diferente de " + result252 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'SuppressWarnings' é diferente de " + result253 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'org.junit.Before' é diferente de " + result254 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'org.junit' é diferente de " + result255 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'Before' é diferente de " + result256 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'org.junit.Ignore' é diferente de " + result257 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'org.junit' é diferente de " + result258 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'Ignore' é diferente de " + result259 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'org.junit.Test' é diferente de " + result260 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  'org.junit' é diferente de " + result261 + " <resolved.getPackageName()>"
"Era esperado valores iguais, mas  'Test' é diferente de " + result262 + " <resolved.getName()>"
"Era esperado valores iguais, mas  'org.junit.Ignore' é diferente de " + result263 + " <resolved.getQualifiedName()>"
"Era esperado valores iguais, mas  StringLiteralExpr.class é diferente de " + result264 + " <memberValue.getClass()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result265 + " <rt.describe()>"
"Era esperado valores iguais, mas  'foo.bar.MyAnnotation' é diferente de " + result266 + " <resolved.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result267 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Target')> é falso"
"Era esperado verdadeiro, mas " + result268 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Retention')> é falso"
"Era esperado valores iguais, mas  'java.lang.Override' é diferente de " + result269 + " <resolved.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result270 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Target')> é falso"
"Era esperado verdadeiro, mas " + result271 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Retention')> é falso"
"Era esperado valores iguais, mas  'org.junit.Test' é diferente de " + result272 + " <resolved.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result273 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Target')> é falso"
"Era esperado verdadeiro, mas " + result274 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Retention')> é falso"
"Era esperado valores iguais, mas  'foo.bar.MyAnnotation' é diferente de " + result275 + " <resolvedAnnotationOnClass.getQualifiedName()>"
"Era esperado valores iguais, mas  'org.junit.Ignore' é diferente de " + result276 + " <resolvedAnnotationOnMethod.getQualifiedName()>"
"Era esperado valores iguais, mas " + result277 + " <ancestors.size()> é diferente de " + " 1"
"Era esperado valores iguais, mas " + result278 + " <ancestors.get(0).getQualifiedName()> é diferente de " + " 'java.lang.annotation.Annotation'"
"Era esperado valores iguais, mas " + result279 + " <ad.getMember(0).asAnnotationMemberDeclaration().resolve().getType().asPrimitive().describe()> é diferente de " + " 'int'"
"Era esperado valores iguais, mas " + result280 + " <am.getType().asReferenceType().getQualifiedName()> é diferente de " + " 'foo.bar.MyAnnotationWithInnerClass.MyInnerClass'"
"Era esperado valores iguais, mas  expectedLines.length é diferente de " + " outputLines.length"
"Era esperado falso, mas " + result281 + " <x.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result282 + " <memoryTypeSolver.tryToSolveType(expectedNonExistingClass.getCanonicalName()).isSolved()> é verdadeiro "
"Era esperado falso, mas " + result283 + " <typeSolver.tryToSolveType('java.lang.Object').isSolved()> é verdadeiro "
"Era esperado falso, mas " + result284 + " <jarTypeSolver1.tryToSolveType(typeB).isSolved()> é verdadeiro "
"Era esperado falso, mas " + result285 + " <jarTypeSolver2.tryToSolveType(typeA).isSolved()> é verdadeiro "
"Era esperado falso, mas " + result286 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Documented')> é verdadeiro "
"Era esperado falso, mas " + result287 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Documented')> é verdadeiro "
"Era esperado falso, mas " + result288 + " <resolved.hasDirectlyAnnotation('java.lang.annotation.Documented')> é verdadeiro "
"Era esperado falso, mas " + result289 + " <type.isTypeVariable()> é verdadeiro "
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result290 + " <type.describe()>"
"A execução falhou por uma causa deliberada"
"Era esperado verdadeiro, mas " + result291 + " <solvedSymbol.isSolved()> é falso"
"Era esperado valores iguais, mas  symbolName é diferente de " + result292 + " <solvedSymbol.getCorrespondingDeclaration().asField().getName()>"
"Era esperado valores iguais, mas  exception1 é diferente de " + " exception2"
"Era esperado valores iguais, mas  exception1 é diferente de " + " exception3"
"Era esperado valores iguais, mas  exception1 é diferente de " + " exception4"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result293 + " <ref.describe()>"
"Era esperado valores iguais, mas  'size' é diferente de " + result294 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result295 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'noneOf' é diferente de " + result296 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.lang.Object.toString()' é diferente de " + result297 + " <call1.getQualifiedSignature()>"
"Era esperado valores iguais, mas  true é diferente de " + result298 + " <reference.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result299 + " <type.isReferenceType()>"
"Era esperado valores iguais, mas  true é diferente de " + " type.asReferenceType().getTypeDeclaration().get() instanceof JavaParserAnonymousClassDeclaration"
"Era esperado verdadeiro, mas " + result300 + " <reference.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.io.File.delete()' é diferente de " + result301 + " <reference.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  mainClass é diferente de " + result302 + " <resolvedTypeDeclaration.getParentNode().get()>"
"Era esperado verdadeiro, mas " + result303 + " <reference.isSolved()> é falso"
"Era esperado valores iguais, mas  'X.Y.bar()' é diferente de " + result304 + " <reference.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado verdadeiro, mas " + result305 + " <reference.isSolved()> é falso"
"Era esperado valores iguais, mas  'X.Y.bar()' é diferente de " + result306 + " <reference.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado verdadeiro, mas " + result307 + " <reference.isSolved()> é falso"
"Era esperado valores iguais, mas  'X.A.bar()' é diferente de " + result308 + " <reference.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'ClassExtendingUnknownClass.bar(java.lang.String)' é diferente de " + result309 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'OverloadedMethods.complexOverloading1(java.lang.String, java.lang.String)' é diferente de " + result310 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'OverloadedMethods.complexOverloading2(java.lang.String...)' é diferente de " + result311 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'OverloadedMethods.complexOverloading3(long)' é diferente de " + result312 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'OverloadedMethods.complexOverloading4(long, int)' é diferente de " + result313 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"A execução falhou por uma causa deliberada"
"A execução falhou por uma causa deliberada"
"Era esperado valores iguais, mas  2 é diferente de " + result314 + " <calls.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.visitor.GenericVisitorR, A' é diferente de " + result315 + " <methodUsage1.getParamType(0).describe()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.visitor.VoidVisitorA' é diferente de " + result316 + " <methodUsage2.getParamType(0).describe()>"
"Era esperado valores iguais, mas  'null' é diferente de " + result317 + " <rt1.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result318 + " <rt2.describe()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result319 + " <rt3.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result320 + " <rt1.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result321 + " <rt2.describe()>"
"Era esperado valores iguais, mas  'java.lang.Boolean' é diferente de " + result322 + " <rt1.describe()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result323 + " <rt2.describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result324 + " <rt1.describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result325 + " <rt2.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result326 + " <rt3.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result327 + " <rt4.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result328 + " <rt5.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result329 + " <rt5b.describe()>"
"Era esperado valores iguais, mas  'byte' é diferente de " + result330 + " <rt6.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result331 + " <rt7.describe()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result332 + " <rt8.describe()>"
"Era esperado valores iguais, mas  'byte' é diferente de " + result333 + " <rt9.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result334 + " <rt10.describe()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result335 + " <rt11.describe()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result336 + " <rt12.describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result337 + " <rt13.describe()>"
"Era esperado valores iguais, mas  'double' é diferente de " + result338 + " <rt14.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result339 + " <rt1.describe()>"
"Era esperado valores iguais, mas  'java.util.ListT' é diferente de " + result340 + " <rt2.describe()>"
"Era esperado valores iguais, mas  'java.lang.Class? extends java.io.Serializable' é diferente de " + result341 + " <rt5.describe()>"
"Era esperado valores iguais, mas  'java.io.Serializable' é diferente de " + result342 + " <rt6.describe()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result343 + " <rt3.describe()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result344 + " <rt4.describe()>"
"Era esperado falso, mas " + result345 + " <solvedSymbol.isSolved()> é verdadeiro "
"Era esperado verdadeiro, mas " + result346 + " <expr.isPolyExpression()> é falso"
"Era esperado falso, mas " + result347 + " <expr.isStandaloneExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result348 + " <expr.isPolyExpression()> é falso"
"Era esperado falso, mas " + result349 + " <expr.isStandaloneExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result350 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result351 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado falso, mas " + result352 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result353 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result354 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result355 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result356 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result357 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result358 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result359 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result360 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result361 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result362 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result363 + " <expr.isStandaloneExpression()> é falso"
"Era esperado falso, mas " + result364 + " <expr.isPolyExpression()> é verdadeiro "
"Era esperado verdadeiro, mas " + result365 + " <expr.isStandaloneExpression()> é falso"
"Era esperado verdadeiro, mas " + result366 + " <expr.elidesTypeArguments()> é falso"
"Era esperado verdadeiro, mas " + result367 + " <expr.elidesTypeArguments()> é falso"
"Era esperado verdadeiro, mas " + result368 + " <expr.elidesTypeArguments()> é falso"
"Era esperado verdadeiro, mas " + result369 + " <expr.elidesTypeArguments()> é falso"
"Era esperado falso, mas " + result370 + " <expr.elidesTypeArguments()> é verdadeiro "
"Era esperado verdadeiro, mas " + result371 + " <expr.appearsInAssignmentContext()> é falso"
"Era esperado falso, mas " + result372 + " <expr.appearsInAssignmentContext()> é verdadeiro "
"Era esperado falso, mas " + result373 + " <expr.appearsInInvocationContext()> é verdadeiro "
"Era esperado verdadeiro, mas " + result374 + " <expr.appearsInInvocationContext()> é falso"
"Era esperado valores iguais, mas  'V' é diferente de " + result375 + " <TypeUtils.getPrimitiveTypeDescriptor(void.class)>"
"Era esperado valores iguais, mas  'V' é diferente de " + result376 + " <TypeUtils.getPrimitiveTypeDescriptor(Void.class)>"
"Era esperado valores iguais, mas  'Z' é diferente de " + result377 + " <TypeUtils.getPrimitiveTypeDescriptor(boolean.class)>"
"Era esperado valores iguais, mas  'Z' é diferente de " + result378 + " <TypeUtils.getPrimitiveTypeDescriptor(Boolean.class)>"
"Era esperado valores iguais, mas  'C' é diferente de " + result379 + " <TypeUtils.getPrimitiveTypeDescriptor(char.class)>"
"Era esperado valores iguais, mas  'C' é diferente de " + result380 + " <TypeUtils.getPrimitiveTypeDescriptor(Character.class)>"
"Era esperado valores iguais, mas  'B' é diferente de " + result381 + " <TypeUtils.getPrimitiveTypeDescriptor(byte.class)>"
"Era esperado valores iguais, mas  'B' é diferente de " + result382 + " <TypeUtils.getPrimitiveTypeDescriptor(Byte.class)>"
"Era esperado valores iguais, mas  'S' é diferente de " + result383 + " <TypeUtils.getPrimitiveTypeDescriptor(short.class)>"
"Era esperado valores iguais, mas  'S' é diferente de " + result384 + " <TypeUtils.getPrimitiveTypeDescriptor(Short.class)>"
"Era esperado valores iguais, mas  'I' é diferente de " + result385 + " <TypeUtils.getPrimitiveTypeDescriptor(int.class)>"
"Era esperado valores iguais, mas  'I' é diferente de " + result386 + " <TypeUtils.getPrimitiveTypeDescriptor(Integer.class)>"
"Era esperado valores iguais, mas  'J' é diferente de " + result387 + " <TypeUtils.getPrimitiveTypeDescriptor(long.class)>"
"Era esperado valores iguais, mas  'J' é diferente de " + result388 + " <TypeUtils.getPrimitiveTypeDescriptor(Long.class)>"
"Era esperado valores iguais, mas  'F' é diferente de " + result389 + " <TypeUtils.getPrimitiveTypeDescriptor(float.class)>"
"Era esperado valores iguais, mas  'F' é diferente de " + result390 + " <TypeUtils.getPrimitiveTypeDescriptor(Float.class)>"
"Era esperado valores iguais, mas  'D' é diferente de " + result391 + " <TypeUtils.getPrimitiveTypeDescriptor(double.class)>"
"Era esperado valores iguais, mas  'D' é diferente de " + result392 + " <TypeUtils.getPrimitiveTypeDescriptor(Double.class)>"
"Era esperado valores iguais, mas  'X.method' é diferente de " + " actual"
"Era esperado valores iguais, mas  'X.X1.method' é diferente de " + " actual"
"Era esperado valores iguais, mas  'X.Y1.X2.method' é diferente de " + " actual"
"Era esperado valores iguais, mas  'X.Z1.Y2.X3.method' é diferente de " + " actual"
"A execução falhou por uma causa deliberada"
"Era esperado valores iguais, mas " + result393 + " <Object.class.getCanonicalName()> é diferente de " + result394 + " <superclass.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Throwable.getMessage()' é diferente de " + result395 + " <methodUsage.getQualifiedSignature()>"
"Era esperado verdadeiro, mas " + result396 + " <symbolReference.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result397 + " <symbolReference.getCorrespondingDeclaration().isParameter()> é falso"
"Era esperado valores iguais, mas  'e' é diferente de " + result398 + " <symbolReference.getCorrespondingDeclaration().asParameter().getName()>"
"Era esperado valores iguais, mas  'java.lang.UnsupportedOperationException' é diferente de " + result399 + " <symbolReference.getCorrespondingDeclaration().asParameter().getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'Foo.Base.X' é diferente de " + result400 + " <jssType.asReferenceType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result401 + " <type.isReferenceType()> é falso"
"Era esperado valores iguais, mas  'java.util.Scanner' é diferente de " + result402 + " <type.asReferenceType().getQualifiedName()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result403 + " <resolvedType.isReferenceType()> é falso"
"Era esperado valores iguais, mas " + result404 + " <clazz.getCanonicalName()> é diferente de " + result405 + " <resolvedType.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result406 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result407 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.util.Listint[]' é diferente de " + result408 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result409 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result410 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)V' é diferente de " + result411 + " <constructor.get(0).toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)Ljava/lang/Object;' é diferente de " + result412 + " <methods.get(0).toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)V' é diferente de " + result413 + " <methods.get(1).toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)[I' é diferente de " + result414 + " <methods.get(2).toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)[[J' é diferente de " + result415 + " <methods.get(3).toDescriptor()>"
"Era esperado valores iguais, mas  '()V' é diferente de " + result416 + " <methods.get(4).toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)Ljava/lang/Object;' é diferente de " + result417 + " <methods.get(0).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)V' é diferente de " + result418 + " <methods.get(1).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)[I' é diferente de " + result419 + " <methods.get(2).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '(IDLjava/lang/Thread;)[[J' é diferente de " + result420 + " <methods.get(3).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '()V' é diferente de " + result421 + " <methods.get(4).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '(Ljava/lang/String;)V' é diferente de " + result422 + " <methodCalls.get(0).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '(Ljava/lang/String;)LA/TestEnum;' é diferente de " + result423 + " <methodCalls.get(1).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '()[LA/TestEnum;' é diferente de " + result424 + " <methodCalls.get(2).resolve().toDescriptor()>"
"Era esperado valores iguais, mas  '(Ljava/util/List;)V' é diferente de " + result425 + " <methodWithRawParameter.toDescriptor()>"
"Era esperado valores iguais, mas  '()V' é diferente de " + result426 + " <methodWithExceptions.toDescriptor()>"
"Era esperado valores iguais, mas  true é diferente de " + result427 + " <type.isReferenceType()>"
"Era esperado valores iguais, mas " + result428 + " <List.class.getCanonicalName()> é diferente de " + result429 + " <type.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.Long' é diferente de " + result430 + " <type.describe()>"
"Era esperado valores iguais, mas  'variadicMethod' é diferente de " + result431 + " <callee.getName()>"
"Era esperado valores iguais, mas  'variadicWithGenericArg' é diferente de " + result432 + " <callee.getName()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result433 + " <call1.returnType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result434 + " <call2.returnType().describe()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result435 + " <call3.returnType().describe()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result436 + " <call4.returnType().describe()>"
"Era esperado valores iguais, mas  'java.lang.reflect.Constructor' é diferente de " + result437 + " <call1.returnType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.reflect.Constructor' é diferente de " + result438 + " <call2.returnType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.reflect.Constructor' é diferente de " + result439 + " <call3.returnType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.reflect.Constructor' é diferente de " + result440 + " <call4.returnType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result441 + " <ref.describe()>"
"Era esperado verdadeiro, mas " + result442 + " <ref.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result443 + " <ref.getCorrespondingDeclaration().isField()> é falso"
"Era esperado verdadeiro, mas " + result444 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'label' é diferente de " + result445 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result446 + " <ref.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result447 + " <ref.describe()>"
"Era esperado valores iguais, mas  variableDeclarator é diferente de " + result448 + " <((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator()>"
"Era esperado valores iguais, mas  variableDeclarator é diferente de " + result449 + " <((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator()>"
"Era esperado valores iguais, mas  variableDeclarator é diferente de " + result450 + " <((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator()>"
"Era esperado valores iguais, mas  variableDeclarator é diferente de " + result451 + " <((JavaParserFieldDeclaration) resolvedValueDeclaration).getVariableDeclarator()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result452 + " <ref.describe()>"
"Era esperado verdadeiro, mas " + result453 + " <type.isReferenceType()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result454 + " <type.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'length' é diferente de " + result455 + " <resolvedValueDeclaration.getName()>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result456 + " <resolvedValueDeclaration.getType()>"
"Era esperado valores iguais, mas  'java.util.ListT' é diferente de " + result457 + " <type.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result458 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result459 + " <type.asReferenceType().typeParametersValues().get(0).isTypeVariable()>"
"Era esperado valores iguais, mas  'T' é diferente de " + result460 + " <type.asReferenceType().typeParametersValues().get(0).asTypeParameter().getName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.utils.PositionUtils.sortByBeginPosition(java.util.ListT).T' é diferente de " + result461 + " <type.asReferenceType().typeParametersValues().get(0).asTypeParameter().getQualifiedName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result462 + " <type.asReferenceType().typeParametersValues().get(0).asTypeParameter().getBounds().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result463 + " <bound.isExtends()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result464 + " <bound.getType().describe()>"
"Era esperado verdadeiro, mas " + result465 + " <methodUsage.isPresent()> é falso"
"Era esperado falso, mas " + result466 + " <methodUsage.isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result467 + " <methodUsage.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result468 + " <methodUsage.isPresent()> é falso"
"Era esperado falso, mas " + result469 + " <methodUsage.isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result470 + " <methodUsage.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result471 + " <methodUsage.isPresent()> é falso"
"Era esperado falso, mas " + result472 + " <methodUsage.isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result473 + " <methodUsage.isPresent()> é falso"
"Era esperado falso, mas " + result474 + " <methodUsage.isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result475 + " <methodUsage.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result476 + " <methodUsage.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result477 + " <methodUsage.isPresent()> é falso"
"Era esperado valores iguais, mas  'main.Child.method' é diferente de " + " actual"
"Era esperado valores iguais, mas  'main.Parent.method' é diferente de " + " actual"
"Era esperado valores iguais, mas  'main.Child.method' é diferente de " + " actual"
"Era esperado valores iguais, mas  'main.Clazz.MyEnum' é diferente de " + " actual"
"Era esperado valores iguais, mas  'main.Main.NestedEnum.foo' é diferente de " + " actual"
"Era esperado valores iguais, mas  'main.Main.NestedEnum.bar' é diferente de " + " actual"
"Era esperado valores iguais, mas  'main.Main.NestedEnum.baz' é diferente de " + " actual"
"A execução falhou por uma causa deliberada"
"A execução falhou por uma causa deliberada"
"Era esperado verdadeiro, mas " + result478 + " <solvedSymbol.isSolved()> é falso"
"Era esperado valores iguais, mas  symbolName é diferente de " + result479 + " <solvedSymbol.getCorrespondingDeclaration().asField().getName()>"
"Era esperado verdadeiro, mas " + result480 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.util.Scanner' é diferente de " + result481 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result482 + " <ref.describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result483 + " <ref.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result484 + " <ref.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result485 + " <ref.describe()>"
"Era esperado falso, mas " + result486 + " <solvedSymbol.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result487 + " <res.isSolved()> é verdadeiro "
"Era esperado verdadeiro, mas " + result488 + " <res.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result489 + " <res.getCorrespondingDeclaration().isField()> é falso"
"Era esperado verdadeiro, mas " + result490 + " <res.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result491 + " <res.getCorrespondingDeclaration().isField()> é falso"
"Era esperado falso, mas " + result492 + " <res.isSolved()> é verdadeiro "
"Era esperado verdadeiro, mas " + result493 + " <typeSolverNewCode.solveType('com.github.javaparser.FooClass').isClass()> é falso"
"Era esperado valores iguais, mas  'java.lang.Object.hashCode()' é diferente de " + result494 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.lang.Object.hashCode()' é diferente de " + result495 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.lang.String.hashCode()' é diferente de " + result496 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.lang.Object.hashCode()' é diferente de " + result497 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.io.PrintStream.println(java.lang.String)' é diferente de " + result498 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'MethodReferences.print(java.lang.String)' é diferente de " + result499 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.print(java.lang.Integer)' é diferente de " + result500 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.util.List.add(E)' é diferente de " + result501 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.print(java.lang.Boolean)' é diferente de " + result502 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.isEqualAsStrings(java.lang.Integer, java.lang.String)' é diferente de " + result503 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.getOneNumberAsString(java.lang.Integer, java.lang.Integer, java.lang.Integer)' é diferente de " + result504 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'MethodReferences.print(java.lang.String)' é diferente de " + result505 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.returnSameValue(java.lang.String)' é diferente de " + result506 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.isEqual(java.lang.Integer, java.lang.Integer)' é diferente de " + result507 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.print(java.lang.Integer)' é diferente de " + result508 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.returnSameValue(java.lang.Integer)' é diferente de " + result509 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.add(java.lang.Integer, java.lang.Integer)' é diferente de " + result510 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass.isEqualAsStrings(java.lang.Integer, java.lang.String)' é diferente de " + result511 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.lang.String.valueOf(java.lang.Object)' é diferente de " + result512 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.util.stream.Stream.map(java.util.function.Function? super T, ? extends R)' é diferente de " + result513 + " <callMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SupplierSuperClass' é diferente de " + result514 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'SuperClass' é diferente de " + result515 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'SuperClass' é diferente de " + result516 + " <resolvedType.describe()>"
"Era esperado verdadeiro, mas " + result517 + " <methodUsage.declaringType().getQualifiedName().equals('java.lang.String')> é falso"
"Era esperado verdadeiro, mas " + result518 + " <methodUsage.declaringType().getQualifiedName().equals('java.lang.String')> é falso"
"Era esperado valores iguais, mas  'java.util.function.Function? super java.lang.String, ? extends java.lang.String' é diferente de " + result519 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result520 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result521 + " <type1.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.util.stream.IntStream' é diferente de " + result522 + " <type2.describe()>"
"Era esperado valores iguais, mas  'java.util.Optionaljava.lang.Integer' é diferente de " + result523 + " <type1.describe()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result524 + " <type1.describe()>"
"Era esperado valores iguais, mas  'double' é diferente de " + result525 + " <type1.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.CollectorT, ? extends java.lang.Object, java.util.ListT' é diferente de " + result526 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result527 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result528 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result529 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.util.function.Consumer? super java.lang.String' é diferente de " + result530 + " <type.describe()>"
"Era esperado valores iguais, mas  'B' é diferente de " + result531 + " <resolvedType.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result532 + " <symbolReference.isPresent()>"
"Era esperado valores iguais, mas  's' é diferente de " + result533 + " <symbolReference.get().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result534 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result535 + " <type.asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result536 + " <symbolReference.isPresent()>"
"Era esperado valores iguais, mas  'g' é diferente de " + result537 + " <symbolReference.get().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result538 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  'me.tomassetti.symbolsolver.javaparser.Generics' é diferente de " + result539 + " <type.asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result540 + " <symbolReference.isPresent()>"
"Era esperado valores iguais, mas  'i' é diferente de " + result541 + " <symbolReference.get().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result542 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  'java.lang.Integer' é diferente de " + result543 + " <type.asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result544 + " <symbolReference.isPresent()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result545 + " <symbolReference.get().getName()>"
"Era esperado valores iguais, mas  true é diferente de " + result546 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result547 + " <type.describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result548 + " <symbolReference.isPresent()>"
"Era esperado valores iguais, mas  'as' é diferente de " + result549 + " <symbolReference.get().getName()>"
"Era esperado valores iguais, mas  false é diferente de " + result550 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'java.util.ListA' é diferente de " + result551 + " <type.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result552 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result553 + " <typeParam.isTypeVariable()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result554 + " <typeParam.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result555 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result556 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result557 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'java.util.ListA' é diferente de " + result558 + " <type.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result559 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result560 + " <type.asReferenceType().typeParametersValues().get(0).isTypeVariable()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result561 + " <type.asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result562 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result563 + " <type.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result564 + " <type.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  false é diferente de " + result565 + " <type.asReferenceType().typeParametersValues().get(0).isTypeVariable()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result566 + " <type.asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  'callee' é diferente de " + result567 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'get' é diferente de " + result568 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result569 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'toString' é diferente de " + result570 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result571 + " <methodUsage.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'bar' é diferente de " + result572 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'GenericsWildcard.Foo' é diferente de " + result573 + " <methodUsage.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result574 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'GenericMethodBoxing' é diferente de " + result575 + " <methodUsage.declaringType().getName()>"
"Era esperado valores iguais, mas  'java.lang.Long' é diferente de " + result576 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result577 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'Comment' é diferente de " + result578 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result579 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'AnnotationExpr' é diferente de " + result580 + " <type.describe()>"
"Era esperado valores iguais, mas  2 é diferente de " + result581 + " <allAncestors.size()>"
"Era esperado valores iguais, mas  false é diferente de " + result582 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result583 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result584 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'java.lang.ClassN' é diferente de " + result585 + " <type.describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result586 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'N' é diferente de " + result587 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result588 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'TypeParamOnReturnType' é diferente de " + result589 + " <type.describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result590 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'T' é diferente de " + result591 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result592 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'java.lang.Boolean' é diferente de " + result593 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result594 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result595 + " <type.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result596 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result597 + " <type.describe()>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result598 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  false é diferente de " + result599 + " <type.isTypeVariable()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result600 + " <type.describe()>"
"Era esperado verdadeiro, mas " + result601 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result602 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result603 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result604 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result605 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result606 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result607 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.util.ListComment' é diferente de " + result608 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  'add' é diferente de " + result609 + " <methodUsage.getName()>"
"Era esperado verdadeiro, mas " + result610 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'java.util.ListComment' é diferente de " + result611 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  'add' é diferente de " + result612 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'File' é diferente de " + result613 + " <resolvedConstructorDeclaration.getName()>"
"Era esperado valores iguais, mas  'File(java.lang.String)' é diferente de " + result614 + " <resolvedConstructorDeclaration.getSignature()>"
"Era esperado valores iguais, mas  'java.io.File.File(java.lang.String)' é diferente de " + result615 + " <resolvedConstructorDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'delete' é diferente de " + result616 + " <resolvedMethodDeclaration.getName()>"
"Era esperado valores iguais, mas  'delete()' é diferente de " + result617 + " <resolvedMethodDeclaration.getSignature()>"
"Era esperado valores iguais, mas  'java.io.File.delete()' é diferente de " + result618 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  true é diferente de " + result619 + " <rawClassType.isRawType()>"
"Era esperado valores iguais, mas  false é diferente de " + result620 + " <MethodResolutionLogic.isApplicable(mu, 'isThrows', ImmutableList.of(classOfStringType), typeSolver)>"
"Era esperado valores iguais, mas  true é diferente de " + result621 + " <MethodResolutionLogic.isApplicable(mu, 'isThrows', ImmutableList.of(rawClassType), typeSolver)>"
"Era esperado valores iguais, mas  true é diferente de " + result622 + " <MethodResolutionLogic.isApplicable(mu, 'isThrows', ImmutableList.of(classOfRuntimeType), typeSolver)>"
"Era esperado valores iguais, mas  expectedConstructor é diferente de " + " actualConstructor"
"Era esperado valores iguais, mas  expectedConstructor é diferente de " + " actualConstructor"
"Era esperado valores iguais, mas  expectedConstructor é diferente de " + " actualConstructor"
"Era esperado valores iguais, mas  expectedConstructor é diferente de " + " actualConstructor"
"Era esperado verdadeiro, mas " + result623 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result624 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado verdadeiro, mas " + result625 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result626 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado verdadeiro, mas " + result627 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result628 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result629 + " <ref.getCorrespondingDeclaration().getParam(0).getType().describe()>"
"Era esperado valores iguais, mas  2 é diferente de " + result630 + " <oceList.size()>"
"Era esperado verdadeiro, mas " + result631 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'TypeA' é diferente de " + result632 + " <ref.getCorrespondingDeclaration().declaringType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result633 + " <ref.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result634 + " <ref.getCorrespondingDeclaration().declaringType().getQualifiedName().startsWith('B.Anonymous-')> é falso"
"Era esperado valores iguais, mas  'ConstructorCallsEnum' é diferente de " + result635 + " <resolvedConstructor.declaringType().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result636 + " <resolvedConstructor.getNumberOfParams()>"
"Era esperado valores iguais, mas  'i' é diferente de " + result637 + " <resolvedConstructor.getParam(0).getName()>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result638 + " <resolvedConstructor.getParam(0).getType()>"
"Era esperado valores iguais, mas  1 é diferente de " + result639 + " <cd.getNumberOfParams()>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result640 + " <cd.getParam(0).getType()>"
"Era esperado valores iguais, mas  'java.lang.AbstractStringBuilder' é diferente de " + result641 + " <cd.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result642 + " <cd.getNumberOfParams()>"
"Era esperado valores iguais, mas  'S' é diferente de " + result643 + " <cd.getParam(0).describeType()>"
"Era esperado valores iguais, mas  'javaparser.GenericClass' é diferente de " + result644 + " <cd.declaringType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result645 + " <javaParserFacade.solve(bar).isSolved()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result646 + " <typeDeclaration.getTypeParameters().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'A' é diferente de " + result647 + " <typeDeclaration.getTypeParameters().get(0).getName()>"
"Era esperado valores iguais, mas  false é diferente de " + result648 + " <typeDeclaration.getTypeParameters().get(0).declaredOnMethod()>"
"Era esperado valores iguais, mas  true é diferente de " + result649 + " <typeDeclaration.getTypeParameters().get(0).declaredOnType()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'B' é diferente de " + result650 + " <typeDeclaration.getTypeParameters().get(1).getName()>"
"Era esperado valores iguais, mas  false é diferente de " + result651 + " <typeDeclaration.getTypeParameters().get(1).declaredOnMethod()>"
"Era esperado valores iguais, mas  true é diferente de " + result652 + " <typeDeclaration.getTypeParameters().get(1).declaredOnType()>"
"Era esperado verdadeiro, mas " + result653 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  '? super java.lang.String' é diferente de " + result654 + " <ref.get().getType().describe()>"
"Era esperado verdadeiro, mas " + result655 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result656 + " <ref.get().getType().describe()>"
"Era esperado verdadeiro, mas " + result657 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result658 + " <ref.get().getType().describe()>"
"Era esperado verdadeiro, mas " + result659 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result660 + " <ref.get().getType().describe()>"
"Era esperado verdadeiro, mas " + result661 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'MethodCalls' é diferente de " + result662 + " <ref.get().declaringType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result663 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'MethodCalls' é diferente de " + result664 + " <ref.get().declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result665 + " <Collections.singletonList('java.lang.Integer')> é diferente de " + result666 + " <ref.get().typeParametersMap().getTypes().stream().map(ty -> ty.asReferenceType().describe()).collect(Collectors.toList())>"
"Era esperado verdadeiro, mas " + result667 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'MethodCalls' é diferente de " + result668 + " <ref.get().declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result669 + " <Collections.singletonList('java.lang.String')> é diferente de " + result670 + " <ref.get().typeParametersMap().getTypes().stream().map(ty -> ty.asReferenceType().describe()).collect(Collectors.toList())>"
"Era esperado valores iguais, mas  2 é diferente de " + result671 + " <expressions.size()>"
"Era esperado verdadeiro, mas " + result672 + " <ResolvedVoidType.class.isAssignableFrom(r.getClass())> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result673 + " <expressions.size()>"
"Era esperado verdadeiro, mas " + result674 + " <ReferenceTypeImpl.class.isAssignableFrom(r.getClass())> é falso"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result675 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result676 + " <resolvedType.describe()>"
"Era esperado falso, mas " + result677 + " <context.getParent().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  false é diferente de " + result678 + " <a.isPresent()>"
"Era esperado valores iguais, mas  false é diferente de " + result679 + " <b.isPresent()>"
"Era esperado valores iguais, mas  false é diferente de " + result680 + " <c.isPresent()>"
"Era esperado valores iguais, mas  false é diferente de " + result681 + " <d.isPresent()>"
"Era esperado valores iguais, mas  true é diferente de " + result682 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'java.io.PrintStream' é diferente de " + result683 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result684 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'java.io.PrintStream' é diferente de " + result685 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result686 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'java.io.PrintStream' é diferente de " + result687 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result688 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'java.io.PrintStream' é diferente de " + result689 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result690 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'java.io.PrintStream' é diferente de " + result691 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result692 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'java.io.PrintStream' é diferente de " + result693 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result694 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'com.foo.OtherClassInSamePackage' é diferente de " + result695 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result696 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'org.junit.Assert' é diferente de " + result697 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result698 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'org.junit.Assume' é diferente de " + result699 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result700 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'assertFalse' é diferente de " + result701 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result702 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result703 + " <ref.getCorrespondingDeclaration().getParam(0).getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result704 + " <ref.getCorrespondingDeclaration().getParam(0).getType().isPrimitive()>"
"Era esperado valores iguais, mas  true é diferente de " + result705 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'assertEquals' é diferente de " + result706 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  2 é diferente de " + result707 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result708 + " <ref.getCorrespondingDeclaration().getParam(0).getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result709 + " <ref.getCorrespondingDeclaration().getParam(1).getType().asReferenceType().getQualifiedName()>"
"A execução falhou por uma causa deliberada"
"A execução falhou por uma causa deliberada"
"Era esperado verdadeiro, mas " + result710 + " <context.getParent().isPresent()> é falso"
"Era esperado valores iguais, mas  new CompilationUnitContext(cu, typeSolver) é diferente de " + result711 + " <context.getParent().get()>"
"Era esperado valores iguais, mas  true é diferente de " + result712 + " <a.isPresent()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result713 + " <a.get().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result714 + " <a.get().isTypeVariable()>"
"Era esperado valores iguais, mas  true é diferente de " + result715 + " <b.isPresent()>"
"Era esperado valores iguais, mas  'B' é diferente de " + result716 + " <b.get().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result717 + " <b.get().isTypeVariable()>"
"Era esperado valores iguais, mas  true é diferente de " + result718 + " <c.isPresent()>"
"Era esperado valores iguais, mas  'C' é diferente de " + result719 + " <c.get().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result720 + " <c.get().isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result721 + " <d.isPresent()>"
"Era esperado valores iguais, mas  true é diferente de " + result722 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result723 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result724 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result725 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result726 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result727 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result728 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result729 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result730 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result731 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result732 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result733 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result734 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result735 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result736 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result737 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result738 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result739 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result740 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result741 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result742 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result743 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  true é diferente de " + result744 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result745 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result746 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result747 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result748 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result749 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result750 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result751 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result752 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result753 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result754 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result755 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result756 + " <ref.getCorrespondingDeclaration().declaringType().getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result757 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result758 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result759 + " <ref.getCorrespondingDeclaration().declaringType().getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result760 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result761 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'Super' é diferente de " + result762 + " <ref.getCorrespondingDeclaration().declaringType().getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result763 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result764 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result765 + " <ref.getCorrespondingDeclaration().declaringType().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result766 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result767 + " <ref.isSolved()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result768 + " <ref.getCorrespondingDeclaration().declaringType().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result769 + " <ref.getCorrespondingDeclaration().getNumberOfParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result770 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result771 + " <ref.get().declaringType().getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result772 + " <ref.get().getNoParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result773 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result774 + " <ref.get().declaringType().getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result775 + " <ref.get().getNoParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result776 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'Super' é diferente de " + result777 + " <ref.get().declaringType().getName()>"
"Era esperado valores iguais, mas  0 é diferente de " + result778 + " <ref.get().getNoParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result779 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result780 + " <ref.get().declaringType().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result781 + " <ref.get().getNoParams()>"
"Era esperado valores iguais, mas  true é diferente de " + result782 + " <ref.isPresent()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result783 + " <ref.get().declaringType().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result784 + " <ref.get().getNoParams()>"
"Era esperado verdadeiro, mas " + result785 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'int' é diferente de " + result786 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado verdadeiro, mas " + result787 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'long' é diferente de " + result788 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado verdadeiro, mas " + result789 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'MyEnum' é diferente de " + result790 + " <ref.getCorrespondingDeclaration().getType().describe()>"
"Era esperado verdadeiro, mas " + result791 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'int' é diferente de " + result792 + " <ref.get().getType().describe()>"
"Era esperado verdadeiro, mas " + result793 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'long' é diferente de " + result794 + " <ref.get().getType().describe()>"
"Era esperado verdadeiro, mas " + result795 + " <ref.isPresent()> é falso"
"Era esperado valores iguais, mas  'MyEnum' é diferente de " + result796 + " <ref.get().getType().describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result797 + " <ref.isSolved()>"
"Era esperado valores iguais, mas " + result798 + " <methodUsage.getName()> é diferente de " + " 'getSelf'"
"Era esperado valores iguais, mas  'int' é diferente de " + result799 + " <rt.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result800 + " <rt2.describe()>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + " resolvedType"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(String.class, typeSolver)) é diferente de " + " resolvedType"
"Era esperado valores iguais, mas " + result801 + " <Optional.of(new ProperLowerBound(inferenceVariable, integerType))> é diferente de " + result802 + " <bound.isProperLowerBound()>"
"Era esperado valores iguais, mas " + result803 + " <Optional.of(new ProperLowerBound(inferenceVariable, doubleType))> é diferente de " + result804 + " <bound.isProperLowerBound()>"
"Era esperado valores iguais, mas " + result805 + " <Optional.of(new ProperUpperBound(inferenceVariable, objectType))> é diferente de " + result806 + " <bound.isProperUpperBound()>"
"Era esperado valores iguais, mas  false é diferente de " + result807 + " <isProperType(listOfBeta)>"
"Era esperado valores iguais, mas " + result808 + " <Optional.of(new ProperUpperBound(alpha, iterableOfWildcard))> é diferente de " + result809 + " <bound1.isProperUpperBound()>"
"Era esperado valores iguais, mas " + result810 + " <Optional.of(new ProperUpperBound(beta, objectType))> é diferente de " + result811 + " <bound2.isProperUpperBound()>"
"Era esperado valores iguais, mas  true é diferente de " + result812 + " <bound3.isADependency()>"
"Era esperado valores iguais, mas " + result813 + " <Optional.of(new Instantiation(inferenceVariable, stringType))> é diferente de " + result814 + " <bound1.isAnInstantiation()>"
"Era esperado valores iguais, mas " + result815 + " <Optional.of(new Instantiation(inferenceVariable, stringType))> é diferente de " + result816 + " <bound2.isAnInstantiation()>"
"Era esperado valores iguais, mas " + result817 + " <ConstraintFormula.ReductionResult.empty().withConstraint(new TypeCompatibleWithType(typeSolver, stringType, inferenceVariable))> é diferente de " + " res1"
"Era esperado valores iguais, mas " + result818 + " <ConstraintFormula.ReductionResult.empty().withConstraint(new TypeSubtypeOfType(typeSolver, stringType, inferenceVariable))> é diferente de " + result819 + " <res1.getConstraint(0).reduce(BoundSet.empty())>"
"Era esperado valores iguais, mas  lub é diferente de " + " exception"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas " + result820 + " <expected.erasure()> é diferente de " + " erased"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas " + result821 + " <expected.describe()> é diferente de " + result822 + " <lub.describe()>"
"Era esperado valores iguais, mas " + result823 + " <expected.describe()> é diferente de " + result824 + " <lub.describe()>"
"Era esperado valores iguais, mas " + result825 + " <expected.describe()> é diferente de " + result826 + " <lub.describe()>"
"Era esperado valores iguais, mas  expected é diferente de " + " lub"
"Era esperado valores iguais, mas  'ParentOther? extends A' é diferente de " + result827 + " <lub.describe()>"
"Era esperado valores iguais, mas " + result828 + " <clazz.getFieldByName('field_i1').get().resolve().getType().describe()> é diferente de " + " 'I1'"
"Era esperado valores iguais, mas " + result829 + " <clazz.getFieldByName('field_i2').get().resolve().getType().describe()> é diferente de " + " 'I2.I2_1'"
"Era esperado valores iguais, mas " + result830 + " <clazz.getFieldByName('field_i3').get().resolve().getType().describe()> é diferente de " + " 'I3.I3_1.I3_1_1'"
"Era esperado valores iguais, mas " + result831 + " <clazz.getFieldByName('field_c1').get().resolve().getType().describe()> é diferente de " + " 'C1'"
"Era esperado valores iguais, mas " + result832 + " <clazz.getFieldByName('field_c2').get().resolve().getType().describe()> é diferente de " + " 'C2.C2_1'"
"Era esperado valores iguais, mas " + result833 + " <clazz.getFieldByName('field_c3').get().resolve().getType().describe()> é diferente de " + " 'C3.C3_1.C3_1_1'"
"Era esperado valores iguais, mas  'main.A' é diferente de " + " actual"
"Era esperado valores diferentes, mas  'another.A' é igual a " + " actual"
"Era esperado verdadeiro, mas " + result834 + " <rt.isEnumConstant()> é falso"
"Era esperado verdadeiro, mas " + result835 + " <rt.isJavaLangObject()> é falso"
"Era esperado falso, mas " + result836 + " <rt.isUnboxable()> é verdadeiro "
"Era esperado verdadeiro, mas " + result837 + " <rt.asReferenceType().isUnboxable()> é falso"
"Era esperado falso, mas " + result838 + " <rt.isUnboxableTo(ResolvedPrimitiveType.INT)> é verdadeiro "
"Era esperado verdadeiro, mas " + result839 + " <rt.isUnboxableTo(ResolvedPrimitiveType.INT)> é falso"
"Era esperado falso, mas " + result840 + " <rt.toUnboxedType().isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result841 + " <rt.toUnboxedType().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result842 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.AnInterface.ListChangeType' é diferente de " + result843 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'ADDITION' é diferente de " + result844 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result845 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.AnInterface.ListChangeType' é diferente de " + result846 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'ADDITION' é diferente de " + result847 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result848 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.AnInterface.ListChangeType' é diferente de " + result849 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'ADDITION' é diferente de " + result850 + " <fae.get().resolve().getName()>"
"Era esperado verdadeiro, mas " + result851 + " <fae.isPresent()> é falso"
"Era esperado valores iguais, mas  'foo.bar.AnInterface.ListChangeType' é diferente de " + result852 + " <fae.get().resolve().getType().describe()>"
"Era esperado valores iguais, mas  'ADDITION' é diferente de " + result853 + " <fae.get().resolve().getName()>"
"A execução falhou por uma causa deliberada"
"Era esperado verdadeiro, mas " + result854 + " <solvedSymbol.isSolved()> é falso"
"Era esperado valores iguais, mas  symbolName é diferente de " + result855 + " <solvedSymbol.getCorrespondingDeclaration().asField().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result856 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result857 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result858 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result859 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result860 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result861 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result862 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result863 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result864 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result865 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result866 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result867 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result868 + " <bExprs.size()>"
"Era esperado valores iguais, mas  FLOAT é diferente de " + result869 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result870 + " <bExprs.size()>"
"Era esperado valores iguais, mas  FLOAT é diferente de " + result871 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result872 + " <bExprs.size()>"
"Era esperado valores iguais, mas  FLOAT é diferente de " + result873 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result874 + " <bExprs.size()>"
"Era esperado valores iguais, mas  FLOAT é diferente de " + result875 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result876 + " <bExprs.size()>"
"Era esperado valores iguais, mas  FLOAT é diferente de " + result877 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result878 + " <bExprs.size()>"
"Era esperado valores iguais, mas  FLOAT é diferente de " + result879 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result880 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result881 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result882 + " <bExprs.size()>"
"Era esperado valores iguais, mas  DOUBLE é diferente de " + result883 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result884 + " <bExprs.size()>"
"Era esperado valores iguais, mas  INT é diferente de " + result885 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result886 + " <bExprs.size()>"
"Era esperado valores iguais, mas  INT é diferente de " + result887 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result888 + " <bExprs.size()>"
"Era esperado valores iguais, mas  stringType é diferente de " + result889 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result890 + " <bExprs.size()>"
"Era esperado valores iguais, mas  stringType é diferente de " + result891 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result892 + " <bExprs.size()>"
"Era esperado valores iguais, mas  stringType é diferente de " + result893 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result894 + " <bExprs.size()>"
"Era esperado valores iguais, mas  stringType é diferente de " + result895 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result896 + " <bExprs.size()>"
"Era esperado valores iguais, mas  stringType é diferente de " + result897 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"Era esperado valores iguais, mas  1 é diferente de " + result898 + " <bExprs.size()>"
"Era esperado valores iguais, mas  stringType é diferente de " + result899 + " <JavaParserFacade.get(ts).getType(bExprs.get(0))>"
"A execução falhou por uma causa deliberada"
"Era esperado verdadeiro, mas " + result900 + " <symbolReference.isSolved()> é falso"
"Era esperado valores iguais, mas  'i' é diferente de " + result901 + " <symbolReference.getCorrespondingDeclaration().getName()>"
"Era esperado verdadeiro, mas " + result902 + " <symbolReference.getCorrespondingDeclaration().isField()> é falso"
"Era esperado verdadeiro, mas " + result903 + " <symbolReference.isSolved()> é falso"
"Era esperado valores iguais, mas  'i' é diferente de " + result904 + " <symbolReference.getCorrespondingDeclaration().getName()>"
"Era esperado verdadeiro, mas " + result905 + " <symbolReference.getCorrespondingDeclaration().isField()> é falso"
"Era esperado verdadeiro, mas " + result906 + " <symbolReference.isSolved()> é falso"
"Era esperado valores iguais, mas  'foo' é diferente de " + result907 + " <symbolReference.getCorrespondingDeclaration().getName()>"
"Era esperado verdadeiro, mas " + result908 + " <symbolReference.getCorrespondingDeclaration().isParameter()> é falso"
"Era esperado verdadeiro, mas " + result909 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result910 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.CompilationUnit' é diferente de " + result911 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result912 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result913 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.CompilationUnit' é diferente de " + result914 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result915 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result916 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  'my.packagez.CompilationUnit' é diferente de " + result917 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result918 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'String' é diferente de " + result919 + " <ref.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result920 + " <ref.getCorrespondingDeclaration().getQualifiedName()>"
"Era esperado valores iguais, mas  'getTypes' é diferente de " + result921 + " <ref.getName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.CompilationUnit' é diferente de " + result922 + " <ref.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'stream' é diferente de " + result923 + " <ref.getName()>"
"Era esperado valores iguais, mas  'java.util.Collection' é diferente de " + result924 + " <ref.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'trim' é diferente de " + result925 + " <ref.getName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result926 + " <ref.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result927 + " <streamType.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result928 + " <ref.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result929 + " <ref.asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result930 + " <ref.asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  '? super java.lang.String' é diferente de " + result931 + " <ref.describe()>"
"Era esperado valores iguais, mas  'isEmpty' é diferente de " + result932 + " <ref.getName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result933 + " <ref.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'getTypes' é diferente de " + result934 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.util.Listcom.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result935 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result936 + " <methodUsage.returnType().asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result937 + " <methodUsage.returnType().asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  'genericMethodWithDoubleTypedReturnType' é diferente de " + result938 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.util.MapT, V' é diferente de " + result939 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'genericMethodWithNestedReturnType' é diferente de " + result940 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.util.Listjava.util.ListT' é diferente de " + result941 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'get' é diferente de " + result942 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.util.Listjava.util.Listjava.lang.String' é diferente de " + result943 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'copy' é diferente de " + result944 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'javaparser.GenericClassjava.util.Listjava.lang.String' é diferente de " + result945 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'complexGenerics' é diferente de " + result946 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'T' é diferente de " + result947 + " <methodUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'asList' é diferente de " + result948 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'java.util.Listjavaparser.GenericClass.Bar.NestedBar' é diferente de " + result949 + " <methodUsage.getParamType(0).describe()>"
"Era esperado valores iguais, mas  'java.util.Listcom.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result950 + " <filterUsage.returnType().describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result951 + " <filterUsage.returnType().asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result952 + " <filterUsage.returnType().asReferenceType().typeParametersValues().get(0).describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamcom.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result953 + " <filterUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamcom.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result954 + " <filterUsage.returnType().describe()>"
"Era esperado valores iguais, mas  'java.util.function.Predicate? super com.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result955 + " <typeOfLambdaExpr.describe()>"
"Era esperado valores iguais, mas  '? super com.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result956 + " <typeOfT.describe()>"
"Era esperado valores iguais, mas  'getName' é diferente de " + result957 + " <methodUsage.getName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.TypeDeclaration' é diferente de " + result958 + " <methodUsage.declaringType().getQualifiedName()>"
"Era esperado valores iguais, mas  'overloaded' é diferente de " + result959 + " <ref.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result960 + " <ref.getNoParams()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result961 + " <ref.getParamTypes().get(0).describe()>"
"Era esperado valores iguais, mas  'overloaded' é diferente de " + result962 + " <ref.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result963 + " <ref.getNoParams()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result964 + " <ref.getParamTypes().get(0).describe()>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result965 + " <ref.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result966 + " <ref.getNoParams()>"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result967 + " <ref.getParamType(0).describe()>"
"Era esperado valores iguais, mas  'double' é diferente de " + result968 + " <type.describe()>"
"Era esperado valores iguais, mas  'overloaded' é diferente de " + result969 + " <ref.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result970 + " <ref.getNoParams()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result971 + " <ref.getParamTypes().get(0).describe()>"
"Era esperado verdadeiro, mas " + result972 + " <parseResult.isSuccessful()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result973 + " <context1.localVariablesExposedToChild(blockStmt.getStatement(1)).size()>"
"Era esperado verdadeiro, mas " + result974 + " <context.localVariableDeclarationInScope(name).isPresent()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result975 + " <context1.localVariablesExposedToChild(blockStmt.getStatement(2)).size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result976 + " <context1.localVariablesExposedToChild(blockStmt.getStatement(4)).size()>"
"Era esperado verdadeiro, mas " + result977 + " <context.localVariableDeclarationInScope(name).isPresent()> é falso"
"Era esperado valores iguais, mas  'final String s' é diferente de " + result978 + " <instanceOfExpr.getPattern().get().toString()>"
"Era esperado verdadeiro, mas " + result979 + " <left_s.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result980 + " <right_s.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result981 + " <right_s2.isSolved()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result982 + " <enclosedExprs.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result983 + " <nameExprs.size()>"
"Era esperado valores iguais, mas  's' é diferente de " + result984 + " <nameExpr.getNameAsString()>"
"Era esperado verdadeiro, mas " + result985 + " <correspondingDeclaration.isPattern()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result986 + " <enclosedExprs.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result987 + " <nameExprs.size()>"
"Era esperado valores iguais, mas  's' é diferente de " + result988 + " <nameExpr.getNameAsString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result989 + " <enclosedExprs.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result990 + " <nameExprs.size()>"
"Era esperado valores iguais, mas  's' é diferente de " + result991 + " <nameExpr.getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result992 + " <methodCallExprs.size()>"
"Era esperado verdadeiro, mas " + result993 + " <s.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result994 + " <s.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result995 + " <methodCallExprs.size()>"
"Era esperado verdadeiro, mas " + result996 + " <s.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result997 + " <s.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result998 + " <methodCallExprs.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result999 + " <methodCallExprs.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1000 + " <methodCallExprs.size()>"
"Era esperado verdadeiro, mas " + result1001 + " <s_list.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1002 + " <s_string.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1003 + " <s_string.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado valores iguais, mas  4 é diferente de " + result1004 + " <methodCallExprs.size()>"
"Era esperado verdadeiro, mas " + result1005 + " <s_list.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1006 + " <s_string.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1007 + " <s_string.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado verdadeiro, mas " + result1008 + " <s_string2.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1009 + " <s_string2.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado verdadeiro, mas " + result1010 + " <s_string3.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1011 + " <s_string3.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado valores iguais, mas  4 é diferente de " + result1012 + " <methodCallExprs.size()>"
"Era esperado verdadeiro, mas " + result1013 + " <s_list.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1014 + " <s_string.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1015 + " <s_string2.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1016 + " <s_string2.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado verdadeiro, mas " + result1017 + " <s_string3.isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1018 + " <s_string3.getCorrespondingDeclaration().isPattern()> é falso"
"Era esperado valores iguais, mas  'java.lang.Float' é diferente de " + result1019 + " <types.get('i1').describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result1020 + " <types.get('i2').describe()>"
"Era esperado valores iguais, mas  expectedLines.length é diferente de " + " outputLines.length"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.BOOLEAN é diferente de " + result1021 + " <ResolvedPrimitiveType.byName('boolean')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.CHAR é diferente de " + result1022 + " <ResolvedPrimitiveType.byName('char')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.BYTE é diferente de " + result1023 + " <ResolvedPrimitiveType.byName('byte')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.SHORT é diferente de " + result1024 + " <ResolvedPrimitiveType.byName('short')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result1025 + " <ResolvedPrimitiveType.byName('int')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.LONG é diferente de " + result1026 + " <ResolvedPrimitiveType.byName('long')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.FLOAT é diferente de " + result1027 + " <ResolvedPrimitiveType.byName('float')>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.DOUBLE é diferente de " + result1028 + " <ResolvedPrimitiveType.byName('double')>"
"Era esperado verdadeiro, mas " + result1029 + " <ResolvedPrimitiveType.DOUBLE.bnp(ResolvedPrimitiveType.DOUBLE).equals(ResolvedPrimitiveType.DOUBLE)> é falso"
"Era esperado verdadeiro, mas " + result1030 + " <ResolvedPrimitiveType.FLOAT.bnp(ResolvedPrimitiveType.FLOAT).equals(ResolvedPrimitiveType.FLOAT)> é falso"
"Era esperado verdadeiro, mas " + result1031 + " <ResolvedPrimitiveType.LONG.bnp(ResolvedPrimitiveType.LONG).equals(ResolvedPrimitiveType.LONG)> é falso"
"Era esperado verdadeiro, mas " + result1032 + " <ResolvedPrimitiveType.INT.bnp(ResolvedPrimitiveType.INT).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1033 + " <ResolvedPrimitiveType.BYTE.bnp(ResolvedPrimitiveType.BYTE).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1034 + " <ResolvedPrimitiveType.SHORT.bnp(ResolvedPrimitiveType.SHORT).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1035 + " <ResolvedPrimitiveType.CHAR.bnp(ResolvedPrimitiveType.CHAR).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1036 + " <ResolvedPrimitiveType.unp(rByte).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1037 + " <ResolvedPrimitiveType.unp(rShort).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1038 + " <ResolvedPrimitiveType.unp(rChar).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1039 + " <ResolvedPrimitiveType.unp(rInteger).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1040 + " <ResolvedPrimitiveType.unp(rLong).equals(ResolvedPrimitiveType.LONG)> é falso"
"Era esperado verdadeiro, mas " + result1041 + " <ResolvedPrimitiveType.unp(rFloat).equals(ResolvedPrimitiveType.FLOAT)> é falso"
"Era esperado verdadeiro, mas " + result1042 + " <ResolvedPrimitiveType.unp(rDouble).equals(ResolvedPrimitiveType.DOUBLE)> é falso"
"Era esperado verdadeiro, mas " + result1043 + " <ResolvedPrimitiveType.unp(ResolvedPrimitiveType.BYTE).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1044 + " <ResolvedPrimitiveType.unp(ResolvedPrimitiveType.SHORT).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1045 + " <ResolvedPrimitiveType.unp(ResolvedPrimitiveType.CHAR).equals(ResolvedPrimitiveType.INT)> é falso"
"Era esperado verdadeiro, mas " + result1046 + " <ResolvedPrimitiveType.unp(ResolvedPrimitiveType.BOOLEAN).equals(ResolvedPrimitiveType.BOOLEAN)> é falso"
"Era esperado verdadeiro, mas " + result1047 + " <ResolvedPrimitiveType.unp(rString).equals(rString)> é falso"
"Era esperado verdadeiro, mas " + result1048 + " <ResolvedPrimitiveType.isBoxType(rByte)> é falso"
"Era esperado verdadeiro, mas " + result1049 + " <ResolvedPrimitiveType.isBoxType(rShort)> é falso"
"Era esperado verdadeiro, mas " + result1050 + " <ResolvedPrimitiveType.isBoxType(rChar)> é falso"
"Era esperado verdadeiro, mas " + result1051 + " <ResolvedPrimitiveType.isBoxType(rInteger)> é falso"
"Era esperado verdadeiro, mas " + result1052 + " <ResolvedPrimitiveType.isBoxType(rLong)> é falso"
"Era esperado verdadeiro, mas " + result1053 + " <ResolvedPrimitiveType.isBoxType(rFloat)> é falso"
"Era esperado verdadeiro, mas " + result1054 + " <ResolvedPrimitiveType.isBoxType(rDouble)> é falso"
"Era esperado falso, mas " + result1055 + " <solvedSymbol.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1056 + " <left_s2.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1057 + " <s.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1058 + " <s.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1059 + " <s_list.getCorrespondingDeclaration().isPattern()> é verdadeiro "
"Era esperado falso, mas " + result1060 + " <s_list.getCorrespondingDeclaration().isPattern()> é verdadeiro "
"Era esperado falso, mas " + result1061 + " <s_list.getCorrespondingDeclaration().isPattern()> é verdadeiro "
"Era esperado falso, mas " + result1062 + " <s_string.getCorrespondingDeclaration().isPattern()> é verdadeiro "
"Era esperado falso, mas " + result1063 + " <ResolvedPrimitiveType.isBoxType(rString)> é verdadeiro "
"Era esperado verdadeiro, mas " + result1064 + " <array(ResolvedPrimitiveType.DOUBLE).isAssignableBy(array(ResolvedPrimitiveType.DOUBLE))> é falso"
"Era esperado verdadeiro, mas " + result1065 + " <array(ResolvedPrimitiveType.FLOAT).isAssignableBy(array(ResolvedPrimitiveType.FLOAT))> é falso"
"Era esperado verdadeiro, mas " + result1066 + " <array(ResolvedPrimitiveType.LONG).isAssignableBy(array(ResolvedPrimitiveType.LONG))> é falso"
"Era esperado verdadeiro, mas " + result1067 + " <array(ResolvedPrimitiveType.INT).isAssignableBy(array(ResolvedPrimitiveType.INT))> é falso"
"Era esperado verdadeiro, mas " + result1068 + " <array(ResolvedPrimitiveType.BYTE).isAssignableBy(array(ResolvedPrimitiveType.BYTE))> é falso"
"Era esperado verdadeiro, mas " + result1069 + " <array(ResolvedPrimitiveType.SHORT).isAssignableBy(array(ResolvedPrimitiveType.SHORT))> é falso"
"Era esperado verdadeiro, mas " + result1070 + " <array(ResolvedPrimitiveType.CHAR).isAssignableBy(array(ResolvedPrimitiveType.CHAR))> é falso"
"Era esperado falso, mas " + result1071 + " <isAssignableBy(array(ResolvedPrimitiveType.DOUBLE), arrays(ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR))> é verdadeiro "
"Era esperado falso, mas " + result1072 + " <isAssignableBy(array(ResolvedPrimitiveType.FLOAT), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR))> é verdadeiro "
"Era esperado falso, mas " + result1073 + " <isAssignableBy(array(ResolvedPrimitiveType.LONG), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR))> é verdadeiro "
"Era esperado falso, mas " + result1074 + " <isAssignableBy(array(ResolvedPrimitiveType.INT), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR))> é verdadeiro "
"Era esperado falso, mas " + result1075 + " <isAssignableBy(array(ResolvedPrimitiveType.BYTE), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.SHORT, ResolvedPrimitiveType.CHAR))> é verdadeiro "
"Era esperado falso, mas " + result1076 + " <isAssignableBy(array(ResolvedPrimitiveType.SHORT), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.CHAR))> é verdadeiro "
"Era esperado falso, mas " + result1077 + " <isAssignableBy(array(ResolvedPrimitiveType.CHAR), arrays(ResolvedPrimitiveType.DOUBLE, ResolvedPrimitiveType.FLOAT, ResolvedPrimitiveType.LONG, ResolvedPrimitiveType.INT, ResolvedPrimitiveType.BYTE, ResolvedPrimitiveType.SHORT))> é verdadeiro "
"Era esperado falso, mas " + result1078 + " <array(ResolvedPrimitiveType.DOUBLE).isAssignableBy(array(rDouble))> é verdadeiro "
"Era esperado falso, mas " + result1079 + " <array(ResolvedPrimitiveType.FLOAT).isAssignableBy(array(rFloat))> é verdadeiro "
"Era esperado falso, mas " + result1080 + " <array(ResolvedPrimitiveType.LONG).isAssignableBy(array(rLong))> é verdadeiro "
"Era esperado falso, mas " + result1081 + " <array(ResolvedPrimitiveType.INT).isAssignableBy(array(rInteger))> é verdadeiro "
"Era esperado falso, mas " + result1082 + " <array(ResolvedPrimitiveType.BYTE).isAssignableBy(array(rByte))> é verdadeiro "
"Era esperado falso, mas " + result1083 + " <array(ResolvedPrimitiveType.SHORT).isAssignableBy(array(rShort))> é verdadeiro "
"Era esperado falso, mas " + result1084 + " <array(ResolvedPrimitiveType.CHAR).isAssignableBy(array(rChar))> é verdadeiro "
"Era esperado verdadeiro, mas " + result1085 + " <array(ResolvedPrimitiveType.DOUBLE).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1086 + " <array(ResolvedPrimitiveType.FLOAT).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1087 + " <array(ResolvedPrimitiveType.LONG).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1088 + " <array(ResolvedPrimitiveType.INT).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1089 + " <array(ResolvedPrimitiveType.BYTE).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1090 + " <array(ResolvedPrimitiveType.SHORT).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1091 + " <array(ResolvedPrimitiveType.CHAR).isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result1092 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.DOUBLE))> é falso"
"Era esperado verdadeiro, mas " + result1093 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.FLOAT))> é falso"
"Era esperado verdadeiro, mas " + result1094 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.LONG))> é falso"
"Era esperado verdadeiro, mas " + result1095 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.INT))> é falso"
"Era esperado verdadeiro, mas " + result1096 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.BYTE))> é falso"
"Era esperado verdadeiro, mas " + result1097 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.SHORT))> é falso"
"Era esperado verdadeiro, mas " + result1098 + " <rObject.isAssignableBy(array(ResolvedPrimitiveType.CHAR))> é falso"
"Era esperado verdadeiro, mas " + result1099 + " <rObject.isAssignableBy(array(rString))> é falso"
"Era esperado verdadeiro, mas " + result1100 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.DOUBLE))> é falso"
"Era esperado verdadeiro, mas " + result1101 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.FLOAT))> é falso"
"Era esperado verdadeiro, mas " + result1102 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.LONG))> é falso"
"Era esperado verdadeiro, mas " + result1103 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.INT))> é falso"
"Era esperado verdadeiro, mas " + result1104 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.BYTE))> é falso"
"Era esperado verdadeiro, mas " + result1105 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.SHORT))> é falso"
"Era esperado verdadeiro, mas " + result1106 + " <rCloneable.isAssignableBy(array(ResolvedPrimitiveType.CHAR))> é falso"
"Era esperado verdadeiro, mas " + result1107 + " <rCloneable.isAssignableBy(array(rString))> é falso"
"Era esperado verdadeiro, mas " + result1108 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.DOUBLE))> é falso"
"Era esperado verdadeiro, mas " + result1109 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.FLOAT))> é falso"
"Era esperado verdadeiro, mas " + result1110 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.LONG))> é falso"
"Era esperado verdadeiro, mas " + result1111 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.INT))> é falso"
"Era esperado verdadeiro, mas " + result1112 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.BYTE))> é falso"
"Era esperado verdadeiro, mas " + result1113 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.SHORT))> é falso"
"Era esperado verdadeiro, mas " + result1114 + " <rSerializable.isAssignableBy(array(ResolvedPrimitiveType.CHAR))> é falso"
"Era esperado verdadeiro, mas " + result1115 + " <rSerializable.isAssignableBy(array(rString))> é falso"
"Era esperado verdadeiro, mas " + result1116 + " <array(rCharSequence).isAssignableBy(array(rString))> é falso"
"Era esperado falso, mas " + result1117 + " <array(rString).isAssignableBy(array(rCharSequence))> é verdadeiro "
"Era esperado falso, mas " + result1118 + " <array(ResolvedPrimitiveType.LONG).isAssignableBy(rLong)> é verdadeiro "
"Era esperado verdadeiro, mas " + result1119 + " <ref.isSolved()> é falso"
"Era esperado valores iguais, mas  'SwitchOnEnum.MyEnum' é diferente de " + result1120 + " <ref.getCorrespondingDeclaration().getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'MyClass.Primitive' é diferente de " + result1121 + " <ref.describe()>"
"Era esperado valores iguais, mas  'valueOf' é diferente de " + result1122 + " <rd.getName()>"
"Era esperado valores iguais, mas  'ClassTest.SecurityPolicyScopedTemplatesKeys' é diferente de " + result1123 + " <rd.getReturnType().describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result1124 + " <rd.getNumberOfParams()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result1125 + " <rd.getParam(0).describeType()>"
"Era esperado valores iguais, mas  expectedLines.length é diferente de " + " outputLines.length"
"Era esperado valores iguais, mas  'int' é diferente de " + result1126 + " <usageDescribe(n, 'a')>"
"Era esperado valores iguais, mas  'java.lang.Integer' é diferente de " + result1127 + " <usageDescribe(n, 'b')>"
"Era esperado valores iguais, mas  'java.lang.Classjava.lang.Integer' é diferente de " + result1128 + " <usageDescribe(n, 'c')>"
"Era esperado valores iguais, mas  'java.lang.Class? super java.lang.Integer' é diferente de " + result1129 + " <usageDescribe(n, 'd')>"
"Era esperado valores iguais, mas  'java.lang.Class? extends java.lang.Integer' é diferente de " + result1130 + " <usageDescribe(n, 'e')>"
"Era esperado valores iguais, mas  'java.lang.Class? extends java.lang.Class? super java.lang.Class? extends java.lang.Integer' é diferente de " + result1131 + " <usageDescribe(n, 'f')>"
"Era esperado valores iguais, mas  'java.lang.Class? super java.lang.Class? extends java.lang.Class? super java.lang.Integer' é diferente de " + result1132 + " <usageDescribe(n, 'g')>"
"Era esperado verdadeiro, mas " + result1133 + " <methodUsage.getQualifiedSignature().startsWith('AnonymousClassDeclarations')> é falso"
"Era esperado verdadeiro, mas " + result1134 + " <methodUsage.getQualifiedSignature().contains('Anonymous-')> é falso"
"Era esperado verdadeiro, mas " + result1135 + " <methodUsage.getQualifiedSignature().endsWith('callAnnonClassInnerMethod()')> é falso"
"Era esperado verdadeiro, mas " + result1136 + " <result.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1137 + " <annotation.isPresent()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result1138 + " <fields.size()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result1139 + " <fields.get(0).getName()>"
"Era esperado verdadeiro, mas " + result1140 + " <result.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1141 + " <annotation.isPresent()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result1142 + " <fields.size()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result1143 + " <fields.get(0).getName()>"
"Era esperado valores iguais, mas  'b' é diferente de " + result1144 + " <fields.get(1).getName()>"
"Era esperado verdadeiro, mas " + result1145 + " <result.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1146 + " <nameExpr.isPresent()> é falso"
"Era esperado que nenhuma exceção fosse lançada, mas  nameExpr.get()::resolve foi lançada"
"Era esperado verdadeiro, mas " + result1147 + " <result.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1148 + " <annotation.isPresent()> é falso"
"Era esperado valores iguais, mas  4 é diferente de " + result1149 + " <annotation.get().resolve().internalTypes().size()>"
"Era esperado verdadeiro, mas " + result1150 + " <result.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1151 + " <annotation.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1152 + " <result.getResult().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1153 + " <annotation.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result1154 + " <annotation.get().resolve().isInheritable()> é falso"
"Era esperado verdadeiro, mas " + result1155 + " <'int x = 0;'.equals(decl)> é falso"
"Era esperado verdadeiro, mas " + result1156 + " <compilationUnit.isClass()> é falso"
"Era esperado verdadeiro, mas " + result1157 + " <compilationUnit.isType()> é falso"
"Era esperado valores iguais, mas  compilationUnit é diferente de " + result1158 + " <compilationUnit.asType()>"
"Era esperado valores iguais, mas  compilationUnit é diferente de " + result1159 + " <compilationUnit.asClass()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast' é diferente de " + result1160 + " <compilationUnit.getPackageName()>"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result1161 + " <compilationUnit.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.CompilationUnit' é diferente de " + result1162 + " <compilationUnit.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1163 + " <compilationUnit.getSuperClass().get().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1164 + " <compilationUnit.getSuperClass().get().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1165 + " <compilationUnit.getSuperClass().get().typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1166 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1167 + " <cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  3 é diferente de " + result1168 + " <constructorDeclaration.getAllSuperClasses().size()>"
"Era esperado verdadeiro, mas " + result1169 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.body.BodyDeclaration'))> é falso"
"Era esperado verdadeiro, mas " + result1170 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.Node'))> é falso"
"Era esperado verdadeiro, mas " + result1171 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('java.lang.Object'))> é falso"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1172 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1173 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1174 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1175 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas " + result1176 + " <ImmutableSet.of()> é diferente de " + result1177 + " <compilationUnit.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result1178 + " <ImmutableSet.of('com.github.javaparser.ast.DocumentableNode')> é diferente de " + result1179 + " <coid.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  7 é diferente de " + result1180 + " <constructorDeclaration.getInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1181 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1182 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1183 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1184 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1185 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1186 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1187 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1188 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1189 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1190 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1191 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1192 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1193 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1194 + " <ImmutableSet.of('java.lang.Cloneable')> é diferente de " + result1195 + " <compilationUnit.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result1196 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.NamedNode', 'com.github.javaparser.ast.body.AnnotableNode', 'com.github.javaparser.ast.DocumentableNode')> é diferente de " + result1197 + " <coid.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  9 é diferente de " + result1198 + " <constructorDeclaration.getAllInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1199 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1200 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1201 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1202 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1203 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1204 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1205 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1206 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1207 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1208 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1209 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1210 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1211 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1212 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1213 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1214 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  8 é diferente de " + result1215 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1216 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1217 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1218 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1219 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1220 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1221 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1222 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1223 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1224 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1225 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1226 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1227 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1228 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1229 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1230 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1231 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1232 + " <cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  'java.lang.Number' é diferente de " + result1233 + " <ancestors.get(0).getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1234 + " <ancestors.get(1).getQualifiedName()>"
"Era esperado valores iguais, mas  'java.io.Serializable' é diferente de " + result1235 + " <ancestors.get(2).getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Comparable' é diferente de " + result1236 + " <ancestors.get(3).getQualifiedName()>"
"Era esperado valores iguais, mas  12 é diferente de " + result1237 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1238 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1239 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1240 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1241 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1242 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1243 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1244 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1245 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1246 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1247 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1248 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1249 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1250 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1251 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1252 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1253 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1254 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1255 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1256 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1257 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1258 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'java.util.EnumSet' é diferente de " + result1259 + " <fieldDeclaration.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  AccessSpecifier.PRIVATE é diferente de " + result1260 + " <fieldDeclaration.accessSpecifier()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1261 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result1262 + " <fieldDeclaration.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  AccessSpecifier.PRIVATE é diferente de " + result1263 + " <fieldDeclaration.accessSpecifier()>"
"Era esperado valores iguais, mas  16 é diferente de " + result1264 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1265 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1266 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1267 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1268 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1269 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1270 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1271 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'NODE_BY_BEGIN_POSITION' é diferente de " + result1272 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'range' é diferente de " + result1273 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parentNode' é diferente de " + result1274 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'childrenNodes' é diferente de " + result1275 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'orphanComments' é diferente de " + result1276 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'userData' é diferente de " + result1277 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'comment' é diferente de " + result1278 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_BEGIN_LINE' é diferente de " + result1279 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_END_LINE' é diferente de " + result1280 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1281 + " <classDeclaration.getAllFields().size()>"
"Era esperado valores iguais, mas  's' é diferente de " + result1282 + " <classDeclaration.getAllFields().get(0).getName()>"
"Era esperado valores iguais, mas  string é diferente de " + result1283 + " <classDeclaration.getAllFields().get(0).getType()>"
"Era esperado valores iguais, mas  string é diferente de " + result1284 + " <rtClassDeclaration.getFieldType('s').get()>"
"Era esperado valores iguais, mas  't' é diferente de " + result1285 + " <classDeclaration.getAllFields().get(1).getName()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.Boolean' é diferente de " + result1286 + " <classDeclaration.getAllFields().get(1).getType().describe()>"
"Era esperado valores iguais, mas  listOfBoolean é diferente de " + result1287 + " <rtClassDeclaration.getFieldType('t').get()>"
"Era esperado valores iguais, mas  'i' é diferente de " + result1288 + " <classDeclaration.getAllFields().get(2).getName()>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result1289 + " <classDeclaration.getAllFields().get(2).getType()>"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result1290 + " <rtClassDeclaration.getFieldType('i').get()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1291 + " <allFields.size()>"
"Era esperado valores iguais, mas  'NODE_BY_BEGIN_POSITION' é diferente de " + result1292 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_BEGIN_LINE' é diferente de " + result1293 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_END_LINE' é diferente de " + result1294 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  13 é diferente de " + result1295 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1296 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1297 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1298 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1299 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1300 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1301 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1302 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'range' é diferente de " + result1303 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parentNode' é diferente de " + result1304 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'childrenNodes' é diferente de " + result1305 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'orphanComments' é diferente de " + result1306 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'userData' é diferente de " + result1307 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'comment' é diferente de " + result1308 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  6 é diferente de " + result1309 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1310 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1311 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1312 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1313 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1314 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1315 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  20 é diferente de " + result1316 + " <allMethods.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.GenericVisitorR, A, A)' é diferente de " + result1317 + " <sortedMethods.get(0).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitorA, A)' é diferente de " + result1318 + " <sortedMethods.get(1).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getBody()' é diferente de " + result1319 + " <sortedMethods.get(2).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString()' é diferente de " + result1320 + " <sortedMethods.get(3).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean)' é diferente de " + result1321 + " <sortedMethods.get(4).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean, boolean)' é diferente de " + result1322 + " <sortedMethods.get(5).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getJavaDoc()' é diferente de " + result1323 + " <sortedMethods.get(6).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()' é diferente de " + result1324 + " <sortedMethods.get(7).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getName()' é diferente de " + result1325 + " <sortedMethods.get(8).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getNameExpr()' é diferente de " + result1326 + " <sortedMethods.get(9).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()' é diferente de " + result1327 + " <sortedMethods.get(10).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()' é diferente de " + result1328 + " <sortedMethods.get(11).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()' é diferente de " + result1329 + " <sortedMethods.get(12).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1330 + " <sortedMethods.get(13).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSetcom.github.javaparser.ast.Modifier)' é diferente de " + result1331 + " <sortedMethods.get(14).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setName(java.lang.String)' é diferente de " + result1332 + " <sortedMethods.get(15).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)' é diferente de " + result1333 + " <sortedMethods.get(16).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setParameters(java.util.Listcom.github.javaparser.ast.body.Parameter)' é diferente de " + result1334 + " <sortedMethods.get(17).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setThrows(java.util.Listcom.github.javaparser.ast.type.ReferenceType)' é diferente de " + result1335 + " <sortedMethods.get(18).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setTypeParameters(java.util.Listcom.github.javaparser.ast.type.TypeParameter)' é diferente de " + result1336 + " <sortedMethods.get(19).getQualifiedSignature()>"
"Era esperado valores iguais, mas " + result1337 + " <expected.size()> é diferente de " + result1338 + " <signatures.size()>"
"Era esperado valores iguais, mas  4 é diferente de " + result1339 + " <constructors.size()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration()' é diferente de " + result1340 + " <constructors.get(0).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(java.util.EnumSetcom.github.javaparser.ast.Modifier, java.lang.String)' é diferente de " + result1341 + " <constructors.get(1).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(java.util.EnumSetcom.github.javaparser.ast.Modifier, java.util.Listcom.github.javaparser.ast.expr.AnnotationExpr, java.util.Listcom.github.javaparser.ast.type.TypeParameter, java.lang.String, java.util.Listcom.github.javaparser.ast.body.Parameter, java.util.Listcom.github.javaparser.ast.type.ReferenceType, com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1342 + " <constructors.get(2).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(com.github.javaparser.Range, java.util.EnumSetcom.github.javaparser.ast.Modifier, java.util.Listcom.github.javaparser.ast.expr.AnnotationExpr, java.util.Listcom.github.javaparser.ast.type.TypeParameter, java.lang.String, java.util.Listcom.github.javaparser.ast.body.Parameter, java.util.Listcom.github.javaparser.ast.type.ReferenceType, com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1343 + " <constructors.get(3).getSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers.isStatic()' é diferente de " + result1344 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class? extends java.lang.Throwable)' é diferente de " + result1345 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)' é diferente de " + result1346 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class? extends java.lang.Throwable)' é diferente de " + result1347 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado verdadeiro, mas " + result1348 + " <ca.hasDirectlyAnnotation('foo.bar.MyAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result1349 + " <cb.hasDirectlyAnnotation('foo.bar.MyAnnotation2')> é falso"
"Era esperado verdadeiro, mas " + result1350 + " <ca.hasAnnotation('foo.bar.MyAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result1351 + " <cb.hasAnnotation('foo.bar.MyAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result1352 + " <cb.hasAnnotation('foo.bar.MyAnnotation2')> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'FooBase' é diferente de " + result1353 + " <ancestors.get(0).getQualifiedName()>"
"Era esperado valores iguais, mas  false é diferente de " + result1354 + " <modifier.isClass()>"
"Era esperado valores iguais, mas  false é diferente de " + result1355 + " <modifier.isInterface()>"
"Era esperado valores iguais, mas  true é diferente de " + result1356 + " <modifier.isEnum()>"
"Era esperado valores iguais, mas  false é diferente de " + result1357 + " <modifier.isTypeParameter()>"
"Era esperado valores iguais, mas  true é diferente de " + result1358 + " <modifier.isType()>"
"Era esperado valores iguais, mas  modifier é diferente de " + result1359 + " <modifier.asType()>"
"Era esperado valores iguais, mas  modifier é diferente de " + result1360 + " <modifier.asEnum()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast' é diferente de " + result1361 + " <modifier.getPackageName()>"
"Era esperado valores iguais, mas  'Modifier' é diferente de " + result1362 + " <modifier.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Modifier' é diferente de " + result1363 + " <modifier.getQualifiedName()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1364 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'java.lang.Enum' é diferente de " + result1365 + " <ancestors.get(0).getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1366 + " <ancestors.get(1).getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1367 + " <compilationUnit.getSuperClass().get().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1368 + " <compilationUnit.getSuperClass().get().typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1369 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1370 + " <cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  3 é diferente de " + result1371 + " <constructorDeclaration.getAllSuperClasses().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1372 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1373 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1374 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1375 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  7 é diferente de " + result1376 + " <constructorDeclaration.getInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1377 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1378 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1379 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1380 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1381 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1382 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1383 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1384 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1385 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1386 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1387 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1388 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1389 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  9 é diferente de " + result1390 + " <constructorDeclaration.getAllInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1391 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1392 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1393 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1394 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1395 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1396 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1397 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1398 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1399 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1400 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1401 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1402 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1403 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1404 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1405 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1406 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  8 é diferente de " + result1407 + " <constructorDeclaration.getAncestors().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1408 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1409 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1410 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1411 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1412 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1413 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1414 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1415 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1416 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1417 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1418 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1419 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1420 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1421 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1422 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1423 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1424 + " <cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  12 é diferente de " + result1425 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1426 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1427 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1428 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1429 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1430 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1431 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1432 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1433 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1434 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1435 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1436 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1437 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1438 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1439 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1440 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1441 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1442 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1443 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1444 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1445 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1446 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'java.util.EnumSet' é diferente de " + result1447 + " <fieldDeclaration.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  AccessSpecifier.PRIVATE é diferente de " + result1448 + " <fieldDeclaration.accessSpecifier()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1449 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result1450 + " <fieldDeclaration.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  AccessSpecifier.PRIVATE é diferente de " + result1451 + " <fieldDeclaration.accessSpecifier()>"
"Era esperado valores iguais, mas  16 é diferente de " + result1452 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1453 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1454 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1455 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1456 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1457 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1458 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1459 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'NODE_BY_BEGIN_POSITION' é diferente de " + result1460 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'range' é diferente de " + result1461 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parentNode' é diferente de " + result1462 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'childrenNodes' é diferente de " + result1463 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'orphanComments' é diferente de " + result1464 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'userData' é diferente de " + result1465 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'comment' é diferente de " + result1466 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_BEGIN_LINE' é diferente de " + result1467 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_END_LINE' é diferente de " + result1468 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1469 + " <allFields.size()>"
"Era esperado valores iguais, mas  'NODE_BY_BEGIN_POSITION' é diferente de " + result1470 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_BEGIN_LINE' é diferente de " + result1471 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_END_LINE' é diferente de " + result1472 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  13 é diferente de " + result1473 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1474 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1475 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1476 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1477 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1478 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1479 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1480 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'range' é diferente de " + result1481 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parentNode' é diferente de " + result1482 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'childrenNodes' é diferente de " + result1483 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'orphanComments' é diferente de " + result1484 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'userData' é diferente de " + result1485 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'comment' é diferente de " + result1486 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  6 é diferente de " + result1487 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1488 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1489 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1490 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1491 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1492 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1493 + " <fieldDeclaration.getName()>"
"Era esperado valores iguais, mas  20 é diferente de " + result1494 + " <allMethods.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.GenericVisitorR, A, A)' é diferente de " + result1495 + " <sortedMethods.get(0).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitorA, A)' é diferente de " + result1496 + " <sortedMethods.get(1).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getBody()' é diferente de " + result1497 + " <sortedMethods.get(2).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString()' é diferente de " + result1498 + " <sortedMethods.get(3).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean)' é diferente de " + result1499 + " <sortedMethods.get(4).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean, boolean)' é diferente de " + result1500 + " <sortedMethods.get(5).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getJavaDoc()' é diferente de " + result1501 + " <sortedMethods.get(6).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()' é diferente de " + result1502 + " <sortedMethods.get(7).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getName()' é diferente de " + result1503 + " <sortedMethods.get(8).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getNameExpr()' é diferente de " + result1504 + " <sortedMethods.get(9).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()' é diferente de " + result1505 + " <sortedMethods.get(10).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()' é diferente de " + result1506 + " <sortedMethods.get(11).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()' é diferente de " + result1507 + " <sortedMethods.get(12).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1508 + " <sortedMethods.get(13).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSetcom.github.javaparser.ast.Modifier)' é diferente de " + result1509 + " <sortedMethods.get(14).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setName(java.lang.String)' é diferente de " + result1510 + " <sortedMethods.get(15).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)' é diferente de " + result1511 + " <sortedMethods.get(16).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setParameters(java.util.Listcom.github.javaparser.ast.body.Parameter)' é diferente de " + result1512 + " <sortedMethods.get(17).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setThrows(java.util.Listcom.github.javaparser.ast.type.ReferenceType)' é diferente de " + result1513 + " <sortedMethods.get(18).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setTypeParameters(java.util.Listcom.github.javaparser.ast.type.TypeParameter)' é diferente de " + result1514 + " <sortedMethods.get(19).getQualifiedSignature()>"
"Era esperado valores iguais, mas  4 é diferente de " + result1515 + " <constructors.size()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration()' é diferente de " + result1516 + " <constructors.get(0).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(java.util.EnumSetcom.github.javaparser.ast.Modifier, java.lang.String)' é diferente de " + result1517 + " <constructors.get(1).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(java.util.EnumSetcom.github.javaparser.ast.Modifier, java.util.Listcom.github.javaparser.ast.expr.AnnotationExpr, java.util.Listcom.github.javaparser.ast.type.TypeParameter, java.lang.String, java.util.Listcom.github.javaparser.ast.body.Parameter, java.util.Listcom.github.javaparser.ast.type.ReferenceType, com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1518 + " <constructors.get(2).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(com.github.javaparser.Range, java.util.EnumSetcom.github.javaparser.ast.Modifier, java.util.Listcom.github.javaparser.ast.expr.AnnotationExpr, java.util.Listcom.github.javaparser.ast.type.TypeParameter, java.lang.String, java.util.Listcom.github.javaparser.ast.body.Parameter, java.util.Listcom.github.javaparser.ast.type.ReferenceType, com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1519 + " <constructors.get(3).getSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers.isStatic()' é diferente de " + result1520 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class? extends java.lang.Throwable)' é diferente de " + result1521 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)' é diferente de " + result1522 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class? extends java.lang.Throwable)' é diferente de " + result1523 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  false é diferente de " + result1524 + " <res.isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result1525 + " <res.isSolved()>"
"Era esperado valores iguais, mas  0 é diferente de " + result1526 + " <internalTypes1.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result1527 + " <internalTypes2.size()>"
"Era esperado valores iguais, mas  'EnumWithInnerType.EnumInner' é diferente de " + result1528 + " <internalTypes2.iterator().next().getQualifiedName()>"
"Era esperado valores iguais, mas  false é diferente de " + result1529 + " <dec.hasDirectlyAnnotation('javax.persistence.Embeddable')>"
"Era esperado valores iguais, mas  false é diferente de " + result1530 + " <dec.hasDirectlyAnnotation('javax.persistence.Embeddable')>"
"Era esperado valores iguais, mas  true é diferente de " + result1531 + " <dec.hasDirectlyAnnotation('MyAnno')>"
"Era esperado verdadeiro, mas " + result1532 + " <field.isField()> é falso"
"Era esperado que nenhuma exceção fosse lançada, mas  field::asField foi lançada"
"Era esperado verdadeiro, mas " + result1533 + " <parameterDeclaration.isParameter()> é falso"
"Era esperado que nenhuma exceção fosse lançada, mas  parameterDeclaration::asParameter foi lançada"
"Era esperado verdadeiro, mas " + result1534 + " <localVar.isVariable()> é falso"
"Era esperado verdadeiro, mas " + result1535 + " <patternVar.isPattern()> é falso"
"Era esperado que nenhuma exceção fosse lançada, mas  patternVar::asPattern foi lançada"
"Era esperado não nulo, mas " + result1536 + " <createValue().getWrappedNode()> é nulo"
"Era esperado valores iguais, mas  expectedTypes é diferente de " + result1537 + " <parserTypeParameter.getAncestors().stream().map(ResolvedReferenceType::getQualifiedName).sorted().collect(Collectors.toList())>"
"Era esperado valores iguais, mas  false é diferente de " + result1538 + " <nodeWithAnnotations.isClass()>"
"Era esperado valores iguais, mas  true é diferente de " + result1539 + " <nodeWithAnnotations.isInterface()>"
"Era esperado valores iguais, mas  false é diferente de " + result1540 + " <nodeWithAnnotations.isEnum()>"
"Era esperado valores iguais, mas  false é diferente de " + result1541 + " <nodeWithAnnotations.isTypeParameter()>"
"Era esperado valores iguais, mas  true é diferente de " + result1542 + " <nodeWithAnnotations.isType()>"
"Era esperado valores iguais, mas  nodeWithAnnotations é diferente de " + result1543 + " <nodeWithAnnotations.asType()>"
"Era esperado valores iguais, mas  nodeWithAnnotations é diferente de " + result1544 + " <nodeWithAnnotations.asInterface()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes' é diferente de " + result1545 + " <nodeWithAnnotations.getPackageName()>"
"Era esperado valores iguais, mas  'NodeWithAnnotations' é diferente de " + result1546 + " <nodeWithAnnotations.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1547 + " <nodeWithAnnotations.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1548 + " <compilationUnit.getSuperClass().get().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1549 + " <compilationUnit.getSuperClass().get().typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1550 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1551 + " <cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  1 é diferente de " + result1552 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'Base' é diferente de " + result1553 + " <ancestors.get(0).getQualifiedName()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1554 + " <types.size()>"
"Era esperado valores iguais, mas  'java.lang.Integer' é diferente de " + result1555 + " <types.get(0).asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'Extends' é diferente de " + result1556 + " <types.get(1).asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1557 + " <constructorDeclaration.getAllSuperClasses().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1558 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1559 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1560 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1561 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  7 é diferente de " + result1562 + " <constructorDeclaration.getInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1563 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1564 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1565 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1566 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1567 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1568 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1569 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1570 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1571 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1572 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1573 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1574 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1575 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  9 é diferente de " + result1576 + " <constructorDeclaration.getAllInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1577 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1578 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1579 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1580 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1581 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1582 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1583 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1584 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1585 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1586 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1587 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1588 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1589 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1590 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1591 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1592 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  8 é diferente de " + result1593 + " <constructorDeclaration.getAncestors().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1594 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1595 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1596 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1597 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1598 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1599 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1600 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1601 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1602 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1603 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1604 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1605 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1606 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1607 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1608 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1609 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1610 + " <cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  12 é diferente de " + result1611 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1612 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1613 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1614 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1615 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1616 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result1617 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1618 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result1619 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1620 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result1621 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result1622 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1623 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1624 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1625 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1626 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1627 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result1628 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1629 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1630 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1631 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1632 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'java.util.EnumSet' é diferente de " + result1633 + " <ResolvedFieldDeclaration.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  AccessSpecifier.PRIVATE é diferente de " + result1634 + " <ResolvedFieldDeclaration.accessSpecifier()>"
"Era esperado valores iguais, mas  false é diferente de " + result1635 + " <ResolvedFieldDeclaration.isStatic()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1636 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result1637 + " <ResolvedFieldDeclaration.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  AccessSpecifier.PRIVATE é diferente de " + result1638 + " <ResolvedFieldDeclaration.accessSpecifier()>"
"Era esperado valores iguais, mas  16 é diferente de " + result1639 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1640 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1641 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1642 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1643 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1644 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1645 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1646 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'NODE_BY_BEGIN_POSITION' é diferente de " + result1647 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'range' é diferente de " + result1648 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parentNode' é diferente de " + result1649 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'childrenNodes' é diferente de " + result1650 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'orphanComments' é diferente de " + result1651 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'userData' é diferente de " + result1652 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'comment' é diferente de " + result1653 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_BEGIN_LINE' é diferente de " + result1654 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_END_LINE' é diferente de " + result1655 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1656 + " <allFields.size()>"
"Era esperado valores iguais, mas  'NODE_BY_BEGIN_POSITION' é diferente de " + result1657 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_BEGIN_LINE' é diferente de " + result1658 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'ABSOLUTE_END_LINE' é diferente de " + result1659 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  13 é diferente de " + result1660 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1661 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1662 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1663 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1664 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1665 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1666 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'annotations' é diferente de " + result1667 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'range' é diferente de " + result1668 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parentNode' é diferente de " + result1669 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'childrenNodes' é diferente de " + result1670 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'orphanComments' é diferente de " + result1671 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'userData' é diferente de " + result1672 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'comment' é diferente de " + result1673 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  6 é diferente de " + result1674 + " <allFields.size()>"
"Era esperado valores iguais, mas  'modifiers' é diferente de " + result1675 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'typeParameters' é diferente de " + result1676 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result1677 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'parameters' é diferente de " + result1678 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'throws_' é diferente de " + result1679 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  'body' é diferente de " + result1680 + " <ResolvedFieldDeclaration.getName()>"
"Era esperado valores iguais, mas  20 é diferente de " + result1681 + " <allMethods.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.GenericVisitorR, A, A)' é diferente de " + result1682 + " <sortedMethods.get(0).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitorA, A)' é diferente de " + result1683 + " <sortedMethods.get(1).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getBody()' é diferente de " + result1684 + " <sortedMethods.get(2).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString()' é diferente de " + result1685 + " <sortedMethods.get(3).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean)' é diferente de " + result1686 + " <sortedMethods.get(4).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getDeclarationAsString(boolean, boolean, boolean)' é diferente de " + result1687 + " <sortedMethods.get(5).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getJavaDoc()' é diferente de " + result1688 + " <sortedMethods.get(6).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()' é diferente de " + result1689 + " <sortedMethods.get(7).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getName()' é diferente de " + result1690 + " <sortedMethods.get(8).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getNameExpr()' é diferente de " + result1691 + " <sortedMethods.get(9).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()' é diferente de " + result1692 + " <sortedMethods.get(10).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()' é diferente de " + result1693 + " <sortedMethods.get(11).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()' é diferente de " + result1694 + " <sortedMethods.get(12).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1695 + " <sortedMethods.get(13).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSetcom.github.javaparser.ast.Modifier)' é diferente de " + result1696 + " <sortedMethods.get(14).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setName(java.lang.String)' é diferente de " + result1697 + " <sortedMethods.get(15).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)' é diferente de " + result1698 + " <sortedMethods.get(16).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setParameters(java.util.Listcom.github.javaparser.ast.body.Parameter)' é diferente de " + result1699 + " <sortedMethods.get(17).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setThrows(java.util.Listcom.github.javaparser.ast.type.ReferenceType)' é diferente de " + result1700 + " <sortedMethods.get(18).getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration.setTypeParameters(java.util.Listcom.github.javaparser.ast.type.TypeParameter)' é diferente de " + result1701 + " <sortedMethods.get(19).getQualifiedSignature()>"
"Era esperado valores iguais, mas  4 é diferente de " + result1702 + " <constructors.size()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration()' é diferente de " + result1703 + " <constructors.get(0).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(java.util.EnumSetcom.github.javaparser.ast.Modifier, java.lang.String)' é diferente de " + result1704 + " <constructors.get(1).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(java.util.EnumSetcom.github.javaparser.ast.Modifier, java.util.Listcom.github.javaparser.ast.expr.AnnotationExpr, java.util.Listcom.github.javaparser.ast.type.TypeParameter, java.lang.String, java.util.Listcom.github.javaparser.ast.body.Parameter, java.util.Listcom.github.javaparser.ast.type.ReferenceType, com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1705 + " <constructors.get(2).getSignature()>"
"Era esperado valores iguais, mas  'ConstructorDeclaration(com.github.javaparser.Range, java.util.EnumSetcom.github.javaparser.ast.Modifier, java.util.Listcom.github.javaparser.ast.expr.AnnotationExpr, java.util.Listcom.github.javaparser.ast.type.TypeParameter, java.lang.String, java.util.Listcom.github.javaparser.ast.body.Parameter, java.util.Listcom.github.javaparser.ast.type.ReferenceType, com.github.javaparser.ast.stmt.BlockStmt)' é diferente de " + result1706 + " <constructors.get(3).getSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers.isStatic()' é diferente de " + result1707 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class? extends java.lang.Throwable)' é diferente de " + result1708 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)' é diferente de " + result1709 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.Class? extends java.lang.Throwable)' é diferente de " + result1710 + " <res.getCorrespondingDeclaration().getQualifiedSignature()>"
"Era esperado valores iguais, mas  false é diferente de " + result1711 + " <res.isSolved()>"
"Era esperado valores iguais, mas  false é diferente de " + result1712 + " <res.isSolved()>"
"Era esperado verdadeiro, mas " + result1713 + " <rfd.isVolatile()> é falso"
"Era esperado valores iguais, mas " + result1714 + " <int.class.getCanonicalName()> é diferente de " + result1715 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas " + result1716 + " <String.class.getCanonicalName()> é diferente de " + result1717 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas " + result1718 + " <String.class.getCanonicalName()> é diferente de " + result1719 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas " + result1720 + " <TestEnum.class.getCanonicalName()> é diferente de " + result1721 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas " + result1722 + " <Override.class.getCanonicalName()> é diferente de " + result1723 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result1724 + " <javaParserFacade.solve(firstFieldMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1725 + " <javaParserFacade.solve(secondFieldMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1726 + " <javaParserFacade.solve(thirdFieldMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1727 + " <javaParserFacade.solve(methodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1728 + " <javaParserFacade.solve(innerMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1729 + " <javaParserFacade.solve(innerInnerMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1730 + " <javaParserFacade.solve(methodCallWithNestedStaticFieldParam).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1731 + " <javaParserFacade.solve(staticMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1732 + " <javaParserFacade.solve(methodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1733 + " <javaParserFacade.solve(innerMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1734 + " <javaParserFacade.solve(innerInnerMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1735 + " <javaParserFacade.solve(firstFieldMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1736 + " <javaParserFacade.solve(secondFieldMethodCall).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1737 + " <javaParserFacade.solve(thirdFieldMethodCall).isSolved()>"
"Era esperado falso, mas " + result1738 + " <annotation.get().resolve().isInheritable()> é verdadeiro "
"Era esperado falso, mas " + result1739 + " <compilationUnit.isInterface()> é verdadeiro "
"Era esperado falso, mas " + result1740 + " <compilationUnit.isEnum()> é verdadeiro "
"Era esperado falso, mas " + result1741 + " <compilationUnit.isTypeParameter()> é verdadeiro "
"Era esperado falso, mas " + result1742 + " <fieldDeclaration.isStatic()> é verdadeiro "
"Era esperado falso, mas " + result1743 + " <res.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1744 + " <res.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1745 + " <res.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result1746 + " <ca.hasDirectlyAnnotation('foo.bar.MyAnnotation2')> é verdadeiro "
"Era esperado falso, mas " + result1747 + " <ca.hasDirectlyAnnotation('MyAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1748 + " <ca.hasDirectlyAnnotation('foo.bar.MyUnexistingAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1749 + " <cb.hasDirectlyAnnotation('foo.bar.MyAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1750 + " <cb.hasDirectlyAnnotation('MyAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1751 + " <cb.hasDirectlyAnnotation('foo.bar.MyUnexistingAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1752 + " <ca.hasAnnotation('foo.bar.MyAnnotation2')> é verdadeiro "
"Era esperado falso, mas " + result1753 + " <ca.hasAnnotation('MyAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1754 + " <ca.hasAnnotation('foo.bar.MyUnexistingAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1755 + " <cb.hasAnnotation('MyAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1756 + " <cb.hasAnnotation('foo.bar.MyUnexistingAnnotation')> é verdadeiro "
"Era esperado falso, mas " + result1757 + " <fieldDeclaration.isStatic()> é verdadeiro "
"Era esperado falso, mas " + result1758 + " <rfd.isVolatile()> é verdadeiro "
"Era esperado verdadeiro, mas " + result1759 + " <alphaContext.solveType('Foo').isSolved()> é falso"
"Era esperado verdadeiro, mas " + result1760 + " <alphaContext.solveType('Foo', Collections.emptyList()).isSolved()> é falso"
"Era esperado falso, mas " + result1761 + " <alphaContext.solveType('Foo', Collections.singletonList(ResolvedPrimitiveType.INT)).isSolved()> é verdadeiro "
"Era esperado verdadeiro, mas " + result1762 + " <betaContext.solveType('Foo').isSolved()> é falso"
"Era esperado falso, mas " + result1763 + " <betaContext.solveType('Foo', Collections.emptyList()).isSolved()> é verdadeiro "
"Era esperado verdadeiro, mas " + result1764 + " <betaContext.solveType('Foo', Collections.singletonList(ResolvedPrimitiveType.INT)).isSolved()> é falso"
"Era esperado valores iguais, mas " + result1765 + " <String.class.getCanonicalName()> é diferente de " + result1766 + " <type.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1767 + " <normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY)> é diferente de " + result1768 + " <normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY)>"
"Era esperado valores iguais, mas  'java.io.PrintStream.println(java.lang.String)' é diferente de " + result1769 + " <resolvedMethodDeclaration.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'java.util.function.Consumer? super T' é diferente de " + result1770 + " <type.describe()>"
"Era esperado verdadeiro, mas " + result1771 + " <parseResult.isSuccessful()> é falso"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result1772 + " <javaParserFacade.getType(methodCallExpr).describe()>"
"Era esperado valores iguais, mas  'java.util.function.Predicate? super java.lang.String' é diferente de " + result1773 + " <javaParserFacade.getType(lambdas.get(0)).describe()>"
"Era esperado valores iguais, mas  'java.util.function.Function? super java.lang.String, ? extends java.lang.Integer' é diferente de " + result1774 + " <javaParserFacade.getType(lambdas.get(1)).describe()>"
"Era esperado valores iguais, mas  'java.util.function.Predicate? super java.lang.Integer' é diferente de " + result1775 + " <javaParserFacade.getType(lambdas.get(2)).describe()>"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  ResolvedPrimitiveType.INT é diferente de " + result1776 + " <ref.getCorrespondingDeclaration().getType().asPrimitive()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'java.util.Comparatorjava.lang.String' é diferente de " + result1777 + " <oce.calculateResolvedType().describe()>"
"Era esperado verdadeiro, mas " + result1778 + " <oce.resolve().getQualifiedName().startsWith('A.Anonymous')> é falso"
"Era esperado valores iguais, mas  false é diferente de " + result1779 + " <FunctionalInterfaceLogic.getFunctionalMethod(string).isPresent()>"
"Era esperado valores iguais, mas  true é diferente de " + result1780 + " <FunctionalInterfaceLogic.getFunctionalMethod(function).isPresent()>"
"Era esperado valores iguais, mas  'apply' é diferente de " + result1781 + " <FunctionalInterfaceLogic.getFunctionalMethod(function).get().getName()>"
"Era esperado valores iguais, mas  true é diferente de " + result1782 + " <FunctionalInterfaceLogic.getFunctionalMethod(consumer).isPresent()>"
"Era esperado valores iguais, mas  'accept' é diferente de " + result1783 + " <FunctionalInterfaceLogic.getFunctionalMethod(consumer).get().getName()>"
"Era esperado valores iguais, mas  false é diferente de " + result1784 + " <FunctionalInterfaceLogic.getFunctionalMethod(function).isPresent()>"
"Era esperado valores iguais, mas  object é diferente de " + " result"
"Era esperado valores iguais, mas  new InferenceVariableType(0, typeSolver) é diferente de " + " result"
"Era esperado valores iguais, mas " + result1785 + " <listOf(new InferenceVariableType(0, typeSolver))> é diferente de " + " result"
"Era esperado valores iguais, mas " + result1786 + " <isFunctionalInterface(abstractTypeDeclaration)> é diferente de " + result1787 + " <abstractTypeDeclaration.isFunctionalInterface()>"
"Era esperado valores iguais, mas  0 é diferente de " + result1788 + " <cu.getComments().size()>"
"Era esperado falso, mas " + result1789 + " <cu.getComment().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  0 é diferente de " + result1790 + " <cu.getComments().size()>"
"Era esperado falso, mas " + result1791 + " <cu.getComment().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  2 é diferente de " + result1792 + " <comments.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1793 + " <comments.size()>"
"Era esperado valores iguais, mas  6 é diferente de " + result1794 + " <comments.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result1795 + " <comments.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result1796 + " <comments.size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1797 + " <comments.size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result1798 + " <comments.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1799 + " <classes.size()>"
"Era esperado verdadeiro, mas " + result1800 + " <innerInterface.isInterface()> é falso"
"Era esperado verdadeiro, mas " + result1801 + " <resolvedType.isPresent()> é falso"
"Era esperado valores iguais, mas  innerInterface é diferente de " + result1802 + " <resolvedType.get().getTypeDeclaration().orElse(null)>"
"Era esperado valores iguais, mas  'ObjectContext.set(java.lang.String, java.lang.Object, boolean)' é diferente de " + result1803 + " <mces.get(0).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  true é diferente de " + result1804 + " <javaParserFacade.solve(firstParameter).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1805 + " <javaParserFacade.solve(firstParameter).getCorrespondingDeclaration().isField()>"
"Era esperado valores iguais, mas  'hw' é diferente de " + result1806 + " <javaParserFacade.solve(firstParameter).getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  true é diferente de " + result1807 + " <javaParserFacade.solve(firstParameter).isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1808 + " <javaParserFacade.solve(firstParameter).isSolved()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1809 + " <all.size()>"
"Era esperado valores iguais, mas  'recovered' é diferente de " + result1810 + " <fieldAccessExpr.getNameAsString()>"
"Era esperado verdadeiro, mas " + result1811 + " <resolved.getType().isPrimitive()> é falso"
"Era esperado valores iguais, mas  'java.lang.Integer' é diferente de " + result1812 + " <resolved.getType().asPrimitive().getBoxTypeQName()>"
"Era esperado valores iguais, mas  'perPriority' é diferente de " + result1813 + " <fieldAccessExpr.getNameAsString()>"
"Era esperado verdadeiro, mas " + result1814 + " <resolved.getType().isArray()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result1815 + " <all.size()>"
"Era esperado valores iguais, mas  'recovered' é diferente de " + result1816 + " <fieldAccessExpr.getNameAsString()>"
"Era esperado verdadeiro, mas " + result1817 + " <resolved.getType().isPrimitive()> é falso"
"Era esperado valores iguais, mas  'java.lang.Integer' é diferente de " + result1818 + " <resolved.getType().asPrimitive().getBoxTypeQName()>"
"Era esperado valores iguais, mas  'perPriority' é diferente de " + result1819 + " <fieldAccessExpr.getNameAsString()>"
"Era esperado verdadeiro, mas " + result1820 + " <resolved.getType().isArray()> é falso"
"Era esperado verdadeiro, mas " + result1821 + " <resolved.isTypeVariable()> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'foo' é diferente de " + result1822 + " <resolvedMethodDeclaration.getName()>"
"Era esperado valores iguais, mas  'A[]' é diferente de " + result1823 + " <resolvedMethodDeclaration.getReturnType().describe()>"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result1824 + " <resolvedMethodDeclaration.getParam(0).getType().describe()>"
"Era esperado valores iguais, mas  'int[]' é diferente de " + result1825 + " <resolvedMethodDeclaration.getParam(1).getType().describe()>"
"Era esperado valores iguais, mas  'hashCode' é diferente de " + result1826 + " <resolvedMethodRef.getName()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result1827 + " <resolvedMethodRef.getReturnType().describe()>"
"Era esperado valores iguais, mas  0 é diferente de " + result1828 + " <resolvedMethodRef.getNumberOfParams()>"
"Era esperado valores iguais, mas  'A[]' é diferente de " + result1829 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result1830 + " <symbolReference.isSolved()>"
"Era esperado valores iguais, mas  true é diferente de " + result1831 + " <symbolReference.getCorrespondingDeclaration().isField()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result1832 + " <symbolReference.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas  'U9.U9(java.util.Optionaljava.lang.String, java.util.OptionalU9, int)' é diferente de " + result1833 + " <oces.get(0).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'U9.U9(java.util.Optionaljava.lang.String, java.util.OptionalU9, int)' é diferente de " + result1834 + " <oces.get(1).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'U9.U9(java.util.Optionaljava.lang.String, java.util.Optionaljava.lang.String, java.lang.String)' é diferente de " + result1835 + " <oces.get(2).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'U9.U9(java.util.OptionalU9, java.util.OptionalU9, boolean)' é diferente de " + result1836 + " <oces.get(3).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas " + result1837 + " <oce.resolve().getSignature()> é diferente de " + " 'InnerClass(int)'"
"Era esperado verdadeiro, mas " + result1838 + " <optionalFieldDeclaration.isPresent()> é falso"
"Era esperado valores iguais, mas " + result1839 + " <Spliterator.OfInt.class.getCanonicalName()> é diferente de " + result1840 + " <resolvedField.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  false é diferente de " + result1841 + " <javaParserFacade.solve(methodCallExpr).isSolved()>"
"Era esperado valores iguais, mas  'AParserTest.doSomething(java.lang.String, java.util.function.Supplier?...)' é diferente de " + result1842 + " <rmd.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'A.A(java.lang.Boolean)' é diferente de " + result1843 + " <oces.get(0).resolve().getQualifiedSignature()>"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  'MyEnum.method()' é diferente de " + result1844 + " <resolvedCall.getQualifiedSignature()>"
"Era esperado valores iguais, mas  'foo.A' é diferente de " + result1845 + " <ancestors.get(0).describe()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1846 + " <lambdas.size()>"
"Era esperado valores iguais, mas  'java.util.function.Consumerjava.lang.String' é diferente de " + result1847 + " <lambdas.get(0).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'java.util.function.Consumerjava.lang.String' é diferente de " + result1848 + " <lambdas.get(1).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  2 é diferente de " + result1849 + " <exprs.size()>"
"Era esperado valores iguais, mas  '? super java.lang.String' é diferente de " + result1850 + " <exprs.get(0).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  '? super java.lang.String' é diferente de " + result1851 + " <exprs.get(1).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result1852 + " <mce.calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'java.lang.String.length' é diferente de " + result1853 + " <mce.resolve().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result1854 + " <mce.getScope().get().calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'java.lang.SuppressWarnings' é diferente de " + result1855 + " <nae.resolve().getQualifiedName()>"
"Era esperado valores iguais, mas  'hashCode()' é diferente de " + result1856 + " <hashCode.getSignature()>"
"Era esperado valores iguais, mas  'equals(java.lang.Object)' é diferente de " + result1857 + " <equals.getSignature()>"
"Era esperado valores iguais, mas  'containsAll(java.util.Collection? extends java.lang.Object)' é diferente de " + result1858 + " <containsAll.getSignature()>"
"Era esperado valores iguais, mas  'subList(int, int)' é diferente de " + result1859 + " <subList.getSignature()>"
"Era esperado valores iguais, mas  true é diferente de " + result1860 + " <put.getReturnType().isTypeVariable()>"
"Era esperado valores iguais, mas  true é diferente de " + result1861 + " <put.getReturnType().asTypeParameter().declaredOnType()>"
"Era esperado valores iguais, mas  'java.util.Map.V' é diferente de " + result1862 + " <put.getReturnType().asTypeParameter().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result1863 + " <put.getParam(0).getType().isTypeVariable()>"
"Era esperado valores iguais, mas  true é diferente de " + result1864 + " <put.getParam(0).getType().asTypeParameter().declaredOnType()>"
"Era esperado valores iguais, mas  'java.util.Map.K' é diferente de " + result1865 + " <put.getParam(0).getType().asTypeParameter().getQualifiedName()>"
"Era esperado valores iguais, mas  true é diferente de " + result1866 + " <put.getParam(1).getType().isTypeVariable()>"
"Era esperado valores iguais, mas  true é diferente de " + result1867 + " <put.getParam(1).getType().asTypeParameter().declaredOnType()>"
"Era esperado valores iguais, mas  'java.util.Map.V' é diferente de " + result1868 + " <put.getParam(1).getType().asTypeParameter().getQualifiedName()>"
"Era esperado valores iguais, mas  2 é diferente de " + " foundCount"
"Era esperado valores iguais, mas  2 é diferente de " + result1869 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1870 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1871 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  2 é diferente de " + result1872 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1873 + " <ancestors.get(0)>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1874 + " <ancestors.get(1)>"
"Era esperado valores iguais, mas  6 é diferente de " + result1875 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Buffer.class, typeResolver)) é diferente de " + result1876 + " <ancestors.get(0)>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Appendable.class, typeResolver)) é diferente de " + result1877 + " <ancestors.get(2)>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(CharSequence.class, typeResolver)) é diferente de " + result1878 + " <ancestors.get(3)>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Readable.class, typeResolver)) é diferente de " + result1879 + " <ancestors.get(4)>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)) é diferente de " + result1880 + " <ancestors.get(5)>"
"Era esperado valores iguais, mas  true é diferente de " + result1881 + " <foo.isClass()>"
"Era esperado valores iguais, mas  true é diferente de " + result1882 + " <bar.isClass()>"
"Era esperado valores iguais, mas " + result1883 + " <Object.class.getCanonicalName()> é diferente de " + result1884 + " <foo.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getQualifiedName()>"
"Era esperado valores iguais, mas " + result1885 + " <Collections.emptyList()> é diferente de " + result1886 + " <foo.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues()>"
"Era esperado valores iguais, mas  'Bar' é diferente de " + result1887 + " <foo.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getTypeDeclaration().get().getName()>"
"Era esperado valores iguais, mas " + result1888 + " <Collections.emptyList()> é diferente de " + result1889 + " <foo.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues()>"
"Era esperado valores iguais, mas  'Foo' é diferente de " + result1890 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getTypeDeclaration().get().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result1891 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().size()>"
"Era esperado valores iguais, mas " + result1892 + " <String.class.getCanonicalName()> é diferente de " + result1893 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().get(0).asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'Foo' é diferente de " + result1894 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getTypeDeclaration().get().getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result1895 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result1896 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().get(0).isTypeVariable()>"
"Era esperado valores iguais, mas  'E' é diferente de " + result1897 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().get(0).asTypeParameter().getName()>"
"Era esperado valores iguais, mas  true é diferente de " + result1898 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().get(0).asTypeParameter().declaredOnType()>"
"Era esperado valores iguais, mas  false é diferente de " + result1899 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().get(0).asTypeParameter().declaredOnMethod()>"
"Era esperado verdadeiro, mas " + result1900 + " <bar.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersValues().get(0).asTypeParameter().getQualifiedName().endsWith('Bar.E')> é falso"
"Era esperado valores iguais, mas  true é diferente de " + result1901 + " <foo.isClass()>"
"Era esperado valores iguais, mas  true é diferente de " + result1902 + " <bar.isClass()>"
"Era esperado valores iguais, mas  true é diferente de " + result1903 + " <fooField.getType().isTypeVariable()>"
"Era esperado valores iguais, mas  'E' é diferente de " + result1904 + " <fooField.getType().asTypeParameter().getName()>"
"Era esperado valores iguais, mas  true é diferente de " + result1905 + " <barField.getType().isReferenceType()>"
"Era esperado valores iguais, mas " + result1906 + " <String.class.getCanonicalName()> é diferente de " + result1907 + " <barField.getType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  3 é diferente de " + " foundCount"
"Era esperado valores iguais, mas  1 é diferente de " + result1908 + " <locale.getConstructors().size()>"
"Era esperado valores iguais, mas " + result1909 + " <ImmutableSet.of(Serializable.class.getCanonicalName(), Cloneable.class.getCanonicalName(), List.class.getCanonicalName(), RandomAccess.class.getCanonicalName())> é diferente de " + result1910 + " <arraylist.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result1911 + " <ImmutableSet.of(Serializable.class.getCanonicalName(), Cloneable.class.getCanonicalName(), List.class.getCanonicalName(), RandomAccess.class.getCanonicalName(), Collection.class.getCanonicalName(), Iterable.class.getCanonicalName())> é diferente de " + result1912 + " <arraylist.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result1913 + " <ImmutableSet.of(Object.class.getCanonicalName(), AbstractCollection.class.getCanonicalName(), AbstractList.class.getCanonicalName())> é diferente de " + result1914 + " <arraylist.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result1915 + " <ImmutableSet.of(Object.class.getCanonicalName())> é diferente de " + result1916 + " <string.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  'java.util' é diferente de " + result1917 + " <arraylist.getPackageName()>"
"Era esperado valores iguais, mas  'java.lang' é diferente de " + result1918 + " <string.getPackageName()>"
"Era esperado valores iguais, mas  'ArrayList' é diferente de " + result1919 + " <arraylist.getClassName()>"
"Era esperado valores iguais, mas  'String' é diferente de " + result1920 + " <string.getClassName()>"
"Era esperado valores iguais, mas  'java.util.ArrayList' é diferente de " + result1921 + " <arraylist.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result1922 + " <string.getQualifiedName()>"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  9 é diferente de " + result1923 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(RandomAccess.class, typeResolver)) é diferente de " + result1924 + " <ancestors.get('java.util.RandomAccess')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1925 + " <ancestors.get('java.util.AbstractCollection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1926 + " <ancestors.get('java.util.List')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Cloneable.class, typeResolver)) é diferente de " + result1927 + " <ancestors.get('java.lang.Cloneable')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1928 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractList.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1929 + " <ancestors.get('java.util.AbstractList')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)) é diferente de " + result1930 + " <ancestors.get('java.lang.Object')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(typeVariable)) é diferente de " + result1931 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Serializable.class, typeResolver)) é diferente de " + result1932 + " <ancestors.get('java.io.Serializable')>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1933 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.CallableDeclaration' é diferente de " + result1934 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1935 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.CallableDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result1936 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result1937 + " <cu.getAllSuperClasses().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  4 é diferente de " + result1938 + " <constructorDeclaration.getAllSuperClasses().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result1939 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.body.CallableDeclaration'))>"
"Era esperado valores iguais, mas  true é diferente de " + result1940 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.body.BodyDeclaration'))>"
"Era esperado valores iguais, mas  true é diferente de " + result1941 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.Node'))>"
"Era esperado valores iguais, mas  true é diferente de " + result1942 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('java.lang.Object'))>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.CallableDeclaration' é diferente de " + result1943 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1944 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.CallableDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result1945 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1946 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1947 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result1948 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas " + result1949 + " <ImmutableSet.of()> é diferente de " + result1950 + " <compilationUnit.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result1951 + " <ImmutableSet.of('com.github.javaparser.ast.nodeTypes.NodeWithExtends', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier', 'com.github.javaparser.ast.nodeTypes.NodeWithImplements', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier', 'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters', 'com.github.javaparser.resolution.Resolvable')> é diferente de " + result1952 + " <coid.getInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  8 é diferente de " + result1953 + " <constructorDeclaration.getInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1954 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1955 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers' é diferente de " + result1956 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1957 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc' é diferente de " + result1958 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1959 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName' é diferente de " + result1960 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1961 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1962 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1963 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions' é diferente de " + result1964 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1965 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters' é diferente de " + result1966 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1967 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.resolution.Resolvable' é diferente de " + result1968 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas " + result1969 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.visitor.Visitable', 'com.github.javaparser.ast.observer.Observable', 'com.github.javaparser.HasParentNode', 'com.github.javaparser.ast.nodeTypes.NodeWithRange', 'com.github.javaparser.ast.nodeTypes.NodeWithTokenRange').stream().sorted().collect(Collectors.toList())> é diferente de " + result1970 + " <compilationUnit.getAllInterfaces().stream().map(i -> i.getQualifiedName()).sorted().collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result1971 + " <ImmutableSet.of('com.github.javaparser.ast.nodeTypes.NodeWithExtends', 'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations', 'java.lang.Cloneable', 'com.github.javaparser.HasParentNode', 'com.github.javaparser.ast.visitor.Visitable', 'com.github.javaparser.ast.nodeTypes.NodeWithImplements', 'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName', 'com.github.javaparser.ast.nodeTypes.NodeWithModifiers', 'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc', 'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters', 'com.github.javaparser.ast.nodeTypes.NodeWithMembers', 'com.github.javaparser.ast.observer.Observable', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers', 'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier', 'com.github.javaparser.ast.nodeTypes.NodeWithRange', 'com.github.javaparser.ast.nodeTypes.NodeWithTokenRange', 'com.github.javaparser.resolution.Resolvable')> é diferente de " + result1972 + " <coid.getAllInterfaces().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  34 é diferente de " + result1973 + " <interfaces.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result1974 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1975 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers' é diferente de " + result1976 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1977 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier' é diferente de " + result1978 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1979 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result1980 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1981 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier' é diferente de " + result1982 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1983 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier' é diferente de " + result1984 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1985 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc' é diferente de " + result1986 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1987 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName' é diferente de " + result1988 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1989 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result1990 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1991 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions' é diferente de " + result1992 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1993 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters' é diferente de " + result1994 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result1995 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.resolution.Resolvable' é diferente de " + result1996 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result1997 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.HasParentNode' é diferente de " + result1998 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result1999 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.HasParentNode.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.observer.Observable' é diferente de " + result2000 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.visitor.Visitable' é diferente de " + result2001 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithRange' é diferente de " + result2002 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2003 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithRange.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTokenRange' é diferente de " + result2004 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2005 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTokenRange.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result2006 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2007 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers' é diferente de " + result2008 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2009 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier' é diferente de " + result2010 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2011 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result2012 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2013 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier' é diferente de " + result2014 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2015 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier' é diferente de " + result2016 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2017 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result2018 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName' é diferente de " + result2019 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2020 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2021 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2022 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions' é diferente de " + result2023 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2024 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters' é diferente de " + result2025 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2026 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc' é diferente de " + result2027 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2028 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier' é diferente de " + result2029 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2030 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier' é diferente de " + result2031 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2032 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier' é diferente de " + result2033 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2034 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier' é diferente de " + result2035 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2036 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  9 é diferente de " + result2037 + " <constructorDeclaration.getAncestors().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.CallableDeclaration' é diferente de " + result2038 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2039 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.CallableDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result2040 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2041 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc' é diferente de " + result2042 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2043 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2044 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2045 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName' é diferente de " + result2046 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2047 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions' é diferente de " + result2048 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2049 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters' é diferente de " + result2050 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2051 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers' é diferente de " + result2052 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2053 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.resolution.Resolvable' é diferente de " + result2054 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas " + result2055 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.visitor.Visitable', 'com.github.javaparser.ast.observer.Observable', 'com.github.javaparser.ast.Node', 'com.github.javaparser.ast.nodeTypes.NodeWithTokenRange', 'java.lang.Object', 'com.github.javaparser.HasParentNode', 'com.github.javaparser.ast.nodeTypes.NodeWithRange')> é diferente de " + result2056 + " <cu.getAllAncestors().stream().map(i -> i.getQualifiedName()).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  'com.github.javaparser.HasParentNode' é diferente de " + result2057 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2058 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.HasParentNode.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2059 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result2060 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2061 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.CallableDeclaration' é diferente de " + result2062 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2063 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.CallableDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result2064 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2065 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result2066 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2067 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result2068 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc' é diferente de " + result2069 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2070 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavadoc' é diferente de " + result2071 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2072 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavadoc.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result2073 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2074 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2075 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2076 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2077 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2078 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithRange' é diferente de " + result2079 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2080 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithRange.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName' é diferente de " + result2081 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2082 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithSimpleName' é diferente de " + result2083 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2084 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithSimpleName.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions' é diferente de " + result2085 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2086 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions' é diferente de " + result2087 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2088 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTokenRange' é diferente de " + result2089 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2090 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTokenRange.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters' é diferente de " + result2091 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2092 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters' é diferente de " + result2093 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2094 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier' é diferente de " + result2095 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2096 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers' é diferente de " + result2097 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2098 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers' é diferente de " + result2099 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2100 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier' é diferente de " + result2101 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2102 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier' é diferente de " + result2103 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2104 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier' é diferente de " + result2105 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2106 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier' é diferente de " + result2107 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2108 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier' é diferente de " + result2109 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2110 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier' é diferente de " + result2111 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2112 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier.N').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.observer.Observable' é diferente de " + result2113 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.visitor.Visitable' é diferente de " + result2114 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.resolution.Resolvable' é diferente de " + result2115 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result2116 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result2117 + " <ancestor.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2118 + " <ancestors.isEmpty()> é falso"
"Era esperado valores iguais, mas " + result2119 + " <Collections.singleton('InnerAnnotation')> é diferente de " + result2120 + " <annotation.internalTypes().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  'value' é diferente de " + result2121 + " <symbolReference.getCorrespondingDeclaration().getName()>"
"Era esperado valores iguais, mas " + result2122 + " <Collections.singleton('FIELD_DECLARATION')> é diferente de " + result2123 + " <annotation.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  'WithField' é diferente de " + result2124 + " <annotation.getClassName()>"
"Era esperado verdadeiro, mas " + result2125 + " <annotation.isInheritable()> é falso"
"Era esperado valores iguais, mas  false é diferente de " + result2126 + " <modifier.isClass()>"
"Era esperado valores iguais, mas  false é diferente de " + result2127 + " <modifier.isInterface()>"
"Era esperado valores iguais, mas  true é diferente de " + result2128 + " <modifier.isEnum()>"
"Era esperado valores iguais, mas  false é diferente de " + result2129 + " <modifier.isTypeParameter()>"
"Era esperado valores iguais, mas  true é diferente de " + result2130 + " <modifier.isType()>"
"Era esperado valores iguais, mas  modifier é diferente de " + result2131 + " <modifier.asType()>"
"Era esperado valores iguais, mas  modifier é diferente de " + result2132 + " <modifier.asEnum()>"
"Era esperado valores iguais, mas  'com.github.javaparser.symbolsolver.reflectionmodel' é diferente de " + result2133 + " <modifier.getPackageName()>"
"Era esperado valores iguais, mas  'MyModifier' é diferente de " + result2134 + " <modifier.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.symbolsolver.reflectionmodel.MyModifier' é diferente de " + result2135 + " <modifier.getQualifiedName()>"
"Era esperado valores iguais, mas " + result2136 + " <Collections.emptySet()> é diferente de " + result2137 + " <modifier.internalTypes()>"
"Era esperado valores iguais, mas  'arg0' é diferente de " + result2138 + " <equals.getParam(0).getName()>"
"Era esperado valores iguais, mas  'arg0' é diferente de " + result2139 + " <containsAll.getParam(0).getName()>"
"Era esperado valores iguais, mas  'arg0' é diferente de " + result2140 + " <subList.getParam(0).getName()>"
"Era esperado valores iguais, mas  'arg1' é diferente de " + result2141 + " <subList.getParam(1).getName()>"
"Era esperado valores iguais, mas  'arg0' é diferente de " + result2142 + " <myMethod.getParam(0).getName()>"
"Era esperado valores iguais, mas  'arg1' é diferente de " + result2143 + " <myMethod.getParam(1).getName()>"
"Era esperado falso, mas " + result2144 + " <annotation.isClass()> é verdadeiro "
"Era esperado falso, mas " + result2145 + " <annotation.isClass()> é verdadeiro "
"Era esperado falso, mas " + result2146 + " <annotation.isInheritable()> é verdadeiro "
"Era esperado verdadeiro, mas " + result2147 + " <rcd.getField('value').isVolatile()> é falso"
"Era esperado falso, mas " + result2148 + " <rcd.getField('serialVersionUID').isVolatile()> é verdadeiro "
"Era esperado verdadeiro, mas " + result2149 + " <v.isVariable()> é falso"
"Era esperado que o tempo de execução " + result2150 + " <Duration.ofMillis(1000L)> não fosse ultrapassado, mas foi"
"Era esperado verdadeiro, mas " + result2151 + " <parseResult.isSuccessful()> é falso"
"Era esperado verdadeiro, mas " + result2152 + " <parseResult.getResult().isPresent()> é falso"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result2153 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result2154 + " <resolve.getType().describe()>"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores diferentes, mas  firstCache é igual a " + " secondCache"
"Era esperado valores iguais, mas  0 é diferente de " + result2155 + " <cache.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2156 + " <cache.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2157 + " <cache.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2158 + " <cache.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2159 + " <cache.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2160 + " <cache.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2161 + " <cache.size()>"
"Era esperado verdadeiro, mas " + result2162 + " <cache.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2163 + " <memoryCache.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2164 + " <memoryCache.contains('key')> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result2165 + " <memoryCache.size()>"
"Era esperado verdadeiro, mas " + result2166 + " <memoryCache.contains(key1)> é falso"
"Era esperado verdadeiro, mas " + result2167 + " <memoryCache.contains(key2)> é falso"
"Era esperado verdadeiro, mas " + result2168 + " <memoryCache.contains(key3)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2169 + " <memoryCache.size()>"
"Era esperado verdadeiro, mas " + result2170 + " <memoryCache.contains(key1)> é falso"
"Era esperado verdadeiro, mas " + result2171 + " <memoryCache.contains(key3)> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2172 + " <memoryCache.size()>"
"Era esperado verdadeiro, mas " + result2173 + " <memoryCache.contains(key1)> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2174 + " <memoryCache.size()>"
"Era esperado verdadeiro, mas " + result2175 + " <memoryCache.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2176 + " <memoryCache.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2177 + " <memoryCache.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2178 + " <adapter.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2179 + " <adapter.contains('key')> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result2180 + " <adapter.size()>"
"Era esperado verdadeiro, mas " + result2181 + " <adapter.contains(key1)> é falso"
"Era esperado verdadeiro, mas " + result2182 + " <adapter.contains(key2)> é falso"
"Era esperado verdadeiro, mas " + result2183 + " <adapter.contains(key3)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2184 + " <adapter.size()>"
"Era esperado verdadeiro, mas " + result2185 + " <adapter.contains(key1)> é falso"
"Era esperado verdadeiro, mas " + result2186 + " <adapter.contains(key3)> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2187 + " <adapter.size()>"
"Era esperado verdadeiro, mas " + result2188 + " <adapter.contains(key1)> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2189 + " <adapter.size()>"
"Era esperado verdadeiro, mas " + result2190 + " <adapter.isEmpty()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2191 + " <guavaCache.size()>"
"Era esperado valores iguais, mas " + result2192 + " <guavaCache.size()> é diferente de " + result2193 + " <adapter.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2194 + " <guavaCache.size()>"
"Era esperado valores iguais, mas " + result2195 + " <guavaCache.size()> é diferente de " + result2196 + " <adapter.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2197 + " <guavaCache.size()>"
"Era esperado valores iguais, mas " + result2198 + " <guavaCache.size()> é diferente de " + result2199 + " <adapter.size()>"
"Era esperado verdadeiro, mas " + result2200 + " <adapter.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2201 + " <adapter.isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result2202 + " <fieldType.isReferenceType()> é falso"
"Era esperado verdadeiro, mas " + result2203 + " <fieldType.asReferenceType().getTypeDeclaration().get().isEnum()> é falso"
"Era esperado valores iguais, mas  'foo.bar.Foo' é diferente de " + result2204 + " <fieldType.asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'toArray(new String[0]) resolved to A.toArray' é diferente de " + result2205 + " <String.format('%s resolved to %s', mces.get(0), mces.get(0).resolve().getQualifiedName())>"
"Era esperado valores iguais, mas  'b.toArray(new String[0]) resolved to B.toArray' é diferente de " + result2206 + " <String.format('%s resolved to %s', mces.get(1), mces.get(1).resolve().getQualifiedName())>"
"Era esperado valores iguais, mas  'java.util.function.Consumerjava.lang.Integer' é diferente de " + result2207 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.util.function.Consumerjava.lang.Integer' é diferente de " + result2208 + " <type.describe()>"
"Era esperado valores iguais, mas  'foo.OtherClass.InnerClass' é diferente de " + result2209 + " <oce.calculateResolvedType().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'foo.OtherClass.InnerClass.InnerClass' é diferente de " + result2210 + " <oce.resolve().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.util.Iteratorjava.lang.Object' é diferente de " + result2211 + " <resolvedType.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.StreamJavaTest.Solved' é diferente de " + result2212 + " <javaParserFacade.getType((nodesByType.get(0)).getExpression().get()).describe()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result2213 + " <javaParserFacade.getType(methods.get(0)).describe()>"
"Era esperado valores iguais, mas  'new Inner1().new Inner2()' é diferente de " + result2214 + " <exprs.get(0).toString()>"
"Era esperado valores iguais, mas  'MyClass.Inner1.Inner2' é diferente de " + result2215 + " <exprs.get(0).getType().resolve().describe()>"
"Era esperado valores iguais, mas  'new Inner1()' é diferente de " + result2216 + " <exprs.get(1).toString()>"
"Era esperado valores iguais, mas  'MyClass.Inner1' é diferente de " + result2217 + " <exprs.get(1).getType().resolve().describe()>"
"Era esperado valores iguais, mas  'com.foo.base.Widget' é diferente de " + result2218 + " <superClass.getQualifiedName()>"
"Era esperado valores iguais, mas  'Test.InnerClass.InnerClass(int, int)' é diferente de " + result2219 + " <exprs.get(0).resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  'Test.InnerClass.InnerClass(int, int...)' é diferente de " + result2220 + " <exprs.get(1).resolve().getQualifiedSignature()>"
"Era esperado verdadeiro, mas " + result2221 + " <symbolSolver.classToResolvedType(String.class).equals(getExpressionType(typeResolver, new StringLiteralExpr('')))> é falso"
"Era esperado valores iguais, mas " + result2222 + " <symbolSolver.classToResolvedType(int.class)> é diferente de " + result2223 + " <getExpressionType(typeResolver, new IntegerLiteralExpr(2))>"
"Era esperado verdadeiro, mas " + result2224 + " <symbolSolver.classToResolvedType(int.class).equals(getExpressionType(typeResolver, new MethodCallExpr(new StringLiteralExpr('hello'), 'length')))> é falso"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result2225 + " <type.describe()>"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result2226 + " <javaParserFacade.getType(argRef).describe()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result2227 + " <mce.get(0).calculateResolvedType().describe()>"
"Era esperado valores iguais, mas  'java.lang.String.length()' é diferente de " + result2228 + " <expr.resolve().getQualifiedSignature()>"
"Era esperado valores iguais, mas  3 é diferente de " + result2229 + " <typeDeclaration.getAllFields().size()>"
"Era esperado valores iguais, mas " + result2230 + " <ImmutableSet.of('a', 'b', 'c')> é diferente de " + result2231 + " <typeDeclaration.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  3 é diferente de " + result2232 + " <typeDeclaration.getAllFields().size()>"
"Era esperado valores iguais, mas " + result2233 + " <ImmutableSet.of('a', 'b', 'c')> é diferente de " + result2234 + " <typeDeclaration.getAllFields().stream().map(ResolvedDeclaration::getName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result2235 + " <typeDeclaration.getField('b').getType().describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result2236 + " <solvedCall.getParamType(0).describe()>"
"Era esperado valores iguais, mas  'double' é diferente de " + result2237 + " <resolvedValueDeclaration.getType().describe()>"
"Era esperado que nenhuma exceção fosse lançada, mas  () - {\n    doTest(root, file);\n} foi lançada"
"Era esperado que nenhuma exceção fosse lançada, mas  () - oce.resolve() foi lançada"
"Era esperado valores iguais, mas  'issue241.TypeWithMemberType.MemberInterface' é diferente de " + " typeName"
"Era esperado valores iguais, mas  'Simple.IndentType' é diferente de " + result2238 + " <fd.resolve().getType().describe()>"
"Era esperado valores iguais, mas  'Main.copyOf(U[], int, java.lang.Class? extends T[])' é diferente de " + result2239 + " <mces.get(0).resolve().getQualifiedSignature()>"
"Era esperado verdadeiro, mas " + result2240 + " <optionalMethod.isPresent()> é falso"
"Era esperado verdadeiro, mas " + result2241 + " <paramType.isReferenceType()> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas " + result2242 + " <symbol.getDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result2243 + " <symbol.getDeclaration().isPresent()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas " + result2244 + " <symbol.getDeclaration()> é nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas " + result2245 + " <adaptedSymbol.getDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result2246 + " <adaptedSymbol.getDeclaration().isPresent()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas " + result2247 + " <adaptedSymbol.getDeclaration()> é nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas " + result2248 + " <adaptedSymbol.getDeclaration()> é nulo"
"Era esperado verdadeiro, mas " + result2249 + " <adaptedSymbol.getDeclaration().isPresent()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result2250 + " <symbol.isSolved()> é falso"
"Era esperado valores iguais, mas  resolvedDeclaration é diferente de " + result2251 + " <symbol.getCorrespondingDeclaration()>"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  false é diferente de " + result2252 + " <ResolvedVoidType.INSTANCE.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2253 + " <ResolvedVoidType.INSTANCE.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2254 + " <ResolvedVoidType.INSTANCE.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2255 + " <ResolvedVoidType.INSTANCE.isReference()>"
"Era esperado valores iguais, mas  false é diferente de " + result2256 + " <ResolvedVoidType.INSTANCE.isReferenceType()>"
"Era esperado valores iguais, mas  true é diferente de " + result2257 + " <ResolvedVoidType.INSTANCE.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2258 + " <ResolvedVoidType.INSTANCE.isTypeVariable()>"
"Era esperado valores iguais, mas  'void' é diferente de " + result2259 + " <ResolvedVoidType.INSTANCE.describe()>"
"Era esperado valores iguais, mas  false é diferente de " + result2260 + " <tpString.isAssignableBy(tpA)>"
"Era esperado valores iguais, mas  false é diferente de " + result2261 + " <NullType.INSTANCE.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2262 + " <NullType.INSTANCE.isPrimitive()>"
"Era esperado valores iguais, mas  true é diferente de " + result2263 + " <NullType.INSTANCE.isNull()>"
"Era esperado valores iguais, mas  true é diferente de " + result2264 + " <NullType.INSTANCE.isReference()>"
"Era esperado valores iguais, mas  false é diferente de " + result2265 + " <NullType.INSTANCE.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2266 + " <NullType.INSTANCE.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2267 + " <NullType.INSTANCE.isTypeVariable()>"
"Era esperado valores iguais, mas  'null' é diferente de " + result2268 + " <NullType.INSTANCE.describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2269 + " <ref1.typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result2270 + " <ref1.typeParametersValues().get(0).isTypeVariable()>"
"Era esperado valores iguais, mas  'E' é diferente de " + result2271 + " <ref1.typeParametersValues().get(0).asTypeParameter().getName()>"
"Era esperado valores iguais, mas  false é diferente de " + result2272 + " <object.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2273 + " <string.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2274 + " <listOfA.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2275 + " <listOfStrings.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2276 + " <object.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2277 + " <string.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2278 + " <listOfA.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2279 + " <listOfStrings.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2280 + " <object.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2281 + " <string.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2282 + " <listOfA.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2283 + " <listOfStrings.isNull()>"
"Era esperado valores iguais, mas  true é diferente de " + result2284 + " <object.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2285 + " <string.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2286 + " <listOfA.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2287 + " <listOfStrings.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2288 + " <object.isReferenceType()>"
"Era esperado valores iguais, mas  true é diferente de " + result2289 + " <string.isReferenceType()>"
"Era esperado valores iguais, mas  true é diferente de " + result2290 + " <listOfA.isReferenceType()>"
"Era esperado valores iguais, mas  true é diferente de " + result2291 + " <listOfStrings.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2292 + " <object.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2293 + " <string.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2294 + " <listOfA.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2295 + " <listOfStrings.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2296 + " <object.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2297 + " <string.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2298 + " <listOfA.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2299 + " <listOfStrings.isTypeVariable()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result2300 + " <object.describe()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result2301 + " <string.describe()>"
"Era esperado valores iguais, mas  'java.util.ListA' é diferente de " + result2302 + " <listOfA.describe()>"
"Era esperado valores iguais, mas  'java.util.Listjava.lang.String' é diferente de " + result2303 + " <listOfStrings.describe()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  listOfStrings é diferente de " + result2304 + " <listOfStrings.replaceTypeVariables(tpA, object)>"
"Era esperado valores iguais, mas  listOfStrings é diferente de " + result2305 + " <listOfA.replaceTypeVariables(tpA, string)>"
"Era esperado valores iguais, mas  true é diferente de " + result2306 + " <object.isAssignableBy(string)>"
"Era esperado valores iguais, mas  false é diferente de " + result2307 + " <string.isAssignableBy(object)>"
"Era esperado valores iguais, mas  false é diferente de " + result2308 + " <listOfStrings.isAssignableBy(listOfA)>"
"Era esperado valores iguais, mas  false é diferente de " + result2309 + " <listOfA.isAssignableBy(listOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2310 + " <object.isAssignableBy(ResolvedVoidType.INSTANCE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2311 + " <string.isAssignableBy(ResolvedVoidType.INSTANCE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2312 + " <listOfStrings.isAssignableBy(ResolvedVoidType.INSTANCE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2313 + " <listOfA.isAssignableBy(ResolvedVoidType.INSTANCE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2314 + " <object.isAssignableBy(NullType.INSTANCE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2315 + " <string.isAssignableBy(NullType.INSTANCE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2316 + " <listOfStrings.isAssignableBy(NullType.INSTANCE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2317 + " <listOfA.isAssignableBy(NullType.INSTANCE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2318 + " <numberType.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2319 + " <numberType.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2320 + " <numberType.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2321 + " <numberType.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  true é diferente de " + result2322 + " <numberType.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2323 + " <numberType.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2324 + " <intType.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2325 + " <doubleType.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2326 + " <byteType.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2327 + " <shortType.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2328 + " <charType.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2329 + " <longType.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  true é diferente de " + result2330 + " <booleanType.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2331 + " <floatType.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2332 + " <intType.isCorrespondingBoxingType(ResolvedPrimitiveType.INT.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2333 + " <doubleType.isCorrespondingBoxingType(ResolvedPrimitiveType.DOUBLE.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2334 + " <byteType.isCorrespondingBoxingType(ResolvedPrimitiveType.BYTE.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2335 + " <shortType.isCorrespondingBoxingType(ResolvedPrimitiveType.SHORT.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2336 + " <charType.isCorrespondingBoxingType(ResolvedPrimitiveType.CHAR.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2337 + " <longType.isCorrespondingBoxingType(ResolvedPrimitiveType.LONG.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2338 + " <booleanType.isCorrespondingBoxingType(ResolvedPrimitiveType.BOOLEAN.describe())>"
"Era esperado valores iguais, mas  true é diferente de " + result2339 + " <floatType.isCorrespondingBoxingType(ResolvedPrimitiveType.FLOAT.describe())>"
"Era esperado valores iguais, mas  false é diferente de " + result2340 + " <numberType.isCorrespondingBoxingType(ResolvedPrimitiveType.INT.describe())>"
"Era esperado valores iguais, mas  false é diferente de " + result2341 + " <listOfStrings.isAssignableBy(listOfWildcardExtendsString)>"
"Era esperado valores iguais, mas  false é diferente de " + result2342 + " <listOfStrings.isAssignableBy(listOfWildcardExtendsString)>"
"Era esperado valores iguais, mas  true é diferente de " + result2343 + " <listOfWildcardExtendsString.isAssignableBy(listOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2344 + " <listOfWildcardExtendsString.isAssignableBy(listOfWildcardSuperString)>"
"Era esperado valores iguais, mas  true é diferente de " + result2345 + " <listOfWildcardSuperString.isAssignableBy(listOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2346 + " <listOfWildcardSuperString.isAssignableBy(listOfWildcardExtendsString)>"
"Era esperado valores iguais, mas  true é diferente de " + result2347 + " <collectionOfString.isAssignableBy(collectionOfString)>"
"Era esperado valores iguais, mas  true é diferente de " + result2348 + " <collectionOfString.isAssignableBy(listOfStrings)>"
"Era esperado valores iguais, mas  true é diferente de " + result2349 + " <collectionOfString.isAssignableBy(linkedListOfString)>"
"Era esperado valores iguais, mas  false é diferente de " + result2350 + " <listOfStrings.isAssignableBy(collectionOfString)>"
"Era esperado valores iguais, mas  true é diferente de " + result2351 + " <listOfStrings.isAssignableBy(listOfStrings)>"
"Era esperado valores iguais, mas  true é diferente de " + result2352 + " <listOfStrings.isAssignableBy(linkedListOfString)>"
"Era esperado valores iguais, mas  false é diferente de " + result2353 + " <linkedListOfString.isAssignableBy(collectionOfString)>"
"Era esperado valores iguais, mas  false é diferente de " + result2354 + " <linkedListOfString.isAssignableBy(listOfStrings)>"
"Era esperado valores iguais, mas  true é diferente de " + result2355 + " <linkedListOfString.isAssignableBy(linkedListOfString)>"
"Era esperado valores iguais, mas  true é diferente de " + result2356 + " <ioException.isAssignableBy(unionWithIOExceptionAsCommonAncestor)>"
"Era esperado valores iguais, mas  false é diferente de " + result2357 + " <ioException.isAssignableBy(unionWithThrowableAsCommonAncestor)>"
"Era esperado valores iguais, mas  true é diferente de " + result2358 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)))>"
"Era esperado valores iguais, mas  true é diferente de " + result2359 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(ResolvedWildcard.extendsBound(foo), bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)))>"
"Era esperado valores iguais, mas  true é diferente de " + result2360 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, ResolvedWildcard.extendsBound(bar))).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)))>"
"Era esperado valores iguais, mas  true é diferente de " + result2361 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(ResolvedWildcard.extendsBound(foo), ResolvedWildcard.extendsBound(foo))).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)))>"
"Era esperado valores iguais, mas  true é diferente de " + result2362 + " <left.isAssignableBy(right)>"
"Era esperado valores iguais, mas  true é diferente de " + result2363 + " <left.isAssignableBy(right)>"
"Era esperado valores iguais, mas  true é diferente de " + result2364 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(string, string, string)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(string, string)))>"
"Era esperado valores iguais, mas  true é diferente de " + result2365 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(bar, string, foo)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(foo, bar)))>"
"Era esperado valores iguais, mas  true é diferente de " + result2366 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(foo, string, bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo)))>"
"Era esperado valores iguais, mas  false é diferente de " + result2367 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(bar, string, foo)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo)))>"
"Era esperado valores iguais, mas  false é diferente de " + result2368 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(bar, string, foo)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo)))>"
"Era esperado valores iguais, mas  false é diferente de " + result2369 + " <new ReferenceTypeImpl(new ReflectionClassDeclaration(Bazzer.class, typeSolver), ImmutableList.of(foo, object, bar)).isAssignableBy(new ReferenceTypeImpl(new ReflectionClassDeclaration(MoreBazzing.class, typeSolver), ImmutableList.of(bar, foo)))>"
"Era esperado valores iguais, mas  false é diferente de " + result2370 + " <charSequence.isAssignableBy(object)>"
"Era esperado valores iguais, mas  true é diferente de " + result2371 + " <object.isAssignableBy(charSequence)>"
"Era esperado valores iguais, mas  true é diferente de " + result2372 + " <ref.getFieldType('elements').isPresent()>"
"Era esperado valores iguais, mas  true é diferente de " + result2373 + " <ref.getFieldType('elements').get().isReferenceType()>"
"Era esperado valores iguais, mas " + result2374 + " <List.class.getCanonicalName()> é diferente de " + result2375 + " <ref.getFieldType('elements').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2376 + " <ref.getFieldType('elements').get().asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result2377 + " <ref.getFieldType('elements').get().asReferenceType().typeParametersValues().get(0).isTypeVariable()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result2378 + " <ref.getFieldType('elements').get().asReferenceType().typeParametersValues().get(0).asTypeParameter().getName()>"
"Era esperado valores iguais, mas  true é diferente de " + result2379 + " <ref.getFieldType('elements').isPresent()>"
"Era esperado valores iguais, mas  true é diferente de " + result2380 + " <ref.getFieldType('elements').get().isReferenceType()>"
"Era esperado valores iguais, mas " + result2381 + " <List.class.getCanonicalName()> é diferente de " + result2382 + " <ref.getFieldType('elements').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2383 + " <ref.getFieldType('elements').get().asReferenceType().typeParametersValues().size()>"
"Era esperado valores iguais, mas  true é diferente de " + result2384 + " <ref.getFieldType('elements').get().asReferenceType().typeParametersValues().get(0).isReferenceType()>"
"Era esperado valores iguais, mas " + result2385 + " <String.class.getCanonicalName()> é diferente de " + result2386 + " <ref.getFieldType('elements').get().asReferenceType().typeParametersValues().get(0).asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  false é diferente de " + result2387 + " <ref.getFieldType('bar').isPresent()>"
"Era esperado valores iguais, mas  false é diferente de " + result2388 + " <ref.getFieldType('bar').isPresent()>"
"Era esperado valores iguais, mas " + result2389 + " <Optional.of(string)> é diferente de " + result2390 + " <arrayListOfString.typeParamValue(arraylist.getTypeParameters().get(0))>"
"Era esperado valores iguais, mas " + result2391 + " <Optional.of(string)> é diferente de " + result2392 + " <arrayListOfString.typeParamValue(abstractList.getTypeParameters().get(0))>"
"Era esperado valores iguais, mas " + result2393 + " <Optional.of(string)> é diferente de " + result2394 + " <arrayListOfString.typeParamValue(abstractCollection.getTypeParameters().get(0))>"
"Era esperado valores iguais, mas " + result2395 + " <Optional.of(string)> é diferente de " + result2396 + " <arrayListOfString.typeParamValue(list.getTypeParameters().get(0))>"
"Era esperado valores iguais, mas " + result2397 + " <Optional.of(string)> é diferente de " + result2398 + " <arrayListOfString.typeParamValue(collection.getTypeParameters().get(0))>"
"Era esperado valores iguais, mas " + result2399 + " <Optional.of(string)> é diferente de " + result2400 + " <arrayListOfString.typeParamValue(iterable.getTypeParameters().get(0))>"
"Era esperado valores iguais, mas  9 é diferente de " + result2401 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(RandomAccess.class, typeResolver)) é diferente de " + result2402 + " <ancestors.get('java.util.RandomAccess')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(tv)) é diferente de " + result2403 + " <ancestors.get('java.util.AbstractCollection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(tv)) é diferente de " + result2404 + " <ancestors.get('java.util.List')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Cloneable.class, typeResolver)) é diferente de " + result2405 + " <ancestors.get('java.lang.Cloneable')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(tv)) é diferente de " + result2406 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractList.class, typeResolver), ImmutableList.of(tv)) é diferente de " + result2407 + " <ancestors.get('java.util.AbstractList')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)) é diferente de " + result2408 + " <ancestors.get('java.lang.Object')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(tv)) é diferente de " + result2409 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Serializable.class, typeResolver)) é diferente de " + result2410 + " <ancestors.get('java.io.Serializable')>"
"Era esperado valores iguais, mas  2 é diferente de " + result2411 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2412 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2413 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  3 é diferente de " + result2414 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2415 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)) é diferente de " + result2416 + " <ancestors.get('java.lang.Object')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2417 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  5 é diferente de " + result2418 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2419 + " <ancestors.get('java.util.AbstractCollection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2420 + " <ancestors.get('java.util.List')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2421 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)) é diferente de " + result2422 + " <ancestors.get('java.lang.Object')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2423 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  9 é diferente de " + result2424 + " <ancestors.size()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(RandomAccess.class, typeResolver)) é diferente de " + result2425 + " <ancestors.get('java.util.RandomAccess')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractCollection.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2426 + " <ancestors.get('java.util.AbstractCollection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2427 + " <ancestors.get('java.util.List')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Cloneable.class, typeResolver)) é diferente de " + result2428 + " <ancestors.get('java.lang.Cloneable')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Collection.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2429 + " <ancestors.get('java.util.Collection')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(AbstractList.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2430 + " <ancestors.get('java.util.AbstractList')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionClassDeclaration(Object.class, typeResolver)) é diferente de " + result2431 + " <ancestors.get('java.lang.Object')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Iterable.class, typeResolver), ImmutableList.of(string)) é diferente de " + result2432 + " <ancestors.get('java.lang.Iterable')>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(Serializable.class, typeResolver)) é diferente de " + result2433 + " <ancestors.get('java.io.Serializable')>"
"Era esperado valores iguais, mas  1 é diferente de " + result2434 + " <stream.typeParametersValues().size()>"
"Era esperado valores iguais, mas  new ResolvedTypeVariable(new ReflectionInterfaceDeclaration(Stream.class, typeResolver).getTypeParameters().get(0)) é diferente de " + result2435 + " <stream.typeParametersValues().get(0)>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result2436 + " <streamReplaced.describe()>"
"Era esperado valores iguais, mas  'java.util.stream.Streamjava.lang.String' é diferente de " + result2437 + " <streamReplaced.describe()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2438 + " <object.getDirectAncestors().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result2439 + " <iterableOfString.getDirectAncestors().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2440 + " <collectionOfString.getDirectAncestors().size()>"
"Era esperado valores iguais, mas  'java.lang.Iterable' é diferente de " + result2441 + " <ancestor1.getQualifiedName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2442 + " <ancestor1.getTypeParametersMap().size()>"
"Era esperado valores iguais, mas  'T' é diferente de " + result2443 + " <ancestor1.getTypeParametersMap().get(0).a.getName()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result2444 + " <ancestor1.getTypeParametersMap().get(0).b.describe()>"
"Era esperado valores iguais, mas  new HashSet() é diferente de " + " ancestors"
"Era esperado valores iguais, mas  3 é diferente de " + result2445 + " <rtA.getDeclaredFields().size()>"
"Era esperado verdadeiro, mas " + result2446 + " <rtA.getDeclaredFields().stream().anyMatch(f -> f.getName().equals('i'))> é falso"
"Era esperado verdadeiro, mas " + result2447 + " <rtA.getDeclaredFields().stream().anyMatch(f -> f.getName().equals('c'))> é falso"
"Era esperado verdadeiro, mas " + result2448 + " <rtA.getDeclaredFields().stream().anyMatch(f -> f.getName().equals('l'))> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2449 + " <rtB.getDeclaredFields().size()>"
"Era esperado verdadeiro, mas " + result2450 + " <rtB.getDeclaredFields().stream().anyMatch(f -> f.getName().equals('f'))> é falso"
"Era esperado verdadeiro, mas " + result2451 + " <rtB.getDeclaredFields().stream().anyMatch(f -> f.getName().equals('b'))> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2452 + " <rtA.getAllFieldsVisibleToInheritors().size()>"
"Era esperado verdadeiro, mas " + result2453 + " <rtA.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals('c'))> é falso"
"Era esperado verdadeiro, mas " + result2454 + " <rtA.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals('l'))> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result2455 + " <rtB.getAllFieldsVisibleToInheritors().size()>"
"Era esperado verdadeiro, mas " + result2456 + " <rtB.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals('c'))> é falso"
"Era esperado verdadeiro, mas " + result2457 + " <rtB.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals('l'))> é falso"
"Era esperado verdadeiro, mas " + result2458 + " <rtB.getAllFieldsVisibleToInheritors().stream().anyMatch(f -> f.getName().equals('b'))> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + result2459 + " <types.get(0).erasure()>"
"Era esperado verdadeiro, mas " + result2460 + " <rt.asReferenceType().isRawType()> é falso"
"Era esperado verdadeiro, mas " + result2461 + " <erasedType.asReferenceType().typeParametersValues().isEmpty()> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + result2462 + " <erasedType.describe()>"
"Era esperado valores iguais, mas  expected é diferente de " + result2463 + " <genericList.erasure().describe()>"
"Era esperado valores iguais, mas  expected é diferente de " + result2464 + " <genericList.erasure().describe()>"
"Era esperado valores iguais, mas  expected é diferente de " + result2465 + " <rt.erasure().describe()>"
"Era esperado valores iguais, mas  expectedA é diferente de " + result2466 + " <typeA.erasure().describe()>"
"Era esperado valores iguais, mas  expectedC é diferente de " + result2467 + " <typeC.erasure().describe()>"
"Era esperado valores iguais, mas  expectedErasedCType é diferente de " + result2468 + " <typeC.erasure()>"
"Era esperado valores iguais, mas  true é diferente de " + result2469 + " <arrayOfBooleans.isArray()>"
"Era esperado valores iguais, mas  true é diferente de " + result2470 + " <arrayOfStrings.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2471 + " <arrayOfBooleans.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2472 + " <arrayOfStrings.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2473 + " <arrayOfBooleans.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2474 + " <arrayOfStrings.isNull()>"
"Era esperado valores iguais, mas  true é diferente de " + result2475 + " <arrayOfBooleans.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2476 + " <arrayOfStrings.isReference()>"
"Era esperado valores iguais, mas  false é diferente de " + result2477 + " <arrayOfBooleans.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2478 + " <arrayOfStrings.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2479 + " <arrayOfBooleans.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2480 + " <arrayOfStrings.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2481 + " <arrayOfBooleans.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2482 + " <arrayOfStrings.isTypeVariable()>"
"Era esperado objetos iguais, mas  arrayOfBooleans é diferente de " + result2483 + " <arrayOfBooleans.asArrayType()>"
"Era esperado objetos iguais, mas  arrayOfStrings é diferente de " + result2484 + " <arrayOfStrings.asArrayType()>"
"Era esperado objetos iguais, mas  arrayOfListOfA é diferente de " + result2485 + " <arrayOfListOfA.asArrayType()>"
"Era esperado valores iguais, mas  'boolean[]' é diferente de " + result2486 + " <arrayOfBooleans.describe()>"
"Era esperado valores iguais, mas  'java.lang.String[]' é diferente de " + result2487 + " <arrayOfStrings.describe()>"
"Era esperado objetos iguais, mas  arrayOfBooleans é diferente de " + result2488 + " <arrayOfBooleans.replaceTypeVariables(tpA, OBJECT)>"
"Era esperado objetos iguais, mas  arrayOfStrings é diferente de " + result2489 + " <arrayOfStrings.replaceTypeVariables(tpA, OBJECT)>"
"Era esperado valores iguais, mas  arrayOfListOfStrings é diferente de " + result2490 + " <arrayOfListOfStrings.replaceTypeVariables(tpA, OBJECT)>"
"Era esperado verdadeiro, mas " + result2491 + " <arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).isArray()> é falso"
"Era esperado valores iguais, mas " + result2492 + " <ImmutableList.of(OBJECT)> é diferente de " + result2493 + " <arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).asArrayType().getComponentType().asReferenceType().typeParametersValues()>"
"Era esperado valores iguais, mas  new ReflectionInterfaceDeclaration(List.class, typeSolver) é diferente de " + result2494 + " <arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).asArrayType().getComponentType().asReferenceType().getTypeDeclaration().get()>"
"Era esperado valores iguais, mas  new ReferenceTypeImpl(new ReflectionInterfaceDeclaration(List.class, typeSolver), ImmutableList.of(OBJECT)) é diferente de " + result2495 + " <arrayOfListOfA.replaceTypeVariables(tpA, OBJECT).asArrayType().getComponentType()>"
"Era esperado valores iguais, mas  arrayOfListOfObjects é diferente de " + result2496 + " <arrayOfListOfA.replaceTypeVariables(tpA, OBJECT)>"
"Era esperado valores iguais, mas  arrayOfListOfStrings é diferente de " + result2497 + " <arrayOfListOfA.replaceTypeVariables(tpA, STRING)>"
"Era esperado objetos diferentes, mas  arrayOfListOfA é igual a " + result2498 + " <arrayOfListOfA.replaceTypeVariables(tpA, OBJECT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2499 + " <arrayOfBooleans.isAssignableBy(OBJECT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2500 + " <arrayOfBooleans.isAssignableBy(STRING)>"
"Era esperado valores iguais, mas  false é diferente de " + result2501 + " <arrayOfBooleans.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  false é diferente de " + result2502 + " <arrayOfBooleans.isAssignableBy(ResolvedVoidType.INSTANCE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2503 + " <arrayOfBooleans.isAssignableBy(arrayOfBooleans)>"
"Era esperado valores iguais, mas  false é diferente de " + result2504 + " <arrayOfBooleans.isAssignableBy(arrayOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2505 + " <arrayOfBooleans.isAssignableBy(arrayOfListOfA)>"
"Era esperado valores iguais, mas  false é diferente de " + result2506 + " <arrayOfBooleans.isAssignableBy(arrayOfListOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2507 + " <arrayOfStrings.isAssignableBy(arrayOfBooleans)>"
"Era esperado valores iguais, mas  true é diferente de " + result2508 + " <arrayOfStrings.isAssignableBy(arrayOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2509 + " <arrayOfStrings.isAssignableBy(arrayOfListOfA)>"
"Era esperado valores iguais, mas  false é diferente de " + result2510 + " <arrayOfStrings.isAssignableBy(arrayOfListOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2511 + " <arrayOfListOfA.isAssignableBy(arrayOfBooleans)>"
"Era esperado valores iguais, mas  false é diferente de " + result2512 + " <arrayOfListOfA.isAssignableBy(arrayOfStrings)>"
"Era esperado valores iguais, mas  true é diferente de " + result2513 + " <arrayOfListOfA.isAssignableBy(arrayOfListOfA)>"
"Era esperado valores iguais, mas  false é diferente de " + result2514 + " <arrayOfListOfA.isAssignableBy(arrayOfListOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2515 + " <arrayOfListOfStrings.isAssignableBy(arrayOfBooleans)>"
"Era esperado valores iguais, mas  false é diferente de " + result2516 + " <arrayOfListOfStrings.isAssignableBy(arrayOfStrings)>"
"Era esperado valores iguais, mas  false é diferente de " + result2517 + " <arrayOfListOfStrings.isAssignableBy(arrayOfListOfA)>"
"Era esperado valores iguais, mas  true é diferente de " + result2518 + " <arrayOfListOfStrings.isAssignableBy(arrayOfListOfStrings)>"
"Era esperado valores iguais, mas  true é diferente de " + result2519 + " <foo.isAssignableBy(foo)>"
"Era esperado valores iguais, mas  true é diferente de " + result2520 + " <foo.isAssignableBy(baz)>"
"Era esperado valores iguais, mas  false é diferente de " + result2521 + " <foo.isAssignableBy(bar)>"
"Era esperado valores iguais, mas  true é diferente de " + result2522 + " <lazyFoo.isAssignableBy(lazyFoo)>"
"Era esperado valores iguais, mas  true é diferente de " + result2523 + " <lazyFoo.isAssignableBy(lazyBaz)>"
"Era esperado valores iguais, mas  false é diferente de " + result2524 + " <lazyFoo.isAssignableBy(lazyBar)>"
"Era esperado valores iguais, mas  true é diferente de " + result2525 + " <foo.isAssignableBy(lazyFoo)>"
"Era esperado valores iguais, mas  true é diferente de " + result2526 + " <foo.isAssignableBy(lazyBaz)>"
"Era esperado valores iguais, mas  false é diferente de " + result2527 + " <foo.isAssignableBy(lazyBar)>"
"Era esperado valores iguais, mas  'boolean' é diferente de " + result2528 + " <ResolvedPrimitiveType.BOOLEAN.describe()>"
"Era esperado valores iguais, mas  'char' é diferente de " + result2529 + " <ResolvedPrimitiveType.CHAR.describe()>"
"Era esperado valores iguais, mas  'byte' é diferente de " + result2530 + " <ResolvedPrimitiveType.BYTE.describe()>"
"Era esperado valores iguais, mas  'short' é diferente de " + result2531 + " <ResolvedPrimitiveType.SHORT.describe()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result2532 + " <ResolvedPrimitiveType.INT.describe()>"
"Era esperado valores iguais, mas  'long' é diferente de " + result2533 + " <ResolvedPrimitiveType.LONG.describe()>"
"Era esperado valores iguais, mas  'float' é diferente de " + result2534 + " <ResolvedPrimitiveType.FLOAT.describe()>"
"Era esperado valores iguais, mas  'double' é diferente de " + result2535 + " <ResolvedPrimitiveType.DOUBLE.describe()>"
"Era esperado valores iguais, mas  true é diferente de " + result2536 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  false é diferente de " + result2537 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  false é diferente de " + result2538 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2539 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2540 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2541 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  false é diferente de " + result2542 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2543 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2544 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2545 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  false é diferente de " + result2546 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2547 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2548 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2549 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  false é diferente de " + result2550 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2551 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2552 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  false é diferente de " + result2553 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2554 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2555 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2556 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2557 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  false é diferente de " + result2558 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2559 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2560 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  false é diferente de " + result2561 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2562 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2563 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2564 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2565 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  false é diferente de " + result2566 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2567 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2568 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2569 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2570 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2571 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2572 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2573 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  false é diferente de " + result2574 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2575 + " <ResolvedPrimitiveType.INT.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2576 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2577 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2578 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2579 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2580 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2581 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  false é diferente de " + result2582 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2583 + " <ResolvedPrimitiveType.LONG.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2584 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2585 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2586 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2587 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2588 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2589 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  true é diferente de " + result2590 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  false é diferente de " + result2591 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  false é diferente de " + result2592 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)>"
"Era esperado valores iguais, mas  true é diferente de " + result2593 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.CHAR)>"
"Era esperado valores iguais, mas  true é diferente de " + result2594 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.BYTE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2595 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.SHORT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2596 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.INT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2597 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.LONG)>"
"Era esperado valores iguais, mas  true é diferente de " + result2598 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.FLOAT)>"
"Era esperado valores iguais, mas  true é diferente de " + result2599 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(ResolvedPrimitiveType.DOUBLE)>"
"Era esperado valores iguais, mas  true é diferente de " + result2600 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2601 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2602 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2603 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2604 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2605 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2606 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2607 + " <ResolvedPrimitiveType.BOOLEAN.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2608 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2609 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2610 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2611 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2612 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2613 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2614 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2615 + " <ResolvedPrimitiveType.CHAR.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2616 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2617 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2618 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2619 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2620 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2621 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2622 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2623 + " <ResolvedPrimitiveType.BYTE.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2624 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2625 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2626 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2627 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2628 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2629 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2630 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2631 + " <ResolvedPrimitiveType.SHORT.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2632 + " <ResolvedPrimitiveType.INT.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2633 + " <ResolvedPrimitiveType.INT.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2634 + " <ResolvedPrimitiveType.INT.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2635 + " <ResolvedPrimitiveType.INT.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2636 + " <ResolvedPrimitiveType.INT.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2637 + " <ResolvedPrimitiveType.INT.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2638 + " <ResolvedPrimitiveType.INT.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2639 + " <ResolvedPrimitiveType.INT.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2640 + " <ResolvedPrimitiveType.LONG.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2641 + " <ResolvedPrimitiveType.LONG.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2642 + " <ResolvedPrimitiveType.LONG.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2643 + " <ResolvedPrimitiveType.LONG.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2644 + " <ResolvedPrimitiveType.LONG.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2645 + " <ResolvedPrimitiveType.LONG.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2646 + " <ResolvedPrimitiveType.LONG.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2647 + " <ResolvedPrimitiveType.LONG.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2648 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2649 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2650 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2651 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2652 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2653 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2654 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2655 + " <ResolvedPrimitiveType.FLOAT.isAssignableBy(doubleBox)>"
"Era esperado valores iguais, mas  false é diferente de " + result2656 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(booleanBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2657 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(characterBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2658 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(byteBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2659 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(shortBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2660 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(integerBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2661 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(longBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2662 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(floatBox)>"
"Era esperado valores iguais, mas  true é diferente de " + result2663 + " <ResolvedPrimitiveType.DOUBLE.isAssignableBy(doubleBox)>"
"Era esperado verdadeiro, mas " + result2664 + " <ResolvedPrimitiveType.CHAR.isNumeric()> é falso"
"Era esperado verdadeiro, mas " + result2665 + " <ResolvedPrimitiveType.BYTE.isNumeric()> é falso"
"Era esperado verdadeiro, mas " + result2666 + " <ResolvedPrimitiveType.SHORT.isNumeric()> é falso"
"Era esperado verdadeiro, mas " + result2667 + " <ResolvedPrimitiveType.INT.isNumeric()> é falso"
"Era esperado verdadeiro, mas " + result2668 + " <ResolvedPrimitiveType.LONG.isNumeric()> é falso"
"Era esperado verdadeiro, mas " + result2669 + " <ResolvedPrimitiveType.FLOAT.isNumeric()> é falso"
"Era esperado verdadeiro, mas " + result2670 + " <ResolvedPrimitiveType.DOUBLE.isNumeric()> é falso"
"Era esperado valores iguais, mas  false é diferente de " + result2671 + " <unbounded.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2672 + " <superFoo.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2673 + " <superBar.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2674 + " <extendsFoo.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2675 + " <extendsBar.isArray()>"
"Era esperado valores iguais, mas  false é diferente de " + result2676 + " <unbounded.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2677 + " <superFoo.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2678 + " <superBar.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2679 + " <extendsFoo.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2680 + " <extendsBar.isPrimitive()>"
"Era esperado valores iguais, mas  false é diferente de " + result2681 + " <unbounded.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2682 + " <superFoo.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2683 + " <superBar.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2684 + " <extendsFoo.isNull()>"
"Era esperado valores iguais, mas  false é diferente de " + result2685 + " <extendsBar.isNull()>"
"Era esperado valores iguais, mas  true é diferente de " + result2686 + " <unbounded.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2687 + " <superFoo.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2688 + " <superBar.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2689 + " <extendsFoo.isReference()>"
"Era esperado valores iguais, mas  true é diferente de " + result2690 + " <extendsBar.isReference()>"
"Era esperado valores iguais, mas  false é diferente de " + result2691 + " <unbounded.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2692 + " <superFoo.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2693 + " <superBar.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2694 + " <extendsFoo.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2695 + " <extendsBar.isReferenceType()>"
"Era esperado valores iguais, mas  false é diferente de " + result2696 + " <unbounded.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2697 + " <superFoo.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2698 + " <superBar.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2699 + " <extendsFoo.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2700 + " <extendsBar.isVoid()>"
"Era esperado valores iguais, mas  false é diferente de " + result2701 + " <unbounded.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2702 + " <superFoo.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2703 + " <superBar.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2704 + " <extendsFoo.isTypeVariable()>"
"Era esperado valores iguais, mas  false é diferente de " + result2705 + " <extendsBar.isTypeVariable()>"
"Era esperado valores iguais, mas  true é diferente de " + result2706 + " <unbounded.isWildcard()>"
"Era esperado valores iguais, mas  true é diferente de " + result2707 + " <superFoo.isWildcard()>"
"Era esperado valores iguais, mas  true é diferente de " + result2708 + " <superBar.isWildcard()>"
"Era esperado valores iguais, mas  true é diferente de " + result2709 + " <extendsFoo.isWildcard()>"
"Era esperado valores iguais, mas  true é diferente de " + result2710 + " <extendsBar.isWildcard()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '?' é diferente de " + result2711 + " <unbounded.describe()>"
"Era esperado valores iguais, mas  '? super com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Foo' é diferente de " + result2712 + " <superFoo.describe()>"
"Era esperado valores iguais, mas  '? super com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Bar' é diferente de " + result2713 + " <superBar.describe()>"
"Era esperado valores iguais, mas  '? extends com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Foo' é diferente de " + result2714 + " <extendsFoo.describe()>"
"Era esperado valores iguais, mas  '? extends com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest.Bar' é diferente de " + result2715 + " <extendsBar.describe()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  superString é diferente de " + result2716 + " <superA.replaceTypeVariables(tpA, string)>"
"Era esperado valores iguais, mas  extendsString é diferente de " + result2717 + " <extendsA.replaceTypeVariables(tpA, string)>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  false é diferente de " + result2718 + " <unbounded.isAssignableBy(object)>"
"Era esperado valores iguais, mas  true é diferente de " + result2719 + " <object.isAssignableBy(unbounded)>"
"Era esperado valores iguais, mas  false é diferente de " + result2720 + " <string.isAssignableBy(unbounded)>"
"Era esperado valores iguais, mas  true é diferente de " + result2721 + " <superFoo.isAssignableBy(foo)>"
"Era esperado valores iguais, mas  false é diferente de " + result2722 + " <foo.isAssignableBy(superFoo)>"
"Era esperado valores iguais, mas  false é diferente de " + result2723 + " <extendsFoo.isAssignableBy(foo)>"
"Era esperado valores iguais, mas  true é diferente de " + result2724 + " <foo.isAssignableBy(extendsFoo)>"
"Era esperado falso, mas " + result2725 + " <cache.get('key').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result2726 + " <cache.contains('key')> é verdadeiro "
"Era esperado falso, mas " + result2727 + " <memoryCache.contains('key')> é verdadeiro "
"Era esperado falso, mas " + result2728 + " <memoryCache.isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result2729 + " <memoryCache.contains(key2)> é verdadeiro "
"Era esperado falso, mas " + result2730 + " <memoryCache.contains(key3)> é verdadeiro "
"Era esperado falso, mas " + result2731 + " <memoryCache.contains(key2)> é verdadeiro "
"Era esperado falso, mas " + result2732 + " <memoryCache.isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result2733 + " <memoryCache.isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result2734 + " <adapter.contains('key')> é verdadeiro "
"Era esperado falso, mas " + result2735 + " <adapter.isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result2736 + " <adapter.contains(key2)> é verdadeiro "
"Era esperado falso, mas " + result2737 + " <adapter.contains(key3)> é verdadeiro "
"Era esperado falso, mas " + result2738 + " <adapter.contains(key2)> é verdadeiro "
"Era esperado falso, mas " + result2739 + " <adapter.isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result2740 + " <adapter.isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result2741 + " <symbol.getDeclaration().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result2742 + " <adaptedSymbol.getDeclaration().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result2743 + " <symbol.isSolved()> é verdadeiro "
"Era esperado falso, mas " + result2744 + " <ResolvedVoidType.INSTANCE.isAssignableBy(NullType.INSTANCE)> é verdadeiro "
"Era esperado falso, mas " + result2745 + " <ResolvedVoidType.INSTANCE.isAssignableBy(OBJECT)> é verdadeiro "
"Era esperado falso, mas " + result2746 + " <ResolvedVoidType.INSTANCE.isAssignableBy(STRING)> é verdadeiro "
"Era esperado falso, mas " + result2747 + " <ResolvedVoidType.INSTANCE.isAssignableBy(ResolvedPrimitiveType.BOOLEAN)> é verdadeiro "
"Era esperado falso, mas " + result2748 + " <ResolvedVoidType.INSTANCE.isAssignableBy(ResolvedVoidType.INSTANCE)> é verdadeiro "
"Era esperado falso, mas " + result2749 + " <ResolvedPrimitiveType.BOOLEAN.isNumeric()> é verdadeiro "
"Era esperado verdadeiro, mas " + result2750 + " <jcd.getField('value').isVolatile()> é falso"
"Era esperado falso, mas " + result2751 + " <jcd.getField('serialVersionUID').isVolatile()> é verdadeiro "
"Era esperado valores iguais, mas  expectedAncestors é diferente de " + result2752 + " <resultAncestors.stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toList())>"
"Era esperado verdadeiro, mas " + result2753 + " <compilationUnit.isClass()> é falso"
"Era esperado verdadeiro, mas " + result2754 + " <compilationUnit.isType()> é falso"
"Era esperado valores iguais, mas  compilationUnit é diferente de " + result2755 + " <compilationUnit.asType()>"
"Era esperado valores iguais, mas  compilationUnit é diferente de " + result2756 + " <compilationUnit.asClass()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast' é diferente de " + result2757 + " <compilationUnit.getPackageName()>"
"Era esperado valores iguais, mas  'CompilationUnit' é diferente de " + result2758 + " <compilationUnit.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.CompilationUnit' é diferente de " + result2759 + " <compilationUnit.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2760 + " <compilationUnit.hasDirectlyAnnotation('com.github.javaparser.test.TestAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result2761 + " <compilationUnit.hasAnnotation('com.github.javaparser.test.TestAnnotation')> é falso"
"Era esperado valores iguais, mas  6 é diferente de " + result2762 + " <declarationList.size()>"
"Era esperado verdadeiro, mas " + result2763 + " <fields.containsKey('genericParamObjectField')> é falso"
"Era esperado verdadeiro, mas " + result2764 + " <fields.containsKey('genericPrimitiveArrayField')> é falso"
"Era esperado verdadeiro, mas " + result2765 + " <fields.containsKey('genericObjectArrayField')> é falso"
"Era esperado verdadeiro, mas " + result2766 + " <fields.containsKey('genericField')> é falso"
"Era esperado verdadeiro, mas " + result2767 + " <fields.containsKey('primitiveField')> é falso"
"Era esperado verdadeiro, mas " + result2768 + " <fields.containsKey('objectField')> é falso"
"Era esperado valores iguais, mas  12 é diferente de " + result2769 + " <methodsSet.size()>"
"Era esperado verdadeiro, mas " + result2770 + " <methods.containsKey('pos')> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2771 + " <methods.get('pos').getNoParams()>"
"Era esperado verdadeiro, mas " + result2772 + " <methods.containsKey('withColumn')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2773 + " <methods.get('withColumn').getNoParams()>"
"Era esperado verdadeiro, mas " + result2774 + " <methods.containsKey('withLine')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2775 + " <methods.get('withLine').getNoParams()>"
"Era esperado verdadeiro, mas " + result2776 + " <methods.containsKey('valid')> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2777 + " <methods.get('valid').getNoParams()>"
"Era esperado verdadeiro, mas " + result2778 + " <methods.containsKey('invalid')> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2779 + " <methods.get('invalid').getNoParams()>"
"Era esperado verdadeiro, mas " + result2780 + " <methods.containsKey('orIfInvalid')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2781 + " <methods.get('orIfInvalid').getNoParams()>"
"Era esperado verdadeiro, mas " + result2782 + " <methods.containsKey('isAfter')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2783 + " <methods.get('isAfter').getNoParams()>"
"Era esperado verdadeiro, mas " + result2784 + " <methods.containsKey('isBefore')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2785 + " <methods.get('isBefore').getNoParams()>"
"Era esperado verdadeiro, mas " + result2786 + " <methods.containsKey('compareTo')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2787 + " <methods.get('compareTo').getNoParams()>"
"Era esperado verdadeiro, mas " + result2788 + " <methods.containsKey('equals')> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result2789 + " <methods.get('equals').getNoParams()>"
"Era esperado verdadeiro, mas " + result2790 + " <methods.containsKey('hashCode')> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2791 + " <methods.get('hashCode').getNoParams()>"
"Era esperado verdadeiro, mas " + result2792 + " <methods.containsKey('toString')> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result2793 + " <methods.get('toString').getNoParams()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2794 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2795 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result2796 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2797 + " <compilationUnit.getSuperClass().orElseThrow(() -> new RuntimeException('super class unexpectedly empty')).typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result2798 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result2799 + " <cu.getAllSuperClasses().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2800 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result2801 + " <cu.getAllAncestors().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2802 + " <ImmutableSet.of()> é diferente de " + result2803 + " <compilationUnit.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2804 + " <ImmutableSet.of('com.github.javaparser.ast.DocumentableNode')> é diferente de " + result2805 + " <coid.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2806 + " <ImmutableSet.of()> é diferente de " + result2807 + " <compilationUnit.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2808 + " <ImmutableSet.of('com.github.javaparser.ast.NamedNode', 'com.github.javaparser.ast.body.AnnotableNode', 'com.github.javaparser.ast.DocumentableNode')> é diferente de " + result2809 + " <coid.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2810 + " <ImmutableSet.of('com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result2811 + " <cu.getAllSuperClasses().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  3 é diferente de " + result2812 + " <constructorDeclaration.getAllSuperClasses().size()>"
"Era esperado verdadeiro, mas " + result2813 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.body.BodyDeclaration'))> é falso"
"Era esperado verdadeiro, mas " + result2814 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('com.github.javaparser.ast.Node'))> é falso"
"Era esperado verdadeiro, mas " + result2815 + " <constructorDeclaration.getAllSuperClasses().stream().anyMatch(s -> s.getQualifiedName().equals('java.lang.Object'))> é falso"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result2816 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2817 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2818 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result2819 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas " + result2820 + " <ImmutableSet.of()> é diferente de " + result2821 + " <compilationUnit.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2822 + " <ImmutableSet.of('com.github.javaparser.ast.nodeTypes.NodeWithExtends', 'com.github.javaparser.ast.nodeTypes.NodeWithImplements')> é diferente de " + result2823 + " <coid.getInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  7 é diferente de " + result2824 + " <constructorDeclaration.getInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result2825 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2826 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result2827 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result2828 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2829 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result2830 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2831 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2832 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2833 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result2834 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2835 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result2836 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2837 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result2838 + " <ImmutableSet.of('java.lang.Cloneable')> é diferente de " + result2839 + " <compilationUnit.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas " + result2840 + " <ImmutableSet.of('com.github.javaparser.ast.nodeTypes.NodeWithExtends', 'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations', 'java.lang.Cloneable', 'com.github.javaparser.ast.nodeTypes.NodeWithImplements', 'com.github.javaparser.ast.nodeTypes.NodeWithName', 'com.github.javaparser.ast.nodeTypes.NodeWithModifiers', 'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc', 'com.github.javaparser.ast.nodeTypes.NodeWithMembers')> é diferente de " + result2841 + " <coid.getAllInterfaces().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  9 é diferente de " + result2842 + " <constructorDeclaration.getAllInterfaces().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result2843 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2844 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result2845 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result2846 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2847 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result2848 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2849 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2850 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2851 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result2852 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2853 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result2854 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2855 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result2856 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result2857 + " <interfaze.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2858 + " <interfaze.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  8 é diferente de " + result2859 + " <constructorDeclaration.getAncestors().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result2860 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2861 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result2862 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2863 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result2864 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result2865 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2866 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result2867 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2868 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2869 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2870 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result2871 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2872 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result2873 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2874 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas " + result2875 + " <ImmutableSet.of('java.lang.Cloneable', 'com.github.javaparser.ast.Node', 'java.lang.Object')> é diferente de " + result2876 + " <cu.getAllAncestors().stream().map(ResolvedReferenceType::getQualifiedName).collect(Collectors.toSet())>"
"Era esperado valores iguais, mas  12 é diferente de " + result2877 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.BodyDeclaration' é diferente de " + result2878 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2879 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.body.BodyDeclaration.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Node' é diferente de " + result2880 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result2881 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'java.lang.Cloneable' é diferente de " + result2882 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result2883 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2884 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc' é diferente de " + result2885 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2886 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithJavaDoc.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithDeclaration' é diferente de " + result2887 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithName' é diferente de " + result2888 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2889 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithName.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithModifiers' é diferente de " + result2890 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2891 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithModifiers.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithParameters' é diferente de " + result2892 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2893 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithParameters.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithThrowable' é diferente de " + result2894 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2895 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithThrowable.T').get().asReferenceType().getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt' é diferente de " + result2896 + " <ancestor.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.body.ConstructorDeclaration' é diferente de " + result2897 + " <ancestor.typeParametersMap().getValueBySignature('com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt.T').get().asReferenceType().getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2898 + " <cu.isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result2899 + " <cu.isAssignableBy(cu)> é falso"
"Era esperado verdadeiro, mas " + result2900 + " <cu.isAssignableBy(node)> é falso"
"Era esperado verdadeiro, mas " + result2901 + " <classDeclaration.isAssignableBy(nodeWithImplements)> é falso"
"Era esperado valores iguais, mas  false é diferente de " + result2902 + " <nodeWithAnnotations.isClass()>"
"Era esperado valores iguais, mas  true é diferente de " + result2903 + " <nodeWithAnnotations.isInterface()>"
"Era esperado valores iguais, mas  false é diferente de " + result2904 + " <nodeWithAnnotations.isEnum()>"
"Era esperado valores iguais, mas  false é diferente de " + result2905 + " <nodeWithAnnotations.isTypeParameter()>"
"Era esperado valores iguais, mas  true é diferente de " + result2906 + " <nodeWithAnnotations.isType()>"
"Era esperado valores iguais, mas  nodeWithAnnotations é diferente de " + result2907 + " <nodeWithAnnotations.asType()>"
"Era esperado valores iguais, mas  nodeWithAnnotations é diferente de " + result2908 + " <nodeWithAnnotations.asInterface()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes' é diferente de " + result2909 + " <nodeWithAnnotations.getPackageName()>"
"Era esperado valores iguais, mas  'NodeWithAnnotations' é diferente de " + result2910 + " <nodeWithAnnotations.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.nodeTypes.NodeWithAnnotations' é diferente de " + result2911 + " <nodeWithAnnotations.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2912 + " <compilationUnit.hasDirectlyAnnotation('com.github.javaparser.test.TestAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result2913 + " <compilationUnit.hasAnnotation('com.github.javaparser.test.TestAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result2914 + " <nodeWithImplements.isAssignableBy(NullType.INSTANCE)> é falso"
"Era esperado verdadeiro, mas " + result2915 + " <nodeWithImplements.isAssignableBy(nodeWithImplements)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2916 + " <ancestors.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.test.GenericInterfaceS' é diferente de " + result2917 + " <ancestors.get(0).describe()>"
"Era esperado valores iguais, mas  'java.lang.Object' é diferente de " + result2918 + " <ancestors.get(1).describe()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2919 + " <typePamatersMap.size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.test.GenericInterface.T' é diferente de " + result2920 + " <genericTypeParameterDeclaration.getQualifiedName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.test.GenericChildInterface.S' é diferente de " + result2921 + " <genericResolvedType.asTypeParameter().getQualifiedName()>"
"Era esperado valores iguais, mas  false é diferente de " + result2922 + " <modifier.isClass()>"
"Era esperado valores iguais, mas  false é diferente de " + result2923 + " <modifier.isInterface()>"
"Era esperado valores iguais, mas  true é diferente de " + result2924 + " <modifier.isEnum()>"
"Era esperado valores iguais, mas  false é diferente de " + result2925 + " <modifier.isTypeParameter()>"
"Era esperado valores iguais, mas  true é diferente de " + result2926 + " <modifier.isType()>"
"Era esperado valores iguais, mas  modifier é diferente de " + result2927 + " <modifier.asType()>"
"Era esperado valores iguais, mas  modifier é diferente de " + result2928 + " <modifier.asEnum()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast' é diferente de " + result2929 + " <modifier.getPackageName()>"
"Era esperado valores iguais, mas  'Modifier' é diferente de " + result2930 + " <modifier.getClassName()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.Modifier' é diferente de " + result2931 + " <modifier.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2932 + " <compilationUnit.hasDirectlyAnnotation('com.github.javaparser.test.TestAnnotation')> é falso"
"Era esperado verdadeiro, mas " + result2933 + " <compilationUnit.hasAnnotation('com.github.javaparser.test.TestAnnotation')> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result2934 + " <ancestors.size()>"
"Era esperado valores iguais, mas " + result2935 + " <Object.class.getCanonicalName()> é diferente de " + result2936 + " <ancestors.get(0).getQualifiedName()>"
"Era esperado valores iguais, mas " + result2937 + " <Annotation.class.getCanonicalName()> é diferente de " + result2938 + " <ancestors.get(1).getQualifiedName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result2939 + " <innerTypes.size()>"
"Era esperado valores iguais, mas  'com.example.Foo.Bar' é diferente de " + result2940 + " <innerTypes.get(0).getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2941 + " <fooAnnotationDeclaration.isInheritable()> é falso"
"Era esperado verdadeiro, mas " + result2942 + " <compilationUnit.isClass()> é falso"
"Era esperado verdadeiro, mas " + result2943 + " <compilationUnit.isClass()> é falso"
"Era esperado valores iguais, mas  'begin' é diferente de " + result2944 + " <constructor.getParam(0).getName()>"
"Era esperado verdadeiro, mas " + result2945 + " <constructor.getParam(0).hasName()> é falso"
"Era esperado valores iguais, mas  'end' é diferente de " + result2946 + " <constructor.getParam(1).getName()>"
"Era esperado verdadeiro, mas " + result2947 + " <constructor.getParam(1).hasName()> é falso"
"Era esperado verdadeiro, mas " + result2948 + " <paramDecl.isParameter()> é falso"
"Era esperado verdadeiro, mas " + result2949 + " <createValue().isClass()> é falso"
"Era esperado não nulo, mas " + result2950 + " <createValue().getSuperClass()> é nulo"
"Era esperado não nulo, mas " + result2951 + " <createValue().getInterfaces()> é nulo"
"Era esperado não nulo, mas " + result2952 + " <createValue().getAllSuperClasses()> é nulo"
"Era esperado não nulo, mas " + result2953 + " <createValue().getAllInterfaces()> é nulo"
"Era esperado não nulo, mas " + result2954 + " <createValue().getAnnotationMembers()> é nulo"
"Era esperado não nulo, mas " + result2955 + " <createValue().accessSpecifier()> é nulo"
"Era esperado falso, mas " + result2956 + " <compilationUnit.isInterface()> é verdadeiro "
"Era esperado falso, mas " + result2957 + " <compilationUnit.isEnum()> é verdadeiro "
"Era esperado falso, mas " + result2958 + " <compilationUnit.isTypeParameter()> é verdadeiro "
"Era esperado falso, mas " + result2959 + " <objectDeclaration.getSuperClass().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result2960 + " <cu.isAssignableBy(new LambdaArgumentTypePlaceholder(0))> é verdadeiro "
"Era esperado falso, mas " + result2961 + " <nodeWithImplements.isAssignableBy(new LambdaArgumentTypePlaceholder(0))> é verdadeiro "
"Era esperado falso, mas " + result2962 + " <nodeWithImplements.isAssignableBy(consumer)> é verdadeiro "
"Era esperado falso, mas " + result2963 + " <fooAnnotationDeclaration.isInheritable()> é verdadeiro "
"Era esperado falso, mas " + result2964 + " <paramDecl.isField()> é verdadeiro "
"Era esperado falso, mas " + result2965 + " <paramDecl.isType()> é verdadeiro "
"Era esperado falso, mas " + result2966 + " <paramDecl.isEnumConstant()> é verdadeiro "
"Era esperado falso, mas " + result2967 + " <paramDecl.isMethod()> é verdadeiro "
"Era esperado falso, mas " + result2968 + " <paramDecl.isVariable()> é verdadeiro "
"Era esperado verdadeiro, mas " + result2969 + " <createValue().isParameter()> é falso"
"Era esperado verdadeiro, mas " + result2970 + " <createValue().hasName()> é falso"
"Era esperado não nulo, mas " + result2971 + " <createValue().getQualifiedName()> é nulo"
"Era esperado não nulo, mas " + result2972 + " <createValue().getId()> é nulo"
"Era esperado não nulo, mas " + result2973 + " <createValue().containerType()> é nulo"
"Era esperado verdadeiro, mas " + result2974 + " <createValue().isTypeParameter()> é falso"
"Era esperado verdadeiro, mas " + result2975 + " <createStaticValue().isStatic()> é falso"
"Era esperado não nulo, mas " + result2976 + " <createValue().declaringType()> é nulo"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas " + result2977 + " <createValue().isReferenceType()> é falso"
"Era esperado não nulo, mas " + result2978 + " <createValue().getAllFields()> é nulo"
"Era esperado não nulo, mas " + result2979 + " <createValue().getDeclaredMethods()> é nulo"
"Era esperado não nulo, mas " + result2980 + " <createValue().getConstructors()> é nulo"
"Era esperado verdadeiro, mas " + result2981 + " <createValue().isEnumConstant()> é falso"
"Era esperado não nulo, mas " + result2982 + " <createValue().getName()> é nulo"
"Era esperado não nulo, mas " + result2983 + " <createValue().getTypeParameters()> é nulo"
"Era esperado verdadeiro, mas " + result2984 + " <createValue().isPattern()> é falso"
"Era esperado verdadeiro, mas " + result2985 + " <createValue().hasName()> é falso"
"Era esperado verdadeiro, mas " + result2986 + " <createValue().isEnum()> é falso"
"Era esperado verdadeiro, mas " + result2987 + " <compilationUnit.getResult().isPresent()> é falso"
"Era esperado valores iguais, mas " + result2988 + " <String.class.getCanonicalName()> é diferente de " + result2989 + " <resolved.getQualifiedName()>"
"Era esperado verdadeiro, mas " + result2990 + " <compilationUnit.getResult().isPresent()> é falso"
"Era esperado valores iguais, mas  'Ljava/lang/String;' é diferente de " + result2991 + " <classOrInterfaceType.toDescriptor()>"
"Era esperado valores iguais, mas " + result2992 + " <cu.hashCode()> é diferente de " + result2993 + " <deserialized.hashCode()>"
"Era esperado valores iguais, mas " + result2994 + " <type.hashCode()> é diferente de " + result2995 + " <deserialized.hashCode()>"
"Era esperado valores iguais, mas " + result2996 + " <type.hashCode()> é diferente de " + result2997 + " <deserialized.hashCode()>"
"Era esperado valores iguais, mas " + result2998 + " <type.hashCode()> é diferente de " + result2999 + " <deserialized.hashCode()>"
"Era esperado valores iguais, mas " + result3000 + " <expr.hashCode()> é diferente de " + result3001 + " <deserialized.hashCode()>"
"Era esperado valores iguais, mas " + result3002 + " <type.hashCode()> é diferente de " + result3003 + " <deserialized.hashCode()>"
"Era esperado verdadeiro, mas " + result3004 + " <classXDeclaration.getComment().isPresent()> é falso"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.comments.BlockComment' é diferente de " + result3005 + " <comment.getClass().getName()>"
"Era esperado valores iguais, mas  ' block comment ' é diferente de " + result3006 + " <comment.getContent()>"
"Era esperado verdadeiro, mas " + result3007 + " <methodDeclaration.getComment().isPresent()> é falso"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.comments.LineComment' é diferente de " + result3008 + " <methodDeclaration.getComment().get().getClass().getName()>"
"Era esperado valores iguais, mas  ' line comment' é diferente de " + result3009 + " <methodDeclaration.getComment().get().getContent()>"
"Era esperado verdadeiro, mas " + result3010 + " <methodDeclaration.getJavadoc().isPresent()> é falso"
"Era esperado valores iguais, mas  'param' é diferente de " + result3011 + " <paramBlockTag.getTagName()>"
"Era esperado valores iguais, mas  'blub' é diferente de " + result3012 + " <paramBlockTag.getContent().toText()>"
"Era esperado valores iguais, mas  'return' é diferente de " + result3013 + " <returnBlockTag.getTagName()>"
"Era esperado valores iguais, mas  'true' é diferente de " + result3014 + " <returnBlockTag.getContent().toText()>"
"Era esperado verdadeiro, mas " + result3015 + " <deserialized.hasRange()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + " range.begin.line"
"Era esperado valores iguais, mas  1 é diferente de " + " range.begin.line"
"Era esperado valores iguais, mas  26 é diferente de " + " range.end.column"
"Era esperado verdadeiro, mas " + result3016 + " <deserialized.getTokenRange().isPresent()> é falso"
"Era esperado valores iguais, mas  'public' é diferente de " + result3017 + " <tokenRange.getBegin().getText()>"
"Era esperado valores iguais, mas  '' é diferente de " + result3018 + " <tokenRange.getEnd().getText()>"
"Era esperado verdadeiro, mas " + result3019 + " <deserialized.containsData(Node.SYMBOL_RESOLVER_KEY)> é falso"
"Era esperado valores iguais, mas  stubResolver é diferente de " + result3020 + " <deserialized.getData(Node.SYMBOL_RESOLVER_KEY)>"
"Era esperado valores iguais, mas " + result3021 + " <normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY)> é diferente de " + result3022 + " <normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY)>"
"Era esperado valores iguais, mas  '{\'!\':\'com.github.javaparser.ast.CompilationUnit\',\'range\':{\'beginLine\':1,\'beginColumn\':1,\'endLine\':1,\'endColumn\':23},\'tokenRange\':{\'beginToken\':{\'kind\':19,\'text\':\'class\'},\'endToken\':{\'kind\':0,\'text\':\'\'}},\'imports\':[],\'types\':[{\'!\':\'com.github.javaparser.ast.body.ClassOrInterfaceDeclaration\',\'range\':{\'beginLine\':1,\'beginColumn\':1,\'endLine\':1,\'endColumn\':23},\'tokenRange\':{\'beginToken\':{\'kind\':19,\'text\':\'class\'},\'endToken\':{\'kind\':100,\'text\':\'}\'}},\'extendedTypes\':[],\'implementedTypes\':[],\'isInterface\':\'false\',\'typeParameters\':[],\'members\':[{\'!\':\'com.github.javaparser.ast.body.FieldDeclaration\',\'range\':{\'beginLine\':1,\'beginColumn\':9,\'endLine\':1,\'endColumn\':22},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'java\'},\'endToken\':{\'kind\':103,\'text\':\';\'}},\'modifiers\':[],\'variables\':[{\'!\':\'com.github.javaparser.ast.body.VariableDeclarator\',\'range\':{\'beginLine\':1,\'beginColumn\':21,\'endLine\':1,\'endColumn\':21},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'y\'},\'endToken\':{\'kind\':94,\'text\':\'y\'}},\'name\':{\'!\':\'com.github.javaparser.ast.expr.SimpleName\',\'range\':{\'beginLine\':1,\'beginColumn\':21,\'endLine\':1,\'endColumn\':21},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'y\'},\'endToken\':{\'kind\':94,\'text\':\'y\'}},\'identifier\':\'y\'},\'type\':{\'!\':\'com.github.javaparser.ast.type.ClassOrInterfaceType\',\'range\':{\'beginLine\':1,\'beginColumn\':9,\'endLine\':1,\'endColumn\':19},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'java\'},\'endToken\':{\'kind\':94,\'text\':\'Y\'}},\'name\':{\'!\':\'com.github.javaparser.ast.expr.SimpleName\',\'range\':{\'beginLine\':1,\'beginColumn\':19,\'endLine\':1,\'endColumn\':19},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'Y\'},\'endToken\':{\'kind\':94,\'text\':\'Y\'}},\'identifier\':\'Y\'},\'scope\':{\'!\':\'com.github.javaparser.ast.type.ClassOrInterfaceType\',\'range\':{\'beginLine\':1,\'beginColumn\':9,\'endLine\':1,\'endColumn\':17},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'java\'},\'endToken\':{\'kind\':94,\'text\':\'util\'}},\'name\':{\'!\':\'com.github.javaparser.ast.expr.SimpleName\',\'range\':{\'beginLine\':1,\'beginColumn\':14,\'endLine\':1,\'endColumn\':17},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'util\'},\'endToken\':{\'kind\':94,\'text\':\'util\'}},\'identifier\':\'util\'},\'scope\':{\'!\':\'com.github.javaparser.ast.type.ClassOrInterfaceType\',\'range\':{\'beginLine\':1,\'beginColumn\':9,\'endLine\':1,\'endColumn\':12},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'java\'},\'endToken\':{\'kind\':94,\'text\':\'java\'}},\'name\':{\'!\':\'com.github.javaparser.ast.expr.SimpleName\',\'range\':{\'beginLine\':1,\'beginColumn\':9,\'endLine\':1,\'endColumn\':12},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'java\'},\'endToken\':{\'kind\':94,\'text\':\'java\'}},\'identifier\':\'java\'},\'annotations\':[]},\'annotations\':[]},\'annotations\':[]}}],\'annotations\':[]}],\'modifiers\':[],\'name\':{\'!\':\'com.github.javaparser.ast.expr.SimpleName\',\'range\':{\'beginLine\':1,\'beginColumn\':7,\'endLine\':1,\'endColumn\':7},\'tokenRange\':{\'beginToken\':{\'kind\':94,\'text\':\'X\'},\'endToken\':{\'kind\':94,\'text\':\'X\'}},\'identifier\':\'X\'},\'annotations\':[]}]}' é diferente de " + " serialized"
"Era esperado valores iguais, mas  '13' + '\u12aA' + '98' é diferente de " + " new String(read('13\\u12aA98'))"
"Era esperado valores iguais, mas  '13\\\\u12aA98' é diferente de " + " new String(read('13\\\\u12aA98'))"
"Era esperado valores iguais, mas  '13' + '\u12aA' + '98' é diferente de " + " new String(read('13\\uuuuuu12aA98'))"
"Era esperado valores iguais, mas  'foobar\\' é diferente de " + " new String(read('foobar\\'))"
"Era esperado valores iguais, mas  'foobar\\u' é diferente de " + " new String(read('foobar\\u'))"
"Era esperado valores iguais, mas  'foobar\\uuuuuu' é diferente de " + " new String(read('foobar\\uuuuuu'))"
"Era esperado valores iguais, mas  'foobar\\uA' é diferente de " + " new String(read('foobar\\uA'))"
"Era esperado valores iguais, mas  'foobar\\uAB' é diferente de " + " new String(read('foobar\\uAB'))"
"Era esperado valores iguais, mas  'foobar\\uABC' é diferente de " + " new String(read('foobar\\uABC'))"
"Era esperado valores iguais, mas  'foobar\uABCD' é diferente de " + " new String(read('foobar\\uABCD'))"
"Era esperado valores iguais, mas  '' é diferente de " + " new String(read(''))"
"Era esperado valores iguais, mas  '13\\ux' é diferente de " + " new String(read('13\\ux'))"
"Era esperado valores iguais, mas  '13\\u1x' é diferente de " + " new String(read('13\\u1x'))"
"Era esperado valores iguais, mas  '13\\u1Ax' é diferente de " + " new String(read('13\\u1Ax'))"
"Era esperado valores iguais, mas  '13\\u1ABx' é diferente de " + " new String(read('13\\u1ABx'))"
"Era esperado valores iguais, mas  '13\\uuuuuu1ABx' é diferente de " + " new String(read('13\\uuuuuu1ABx'))"
"Era esperado valores iguais, mas  '12345678\\uuxxxxxxxxxxxxxxxxxxxxxxx' é diferente de " + " new String(read('12345678\\uuxxxxxxxxxxxxxxxxxxxxxxx'))"
"Era esperado valores iguais, mas  '12345678\\uuxx' é diferente de " + " new String(read('12345678\\uuxx'))"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  IDENTIFIER é diferente de " + result3023 + " <moduleToken.getKind()>"
"Era esperado valores iguais, mas  'transitive' é diferente de " + result3024 + " <requiresTransitive.getNameAsString()>"
"Era esperado valores iguais, mas  IDENTIFIER é diferente de " + result3025 + " <requiresTransitive.getName().getTokenRange().get().getBegin().getKind()>"
"Era esperado valores iguais, mas  'M.N' é diferente de " + result3026 + " <module.getNameAsString()>"
"Era esperado valores iguais, mas  'M.N' é diferente de " + result3027 + " <module.getNameAsString()>"
"Era esperado verdadeiro, mas " + result3028 + " <module.isOpen()> é falso"
"Era esperado valores iguais, mas  '@Foo(1)' + SYSTEM_EOL + '@Foo(2)' + SYSTEM_EOL + '@Bar' + SYSTEM_EOL + 'module M.N {' + SYSTEM_EOL + '    requires A.B;' + SYSTEM_EOL + '    requires transitive C.D;' + SYSTEM_EOL + '    requires static E.F;' + SYSTEM_EOL + '    requires static transitive G.H;' + SYSTEM_EOL + '    exports P.Q;' + SYSTEM_EOL + '    exports R.S to T1.U1, T2.U2;' + SYSTEM_EOL + '    opens P.Q;' + SYSTEM_EOL + '    opens R.S to T1.U1, T2.U2;' + SYSTEM_EOL + '    uses V.W;' + SYSTEM_EOL + '    provides X.Y with Z1.Z2, Z3.Z4;' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result3029 + " <cu.toString()>"
"Era esperado valores iguais, mas  '@Foo(1)' + SYSTEM_EOL + '@Foo(2)' + SYSTEM_EOL + '@Bar' + SYSTEM_EOL + 'open module M.N {' + SYSTEM_EOL + '    requires A.B;' + SYSTEM_EOL + '    requires transitive C.D;' + SYSTEM_EOL + '    requires static E.F;' + SYSTEM_EOL + '    requires transitive static G.H;' + SYSTEM_EOL + '    exports P.Q;' + SYSTEM_EOL + '    exports R.S to T1.U1, T2.U2;' + SYSTEM_EOL + '    opens P.Q;' + SYSTEM_EOL + '    opens R.S to T1.U1, T2.U2;' + SYSTEM_EOL + '    uses V.W;' + SYSTEM_EOL + '    provides X.Y with Z1.Z2, Z3.Z4;' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result3030 + " <ConcreteSyntaxModel.genericPrettyPrint(cu)>"
"Era esperado verdadeiro, mas " + result3031 + " <moduleRequiresStmt.isTransitive()> é falso"
"Era esperado verdadeiro, mas " + result3032 + " <moduleRequiresStmt.isStatic()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3033 + " <cc.getLineComments().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3034 + " <cc.getJavadocComments().size()>"
"Era esperado valores iguais, mas  'testMetaModel' é diferente de " + result3035 + " <test.getMetaModelFieldName()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3036 + " <bert.getTypeName()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3037 + " <bert.getTypeNameGenerified()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3038 + " <bert.getTypeNameForGetter()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3039 + " <bert.getTypeNameForSetter()>"
"Era esperado valores iguais, mas  'BodyDeclaration' é diferente de " + result3040 + " <bert.getTypeName()>"
"Era esperado valores iguais, mas  'BodyDeclaration?' é diferente de " + result3041 + " <bert.getTypeNameGenerified()>"
"Era esperado valores iguais, mas  'OptionalNodeListBodyDeclaration?' é diferente de " + result3042 + " <bert.getTypeNameForGetter()>"
"Era esperado valores iguais, mas  'NodeListBodyDeclaration?' é diferente de " + result3043 + " <bert.getTypeNameForSetter()>"
"Era esperado valores iguais, mas  'Modifier' é diferente de " + result3044 + " <bert.getTypeName()>"
"Era esperado valores iguais, mas  'Modifier' é diferente de " + result3045 + " <bert.getTypeNameGenerified()>"
"Era esperado valores iguais, mas  'NodeListModifier' é diferente de " + result3046 + " <bert.getTypeNameForGetter()>"
"Era esperado valores iguais, mas  'NodeListModifier' é diferente de " + result3047 + " <bert.getTypeNameForSetter()>"
"Era esperado valores iguais, mas  'bertPropertyMetaModel' é diferente de " + result3048 + " <bert.getMetaModelFieldName()>"
"Era esperado valores iguais, mas  '' é diferente de " + result3049 + " <javadoc.toText()>"
"Era esperado valores iguais, mas  'first line' + SYSTEM_EOL + 'second line' + SYSTEM_EOL é diferente de " + result3050 + " <javadoc.toText()>"
"Era esperado valores iguais, mas  'first line' + SYSTEM_EOL + 'second line' + SYSTEM_EOL + SYSTEM_EOL + '@foo something useful' + SYSTEM_EOL é diferente de " + result3051 + " <javadoc.toText()>"
"Era esperado valores iguais, mas  new JavadocComment('' + SYSTEM_EOL + '\t\t ') é diferente de " + result3052 + " <javadoc.toComment('\t\t')>"
"Era esperado valores iguais, mas  new JavadocComment('' + SYSTEM_EOL + '\t\t * first line' + SYSTEM_EOL + '\t\t * second line' + SYSTEM_EOL + '\t\t ') é diferente de " + result3053 + " <javadoc.toComment('\t\t')>"
"Era esperado valores iguais, mas  new JavadocComment('' + SYSTEM_EOL + '\t\t * first line' + SYSTEM_EOL + '\t\t * second line' + SYSTEM_EOL + '\t\t * ' + SYSTEM_EOL + '\t\t * @foo something useful' + SYSTEM_EOL + '\t\t ') é diferente de " + result3054 + " <javadoc.toComment('\t\t')>"
"Era esperado valores iguais, mas  'first line' + SYSTEM_EOL + 'second line' é diferente de " + result3055 + " <javadoc.getDescription().toText()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3056 + " <javadoc.getBlockTags().size()>"
"Era esperado valores iguais, mas  'link' é diferente de " + result3057 + " <inlineTags.get(0).getName()>"
"Era esperado valores iguais, mas  ' TOFilename' é diferente de " + result3058 + " <inlineTags.get(0).getContent()>"
"Era esperado valores iguais, mas  LINK é diferente de " + result3059 + " <inlineTags.get(0).getType()>"
"Era esperado valores iguais, mas  'link' é diferente de " + result3060 + " <inlineTags.get(1).getName()>"
"Era esperado valores iguais, mas  ' TOVersion' é diferente de " + result3061 + " <inlineTags.get(1).getContent()>"
"Era esperado valores iguais, mas  LINK é diferente de " + result3062 + " <inlineTags.get(1).getType()>"
"Era esperado valores iguais, mas  'systemProperty' é diferente de " + result3063 + " <inlineTags.get(2).getName()>"
"Era esperado valores iguais, mas  ' JAVA_HOME' é diferente de " + result3064 + " <inlineTags.get(2).getContent()>"
"Era esperado valores iguais, mas  SYSTEM_PROPERTY é diferente de " + result3065 + " <inlineTags.get(2).getType()>"
"Era esperado verdadeiro, mas " + result3066 + " <javadocText.contains('{@link TOVersion}')> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3067 + " <javadoc.getBlockTags().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3068 + " <javadoc.getBlockTags().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3069 + " <javadoc.getBlockTags().size()>"
"Era esperado valores iguais, mas  blockTag é diferente de " + result3070 + " <javadoc.getBlockTags().get(0)>"
"Era esperado valores iguais, mas  blockTag é diferente de " + result3071 + " <javadoc.getBlockTags().remove(0)>"
"Era esperado valores iguais, mas  0 é diferente de " + result3072 + " <javadoc.getBlockTags().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3073 + " <description.getElements().size()>"
"Era esperado verdadeiro, mas " + result3074 + " <description.addElement(inlineTag)> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3075 + " <description.getElements().size()>"
"Era esperado valores iguais, mas  inlineTag é diferente de " + result3076 + " <description.getElements().get(0)>"
"Era esperado valores iguais, mas  inlineTag é diferente de " + result3077 + " <description.getElements().remove(0)>"
"Era esperado valores iguais, mas  0 é diferente de " + result3078 + " <description.getElements().size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3079 + " <elements.size()>"
"Era esperado valores iguais, mas  new JavadocSnippet('hallo ') é diferente de " + result3080 + " <elements.get(0)>"
"Era esperado valores iguais, mas  new JavadocInlineTag('link', LINK, ' Foo') é diferente de " + result3081 + " <elements.get(1)>"
"Era esperado valores iguais, mas  new JavadocSnippet(' welt') é diferente de " + result3082 + " <elements.get(2)>"
"Era esperado valores iguais, mas  tag é diferente de " + " '{@foo something}'"
"Era esperado valores iguais, mas  inputText é diferente de " + " outputText"
"Era esperado verdadeiro, mas " + result3083 + " <mapping.isEmpty()> é falso"
"Era esperado valores iguais, mas  4 é diferente de " + result3084 + " <provider.getInputCounter().getLine()>"
"Era esperado valores iguais, mas  4 é diferente de " + result3085 + " <provider.getOutputCounter().getLine()>"
"Era esperado objetos iguais, mas  PositionMapping.PositionUpdate.NONE é diferente de " + result3086 + " <mapping.lookup(new Position(10000, 1))>"
"Era esperado valores iguais, mas " + result3087 + " <text(output)> é diferente de " + " decoded"
"Era esperado valores iguais, mas " + result3088 + " <input.size()> é diferente de " + result3089 + " <provider.getInputCounter().getLine()>"
"Era esperado valores iguais, mas " + result3090 + " <output.size()> é diferente de " + result3091 + " <provider.getOutputCounter().getLine()>"
"Era esperado verdadeiro, mas " + result3092 + " <le.getComment().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3093 + " <le.getOrphanComments().isEmpty()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3094 + " <le.getAllContainedComments().size()>"
"Era esperado verdadeiro, mas " + result3095 + " <st.getComment().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3096 + " <st.getOrphanComments().isEmpty()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3097 + " <st.getAllContainedComments().size()>"
"Era esperado verdadeiro, mas " + result3098 + " <st.getComment().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3099 + " <st.getOrphanComments().isEmpty()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3100 + " <st.getAllContainedComments().size()>"
"Era esperado verdadeiro, mas " + result3101 + " <st.getComment().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3102 + " <st.getOrphanComments().isEmpty()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3103 + " <st.getAllContainedComments().size()>"
"Era esperado valores iguais, mas  p1 é diferente de " + result3104 + " <p1.orIfInvalid(p2)>"
"Era esperado valores iguais, mas  p1 é diferente de " + result3105 + " <invalid.orIfInvalid(p1)>"
"Era esperado valores iguais, mas  invalid2 é diferente de " + result3106 + " <invalid2.orIfInvalid(invalid)>"
"Era esperado valores iguais, mas  'Can't position at line -10' é diferente de " + result3107 + " <thrown1.getMessage()>"
"Era esperado valores iguais, mas  'Can't position at column -10' é diferente de " + result3108 + " <thrown2.getMessage()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3109 + " <addMethod.getThrownExceptions().size()>"
"Era esperado verdadeiro, mas " + result3110 + " <addMethod.isThrown(IllegalStateException.class)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3111 + " <addMethod.getThrownExceptions().size()>"
"Era esperado valores iguais, mas  'Test' é diferente de " + result3112 + " <addMethod.getThrownException(1).toString()>"
"Era esperado valores iguais, mas  'import com.github.javaparser.builders.NodeWithAnnotationsBuildersTest.hey;' é diferente de " + result3113 + " <cu.getImport(0).toString().trim()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3114 + " <testClass.getAnnotations().size()>"
"Era esperado valores iguais, mas  annotation é diferente de " + result3115 + " <testClass.getAnnotation(0)>"
"Era esperado valores iguais, mas  NormalAnnotationExpr.class é diferente de " + result3116 + " <testClass.getAnnotation(0).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3117 + " <testClass.getAnnotations().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3118 + " <testClass.getAnnotations().size()>"
"Era esperado valores iguais, mas  'value' é diferente de " + result3119 + " <testClass.getAnnotation(0).asSingleMemberAnnotationExpr().getMemberValue().toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3120 + " <testClass.getAnnotations().size()>"
"Era esperado valores iguais, mas  'value' é diferente de " + result3121 + " <testClass.getAnnotation(0).asSingleMemberAnnotationExpr().getMemberValue().toString()>"
"Era esperado verdadeiro, mas " + result3122 + " <testClass.isAnnotationPresent(hey.class)> é falso"
"Era esperado valores iguais, mas  annotation é diferente de " + result3123 + " <testClass.getAnnotationByName('hey').get()>"
"Era esperado valores iguais, mas  annotation é diferente de " + result3124 + " <testClass.getAnnotationByClass(hey.class).get()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3125 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + Function.class.getName() + ';' + SYSTEM_EOL é diferente de " + result3126 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3127 + " <testEnum.getImplementedTypes().size()>"
"Era esperado valores iguais, mas " + result3128 + " <Function.class.getSimpleName()> é diferente de " + result3129 + " <testEnum.getImplementedTypes(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3130 + " <testEnum.getEntries().size()>"
"Era esperado valores iguais, mas  'MY_ENUM_CONSTANT' é diferente de " + result3131 + " <testEnum.getEntry(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3132 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + List.class.getName() + ';' + SYSTEM_EOL é diferente de " + result3133 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3134 + " <testClass.getExtendedTypes().size()>"
"Era esperado valores iguais, mas " + result3135 + " <List.class.getSimpleName()> é diferente de " + result3136 + " <testClass.getExtendedTypes(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3137 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + Function.class.getName() + ';' + SYSTEM_EOL é diferente de " + result3138 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3139 + " <testClass.getImplementedTypes().size()>"
"Era esperado valores iguais, mas " + result3140 + " <Function.class.getSimpleName()> é diferente de " + result3141 + " <testClass.getImplementedTypes(0).getNameAsString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3142 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3143 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + Map.class.getCanonicalName() + ';' + SYSTEM_EOL é diferente de " + result3144 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  'import ' + List.class.getCanonicalName() + ';' + SYSTEM_EOL é diferente de " + result3145 + " <cu.getImport(1).toString()>"
"Era esperado valores iguais, mas  'import static ' + com.github.javaparser.StaticJavaParser.class.getCanonicalName() + '.parseImport;' + SYSTEM_EOL é diferente de " + result3146 + " <cu.getImport(2).toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3147 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + $tartsWith$.class.getCanonicalName() + ';' + SYSTEM_EOL é diferente de " + result3148 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  'import my.$tartsWith$;' + SYSTEM_EOL é diferente de " + result3149 + " <cu.getImport(1).toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3150 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + F$F.class.getCanonicalName() + ';' + SYSTEM_EOL é diferente de " + result3151 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  'import my.F$F;' + SYSTEM_EOL é diferente de " + result3152 + " <cu.getImport(1).toString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3153 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3154 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3155 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import one.two.three.DoNotIgnoreImportWithinSubPackage;' + SYSTEM_EOL é diferente de " + result3156 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3157 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3158 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import my.*;' + SYSTEM_EOL é diferente de " + result3159 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  'import my.other.Import;' + SYSTEM_EOL é diferente de " + result3160 + " <cu.getImport(1).toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3161 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import my.*;' + SYSTEM_EOL é diferente de " + result3162 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  'import my.other.*;' + SYSTEM_EOL é diferente de " + result3163 + " <cu.getImport(1).toString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3164 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3165 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import java.lang.annotation.ElementType;' + SYSTEM_EOL é diferente de " + result3166 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3167 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3168 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3169 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3170 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3171 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'com.github.javaparser.ast.CompilationUnit' é diferente de " + result3172 + " <cu.getImport(0).getNameAsString()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result3173 + " <cu.getImport(1).getNameAsString()>"
"Era esperado valores iguais, mas  'import ' + testInnerClass.class.getCanonicalName().replace('$', '.') + ';' + SYSTEM_EOL é diferente de " + result3174 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3175 + " <cu.getTypes().size()>"
"Era esperado valores iguais, mas  'testClass' é diferente de " + result3176 + " <cu.getType(0).getNameAsString()>"
"Era esperado valores iguais, mas  ClassOrInterfaceDeclaration.class é diferente de " + result3177 + " <cu.getType(0).getClass()>"
"Era esperado verdadeiro, mas " + result3178 + " <myClassDeclaration.isPrivate()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3179 + " <cu.getTypes().size()>"
"Era esperado valores iguais, mas  'testInterface' é diferente de " + result3180 + " <cu.getType(0).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3181 + " <myInterfaceDeclaration.isPublic()> é falso"
"Era esperado valores iguais, mas  ClassOrInterfaceDeclaration.class é diferente de " + result3182 + " <cu.getType(0).getClass()>"
"Era esperado verdadeiro, mas " + result3183 + " <myInterfaceDeclaration.isInterface()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3184 + " <cu.getTypes().size()>"
"Era esperado valores iguais, mas  'test' é diferente de " + result3185 + " <cu.getType(0).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3186 + " <myEnumDeclaration.isPublic()> é falso"
"Era esperado valores iguais, mas  EnumDeclaration.class é diferente de " + result3187 + " <cu.getType(0).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3188 + " <cu.getTypes().size()>"
"Era esperado valores iguais, mas  'test' é diferente de " + result3189 + " <cu.getType(0).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3190 + " <myAnnotationDeclaration.isPublic()> é falso"
"Era esperado valores iguais, mas  AnnotationDeclaration.class é diferente de " + result3191 + " <cu.getType(0).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3192 + " <cu.getTypes().size()>"
"Era esperado valores iguais, mas  'test' é diferente de " + result3193 + " <cu.getType(0).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3194 + " <myRecordDeclaration.isPublic()> é falso"
"Era esperado verdadeiro, mas " + result3195 + " <myRecordDeclaration.isFinal()> é falso"
"Era esperado valores iguais, mas  RecordDeclaration.class é diferente de " + result3196 + " <cu.getType(0).getClass()>"
"Era esperado valores iguais, mas " + result3197 + " <cu.addClass('test')> é diferente de " + result3198 + " <cu.getClassByName('test').get()>"
"Era esperado valores iguais, mas " + result3199 + " <cu.addInterface('test')> é diferente de " + result3200 + " <cu.getInterfaceByName('test').get()>"
"Era esperado valores iguais, mas " + result3201 + " <cu.addEnum('test')> é diferente de " + result3202 + " <cu.getEnumByName('test').get()>"
"Era esperado valores iguais, mas " + result3203 + " <cu.addAnnotationDeclaration('test')> é diferente de " + result3204 + " <cu.getAnnotationDeclarationByName('test').get()>"
"Era esperado valores iguais, mas " + result3205 + " <cu.addType(new RecordDeclaration(Modifier.createModifierList(), 'test')).getType(0)> é diferente de " + result3206 + " <cu.getRecordByName('test').get()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3207 + " <cu.getImports().size()>"
"Era esperado valores iguais, mas  'import ' + List.class.getName() + ';' + SYSTEM_EOL é diferente de " + result3208 + " <cu.getImport(0).toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3209 + " <addMethod.getParameters().size()>"
"Era esperado valores iguais, mas  'yay' é diferente de " + result3210 + " <addMethod.getParameter(0).getNameAsString()>"
"Era esperado valores iguais, mas  'List' é diferente de " + result3211 + " <addMethod.getParameter(1).getType().toString()>"
"Era esperado valores iguais, mas  myNewParam é diferente de " + result3212 + " <addMethod.getParameter(1)>"
"Era esperado valores iguais, mas  addAndGetParameter é diferente de " + result3213 + " <addMethod.getParameterByName('yay').get()>"
"Era esperado valores iguais, mas  addAndGetParameter é diferente de " + result3214 + " <addMethod.getParameterByType('int').get()>"
"Era esperado valores iguais, mas  addAndGetParameter é diferente de " + result3215 + " <addMethod.getParameterByType(int.class).get()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3216 + " <testClass.getMembers().size()>"
"Era esperado valores iguais, mas  MethodDeclaration.class é diferente de " + result3217 + " <testClass.getMember(1).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3218 + " <methodsWithName.size()>"
"Era esperado valores iguais, mas  'getMyField' é diferente de " + result3219 + " <getter.getNameAsString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3220 + " <getter.getType().toString()>"
"Era esperado valores iguais, mas  ReturnStmt.class é diferente de " + result3221 + " <getter.getBody().get().getStatement(0).getClass()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3222 + " <testClass.getMembers().size()>"
"Era esperado valores iguais, mas  MethodDeclaration.class é diferente de " + result3223 + " <testClass.getMember(1).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3224 + " <methodsWithName.size()>"
"Era esperado valores iguais, mas  'setMyField' é diferente de " + result3225 + " <setter.getNameAsString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3226 + " <setter.getParameter(0).getType().toString()>"
"Era esperado valores iguais, mas  ExpressionStmt.class é diferente de " + result3227 + " <setter.getBody().get().getStatement(0).getClass()>"
"Era esperado valores iguais, mas  'this.myField = myField;' é diferente de " + result3228 + " <setter.getBody().get().getStatement(0).toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3229 + " <testEnum.getMembers().size()>"
"Era esperado valores iguais, mas  MethodDeclaration.class é diferente de " + result3230 + " <testEnum.getMember(1).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3231 + " <methodsWithName.size()>"
"Era esperado valores iguais, mas  'getMyField' é diferente de " + result3232 + " <getter.getNameAsString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3233 + " <getter.getType().toString()>"
"Era esperado valores iguais, mas  ReturnStmt.class é diferente de " + result3234 + " <getter.getBody().get().getStatement(0).getClass()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3235 + " <testEnum.getMembers().size()>"
"Era esperado valores iguais, mas  MethodDeclaration.class é diferente de " + result3236 + " <testEnum.getMember(1).getClass()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3237 + " <methodsWithName.size()>"
"Era esperado valores iguais, mas  'setMyField' é diferente de " + result3238 + " <setter.getNameAsString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3239 + " <setter.getParameter(0).getType().toString()>"
"Era esperado valores iguais, mas  ExpressionStmt.class é diferente de " + result3240 + " <setter.getBody().get().getStatement(0).getClass()>"
"Era esperado valores iguais, mas  'this.myField = myField;' é diferente de " + result3241 + " <setter.getBody().get().getStatement(0).toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3242 + " <classDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  addField é diferente de " + result3243 + " <classDeclaration.getMember(0)>"
"Era esperado valores iguais, mas  'fieldName' é diferente de " + result3244 + " <addField.getVariable(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3245 + " <classDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  addMethod é diferente de " + result3246 + " <classDeclaration.getMember(0)>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3247 + " <addMethod.getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3248 + " <classDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  addCtor é diferente de " + result3249 + " <classDeclaration.getMember(0)>"
"Era esperado valores iguais, mas " + result3250 + " <classDeclaration.getName()> é diferente de " + result3251 + " <addCtor.getName()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3252 + " <classDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  InitializerDeclaration.class é diferente de " + result3253 + " <classDeclaration.getMember(0).getClass()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3254 + " <classDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  InitializerDeclaration.class é diferente de " + result3255 + " <classDeclaration.getMember(0).getClass()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3256 + " <methodsByName.size()>"
"Era esperado verdadeiro, mas " + result3257 + " <methodsByName.contains(addMethod)> é falso"
"Era esperado verdadeiro, mas " + result3258 + " <methodsByName.contains(addMethod2)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3259 + " <methods.size()>"
"Era esperado verdadeiro, mas " + result3260 + " <methods.contains(addMethod)> é falso"
"Era esperado verdadeiro, mas " + result3261 + " <methods.contains(addMethod2)> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3262 + " <methodsWithNoParams.size()>"
"Era esperado verdadeiro, mas " + result3263 + " <methodsWithNoParams.contains(mFoo)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3264 + " <methodsWithIntParam.size()>"
"Era esperado verdadeiro, mas " + result3265 + " <methodsWithIntParam.contains(mFooInt)> é falso"
"Era esperado verdadeiro, mas " + result3266 + " <methodsWithIntParam.contains(mFoo2Int)> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3267 + " <methodsWithListParam.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3268 + " <methodsWithIntAndListParams.size()>"
"Era esperado verdadeiro, mas " + result3269 + " <methodsWithIntAndListParams.contains(mFooIntList)> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3270 + " <methodsWithListAndIntParams.size()>"
"Era esperado verdadeiro, mas " + result3271 + " <methodsWithListAndIntParams.contains(mFooListInt)> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3272 + " <methodsWithListAndIntParams.size()>"
"Era esperado verdadeiro, mas " + result3273 + " <methodsWithIntAndIntParams.contains(mFoo2IntInt)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3274 + " <constructors.size()>"
"Era esperado verdadeiro, mas " + result3275 + " <constructors.contains(addConstructor)> é falso"
"Era esperado verdadeiro, mas " + result3276 + " <constructors.contains(addConstructor2)> é falso"
"Era esperado verdadeiro, mas " + result3277 + " <constructorWithNoParams.isPresent()> é falso"
"Era esperado objetos iguais, mas  c é diferente de " + result3278 + " <constructorWithNoParams.get()>"
"Era esperado verdadeiro, mas " + result3279 + " <constructorWithIntParam.isPresent()> é falso"
"Era esperado objetos iguais, mas  cInt é diferente de " + result3280 + " <constructorWithIntParam.get()>"
"Era esperado verdadeiro, mas " + result3281 + " <constructorWithIntAndListParams.isPresent()> é falso"
"Era esperado objetos iguais, mas  cIntList é diferente de " + result3282 + " <constructorWithIntAndListParams.get()>"
"Era esperado verdadeiro, mas " + result3283 + " <constructorWithListAndIntParams.isPresent()> é falso"
"Era esperado objetos iguais, mas  cListInt é diferente de " + result3284 + " <constructorWithListAndIntParams.get()>"
"Era esperado verdadeiro, mas " + result3285 + " <constructorWithIntAndIntParams.isPresent()> é falso"
"Era esperado objetos iguais, mas  cIntInt é diferente de " + result3286 + " <constructorWithIntAndIntParams.get()>"
"Era esperado valores iguais, mas  addField é diferente de " + " fieldByName"
"Era esperado verdadeiro, mas " + result3287 + " <fields.contains(firstField)> é falso"
"Era esperado verdadeiro, mas " + result3288 + " <fields.contains(secondField)> é falso"
"Era esperado não nulo, mas " + result3289 + " <classOrInterfaceDeclaration.getFields()> é nulo"
"Era esperado valores iguais, mas  1 é diferente de " + result3290 + " <classOrInterfaceDeclaration.getFields().size()>"
"Era esperado valores iguais, mas  PRIVATE é diferente de " + result3291 + " <fieldDeclaration.getModifiers().iterator().next().getKeyword()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result3292 + " <fieldDeclaration.getVariables().get(0).getType().toString()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result3293 + " <fieldDeclaration.getVariables().get(0).getName().toString()>"
"Era esperado não nulo, mas " + result3294 + " <classOrInterfaceDeclaration.getFields()> é nulo"
"Era esperado valores iguais, mas  1 é diferente de " + result3295 + " <classOrInterfaceDeclaration.getFields().size()>"
"Era esperado valores iguais, mas  PUBLIC é diferente de " + result3296 + " <fieldDeclaration.getModifiers().iterator().next().getKeyword()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result3297 + " <fieldDeclaration.getVariables().get(0).getType().toString()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result3298 + " <fieldDeclaration.getVariables().get(0).getName().toString()>"
"Era esperado não nulo, mas " + result3299 + " <classOrInterfaceDeclaration.getFields()> é nulo"
"Era esperado valores iguais, mas  1 é diferente de " + result3300 + " <classOrInterfaceDeclaration.getFields().size()>"
"Era esperado valores iguais, mas  PROTECTED é diferente de " + result3301 + " <fieldDeclaration.getModifiers().iterator().next().getKeyword()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result3302 + " <fieldDeclaration.getVariables().get(0).getType().toString()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result3303 + " <fieldDeclaration.getVariables().get(0).getName().toString()>"
"Era esperado não nulo, mas " + result3304 + " <classOrInterfaceDeclaration.getFields()> é nulo"
"Era esperado valores iguais, mas  1 é diferente de " + result3305 + " <classOrInterfaceDeclaration.getFields().size()>"
"Era esperado valores iguais, mas  PUBLIC é diferente de " + result3306 + " <fieldDeclaration.getModifiers().iterator().next().getKeyword()>"
"Era esperado valores iguais, mas  'java.lang.String' é diferente de " + result3307 + " <fieldDeclaration.getVariables().get(0).getType().toString()>"
"Era esperado valores iguais, mas  'name' é diferente de " + result3308 + " <fieldDeclaration.getVariables().get(0).getName().toString()>"
"Era esperado valores iguais, mas  'John' é diferente de " + result3309 + " <fieldDeclaration.getVariables().get(0).getInitializer().get().toString()>"
"Era esperado não nulo, mas " + result3310 + " <classOrInterfaceDeclaration.getFields()> é nulo"
"Era esperado valores iguais, mas  1 é diferente de " + result3311 + " <classOrInterfaceDeclaration.getFields().size()>"
"Era esperado valores iguais, mas  PUBLIC é diferente de " + result3312 + " <fieldDeclaration.getModifiers().iterator().next().getKeyword()>"
"Era esperado valores iguais, mas  'List' é diferente de " + result3313 + " <fieldDeclaration.getVariables().get(0).getType().toString()>"
"Era esperado valores iguais, mas  'skills' é diferente de " + result3314 + " <fieldDeclaration.getVariables().get(0).getName().toString()>"
"Era esperado valores iguais, mas  'new ArrayList()' é diferente de " + result3315 + " <fieldDeclaration.getVariables().get(0).getInitializer().get().toString()>"
"Era esperado valores iguais, mas  image é diferente de " + result3316 + " <token.getText()>"
"Era esperado valores iguais, mas  range é diferente de " + result3317 + " <token.getRange().get()>"
"Era esperado valores iguais, mas  kind é diferente de " + result3318 + " <token.getKind()>"
"Era esperado valores iguais, mas  category é diferente de " + result3319 + " <token.getCategory()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '=' é diferente de " + result3320 + " <new JavaToken(ASSIGN).getText()>"
"Era esperado valores iguais, mas  ' ' é diferente de " + result3321 + " <new JavaToken(EOF).getText()>"
"Era esperado valores iguais, mas  '*/' é diferente de " + result3322 + " <new JavaToken(JAVADOC_COMMENT).getText()>"
"Era esperado valores iguais, mas  JavaToken.Kind.ASSERT é diferente de " + " kind"
"Era esperado valores iguais, mas  GeneratedJavaParserConstants.ASSERT é diferente de " + result3323 + " <kind.getKind()>"
"Era esperado valores diferentes, mas  tokenToBeDeleted é igual a " + " nextTokenAfterDelete"
"Era esperado valores iguais, mas  '/*2*/' é diferente de " + result3324 + " <nextTokenAfterDelete.getText()>"
"Era esperado valores iguais, mas  '1' é diferente de " + result3325 + " <previous.getText()>"
"Era esperado valores iguais, mas  '/*2*/' é diferente de " + result3326 + " <iterator.next().getText()>"
"Era esperado verdadeiro, mas " + result3327 + " <memberDeclaration.hasRange()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 17), new Position(1, 29)) é diferente de " + result3328 + " <memberDeclaration.getRange().get()>"
"Era esperado verdadeiro, mas " + result3329 + " <memberDeclaration.hasRange()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 22), new Position(1, 34)) é diferente de " + result3330 + " <memberDeclaration.getRange().get()>"
"Era esperado valores iguais, mas  'Lexical error at line 1, column 34.  Encountered: \'\\\'\' (34), after : \'\\\'\\\\uABC\'' é diferente de " + result3331 + " <cu.getProblem(0).getMessage()>"
"Era esperado verdadeiro, mas " + result3332 + " <memberDeclaration.hasRange()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 17), new Position(1, 31)) é diferente de " + result3333 + " <memberDeclaration.getRange().get()>"
"Era esperado verdadeiro, mas " + result3334 + " <range.isPresent()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 8), new Position(1, 12)) é diferente de " + result3335 + " <range.get()>"
"Era esperado verdadeiro, mas " + result3336 + " <range.isPresent()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 13), new Position(1, 17)) é diferente de " + result3337 + " <range.get()>"
"Era esperado verdadeiro, mas " + result3338 + " <range.isPresent()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 8), new Position(1, 9)) é diferente de " + result3339 + " <range.get()>"
"Era esperado verdadeiro, mas " + result3340 + " <range.isPresent()> é falso"
"Era esperado valores iguais, mas  new Range(new Position(1, 10), new Position(1, 11)) é diferente de " + result3341 + " <range.get()>"
"Era esperado valores iguais, mas " + result3342 + " <range(1, 9, 1, 17)> é diferente de " + result3343 + " <problem.getLocation().get().toRange().get()>"
"Era esperado valores iguais, mas  'Parse error. Found EOF, expected one of  \';\' \'\' \'@\' \'abstract\' \'boolean\' \'byte\' \'char\' \'class\' \'default\' \'double\' \'enum\' \'exports\' \'final\' \'float\' \'int\' \'interface\' \'long\' \'module\' \'native\' \'open\' \'opens\' \'private\' \'protected\' \'provides\' \'public\' \'record\' \'requires\' \'short\' \'static\' \'strictfp\' \'synchronized\' \'to\' \'transient\' \'transitive\' \'uses\' \'void\' \'volatile\' \'with\' \'yield\' \'{\' \'}\' IDENTIFIER' é diferente de " + result3344 + " <problem.getMessage()>"
"Era esperado que   ParseException.class fosse uma instancia de " + result3345 + " <problem.getCause().get()>, mas não é"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3346 + " <intersectionType.getElements().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'Runnable' é diferente de " + result3347 + " <intersectionType.getElements().get(0).asClassOrInterfaceType().getNameAsString()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'Serializable' é diferente de " + result3348 + " <intersectionType.getElements().get(1).asClassOrInterfaceType().getNameAsString()>"
"Era esperado valores iguais, mas " + result3349 + " <range(3, 13, 3, 54)> é diferente de " + result3350 + " <type.getRange().get()>"
"Era esperado valores iguais, mas " + result3351 + " <range(3, 12, 3, 101)> é diferente de " + result3352 + " <castExpr.getRange().get()>"
"Era esperado valores iguais, mas " + result3353 + " <range(3, 12, 3, 101)> é diferente de " + result3354 + " <castExpr.getRange().get()>"
"Era esperado valores iguais, mas " + result3355 + " <range(3, 56, 3, 101)> é diferente de " + result3356 + " <lambdaExpr.getRange().get()>"
"Era esperado valores iguais, mas  GeneratedJavaParserConstants.LPAREN é diferente de " + result3357 + " <lambdaExpr.getTokenRange().get().getBegin().getKind()>"
"Era esperado valores iguais, mas  GeneratedJavaParserConstants.RPAREN é diferente de " + result3358 + " <lambdaExpr.getTokenRange().get().getEnd().getKind()>"
"Era esperado valores iguais, mas " + result3359 + " <range(3, 68, 3, 101)> é diferente de " + result3360 + " <lambdaBody.getRange().get()>"
"Era esperado valores iguais, mas  '{}' é diferente de " + result3361 + " <blockStmt.getTokenRange().get().toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3362 + " <forStmt.getInitialization().size()>"
"Era esperado verdadeiro, mas " + result3363 + " <forStmt.getInitialization().get(0).isVariableDeclarationExpr()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3364 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().size()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result3365 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getNameAsString()>"
"Era esperado valores iguais, mas  'b' é diferente de " + result3366 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3367 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getInitializer().isPresent()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result3368 + " <forStmt.getInitialization().size()>"
"Era esperado verdadeiro, mas " + result3369 + " <forStmt.getInitialization().get(0).isVariableDeclarationExpr()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3370 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().size()>"
"Era esperado valores iguais, mas  'i' é diferente de " + result3371 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getNameAsString()>"
"Era esperado valores iguais, mas  'j' é diferente de " + result3372 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3373 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(1).getInitializer().isPresent()> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  lineSeparator é diferente de " + " detectedLineSeparator"
"Era esperado valores iguais, mas  lineSeparator é diferente de " + " lineSeparator_cu"
"Era esperado valores iguais, mas  lineSeparator é diferente de " + " lineSeparator_fd"
"Era esperado valores iguais, mas  new Javadoc(JavadocDescription.parseText('A simple line of text')) é diferente de " + result3374 + " <JavadocParser.parse('A simple line of text')>"
"Era esperado valores iguais, mas  new Javadoc(JavadocDescription.parseText('')) é diferente de " + result3375 + " <JavadocParser.parse(SYSTEM_EOL)>"
"Era esperado valores iguais, mas  new Javadoc(JavadocDescription.parseText('The line number of the first character of this Token.')) é diferente de " + result3376 + " <JavadocParser.parse(' The line number of the first character of this Token. ')>"
"Era esperado valores iguais, mas  new Javadoc(JavadocDescription.parseText('The string image of the token.')) é diferente de " + result3377 + " <JavadocParser.parse(SYSTEM_EOL + '   * The string image of the token.' + SYSTEM_EOL + '   ')>"
"Era esperado valores iguais, mas  new Javadoc(JavadocDescription.parseText('The version identifier for this Serializable class.' + SYSTEM_EOL + 'Increment only if the iserialized/i form of the' + SYSTEM_EOL + 'class changes.')) é diferente de " + result3378 + " <JavadocParser.parse(text)>"
"Era esperado valores iguais, mas  new Javadoc(JavadocDescription.parseText('Returns a new Token object, by default.' + SYSTEM_EOL + 'However, if you want, you can create and return subclass objects based on the value of ofKind.' + SYSTEM_EOL + SYSTEM_EOL + '   case MyParserConstants.ID : return new IDToken(ofKind, image);' + SYSTEM_EOL + SYSTEM_EOL + 'to the following switch statement. Then you can cast matchedToken')) é diferente de " + result3379 + " <JavadocParser.parse(text)>"
"Era esperado valores iguais, mas " + result3380 + " <new Javadoc(JavadocDescription.parseText('')).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.DEPRECATED, '')).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.SEE, '#getEndColumn'))> é diferente de " + result3381 + " <JavadocParser.parse(text)>"
"Era esperado valores iguais, mas  underTest é diferente de " + result3382 + " <JavadocParser.parse(expectedText)>"
"Era esperado valores iguais, mas  1 é diferente de " + result3383 + " <underTest.getBlockTags().size()>"
"Era esperado valores iguais, mas  'unofficial' é diferente de " + result3384 + " <underTest.getBlockTags().get(0).getTagName()>"
"Era esperado valores iguais, mas " + result3385 + " <new Javadoc(JavadocDescription.parseText('Add a field to this and automatically add the import of the type if needed')).addBlockTag(JavadocBlockTag.createParamBlockTag('typeClass', 'the type of the field')).addBlockTag(JavadocBlockTag.createParamBlockTag('name', 'the name of the field')).addBlockTag(JavadocBlockTag.createParamBlockTag('modifiers', 'the modifiers like {@link Modifier#PUBLIC}')).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.RETURN, 'the {@link FieldDeclaration} created'))> é diferente de " + " res"
"Era esperado valores iguais, mas " + result3386 + " <new Javadoc(JavadocDescription.parseText('Add a field to this and automatically add the import of the type if needed')).addBlockTag(JavadocBlockTag.createParamBlockTag('typeClass', 'the type of the field' + SYSTEM_EOL + '    continued in a second line')).addBlockTag(JavadocBlockTag.createParamBlockTag('name', 'the name of the field')).addBlockTag(JavadocBlockTag.createParamBlockTag('modifiers', 'the modifiers like {@link Modifier#PUBLIC}')).addBlockTag(new JavadocBlockTag(JavadocBlockTag.Type.RETURN, 'the {@link FieldDeclaration} created'))> é diferente de " + " res"
"Era esperado valores iguais, mas  -1 é diferente de " + result3387 + " <JavadocParser.startsWithAsterisk('')>"
"Era esperado valores iguais, mas  -1 é diferente de " + result3388 + " <JavadocParser.startsWithAsterisk(' ciao')>"
"Era esperado valores iguais, mas  0 é diferente de " + result3389 + " <JavadocParser.startsWithAsterisk('* ciao')>"
"Era esperado valores iguais, mas  3 é diferente de " + result3390 + " <JavadocParser.startsWithAsterisk('   * ciao')>"
"Era esperado objetos iguais, mas  javaParser é diferente de " + result3391 + " <actualAdapter.getParser()>"
"Era esperado objetos iguais, mas " + result3392 + " <javaParser.getParserConfiguration()> é diferente de " + result3393 + " <adapter.getParserConfiguration()>"
"Era esperado verdadeiro, mas " + result3394 + " <classA.isPresent()> é falso"
"Era esperado valores iguais, mas  'A' é diferente de " + result3395 + " <classA.get().getNameAsString()>"
"Era esperado verdadeiro, mas " + result3396 + " <classA.isPresent()> é falso"
"Era esperado valores iguais, mas  'A' é diferente de " + result3397 + " <classA.get().getNameAsString()>"
"Era esperado verdadeiro, mas " + result3398 + " <classA.isPresent()> é falso"
"Era esperado valores iguais, mas  'A' é diferente de " + result3399 + " <classA.get().getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3400 + " <block.getStatements().size()>"
"Era esperado verdadeiro, mas " + result3401 + " <statement.isBreakStmt()> é falso"
"Era esperado valores iguais, mas  'Optional' é diferente de " + result3402 + " <importDecl.getName().getIdentifier()>"
"Era esperado verdadeiro, mas " + result3403 + " <expression.isMethodCallExpr()> é falso"
"Era esperado valores iguais, mas  'Test' é diferente de " + result3404 + " <annotation.getNameAsString()>"
"Era esperado verdadeiro, mas " + result3405 + " <annotationBody.isAnnotationDeclaration()> é falso"
"Era esperado verdadeiro, mas " + result3406 + " <interfaceBody.isClassOrInterfaceDeclaration()> é falso"
"Era esperado verdadeiro, mas " + result3407 + " <customType.isClassOrInterfaceType()> é falso"
"Era esperado verdadeiro, mas " + result3408 + " <customType.isPrimitiveType()> é falso"
"Era esperado verdadeiro, mas " + result3409 + " <variable.isFinal()> é falso"
"Era esperado verdadeiro, mas " + result3410 + " <statement.getArguments().isEmpty()> é falso"
"Era esperado valores iguais, mas  'JavaParser' é diferente de " + result3411 + " <name.getIdentifier()>"
"Era esperado valores iguais, mas  'JavaParser' é diferente de " + result3412 + " <name.getIdentifier()>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3413 + " <parameter.getNameAsString()>"
"Era esperado valores iguais, mas  'com.github.javaparser' é diferente de " + result3414 + " <packageDeclaration.getNameAsString()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result3415 + " <typeDeclaration.getNameAsString()>"
"Era esperado valores iguais, mas  'X' é diferente de " + result3416 + " <moduleDeclaration.getNameAsString()>"
"Era esperado verdadeiro, mas " + result3417 + " <moduleDirective.isModuleOpensDirective()> é falso"
"Era esperado valores iguais, mas  'T' é diferente de " + result3418 + " <typeParameter.getNameAsString()>"
"Era esperado valores iguais, mas  'test' é diferente de " + result3419 + " <methodDeclaration.getNameAsString()>"
"Era esperado falso, mas " + result3420 + " <createValue().isStatic()> é verdadeiro "
"Era esperado falso, mas " + result3421 + " <module.isOpen()> é verdadeiro "
"Era esperado falso, mas " + result3422 + " <myClassDeclaration.isInterface()> é verdadeiro "
"Era esperado falso, mas " + result3423 + " <constructorWithListParam.isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3424 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result3425 + " <cu.getResult().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3426 + " <result.getResult().get().getTokenRange().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3427 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getInitializer().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3428 + " <forStmt.getInitialization().get(0).asVariableDeclarationExpr().getVariables().get(0).getInitializer().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  '\\r' é diferente de " + result3429 + " <LineSeparator.CR.asEscapedString()>"
"Era esperado valores iguais, mas  '\\n' é diferente de " + result3430 + " <LineSeparator.LF.asEscapedString()>"
"Era esperado valores iguais, mas  '\\r\\n' é diferente de " + result3431 + " <LineSeparator.CRLF.asEscapedString()>"
"Era esperado valores iguais, mas  LineSeparator.CR é diferente de " + result3432 + " <LineSeparator.lookup('\r').get()>"
"Era esperado valores iguais, mas  LineSeparator.LF é diferente de " + result3433 + " <LineSeparator.lookup('\n').get()>"
"Era esperado valores iguais, mas  LineSeparator.CRLF é diferente de " + result3434 + " <LineSeparator.lookup('\r\n').get()>"
"Era esperado falso, mas " + result3435 + " <LineSeparator.lookup('').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3436 + " <LineSeparator.lookup(' ').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3437 + " <LineSeparator.lookup('\\r').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3438 + " <LineSeparator.lookup('\\n').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3439 + " <LineSeparator.lookup(' \\r').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3440 + " <LineSeparator.lookup(' \\n').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3441 + " <LineSeparator.lookup('\\r ').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3442 + " <LineSeparator.lookup('\\n ').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3443 + " <LineSeparator.lookup('test 123 123').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3444 + " <LineSeparator.lookup('\r \n').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3445 + " <LineSeparator.lookup('\\r \\n').isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  LineSeparator.CR é diferente de " + result3446 + " <LineSeparator.lookupEscaped('\\r').get()>"
"Era esperado valores iguais, mas  LineSeparator.LF é diferente de " + result3447 + " <LineSeparator.lookupEscaped('\\n').get()>"
"Era esperado valores iguais, mas  LineSeparator.CRLF é diferente de " + result3448 + " <LineSeparator.lookupEscaped('\\r\\n').get()>"
"Era esperado falso, mas " + result3449 + " <LineSeparator.lookupEscaped('').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3450 + " <LineSeparator.lookupEscaped(' ').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3451 + " <LineSeparator.lookupEscaped('\r').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3452 + " <LineSeparator.lookupEscaped('\n').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3453 + " <LineSeparator.lookupEscaped(' \r').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3454 + " <LineSeparator.lookupEscaped(' \n').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3455 + " <LineSeparator.lookupEscaped('\r ').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3456 + " <LineSeparator.lookupEscaped('\n ').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3457 + " <LineSeparator.lookupEscaped('test 123 123').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3458 + " <LineSeparator.lookupEscaped('\r \n').isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3459 + " <LineSeparator.lookupEscaped('\\r \\n').isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  LineSeparator.CR é diferente de " + result3460 + " <LineSeparator.detect('\r')>"
"Era esperado valores iguais, mas  LineSeparator.LF é diferente de " + result3461 + " <LineSeparator.detect('\n')>"
"Era esperado valores iguais, mas  LineSeparator.CRLF é diferente de " + result3462 + " <LineSeparator.detect('\r\n')>"
"Era esperado valores iguais, mas  LineSeparator.NONE é diferente de " + result3463 + " <LineSeparator.detect('')>"
"Era esperado valores iguais, mas  LineSeparator.NONE é diferente de " + result3464 + " <LineSeparator.detect('test 123 123')>"
"Era esperado valores iguais, mas  LineSeparator.MIXED é diferente de " + result3465 + " <LineSeparator.detect('\r \n')>"
"Era esperado valores iguais, mas  '\r' é diferente de " + result3466 + " <LineSeparator.CR.asRawString()>"
"Era esperado valores iguais, mas  '\n' é diferente de " + result3467 + " <LineSeparator.LF.asRawString()>"
"Era esperado valores iguais, mas  '\r\n' é diferente de " + result3468 + " <LineSeparator.CRLF.asRawString()>"
"Era esperado valores iguais, mas  '\n' é diferente de " + result3469 + " <LineSeparator.ARBITRARY.asRawString()>"
"Era esperado valores iguais, mas  8 é diferente de " + " LineSeparator.values().length"
"Era esperado valores iguais, mas  LineSeparator.CR é diferente de " + result3470 + " <LineSeparator.valueOf('CR')>"
"Era esperado valores iguais, mas  LineSeparator.LF é diferente de " + result3471 + " <LineSeparator.valueOf('LF')>"
"Era esperado valores iguais, mas  LineSeparator.CRLF é diferente de " + result3472 + " <LineSeparator.valueOf('CRLF')>"
"Era esperado valores iguais, mas  LineSeparator.NONE é diferente de " + result3473 + " <LineSeparator.valueOf('NONE')>"
"Era esperado valores iguais, mas  LineSeparator.MIXED é diferente de " + result3474 + " <LineSeparator.valueOf('MIXED')>"
"Era esperado valores iguais, mas  LineSeparator.SYSTEM é diferente de " + result3475 + " <LineSeparator.valueOf('SYSTEM')>"
"Era esperado valores iguais, mas  LineSeparator.UNKNOWN é diferente de " + result3476 + " <LineSeparator.valueOf('UNKNOWN')>"
"Era esperado valores iguais, mas  LineSeparator.ARBITRARY é diferente de " + result3477 + " <LineSeparator.valueOf('ARBITRARY')>"
"Era esperado valores iguais, mas  1 é diferente de " + result3478 + " <map.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3479 + " <map.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + " (int) map.get(x1)"
"Era esperado verdadeiro, mas " + result3480 + " <map.containsKey(x1)> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result3481 + " <visitorMap.size()>"
"Era esperado verdadeiro, mas " + result3482 + " <map.containsKey(x1)> é falso"
"Era esperado valores iguais, mas  7 é diferente de " + result3483 + " <units.size()>"
"Era esperado verdadeiro, mas " + result3484 + " <units.stream().allMatch(unit -> !unit.getTypes().isEmpty() || unit.getModule().isPresent())> é falso"
"Era esperado verdadeiro, mas " + result3485 + " <parseResults.stream().noneMatch(cu -> cu.getResult().get().getStorage().get().getPath().toString().contains('source.root'))> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result3486 + " <sourceRoots.size()>"
"A execução falhou por uma causa deliberada"
"Era esperado valores iguais, mas " + result3487 + " <normalizeEolInTextBlock(expected, LineSeparator.ARBITRARY)> é diferente de " + result3488 + " <normalizeEolInTextBlock(actual, LineSeparator.ARBITRARY)>"
"Era esperado valores iguais, mas  expectedLineSeparator é diferente de " + " actualLineSeparator"
"Era esperado valores iguais, mas  'TabcTabcd' é diferente de " + " testAdapter.output"
"Era esperado valores iguais, mas  'IabcIabc' é diferente de " + " testAdapter.output"
"Era esperado valores iguais, mas  'EabcMnullEabcMnullEabcM!!!EabcdM!!!EnullM!!!' é diferente de " + " testAdapter.output"
"Era esperado verdadeiro, mas " + result3489 + " <list.contains(x1)> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  x1 é diferente de " + result3490 + " <itr.next()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3491 + " <list.size()>"
"Era esperado valores iguais, mas  x2 é diferente de " + result3492 + " <itr.next()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3493 + " <list.size()>"
"Era esperado valores iguais, mas  x1 é diferente de " + result3494 + " <itr.next()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3495 + " <list.size()>"
"Era esperado valores iguais, mas  x2 é diferente de " + result3496 + " <itr.next()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3497 + " <list.size()>"
"Era esperado verdadeiro, mas " + result3498 + " <list.remove(x1)> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3499 + " <vList.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3500 + " <vList.size()>"
"Era esperado valores iguais, mas  4 é diferente de " + result3501 + " <list.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3502 + " <subLst.size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3503 + " <subLst.size()>"
"Era esperado valores iguais, mas  5 é diferente de " + result3504 + " <list.size()>"
"Era esperado valores iguais, mas  'setValue' é diferente de " + result3505 + " <setterName('value')>"
"Era esperado valores iguais, mas  'setBlue' é diferente de " + result3506 + " <setterName('isBlue')>"
"Era esperado valores iguais, mas  'getValue' é diferente de " + result3507 + " <getterName(Object.class, 'value')>"
"Era esperado valores iguais, mas  'isBlue' é diferente de " + result3508 + " <getterName(boolean.class, 'isBlue')>"
"Era esperado valores iguais, mas  'isBlue' é diferente de " + result3509 + " <getterName(boolean.class, 'blue')>"
"Era esperado valores iguais, mas  'getBlue' é diferente de " + result3510 + " <getterName(Boolean.class, 'blue')>"
"Era esperado valores iguais, mas  'getIsBlue' é diferente de " + result3511 + " <getterName(Boolean.class, 'isBlue')>"
"Era esperado valores iguais, mas  'value' é diferente de " + result3512 + " <getterToPropertyName('getValue')>"
"Era esperado valores iguais, mas  'blue' é diferente de " + result3513 + " <getterToPropertyName('isBlue')>"
"Era esperado valores iguais, mas  'value' é diferente de " + result3514 + " <getterToPropertyName('hasValue')>"
"Era esperado valores iguais, mas  'Unexpected getterName 'value'' é diferente de " + result3515 + " <thrown.getMessage()>"
"A execução falhou por uma causa deliberada"
"Era esperado valores iguais, mas  'abc, def' é diferente de " + result3516 + " <pair.toString()>"
"Era esperado valores iguais, mas  'null, null' é diferente de " + result3517 + " <pair.toString()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3518 + " <results.size()>"
"Era esperado verdadeiro, mas " + result3519 + " <units.stream().noneMatch(unit -> unit.getTypes().isEmpty())> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result3520 + " <results.size()>"
"Era esperado verdadeiro, mas " + result3521 + " <units.stream().noneMatch(unit -> unit.getTypes().isEmpty())> é falso"
"Era esperado verdadeiro, mas " + result3522 + " <isNullOrEmpty(null)> é falso"
"Era esperado verdadeiro, mas " + result3523 + " <isNullOrEmpty(new ArrayList<>())> é falso"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3524 + " <assertNotNull('foo')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3525 + " <assertNonEmpty('foo')>"
"Era esperado valores iguais, mas  (Number) 2 é diferente de " + result3526 + " <assertNonNegative(2)>"
"Era esperado valores iguais, mas  (Number) 2 é diferente de " + result3527 + " <assertPositive(2)>"
"Era esperado valores iguais, mas  'f\\no\\ro' é diferente de " + result3528 + " <escapeEndOfLines('f\no\ro')>"
"Era esperado valores iguais, mas  '' é diferente de " + result3529 + " <readerToString(reader)>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3530 + " <toCamelCase('foo')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3531 + " <toCamelCase('Foo')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3532 + " <toCamelCase('FOO')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3533 + " <toCamelCase('fOo')>"
"Era esperado valores iguais, mas  'abc' é diferente de " + result3534 + " <screamingToCamelCase('ABC')>"
"Era esperado valores iguais, mas  'abcDef' é diferente de " + result3535 + " <screamingToCamelCase('ABC_DEF')>"
"Era esperado valores iguais, mas  'abc' é diferente de " + result3536 + " <screamingToCamelCase('ABC_')>"
"Era esperado valores iguais, mas  '' é diferente de " + result3537 + " <camelCaseToScreaming('')>"
"Era esperado valores iguais, mas  'ABC' é diferente de " + result3538 + " <camelCaseToScreaming('abc')>"
"Era esperado valores iguais, mas  'HELLO_HELLO' é diferente de " + result3539 + " <camelCaseToScreaming('HelloHello')>"
"Era esperado valores iguais, mas  'APE_TAIL' é diferente de " + result3540 + " <camelCaseToScreaming('apeTail')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3541 + " <nextWord('foo')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3542 + " <nextWord('foo bar')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3543 + " <nextWord('foo bar Baz')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3544 + " <indent(new StringBuilder('foo'), 0).toString()>"
"Era esperado valores iguais, mas  'foo\t' é diferente de " + result3545 + " <indent(new StringBuilder('foo'), 1).toString()>"
"Era esperado valores iguais, mas  'foo\t\t' é diferente de " + result3546 + " <indent(new StringBuilder('foo'), 2).toString()>"
"Era esperado valores iguais, mas  'foo\t\t\t' é diferente de " + result3547 + " <indent(new StringBuilder('foo'), 3).toString()>"
"Era esperado valores iguais, mas  'F' é diferente de " + result3548 + " <capitalize('f')>"
"Era esperado valores iguais, mas  'Fo' é diferente de " + result3549 + " <capitalize('fo')>"
"Era esperado valores iguais, mas  'f' é diferente de " + result3550 + " <decapitalize('F')>"
"Era esperado valores iguais, mas  'fo' é diferente de " + result3551 + " <decapitalize('Fo')>"
"Era esperado verdadeiro, mas " + result3552 + " <valueIsNullOrEmpty(null)> é falso"
"Era esperado verdadeiro, mas " + result3553 + " <valueIsNullOrEmpty(Optional.empty())> é falso"
"Era esperado verdadeiro, mas " + result3554 + " <valueIsNullOrEmpty(new ArrayList<>())> é falso"
"Era esperado verdadeiro, mas " + result3555 + " <valueIsNullOrEmptyStringOrOptional(null)> é falso"
"Era esperado verdadeiro, mas " + result3556 + " <valueIsNullOrEmptyStringOrOptional(Optional.empty())> é falso"
"Era esperado valores iguais, mas  -1 é diferente de " + result3557 + " <indexOfElementByObjectIdentity(new ArrayList<>(), 'bar')>"
"Era esperado valores iguais, mas  1 é diferente de " + result3558 + " <indexOfElementByObjectIdentity(new ArrayList<>(Arrays.asList('foo', 'bar')), 'bar')>"
"Era esperado valores iguais, mas  new HashSet(Arrays.asList('bar', 'foo', 'baz')) é diferente de " + result3559 + " <set('foo', 'bar', 'baz')>"
"Era esperado valores iguais, mas  'Q Q Q' é diferente de " + " result"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3560 + " <removeFileExtension('foo')>"
"Era esperado valores iguais, mas  'foo' é diferente de " + result3561 + " <removeFileExtension('foo.txt')>"
"Era esperado valores iguais, mas  'abc' é diferente de " + result3562 + " <trimTrailingSpaces('abc')>"
"Era esperado valores iguais, mas  '  abc' é diferente de " + result3563 + " <trimTrailingSpaces('  abc')>"
"Era esperado valores iguais, mas  'abc' é diferente de " + result3564 + " <trimTrailingSpaces('abc  ')>"
"Era esperado valores iguais, mas  '  abc' é diferente de " + result3565 + " <trimTrailingSpaces('  abc  ')>"
"Era esperado valores iguais, mas  'abc' é diferente de " + result3566 + " <trimTrailingSpaces('abc\t\0')>"
"Era esperado valores iguais, mas  '' é diferente de " + result3567 + " <trimTrailingSpaces('    ')>"
"Era esperado valores iguais, mas  '' é diferente de " + result3568 + " <trimTrailingSpaces('')>"
"Era esperado valores iguais, mas  1 é diferente de " + result3569 + " <set.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3570 + " <set.size()>"
"Era esperado verdadeiro, mas " + result3571 + " <set.contains(x1)> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  x1 é diferente de " + result3572 + " <itr.next()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3573 + " <set.size()>"
"Era esperado valores iguais, mas  x2 é diferente de " + result3574 + " <itr.next()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3575 + " <set.size()>"
"Era esperado verdadeiro, mas " + result3576 + " <set.remove(x1)> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result3577 + " <set.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3578 + " <set.size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas " + result3579 + " <o.getCommentedNode().isPresent()> é falso"
"Era esperado valores iguais, mas  6 é diferente de " + result3580 + " <actual.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3581 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3582 + " <actual.get(1).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3583 + " <actual.get(2).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3584 + " <actual.get(3).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3585 + " <actual.get(4).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3586 + " <actual.get(5).size()>"
"Era esperado valores iguais, mas  6 é diferente de " + result3587 + " <actual.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3588 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  'org.junit.jupiter.api.Assertions.assertEquals' é diferente de " + result3589 + " <actual.get(0).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3590 + " <actual.get(1).size()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result3591 + " <actual.get(1).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3592 + " <actual.get(2).size()>"
"Era esperado valores iguais, mas  'javax.swing' é diferente de " + result3593 + " <actual.get(2).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3594 + " <actual.get(3).size()>"
"Era esperado valores iguais, mas  'org.junit.jupiter.api.Assertions' é diferente de " + result3595 + " <actual.get(3).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3596 + " <actual.get(4).size()>"
"Era esperado valores iguais, mas  'com.example.Test' é diferente de " + result3597 + " <actual.get(4).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3598 + " <actual.get(5).size()>"
"Era esperado valores iguais, mas  'pt.example.OtherTest' é diferente de " + result3599 + " <actual.get(5).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  6 é diferente de " + result3600 + " <actual.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3601 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3602 + " <actual.get(1).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3603 + " <actual.get(2).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3604 + " <actual.get(3).size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3605 + " <actual.get(4).size()>"
"Era esperado valores iguais, mas  'com.example.A' é diferente de " + result3606 + " <actual.get(4).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  'com.example.B' é diferente de " + result3607 + " <actual.get(4).get(1).getNameAsString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3608 + " <actual.get(5).size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3609 + " <actual.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3610 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3611 + " <actual.get(1).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3612 + " <actual.get(2).size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3613 + " <actual.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3614 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  'com.example.Test' é diferente de " + result3615 + " <actual.get(0).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3616 + " <actual.get(1).size()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result3617 + " <actual.get(1).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3618 + " <actual.get(2).size()>"
"Era esperado valores iguais, mas  'org.junit.jupiter.api.Assertions.assertEquals' é diferente de " + result3619 + " <actual.get(2).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3620 + " <actual.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3621 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  'com.example.A' é diferente de " + result3622 + " <actual.get(0).get(0).getNameAsString()>"
"Era esperado valores iguais, mas  'com.example.B' é diferente de " + result3623 + " <actual.get(0).get(1).getNameAsString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3624 + " <actual.get(1).size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3625 + " <actual.get(2).size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3626 + " <actual.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result3627 + " <actual.get(0).size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3628 + " <actual.size()>"
"Era esperado valores iguais, mas  3 é diferente de " + result3629 + " <actualImports.size()>"
"Era esperado valores iguais, mas  'org.junit.jupiter.api.Assertions.assertEquals' é diferente de " + result3630 + " <actualImports.get(0).getNameAsString()>"
"Era esperado valores iguais, mas  'java.util.List' é diferente de " + result3631 + " <actualImports.get(1).getNameAsString()>"
"Era esperado valores iguais, mas  'com.example.Test' é diferente de " + result3632 + " <actualImports.get(2).getNameAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3633 + " <actual.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3634 + " <actualImports.size()>"
"Era esperado valores iguais, mas  'com.example.A' é diferente de " + result3635 + " <actualImports.get(0).getNameAsString()>"
"Era esperado valores iguais, mas  'com.example.B' é diferente de " + result3636 + " <actualImports.get(1).getNameAsString()>"
"Era esperado verdadeiro, mas " + result3637 + " <getOption(config, ConfigOption.PRINT_COMMENTS).isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3638 + " <getOption(config, ConfigOption.PRINT_JAVADOC).isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3639 + " <getOption(config, ConfigOption.SPACE_AROUND_OPERATORS).isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3640 + " <getOption(config, ConfigOption.INDENT_CASE_IN_SWITCH).isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3641 + " <getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3642 + " <getOption(config, ConfigOption.END_OF_LINE_CHARACTER).isPresent()> é falso"
"Era esperado valores iguais, mas " + result3643 + " <getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue()> é diferente de " + result3644 + " <Integer.valueOf(5)>"
"Era esperado valores iguais, mas " + result3645 + " <getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue()> é diferente de " + result3646 + " <Integer.valueOf(5)>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas " + result3647 + " <getOption(config, ConfigOption.END_OF_LINE_CHARACTER).get().asString()> é diferente de " + " Utils.SYSTEM_EOL"
"Era esperado valores iguais, mas " + result3648 + " <getOption(config, ConfigOption.MAX_ENUM_CONSTANTS_TO_ALIGN_HORIZONTALLY).get().asValue()> é diferente de " + result3649 + " <Integer.valueOf(2)>"
"Era esperado verdadeiro, mas " + result3650 + " <getOption(config, ConfigOption.PRINT_COMMENTS).isPresent()> é falso"
"Era esperado verdadeiro, mas " + result3651 + " <getOption(config, ConfigOption.END_OF_LINE_CHARACTER).isPresent()> é falso"
"Era esperado valores iguais, mas  'int[]' é diferente de " + result3652 + " <vde1.getMaximumCommonType().get().toString()>"
"Era esperado valores iguais, mas  'int[][][]' é diferente de " + result3653 + " <vde2.getMaximumCommonType().get().toString()>"
"Era esperado valores iguais, mas  'int[][]' é diferente de " + result3654 + " <vde3.getMaximumCommonType().get().toString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result3655 + " <vde1.getMaximumCommonType().get().toString()>"
"Era esperado valores iguais, mas  'int[][] @Foo []' é diferente de " + result3656 + " <vde2.getMaximumCommonType().get().toString()>"
"Era esperado valores iguais, mas  'Foo.class' é diferente de " + result3657 + " <print(expr)>"
"Era esperado valores iguais, mas  'a=1+1;' é diferente de " + result3658 + " <print(statement1, conf1)>"
"Era esperado valores iguais, mas  'a = 1 + 1;' é diferente de " + result3659 + " <print(statement1)>"
"Era esperado valores iguais, mas  'a = 1 - 1;' é diferente de " + result3660 + " <print(statement2)>"
"Era esperado valores iguais, mas  'a = 1 * 1;' é diferente de " + result3661 + " <print(statement3)>"
"Era esperado valores iguais, mas  'a = 1 % 1;' é diferente de " + result3662 + " <print(statement4)>"
"Era esperado valores iguais, mas  'a = 1 / 1;' é diferente de " + result3663 + " <print(statement5)>"
"Era esperado valores iguais, mas  'if (1  2 && 1  3 || 1  3) {' + SYSTEM_EOL + '}' é diferente de " + result3664 + " <print(statement6)>"
"Era esperado valores iguais, mas  'a=1+1;' é diferente de " + result3665 + " <print(statement1, conf1)>"
"Era esperado valores iguais, mas  'a=1+1;' é diferente de " + result3666 + " <print(statement2, conf2)>"
"Era esperado valores iguais, mas  'a = 1 + 1;' é diferente de " + result3667 + " <print(statement3, conf3)>"
"Era esperado valores iguais, mas  'a = 1 + 1;' é diferente de " + result3668 + " <print(statement4, conf4)>"
"Era esperado valores iguais, mas  'if (12&&13||13) {' + SYSTEM_EOL + '}' é diferente de " + result3669 + " <print(statement6, conf)>"
"Era esperado valores iguais, mas  '1+1' é diferente de " + result3670 + " <print(expression, spaces)>"
"Era esperado valores iguais, mas  'Foo[].class' é diferente de " + result3671 + " <print(expr)>"
"Era esperado valores iguais, mas  'FooString.class' é diferente de " + result3672 + " <print(expr)>"
"Era esperado valores iguais, mas  'class A {' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result3673 + " <print(node)>"
"Era esperado valores iguais, mas  'class A {' + SYSTEM_EOL + SYSTEM_EOL + '    int a;' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result3674 + " <print(node)>"
"Era esperado valores iguais, mas  'int x(@O X A.B.this, int y) {' + SYSTEM_EOL + '}' é diferente de " + result3675 + " <print(node)>"
"Era esperado valores iguais, mas  'Runnable r = (Runnable & Serializable) (() - {' + SYSTEM_EOL + '});' é diferente de " + result3676 + " <print(methodDeclaration.getBody().get().getStatements().get(0))>"
"Era esperado valores iguais, mas  'Runnable & Serializable' é diferente de " + result3677 + " <print(type)>"
"Era esperado valores iguais, mas  'return (ComparatorMap.EntryK, V & Serializable) (c1, c2) - c1.getKey().compareTo(c2.getKey());' é diferente de " + result3678 + " <print(methodDeclaration.getBody().get().getStatements().get(0))>"
"Era esperado valores iguais, mas " + result3679 + " <String.format('public class A {%s    // stuff%s}%s', SYSTEM_EOL, SYSTEM_EOL, SYSTEM_EOL)> é diferente de " + " content"
"Era esperado valores iguais, mas  'root type='BinaryExpr' operator='PLUS'left type='IntegerLiteralExpr' value='1'/leftright type='IntegerLiteralExpr' value='1'/right/root' é diferente de " + " output"
"Era esperado valores iguais, mas  'root operator='PLUS'left value='1'/leftright value='1'/right/root' é diferente de " + " output"
"Era esperado valores iguais, mas  'root type='MethodCallExpr'name type='SimpleName' identifier='a'/nameargumentsargument type='IntegerLiteralExpr' value='1'/argumentargument type='IntegerLiteralExpr' value='2'/argument/arguments/root' é diferente de " + " output"
"Era esperado valores iguais, mas  'int a, b[];' é diferente de " + result3680 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[][] a, b;' é diferente de " + result3681 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[] a[][], b;' é diferente de " + result3682 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[] a, b;' é diferente de " + result3683 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[] a, b;' é diferente de " + result3684 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int a, b[]' é diferente de " + result3685 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[][] a, b' é diferente de " + result3686 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[] a[][], b' é diferente de " + result3687 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[] a, b' é diferente de " + result3688 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[] a, b' é diferente de " + result3689 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'A' é diferente de " + result3690 + " <prettyPrintConfigurable(code)>"
"Era esperado valores iguais, mas  expected é diferente de " + result3691 + " <getDefaultPrinter(configuration).print(parse(code))>"
"Era esperado valores iguais, mas  expected é diferente de " + result3692 + " <getDefaultPrinter(configuration).print(parse(code))>"
"Era esperado valores iguais, mas  expected é diferente de " + " printed"
"Era esperado valores iguais, mas  expected é diferente de " + result3693 + " <getDefaultPrinter(configuration).print(parse(code))>"
"Era esperado valores iguais, mas  'int a, b;' é diferente de " + result3694 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  '??? a, b;' é diferente de " + result3695 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  'double a, b;' é diferente de " + result3696 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3697 + " <td.getAllContainedComments().size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3698 + " <td.getAllContainedComments().size()>"
"Era esperado verdadeiro, mas " + result3699 + " <cu.toString().contains('        // TODO')> é falso"
"Era esperado verdadeiro, mas " + result3700 + " <cu.toString().contains('        /* TODO */')> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '    ' é diferente de " + result3701 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '  ' é diferente de " + result3702 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '\t\t' é diferente de " + result3703 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '  ' é diferente de " + result3704 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '\t\t' é diferente de " + result3705 + " <indentation.getIndent()>"
"Era esperado valores iguais, mas  'int a, b[];' é diferente de " + result3706 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[][] a, b;' é diferente de " + result3707 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[] a[][], b;' é diferente de " + result3708 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[] a, b;' é diferente de " + result3709 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int[] a, b;' é diferente de " + result3710 + " <prettyPrintField(code)>"
"Era esperado valores iguais, mas  'int a, b[]' é diferente de " + result3711 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[][] a, b' é diferente de " + result3712 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[] a[][], b' é diferente de " + result3713 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[] a, b' é diferente de " + result3714 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'int[] a, b' é diferente de " + result3715 + " <prettyPrintVar(code)>"
"Era esperado valores iguais, mas  'test' é diferente de " + result3716 + " <prettyPrintConfigurable(code)>"
"Era esperado valores iguais, mas  expected é diferente de " + result3717 + " <new DefaultPrettyPrinter(config).print(parse(code))>"
"Era esperado valores iguais, mas  expected é diferente de " + result3718 + " <new DefaultPrettyPrinter(config).print(parse(code))>"
"Era esperado valores iguais, mas  expected é diferente de " + result3719 + " <new DefaultPrettyPrinter(config).print(parse(code))>"
"Era esperado valores iguais, mas  expected é diferente de " + " printed"
"Era esperado valores iguais, mas  'int a, b;' é diferente de " + result3720 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  '??? a, b;' é diferente de " + result3721 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  'double a, b;' é diferente de " + result3722 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3723 + " <td.getAllContainedComments().size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3724 + " <td.getAllContainedComments().size()>"
"Era esperado verdadeiro, mas " + result3725 + " <cu.toString().contains('        // TODO')> é falso"
"Era esperado verdadeiro, mas " + result3726 + " <cu.toString().contains('        /* TODO */')> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '    ' é diferente de " + result3727 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '  ' é diferente de " + result3728 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '\t\t' é diferente de " + result3729 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '  ' é diferente de " + result3730 + " <indentation.getIndent()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  '\t\t' é diferente de " + result3731 + " <indentation.getIndent()>"
"Era esperado valores iguais, mas  expectedOutput é diferente de " + " output"
"Era esperado valores iguais, mas  expectedOutput é diferente de " + " output"
"Era esperado verdadeiro, mas " + result3732 + " <md.getDefaultValue().get().remove()> é falso"
"Era esperado verdadeiro, mas " + result3733 + " <it.getJavadocComment().get().remove()> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas " + result3734 + " <md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent())> é falso"
"Era esperado verdadeiro, mas " + result3735 + " <md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent())> é falso"
"Era esperado verdadeiro, mas " + result3736 + " <md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent())> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas " + result3737 + " <md.get().getParameters().stream().allMatch(p -> p.getParentNode().isPresent())> é falso"
"Era esperado falso, mas " + result3738 + " <map.containsKey(x1)> é verdadeiro "
"Era esperado falso, mas " + result3739 + " <isNullOrEmpty(new ArrayList<>(Arrays.asList('foo', 'bar')))> é verdadeiro "
"Era esperado falso, mas " + result3740 + " <valueIsNullOrEmpty(Optional.ofNullable('foo'))> é verdadeiro "
"Era esperado falso, mas " + result3741 + " <valueIsNullOrEmpty(new ArrayList<>(Arrays.asList('foo', 'bar')))> é verdadeiro "
"Era esperado falso, mas " + result3742 + " <valueIsNullOrEmptyStringOrOptional('foo')> é verdadeiro "
"Era esperado falso, mas " + result3743 + " <valueIsNullOrEmptyStringOrOptional(Optional.ofNullable('foo'))> é verdadeiro "
"Era esperado falso, mas o valor é verdadeiro"
"Era esperado falso, mas o valor é verdadeiro"
"Era esperado falso, mas o valor é verdadeiro"
"Era esperado falso, mas " + result3744 + " <getOption(config, ConfigOption.PRINT_COMMENTS).isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3745 + " <getOption(config, ConfigOption.END_OF_LINE_CHARACTER).isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3746 + " <printer.getConfiguration().get(new DefaultConfigurationOption(ConfigOption.PRINT_COMMENTS)).isPresent()> é verdadeiro "
"Era esperado falso, mas " + result3747 + " <detectedLineSeparator.equals(LineSeparator.MIXED)> é verdadeiro "
"Era esperado valores iguais, mas " + result3748 + " <eol.asEscapedString()> é diferente de " + result3749 + " <detectedLineSeparator.asEscapedString()>"
"Era esperado valores iguais, mas " + result3750 + " <normaliseNewlines(expected)> é diferente de " + result3751 + " <normaliseNewlines(actual)>"
"Era esperado verdadeiro, mas " + result3752 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result3753 + " <LexicalPreservingPrinter.print(expression).equals('private int[] i')> é falso"
"Era esperado verdadeiro, mas " + result3754 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result3755 + " <LexicalPreservingPrinter.print(expression).equals('private int [] i')> é falso"
"Era esperado verdadeiro, mas " + result3756 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result3757 + " <LexicalPreservingPrinter.print(expression).equals('private int [ ] i')> é falso"
"Era esperado verdadeiro, mas " + result3758 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result3759 + " <LexicalPreservingPrinter.print(expression).equals('private int   [   ]   i')> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  'System.out.println(\'I'm a clone10\');' é diferente de " + result3760 + " <exprs.get(0).toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result3761 + " <csmOriginal.elements.size()>"
"Era esperado valores iguais, mas  new CsmChild(cu.getType(0)) é diferente de " + result3762 + " <csmOriginal.elements.get(0)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3763 + " <csmOriginal.elements.get(1)>"
"Era esperado valores iguais, mas  3 é diferente de " + result3764 + " <csmChanged.elements.size()>"
"Era esperado valores iguais, mas  new CsmChild(packageDeclaration) é diferente de " + result3765 + " <csmChanged.elements.get(0)>"
"Era esperado valores iguais, mas  new CsmChild(cu.getType(0)) é diferente de " + result3766 + " <csmChanged.elements.get(1)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3767 + " <csmChanged.elements.get(2)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.AT) é diferente de " + result3768 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.INTERFACE) é diferente de " + result3769 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3770 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getName()) é diferente de " + result3771 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3772 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.LBRACE) é diferente de " + result3773 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3774 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(0)) é diferente de " + result3775 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3776 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(1)) é diferente de " + result3777 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3778 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(2)) é diferente de " + result3779 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3780 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(3)) é diferente de " + result3781 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3782 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(4)) é diferente de " + result3783 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3784 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(5)) é diferente de " + result3785 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3786 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.RBRACE) é diferente de " + result3787 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result3788 + " <csm.elements.size()>"
"Era esperado valores iguais, mas  new CsmChild(Modifier.publicModifier()) é diferente de " + result3789 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3790 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.AT) é diferente de " + result3791 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.INTERFACE) é diferente de " + result3792 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3793 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getName()) é diferente de " + result3794 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3795 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.LBRACE) é diferente de " + result3796 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3797 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(0)) é diferente de " + result3798 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3799 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(1)) é diferente de " + result3800 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3801 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(2)) é diferente de " + result3802 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3803 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(3)) é diferente de " + result3804 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3805 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(4)) é diferente de " + result3806 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3807 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(5)) é diferente de " + result3808 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3809 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.RBRACE) é diferente de " + result3810 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result3811 + " <csm.elements.size()>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.AT) é diferente de " + result3812 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.INTERFACE) é diferente de " + result3813 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3814 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(newName) é diferente de " + result3815 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3816 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.LBRACE) é diferente de " + result3817 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3818 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(0)) é diferente de " + result3819 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3820 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(1)) é diferente de " + result3821 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3822 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(2)) é diferente de " + result3823 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3824 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(3)) é diferente de " + result3825 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3826 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(4)) é diferente de " + result3827 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3828 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(5)) é diferente de " + result3829 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3830 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.RBRACE) é diferente de " + result3831 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result3832 + " <csm.elements.size()>"
"Era esperado valores iguais, mas  new CsmChild(Modifier.publicModifier()) é diferente de " + result3833 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3834 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.AT) é diferente de " + result3835 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.INTERFACE) é diferente de " + result3836 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3837 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getName()) é diferente de " + result3838 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3839 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.LBRACE) é diferente de " + result3840 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3841 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(0)) é diferente de " + result3842 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3843 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(1)) é diferente de " + result3844 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3845 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(2)) é diferente de " + result3846 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3847 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(3)) é diferente de " + result3848 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3849 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(4)) é diferente de " + result3850 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3851 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(5)) é diferente de " + result3852 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3853 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.RBRACE) é diferente de " + result3854 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result3855 + " <csm.elements.size()>"
"Era esperado valores iguais, mas  new CsmChild(Modifier.publicModifier()) é diferente de " + result3856 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3857 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.AT) é diferente de " + result3858 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.INTERFACE) é diferente de " + result3859 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3860 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getName()) é diferente de " + result3861 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(spaceTokenKind()) é diferente de " + result3862 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.LBRACE) é diferente de " + result3863 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3864 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(0)) é diferente de " + result3865 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3866 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(1)) é diferente de " + result3867 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3868 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(2)) é diferente de " + result3869 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3870 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(3)) é diferente de " + result3871 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3872 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(4)) é diferente de " + result3873 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3874 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmChild(annotationDeclaration.getMember(5)) é diferente de " + result3875 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(eolTokenKind()) é diferente de " + result3876 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  new CsmToken(GeneratedJavaParserConstants.RBRACE) é diferente de " + result3877 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result3878 + " <csm.elements.size()>"
"Era esperado valores iguais, mas  new CsmChild(ecd.getName()) é diferente de " + result3879 + " <csm.elements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result3880 + " <csm.elements.size()>"
"Era esperado valores iguais, mas " + result3881 + " <CsmElement.token(GeneratedJavaParserConstants.LBRACE)> é diferente de " + result3882 + " <calculatedSyntaxModel.elements.get(index++)>"
"Era esperado valores iguais, mas " + result3883 + " <CsmElement.newline()> é diferente de " + result3884 + " <calculatedSyntaxModel.elements.get(index++)>"
"Era esperado valores iguais, mas " + result3885 + " <CsmElement.indent()> é diferente de " + result3886 + " <calculatedSyntaxModel.elements.get(index++)>"
"Era esperado verdadeiro, mas " + result3887 + " <isChild(calculatedSyntaxModel.elements.get(index++), ExpressionStmt.class)> é falso"
"Era esperado valores iguais, mas " + result3888 + " <CsmElement.newline()> é diferente de " + result3889 + " <calculatedSyntaxModel.elements.get(index++)>"
"Era esperado valores iguais, mas " + result3890 + " <CsmElement.unindent()> é diferente de " + result3891 + " <calculatedSyntaxModel.elements.get(index++)>"
"Era esperado valores iguais, mas " + result3892 + " <CsmElement.token(GeneratedJavaParserConstants.RBRACE)> é diferente de " + result3893 + " <calculatedSyntaxModel.elements.get(index++)>"
"Era esperado valores iguais, mas  index é diferente de " + result3894 + " <calculatedSyntaxModel.elements.size()>"
"Era esperado valores iguais, mas " + result3895 + " <DifferenceElement.kept(CsmElement.token(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result3896 + " <differenceElements.get(index++)>"
"Era esperado valores iguais, mas " + result3897 + " <DifferenceElement.kept(CsmElement.newline())> é diferente de " + result3898 + " <differenceElements.get(index++)>"
"Era esperado valores iguais, mas " + result3899 + " <DifferenceElement.added(CsmElement.indent())> é diferente de " + result3900 + " <differenceElements.get(index++)>"
"Era esperado verdadeiro, mas " + result3901 + " <isAddedChild(differenceElements.get(index++), ExpressionStmt.class)> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas " + result3902 + " <DifferenceElement.added(CsmElement.unindent())> é diferente de " + result3903 + " <differenceElements.get(index++)>"
"Era esperado valores iguais, mas " + result3904 + " <DifferenceElement.kept(CsmElement.token(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result3905 + " <differenceElements.get(index++)>"
"Era esperado valores iguais, mas  index é diferente de " + result3906 + " <differenceElements.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result3907 + " <getTextForNode(cu).numberOfElements()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas " + result3908 + " <cu.getClassByName('A').get()> é diferente de " + result3909 + " <((ChildTextElement) getTextForNode(cu).getTextElement(0)).getChild()>"
"Era esperado valores iguais, mas  7 é diferente de " + result3910 + " <getTextForNode(classA).numberOfElements()>"
"Era esperado valores iguais, mas  'class' é diferente de " + result3911 + " <getTextForNode(classA).getTextElement(0).expand()>"
"Era esperado valores iguais, mas  ' ' é diferente de " + result3912 + " <getTextForNode(classA).getTextElement(1).expand()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result3913 + " <getTextForNode(classA).getTextElement(2).expand()>"
"Era esperado valores iguais, mas  ' ' é diferente de " + result3914 + " <getTextForNode(classA).getTextElement(3).expand()>"
"Era esperado valores iguais, mas  '{' é diferente de " + result3915 + " <getTextForNode(classA).getTextElement(4).expand()>"
"Era esperado valores iguais, mas  '}' é diferente de " + result3916 + " <getTextForNode(classA).getTextElement(5).expand()>"
"Era esperado valores iguais, mas  '' é diferente de " + result3917 + " <getTextForNode(classA).getTextElement(6).expand()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  GeneratedJavaParserConstants.EOF é diferente de " + result3918 + " <((TokenTextElement) getTextForNode(classA).getTextElement(6)).getTokenKind()>"
"Era esperado valores iguais, mas " + result3919 + " <Arrays.asList('int', ' ', 'i', ';')> é diferente de " + result3920 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3921 + " <Arrays.asList('i')> é diferente de " + result3922 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3923 + " <Arrays.asList('void', ' ', 'foo', '(', 'int p1', ',', ' ', 'float p2', ')', ' ', '{ }')> é diferente de " + result3924 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3925 + " <Arrays.asList('int', ' ', 'p1')> é diferente de " + result3926 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3927 + " <Arrays.asList('int')> é diferente de " + result3928 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3929 + " <Arrays.asList('import', ' ', 'a.b.c.D', ';', '')> é diferente de " + result3930 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3931 + " <Arrays.asList('ParseResult', '<', 'T', '>', ' ', 'result', ';')> é diferente de " + result3932 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3933 + " <Arrays.asList('public', ' ', '@', 'interface', ' ', 'ClassPreamble', ' ', '{', ' ', 'String author();', ' ', '}', '')> é diferente de " + result3934 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3935 + " <Arrays.asList('String', ' ', 'author', '(', ')', ';')> é diferente de " + result3936 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3937 + " <Arrays.asList('String[]', ' ', 'author', '(', ')', ';')> é diferente de " + result3938 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3939 + " <Arrays.asList('String', '[', ']')> é diferente de " + result3940 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3941 + " <Arrays.asList('String[]', ' ', 'reviewers', '(', ')', ';')> é diferente de " + result3942 + " <nodeText.getElements().stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3943 + " <Arrays.asList('[', ']')> é diferente de " + result3944 + " <nodeText.getElements().stream().map(TextElement::expand).filter(e -> !e.isEmpty()).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3945 + " <Arrays.asList('[', '123', ']')> é diferente de " + result3946 + " <nodeText.getElements().stream().map(TextElement::expand).filter(e -> !e.isEmpty()).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3947 + " <Arrays.asList(' ', ' ', ' ')> é diferente de " + result3948 + " <indentation.stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas " + result3949 + " <Arrays.asList(' ', ' ', ' ')> é diferente de " + result3950 + " <indentation.stream().map(TextElement::expand).collect(Collectors.toList())>"
"Era esperado valores iguais, mas  code é diferente de " + result3951 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'class A {' + SYSTEM_EOL + '    int myField;' + SYSTEM_EOL + '}' é diferente de " + result3952 + " <LexicalPreservingPrinter.print(classA)>"
"Era esperado valores iguais, mas  code é diferente de " + result3953 + " <LexicalPreservingPrinter.print(cu.getClassByName('A').get())>"
"Era esperado valores iguais, mas  code é diferente de " + result3954 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  code é diferente de " + result3955 + " <LexicalPreservingPrinter.print(cu.getClassByName('A').get())>"
"Era esperado valores iguais, mas  'void foo(int p  ) { return  'z'  \t; }' é diferente de " + result3956 + " <LexicalPreservingPrinter.print(cu.getClassByName('A').get().getMethodsByName('foo').get(0))>"
"Era esperado valores iguais, mas  'class /*a comment*/ A {\t\t' + SYSTEM_EOL + SYSTEM_EOL + '         void foo(int p  ) { return  'z'  \t; }}' é diferente de " + result3957 + " <LexicalPreservingPrinter.print(c)>"
"Era esperado valores iguais, mas  'class /*a comment*/ A {\t\t' + SYSTEM_EOL + ' int f;' + SYSTEM_EOL + SYSTEM_EOL + SYSTEM_EOL + ' int g;}' é diferente de " + result3958 + " <LexicalPreservingPrinter.print(c)>"
"Era esperado valores iguais, mas  'void foo(float p1) {}' é diferente de " + result3959 + " <LexicalPreservingPrinter.print(m)>"
"Era esperado valores iguais, mas  'void foo(char p1, float p2) {}' é diferente de " + result3960 + " <LexicalPreservingPrinter.print(m)>"
"Era esperado valores iguais, mas  'void foo() {}' é diferente de " + result3961 + " <LexicalPreservingPrinter.print(m)>"
"Era esperado valores iguais, mas  'void foo(int p2) {}' é diferente de " + result3962 + " <LexicalPreservingPrinter.print(m)>"
"Era esperado valores iguais, mas  'void foo(char p1) {}' é diferente de " + result3963 + " <LexicalPreservingPrinter.print(m)>"
"Era esperado valores iguais, mas  'void foo(char p1, int p2) {' + SYSTEM_EOL + '    10 + 2;' + SYSTEM_EOL + '}' é diferente de " + result3964 + " <LexicalPreservingPrinter.print(m)>"
"Era esperado valores iguais, mas  'class A {' + eol + '\t' + 'foo(int a, int b) {' + eol + '\t\t' + 'return a * b;' + eol + '\t' + '}' + eol + '}' é diferente de " + result3965 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'import a.b.c.D;' é diferente de " + result3966 + " <LexicalPreservingPrinter.print(imp)>"
"Era esperado valores iguais, mas  'import com.github.javaparser.ast.CompilationUnit;' é diferente de " + result3967 + " <LexicalPreservingPrinter.print(imp)>"
"Era esperado valores iguais, mas  'import static com.github.javaparser.ParseStart.*;' é diferente de " + result3968 + " <LexicalPreservingPrinter.print(imp)>"
"Era esperado valores iguais, mas  'class A { private final StackIteratorTriple its = new StackIteratorTriple(); }' é diferente de " + result3969 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'class A {{try { doit(); } catch (Exception e) {}}}' é diferente de " + result3970 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'class A {{try { doit(); } catch (Exception | AssertionError e) {}}}' é diferente de " + result3971 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'Exception' é diferente de " + result3972 + " <LexicalPreservingPrinter.print(catchType)>"
"Era esperado valores iguais, mas  'Exception | AssertionError' é diferente de " + result3973 + " <LexicalPreservingPrinter.print(unionType)>"
"Era esperado valores iguais, mas  'Exception | AssertionError e' é diferente de " + result3974 + " <LexicalPreservingPrinter.print(parameter)>"
"Era esperado valores iguais, mas  'class A {FunctionString,String f = a - a;}' é diferente de " + result3975 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'class xyz { }' é diferente de " + result3976 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'class module { }' é diferente de " + result3977 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  code é diferente de " + result3978 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  code é diferente de " + result3979 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public class TestPage extends Page {' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void test() {}' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void initializePage() {}' + SYSTEM_EOL + '}' é diferente de " + result3980 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas " + result3981 + " <readExample('ASimpleClassWithMoreFormatting')> é diferente de " + result3982 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas " + result3983 + " <readExample('ASimpleClassWithMoreFormatting_step1')> é diferente de " + result3984 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public void setAField() {' + SYSTEM_EOL + '    }' é diferente de " + result3985 + " <LexicalPreservingPrinter.print(setter)>"
"Era esperado valores iguais, mas  4 é diferente de " + result3986 + " <LexicalPreservingPrinter.findIndentation(setter).size()>"
"Era esperado valores iguais, mas  4 é diferente de " + result3987 + " <LexicalPreservingPrinter.findIndentation(setter.getBody().get()).size()>"
"Era esperado valores iguais, mas  4 é diferente de " + result3988 + " <LexicalPreservingPrinter.findIndentation(setter).size()>"
"Era esperado valores iguais, mas  4 é diferente de " + result3989 + " <LexicalPreservingPrinter.findIndentation(setter.getBody().get()).size()>"
"Era esperado valores iguais, mas  8 é diferente de " + result3990 + " <LexicalPreservingPrinter.findIndentation(setter.getBody().get().getStatement(0)).size()>"
"Era esperado valores iguais, mas " + result3991 + " <readExample('ASimpleClassWithMoreFormatting_step4')> é diferente de " + result3992 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado verdadeiro, mas " + result3993 + " <nodeText.getElements().get(index++).isChildOfClass(Modifier.class)> é falso"
"Era esperado verdadeiro, mas " + result3994 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result3995 + " <nodeText.getElements().get(index++).isChildOfClass(VoidType.class)> é falso"
"Era esperado verdadeiro, mas " + result3996 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result3997 + " <nodeText.getElements().get(index++).isChildOfClass(SimpleName.class)> é falso"
"Era esperado verdadeiro, mas " + result3998 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LPAREN)> é falso"
"Era esperado verdadeiro, mas " + result3999 + " <nodeText.getElements().get(index++).isChildOfClass(Parameter.class)> é falso"
"Era esperado verdadeiro, mas " + result4000 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RPAREN)> é falso"
"Era esperado verdadeiro, mas " + result4001 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4002 + " <nodeText.getElements().get(index++).isChildOfClass(BlockStmt.class)> é falso"
"Era esperado valores iguais, mas  index é diferente de " + result4003 + " <nodeText.getElements().size()>"
"Era esperado verdadeiro, mas " + result4004 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LBRACE)> é falso"
"Era esperado verdadeiro, mas " + result4005 + " <nodeText.getElements().get(index++).isNewline()> é falso"
"Era esperado verdadeiro, mas " + result4006 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4007 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4008 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4009 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4010 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4011 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4012 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4013 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4014 + " <nodeText.getElements().get(index++).isChildOfClass(ExpressionStmt.class)> é falso"
"Era esperado verdadeiro, mas " + result4015 + " <nodeText.getElements().get(index++).isNewline()> é falso"
"Era esperado verdadeiro, mas " + result4016 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4017 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4018 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4019 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4020 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RBRACE)> é falso"
"Era esperado valores iguais, mas  index é diferente de " + result4021 + " <nodeText.getElements().size()>"
"Era esperado verdadeiro, mas " + result4022 + " <nodeText.getElements().get(index++).isChildOfClass(AssignExpr.class)> é falso"
"Era esperado verdadeiro, mas " + result4023 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SEMICOLON)> é falso"
"Era esperado valores iguais, mas  index é diferente de " + result4024 + " <nodeText.getElements().size()>"
"Era esperado verdadeiro, mas " + result4025 + " <nodeText.getElements().get(index++).isChildOfClass(Modifier.class)> é falso"
"Era esperado verdadeiro, mas " + result4026 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4027 + " <nodeText.getElements().get(index++).isChildOfClass(VoidType.class)> é falso"
"Era esperado verdadeiro, mas " + result4028 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4029 + " <nodeText.getElements().get(index++).isChildOfClass(SimpleName.class)> é falso"
"Era esperado verdadeiro, mas " + result4030 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LPAREN)> é falso"
"Era esperado verdadeiro, mas " + result4031 + " <nodeText.getElements().get(index++).isChildOfClass(Parameter.class)> é falso"
"Era esperado verdadeiro, mas " + result4032 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RPAREN)> é falso"
"Era esperado verdadeiro, mas " + result4033 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4034 + " <nodeText.getElements().get(index++).isChildOfClass(BlockStmt.class)> é falso"
"Era esperado valores iguais, mas  index é diferente de " + result4035 + " <nodeText.getElements().size()>"
"Era esperado verdadeiro, mas " + result4036 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.LBRACE)> é falso"
"Era esperado verdadeiro, mas " + result4037 + " <nodeText.getElements().get(index++).isNewline()> é falso"
"Era esperado verdadeiro, mas " + result4038 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4039 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4040 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4041 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4042 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4043 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4044 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4045 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4046 + " <nodeText.getElements().get(index++).isChildOfClass(ExpressionStmt.class)> é falso"
"Era esperado verdadeiro, mas " + result4047 + " <nodeText.getElements().get(index++).isNewline()> é falso"
"Era esperado verdadeiro, mas " + result4048 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4049 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4050 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4051 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SPACE)> é falso"
"Era esperado verdadeiro, mas " + result4052 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.RBRACE)> é falso"
"Era esperado valores iguais, mas  index é diferente de " + result4053 + " <nodeText.getElements().size()>"
"Era esperado verdadeiro, mas " + result4054 + " <nodeText.getElements().get(index++).isChildOfClass(AssignExpr.class)> é falso"
"Era esperado verdadeiro, mas " + result4055 + " <nodeText.getElements().get(index++).isToken(GeneratedJavaParserConstants.SEMICOLON)> é falso"
"Era esperado valores iguais, mas  index é diferente de " + result4056 + " <nodeText.getElements().size()>"
"Era esperado valores iguais, mas  'public class TestPage extends Page {' + SYSTEM_EOL + SYSTEM_EOL + '   protected void test() {}' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void initializePage() {}' + SYSTEM_EOL + '}' é diferente de " + result4057 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public class TestPage extends Page {' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void test() {}' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void initializePage() {}' + SYSTEM_EOL + '}' é diferente de " + result4058 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public class TestPage extends Page {' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void test() {}' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void initializePage() {}' + SYSTEM_EOL + '}' é diferente de " + result4059 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public class TestPage extends Page {' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void test() {}' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void initializePage() {}' + SYSTEM_EOL + '}' é diferente de " + result4060 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public class TestPage extends Page {' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void test() {}' + SYSTEM_EOL + SYSTEM_EOL + '   @Override' + SYSTEM_EOL + '   protected void initializePage() {}' + SYSTEM_EOL + '}' é diferente de " + result4061 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  '@Deprecated' + SYSTEM_EOL + 'public final class A {}' é diferente de " + result4062 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  '@Deprecated' + SYSTEM_EOL + 'public abstract class A {}' é diferente de " + result4063 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'public class Foo {' + '\n' + 'void mymethod() {' + '\n' + '}' + '\n' + '}' é diferente de " + result4064 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado verdadeiro, mas " + result4065 + " <expression.isStringLiteralExpr()> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + result4066 + " <LexicalPreservingPrinter.print(statement)>"
"Era esperado valores iguais, mas  expected é diferente de " + result4067 + " <statement.toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4068 + " <cu.findAll(ClassOrInterfaceDeclaration.class).size()>"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado verdadeiro, mas " + result4069 + " <expression.isIntegerLiteralExpr()> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado verdadeiro, mas " + result4070 + " <LexicalPreservingPrinter.isAvailableOn(md)> é falso"
"Era esperado verdadeiro, mas " + result4071 + " <result.contains('@Nullable String')> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result4072 + " <differenceElements.size()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4073 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4074 + " <added(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4075 + " <differenceElements.get(0)>"
"Era esperado valores iguais, mas " + result4076 + " <added(new CsmChild(n1))> é diferente de " + result4077 + " <differenceElements.get(1)>"
"Era esperado valores iguais, mas " + result4078 + " <added(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4079 + " <differenceElements.get(2)>"
"Era esperado valores iguais, mas " + result4080 + " <added(new CsmChild(n2))> é diferente de " + result4081 + " <differenceElements.get(3)>"
"Era esperado valores iguais, mas  4 é diferente de " + result4082 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4083 + " <removed(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4084 + " <differenceElements.get(0)>"
"Era esperado valores iguais, mas " + result4085 + " <removed(new CsmChild(n1))> é diferente de " + result4086 + " <differenceElements.get(1)>"
"Era esperado valores iguais, mas " + result4087 + " <removed(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4088 + " <differenceElements.get(2)>"
"Era esperado valores iguais, mas " + result4089 + " <removed(new CsmChild(n2))> é diferente de " + result4090 + " <differenceElements.get(3)>"
"Era esperado valores iguais, mas  3 é diferente de " + result4091 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4092 + " <added(new CsmChild(packageDeclaration))> é diferente de " + result4093 + " <differenceElements.get(0)>"
"Era esperado valores iguais, mas " + result4094 + " <kept(new CsmChild(cu.getType(0)))> é diferente de " + result4095 + " <differenceElements.get(1)>"
"Era esperado valores iguais, mas " + result4096 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4097 + " <differenceElements.get(2)>"
"Era esperado valores iguais, mas " + result4098 + " <added(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4099 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4100 + " <added(new CsmToken(spaceTokenKind()))> é diferente de " + result4101 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4102 + " <kept(new CsmToken(GeneratedJavaParserConstants.AT))> é diferente de " + result4103 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4104 + " <kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE))> é diferente de " + result4105 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4106 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4107 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4108 + " <kept(new CsmChild(annotationDeclaration.getName()))> é diferente de " + result4109 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4110 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4111 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4112 + " <kept(new CsmToken(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result4113 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4114 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4115 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4116 + " <kept(new CsmChild(annotationDeclaration.getMember(0)))> é diferente de " + result4117 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4118 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4119 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4120 + " <kept(new CsmChild(annotationDeclaration.getMember(1)))> é diferente de " + result4121 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4122 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4123 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4124 + " <kept(new CsmChild(annotationDeclaration.getMember(2)))> é diferente de " + result4125 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4126 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4127 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4128 + " <kept(new CsmChild(annotationDeclaration.getMember(3)))> é diferente de " + result4129 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4130 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4131 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4132 + " <kept(new CsmChild(annotationDeclaration.getMember(4)))> é diferente de " + result4133 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4134 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4135 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4136 + " <kept(new CsmChild(annotationDeclaration.getMember(5)))> é diferente de " + result4137 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4138 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4139 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4140 + " <kept(new CsmToken(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result4141 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4142 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4143 + " <kept(new CsmToken(GeneratedJavaParserConstants.AT))> é diferente de " + result4144 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4145 + " <kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE))> é diferente de " + result4146 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4147 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4148 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4149 + " <removed(new CsmChild(annotationDeclaration.getName()))> é diferente de " + result4150 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4151 + " <added(new CsmChild(newName))> é diferente de " + result4152 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4153 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4154 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4155 + " <kept(new CsmToken(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result4156 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4157 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4158 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4159 + " <kept(new CsmChild(annotationDeclaration.getMember(0)))> é diferente de " + result4160 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4161 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4162 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4163 + " <kept(new CsmChild(annotationDeclaration.getMember(1)))> é diferente de " + result4164 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4165 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4166 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4167 + " <kept(new CsmChild(annotationDeclaration.getMember(2)))> é diferente de " + result4168 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4169 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4170 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4171 + " <kept(new CsmChild(annotationDeclaration.getMember(3)))> é diferente de " + result4172 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4173 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4174 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4175 + " <kept(new CsmChild(annotationDeclaration.getMember(4)))> é diferente de " + result4176 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4177 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4178 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4179 + " <kept(new CsmChild(annotationDeclaration.getMember(5)))> é diferente de " + result4180 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4181 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4182 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4183 + " <kept(new CsmToken(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result4184 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4185 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4186 + " <kept(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4187 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4188 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4189 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4190 + " <kept(new CsmToken(GeneratedJavaParserConstants.AT))> é diferente de " + result4191 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4192 + " <kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE))> é diferente de " + result4193 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4194 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4195 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4196 + " <kept(new CsmChild(annotationDeclaration.getName()))> é diferente de " + result4197 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4198 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4199 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4200 + " <kept(new CsmToken(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result4201 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4202 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4203 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4204 + " <kept(new CsmChild(annotationDeclaration.getMember(0)))> é diferente de " + result4205 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4206 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4207 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4208 + " <kept(new CsmChild(annotationDeclaration.getMember(1)))> é diferente de " + result4209 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4210 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4211 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4212 + " <kept(new CsmChild(annotationDeclaration.getMember(2)))> é diferente de " + result4213 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4214 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4215 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4216 + " <kept(new CsmChild(annotationDeclaration.getMember(3)))> é diferente de " + result4217 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4218 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4219 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4220 + " <kept(new CsmChild(annotationDeclaration.getMember(4)))> é diferente de " + result4221 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4222 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4223 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4224 + " <kept(new CsmChild(annotationDeclaration.getMember(5)))> é diferente de " + result4225 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4226 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4227 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4228 + " <kept(new CsmToken(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result4229 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4230 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4231 + " <kept(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4232 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4233 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4234 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4235 + " <kept(new CsmToken(GeneratedJavaParserConstants.AT))> é diferente de " + result4236 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4237 + " <kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE))> é diferente de " + result4238 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4239 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4240 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4241 + " <kept(new CsmChild(annotationDeclaration.getName()))> é diferente de " + result4242 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4243 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4244 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4245 + " <kept(new CsmToken(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result4246 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4247 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4248 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4249 + " <kept(new CsmChild(annotationDeclaration.getMember(0)))> é diferente de " + result4250 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4251 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4252 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4253 + " <kept(new CsmChild(annotationDeclaration.getMember(1)))> é diferente de " + result4254 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4255 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4256 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4257 + " <kept(new CsmChild(annotationDeclaration.getMember(2)))> é diferente de " + result4258 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4259 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4260 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4261 + " <kept(new CsmChild(annotationDeclaration.getMember(3)))> é diferente de " + result4262 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4263 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4264 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4265 + " <kept(new CsmChild(annotationDeclaration.getMember(4)))> é diferente de " + result4266 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4267 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4268 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4269 + " <kept(new CsmChild(annotationDeclaration.getMember(5)))> é diferente de " + result4270 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4271 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4272 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4273 + " <kept(new CsmToken(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result4274 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4275 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4276 + " <removed(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4277 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4278 + " <removed(new CsmToken(spaceTokenKind()))> é diferente de " + result4279 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4280 + " <kept(new CsmToken(GeneratedJavaParserConstants.AT))> é diferente de " + result4281 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4282 + " <kept(new CsmToken(GeneratedJavaParserConstants.INTERFACE))> é diferente de " + result4283 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4284 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4285 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4286 + " <kept(new CsmChild(annotationDeclaration.getName()))> é diferente de " + result4287 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4288 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4289 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4290 + " <kept(new CsmToken(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result4291 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4292 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4293 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4294 + " <kept(new CsmChild(annotationDeclaration.getMember(0)))> é diferente de " + result4295 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4296 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4297 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4298 + " <kept(new CsmChild(annotationDeclaration.getMember(1)))> é diferente de " + result4299 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4300 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4301 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4302 + " <kept(new CsmChild(annotationDeclaration.getMember(2)))> é diferente de " + result4303 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4304 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4305 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4306 + " <kept(new CsmChild(annotationDeclaration.getMember(3)))> é diferente de " + result4307 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4308 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4309 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4310 + " <kept(new CsmChild(annotationDeclaration.getMember(4)))> é diferente de " + result4311 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4312 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4313 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4314 + " <kept(new CsmChild(annotationDeclaration.getMember(5)))> é diferente de " + result4315 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4316 + " <kept(new CsmToken(eolTokenKind()))> é diferente de " + result4317 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4318 + " <kept(new CsmToken(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result4319 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4320 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4321 + " <kept(new CsmChild(md.getType()))> é diferente de " + result4322 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4323 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4324 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4325 + " <kept(new CsmChild(md.getName()))> é diferente de " + result4326 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4327 + " <kept(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4328 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4329 + " <kept(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4330 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4331 + " <removed(new CsmToken(spaceTokenKind()))> é diferente de " + result4332 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4333 + " <removed(new CsmToken(GeneratedJavaParserConstants._DEFAULT))> é diferente de " + result4334 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4335 + " <removed(new CsmToken(spaceTokenKind()))> é diferente de " + result4336 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4337 + " <removed(new CsmChild(md.getDefaultValue().get()))> é diferente de " + result4338 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4339 + " <kept(new CsmToken(GeneratedJavaParserConstants.SEMICOLON))> é diferente de " + result4340 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4341 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4342 + " <kept(new CsmChild(md.getType()))> é diferente de " + result4343 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4344 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4345 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4346 + " <kept(new CsmChild(md.getName()))> é diferente de " + result4347 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4348 + " <kept(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4349 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4350 + " <kept(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4351 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4352 + " <added(new CsmToken(spaceTokenKind()))> é diferente de " + result4353 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4354 + " <added(new CsmToken(GeneratedJavaParserConstants._DEFAULT))> é diferente de " + result4355 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4356 + " <added(new CsmToken(spaceTokenKind()))> é diferente de " + result4357 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4358 + " <added(new CsmChild(defaultValue))> é diferente de " + result4359 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4360 + " <kept(new CsmToken(GeneratedJavaParserConstants.SEMICOLON))> é diferente de " + result4361 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4362 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4363 + " <added(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4364 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4365 + " <added(new CsmToken(spaceTokenKind()))> é diferente de " + result4366 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4367 + " <kept(new CsmChild(cd.getName()))> é diferente de " + result4368 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4369 + " <kept(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4370 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4371 + " <kept(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4372 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4373 + " <kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4374 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4375 + " <kept(new CsmChild(cd.getBody()))> é diferente de " + result4376 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4377 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4378 + " <DifferenceElement.removed(new CsmChild(ecd.getName()))> é diferente de " + result4379 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4380 + " <DifferenceElement.added(new CsmChild(newName))> é diferente de " + result4381 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4382 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4383 + " <DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.LBRACE))> é diferente de " + result4384 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4385 + " <DifferenceElement.kept(new CsmToken(eolTokenKind()))> é diferente de " + result4386 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4387 + " <DifferenceElement.added(new CsmIndent())> é diferente de " + result4388 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4389 + " <DifferenceElement.added(new CsmChild(s))> é diferente de " + result4390 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4391 + " <DifferenceElement.added(new CsmToken(eolTokenKind()))> é diferente de " + result4392 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4393 + " <DifferenceElement.added(new CsmUnindent())> é diferente de " + result4394 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4395 + " <DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.RBRACE))> é diferente de " + result4396 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4397 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4398 + " <DifferenceElement.kept(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4399 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4400 + " <DifferenceElement.kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4401 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4402 + " <DifferenceElement.kept(new CsmChild(md.getType()))> é diferente de " + result4403 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4404 + " <DifferenceElement.kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4405 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4406 + " <DifferenceElement.kept(new CsmChild(md.getName()))> é diferente de " + result4407 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4408 + " <DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4409 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4410 + " <DifferenceElement.removed(new CsmChild(md.getParameter(0)))> é diferente de " + result4411 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4412 + " <DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4413 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4414 + " <DifferenceElement.kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4415 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4416 + " <DifferenceElement.kept(new CsmChild(md.getBody().get()))> é diferente de " + result4417 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4418 + " <differenceElements.size()>"
"Era esperado valores iguais, mas " + result4419 + " <DifferenceElement.kept(new CsmChild(Modifier.publicModifier()))> é diferente de " + result4420 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4421 + " <DifferenceElement.kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4422 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4423 + " <DifferenceElement.kept(new CsmChild(md.getType()))> é diferente de " + result4424 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4425 + " <DifferenceElement.kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4426 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4427 + " <DifferenceElement.kept(new CsmChild(md.getName()))> é diferente de " + result4428 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4429 + " <DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.LPAREN))> é diferente de " + result4430 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4431 + " <DifferenceElement.added(new CsmChild(newParameter))> é diferente de " + result4432 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4433 + " <DifferenceElement.kept(new CsmToken(GeneratedJavaParserConstants.RPAREN))> é diferente de " + result4434 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4435 + " <DifferenceElement.kept(new CsmToken(spaceTokenKind()))> é diferente de " + result4436 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas " + result4437 + " <DifferenceElement.kept(new CsmChild(md.getBody().get()))> é diferente de " + result4438 + " <differenceElements.get(i++)>"
"Era esperado valores iguais, mas  i é diferente de " + result4439 + " <differenceElements.size()>"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  expected é diferente de " + result4440 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas " + result4441 + " <LexicalPreservingPrinter.print(cu)> é diferente de " + result4442 + " <LexicalPreservingPrinter.print(cu.clone())>"
"Era esperado verdadeiro, mas " + result4443 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result4444 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result4445 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result4446 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas " + result4447 + " <LexicalPreservingPrinter.getOrCreateNodeText(expression).getElements().stream().anyMatch(elem -> elem.expand().equals(Keyword.PRIVATE.asString()))> é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  expected é diferente de " + result4448 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado verdadeiro, mas " + result4449 + " <clazzOptional.isPresent()> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + result4450 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado valores iguais, mas  'i  0' é diferente de " + result4451 + " <ifStmt.getCondition().toString()>"
"Era esperado valores iguais, mas  'Foo.class' é diferente de " + result4452 + " <print(expr)>"
"Era esperado valores iguais, mas  'Foo[].class' é diferente de " + result4453 + " <print(expr)>"
"Era esperado valores iguais, mas  'FooString.class' é diferente de " + result4454 + " <print(expr)>"
"Era esperado valores iguais, mas  'class A {' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result4455 + " <print(node)>"
"Era esperado valores iguais, mas  'class A {' + SYSTEM_EOL + SYSTEM_EOL + '    int a;' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result4456 + " <print(node)>"
"Era esperado valores iguais, mas  'int x(int y, int z) {' + SYSTEM_EOL + '}' é diferente de " + result4457 + " <print(node)>"
"Era esperado valores iguais, mas  'int x(X A.B.this, int y, int z) {' + SYSTEM_EOL + '}' é diferente de " + result4458 + " <print(node)>"
"Era esperado valores iguais, mas  'interface A {' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result4459 + " <print(node)>"
"Era esperado valores iguais, mas  'public interface A {' + SYSTEM_EOL + '}' + SYSTEM_EOL é diferente de " + result4460 + " <print(node)>"
"Era esperado valores iguais, mas  'X(){\n// hello\n}' é diferente de " + result4461 + " <cu.getClassByName('X').get().getDefaultConstructor().get().getTokenRange().get().toString()>"
"Era esperado valores iguais, mas  '1,1-5/6,1-1/7,1-1/8,1-1/9,1-1/10,1-1/1,2-1/2,2-1/3,2-1/4,2-1/5,2-1/6,2-1/1,3-8/9,3-1/1,4-1/2,4-1/1,5-1/1,5-1/' é diferente de " + result4462 + " <makeRangesString(cu)>"
"Era esperado valores iguais, mas  '1,1-5/6,1-4/10,1-2/1,2-1/2,2-1/3,2-1/4,2-1/5,2-1/1,3-1/2,3-1/3,3-1/4,3-1/5,3-1/6,3-1/1,4-8/9,4-1/1,5-1/2,5-1/1,6-1/2,6-1/' é diferente de " + result4463 + " <makeRangesString(cu)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4464 + " <parseResult.getProblems().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4465 + " <parseResult.getProblems().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4466 + " <parseResult.getProblems().size()>"
"Era esperado valores iguais, mas  'switch (value)\n' + '      {\n' + '       case 1 - numericString = \'one\';\n' + '       default - numericString = \'N/A\';\n' + '      }' é diferente de " + " modifiedSourceCode"
"Era esperado valores iguais, mas  expectedStartLine é diferente de " + " range.begin.line"
"Era esperado valores iguais, mas  expectedEndLine é diferente de " + " range.end.line"
"Era esperado valores iguais, mas  tokenCount é diferente de " + " switchEntries"
"Era esperado valores iguais, mas  10 é diferente de " + " range_orderedPositions.begin.line"
"Era esperado valores iguais, mas  11 é diferente de " + " range_orderedPositions.begin.column"
"Era esperado valores iguais, mas  20 é diferente de " + " range_orderedPositions.end.line"
"Era esperado valores iguais, mas  21 é diferente de " + " range_orderedPositions.end.column"
"Era esperado valores iguais, mas  10 é diferente de " + " range_reversedPositions.begin.line"
"Era esperado valores iguais, mas  11 é diferente de " + " range_reversedPositions.begin.column"
"Era esperado valores iguais, mas  20 é diferente de " + " range_reversedPositions.end.line"
"Era esperado valores iguais, mas  21 é diferente de " + " range_reversedPositions.end.column"
"Era esperado verdadeiro, mas " + result4467 + " <rangePair_equalBeginEnd[0].contains(rangePair_equalBeginEnd[1])> é falso"
"Era esperado verdadeiro, mas " + result4468 + " <r1.contains(r2)> é falso"
"Era esperado verdadeiro, mas " + result4469 + " <r1.strictlyContains(r2)> é falso"
"Era esperado verdadeiro, mas " + result4470 + " <r1.overlapsWith(r2)> é falso"
"Era esperado verdadeiro, mas " + result4471 + " <r2.overlapsWith(r1)> é falso"
"Era esperado valores iguais, mas  5 é diferente de " + result4472 + " <r1.getLineCount()>"
"Era esperado valores iguais, mas  32 é diferente de " + result4473 + " <r2.getLineCount()>"
"Era esperado verdadeiro, mas " + result4474 + " <r.contains(r.begin)> é falso"
"Era esperado verdadeiro, mas " + result4475 + " <r.contains(r.end)> é falso"
"Era esperado verdadeiro, mas " + result4476 + " <r1.overlapsWith(r2)> é falso"
"Era esperado verdadeiro, mas " + result4477 + " <r2.overlapsWith(r1)> é falso"
"Era esperado verdadeiro, mas " + result4478 + " <r1.overlapsWith(r2)> é falso"
"Era esperado verdadeiro, mas " + result4479 + " <r2.overlapsWith(r1)> é falso"
"Era esperado verdadeiro, mas " + result4480 + " <r1.overlapsWith(r2)> é falso"
"Era esperado verdadeiro, mas " + result4481 + " <r2.overlapsWith(r1)> é falso"
"Era esperado verdadeiro, mas " + result4482 + " <r1.overlapsWith(r2)> é falso"
"Era esperado verdadeiro, mas " + result4483 + " <r2.overlapsWith(r1)> é falso"
"Era esperado verdadeiro, mas " + result4484 + " <r1.overlapsWith(r2)> é falso"
"Era esperado verdadeiro, mas " + result4485 + " <r2.overlapsWith(r1)> é falso"
"Era esperado verdadeiro, mas " + result4486 + " <r1.isBefore(r2)> é falso"
"Era esperado verdadeiro, mas " + result4487 + " <r2.isAfter(r1)> é falso"
"Era esperado valores iguais, mas  23 é diferente de " + result4488 + " <chars.size()>"
"Era esperado falso, mas " + result4489 + " <LexicalPreservingPrinter.isAvailableOn(cu)> é verdadeiro "
"Era esperado falso, mas " + result4490 + " <rangePair_equalBeginEnd[0].strictlyContains(rangePair_equalBeginEnd[1])> é verdadeiro "
"Era esperado falso, mas " + result4491 + " <r1.contains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4492 + " <r2.contains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4493 + " <r1.strictlyContains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4494 + " <r2.strictlyContains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4495 + " <r1.contains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4496 + " <r2.contains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4497 + " <r1.strictlyContains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4498 + " <r2.strictlyContains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4499 + " <r2.contains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4500 + " <r2.strictlyContains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4501 + " <r1.contains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4502 + " <r2.contains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4503 + " <r1.strictlyContains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4504 + " <r2.strictlyContains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4505 + " <r1.contains(r2)> é verdadeiro "
"Era esperado falso, mas " + result4506 + " <r2.contains(r1)> é verdadeiro "
"Era esperado falso, mas " + result4507 + " <r1.overlapsWith(r2)> é verdadeiro "
"Era esperado falso, mas " + result4508 + " <r2.overlapsWith(r1)> é verdadeiro "
"Era esperado falso, mas " + result4509 + " <r.strictlyContains(r.begin)> é verdadeiro "
"Era esperado falso, mas " + result4510 + " <r.strictlyContains(r.end)> é verdadeiro "
"Era esperado falso, mas " + result4511 + " <r1.overlapsWith(r2)> é verdadeiro "
"Era esperado falso, mas " + result4512 + " <r2.overlapsWith(r1)> é verdadeiro "
"Era esperado falso, mas " + result4513 + " <r1.overlapsWith(r2)> é verdadeiro "
"Era esperado falso, mas " + result4514 + " <r2.overlapsWith(r1)> é verdadeiro "
"Era esperado falso, mas " + result4515 + " <r2.isBefore(r1)> é verdadeiro "
"Era esperado falso, mas " + result4516 + " <r3.isBefore(r1)> é verdadeiro "
"Era esperado falso, mas " + result4517 + " <r1.isAfter(r2)> é verdadeiro "
"Era esperado falso, mas " + result4518 + " <r1.isAfter(r3)> é verdadeiro "
"Era esperado falso, mas " + result4519 + " <result.getResult().get().getTokenRange().isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4520 + " <result.getResult().get().findAll(Node.class).stream().noneMatch(node -> node.getTokenRange().isPresent())> é falso"
"Era esperado verdadeiro, mas " + result4521 + " <result.isSuccessful()> é falso"
"Era esperado valores iguais, mas  str é diferente de " + result4522 + " <unit.toString()>"
"Era esperado valores iguais, mas " + result4523 + " <str.replace('\n', '')> é diferente de " + result4524 + " <unit.toString().replace('\n', '')>"
"Era esperado valores iguais, mas  1 é diferente de " + result4525 + " <compilationUnit.getTypes().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result4526 + " <compilationUnit.getTypes().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4527 + " <testClass.getMembers().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result4528 + " <testClass.getMembers().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4529 + " <methodBody.getStatements().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result4530 + " <methodBody.getStatements().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado verdadeiro, mas " + result4531 + " <children.stream().allMatch(n -> n.getParentNode() != null)> é falso"
"Era esperado valores iguais, mas  UNPARSABLE é diferente de " + result4532 + " <cu.getParsed()>"
"Era esperado valores iguais, mas  UNPARSABLE é diferente de " + result4533 + " <xxx.getParsed()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4534 + " <xxx.getChildNodes().size()>"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  UNPARSABLE é diferente de " + result4535 + " <xxx.getStatement().getParsed()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4536 + " <compilationUnit.getTypes().get(0).getMembers().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4537 + " <compilationUnit.getTypes().get(0).getMembers().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4538 + " <allVarTypes.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4539 + " <allVarTypes.size()>"
"Era esperado que nenhuma exceção fosse lançada, mas  () - StaticJavaParser.parse(str) foi lançada"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4540 + " <parse.isSuccessful()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4541 + " <parse.isSuccessful()> é falso"
"Era esperado valores iguais, mas  TokenRange.INVALID é diferente de " + result4542 + " <problem.getLocation().get()>"
"Era esperado valores iguais, mas  'Parse error' é diferente de " + result4543 + " <problem.getMessage()>"
"Era esperado valores iguais, mas  '(line ?,col ?) Parse error' é diferente de " + result4544 + " <problem.getVerboseMessage()>"
"Era esperado valores iguais, mas  'Parse error' é diferente de " + result4545 + " <problem.getVerboseMessage()>"
"Era esperado valores iguais, mas " + result4546 + " <Arrays.asList()> é diferente de " + " changes"
"Era esperado valores iguais, mas " + result4547 + " <Arrays.asList()> é diferente de " + " changes"
"Era esperado verdadeiro, mas " + result4548 + " <fieldDeclaration.isRegistered(observer)> é falso"
"Era esperado valores iguais, mas " + result4549 + " <Arrays.asList('VariableDeclarator.name changed from foo to Bar')> é diferente de " + " changes"
"Era esperado falso, mas " + result4550 + " <compilationUnit.getTypes().isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result4551 + " <compilationUnit.getTypes().get(0).getMembers().isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result4552 + " <compilationUnit.getTypes().isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result4553 + " <compilationUnit.getTypes().isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result4554 + " <parse.isSuccessful()> é verdadeiro "
"Era esperado falso, mas " + result4555 + " <expression.traverseScope().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  0 é diferente de " + result4556 + " <mce.getArgumentPosition(arg0)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4557 + " <mce.getArgumentPosition(innerExpr0, EXCLUDE_ENCLOSED_EXPR)>"
"Era esperado valores iguais, mas  1 é diferente de " + result4558 + " <mce.getArgumentPosition(arg1)>"
"Era esperado valores iguais, mas  1 é diferente de " + result4559 + " <mce.getArgumentPosition(innerExpr1, EXCLUDE_ENCLOSED_EXPR)>"
"Era esperado valores iguais, mas " + result4560 + " <PrimitiveType.intType()> é diferente de " + result4561 + " <declaration.getCommonType()>"
"Era esperado valores iguais, mas " + result4562 + " <PrimitiveType.intType()> é diferente de " + result4563 + " <declaration.getElementType()>"
"Era esperado valores iguais, mas " + result4564 + " <PrimitiveType.intType()> é diferente de " + result4565 + " <declaration.getElementType()>"
"Era esperado valores iguais, mas  'Dog a, b' é diferente de " + result4566 + " <declaration.toString()>"
"Era esperado verdadeiro, mas " + result4567 + " <forStmt.hasEmptyBody()> é falso"
"Era esperado verdadeiro, mas " + result4568 + " <forStmt.hasEmptyBody()> é falso"
"Era esperado falso, mas " + result4569 + " <forStmt.hasEmptyBody()> é verdadeiro "
"Era esperado falso, mas " + result4570 + " <forStmt.hasEmptyBody()> é verdadeiro "
"Era esperado valores iguais, mas " + result4571 + " <createModifierList(PUBLIC)> é diferente de " + result4572 + " <decl.getModifiers()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4573 + " <changes.size()>"
"Era esperado valores iguais, mas  'property MODIFIERS is changed to [public ]' é diferente de " + result4574 + " <changes.get(0)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4575 + " <node.getModifiers().size()>"
"Era esperado valores iguais, mas " + result4576 + " <createModifierList(PUBLIC)> é diferente de " + result4577 + " <node.getModifiers()>"
"Era esperado valores iguais, mas " + result4578 + " <createModifierList(SYNCHRONIZED)> é diferente de " + result4579 + " <node.getModifiers()>"
"Era esperado falso, mas " + result4580 + " <decl.removeJavaDocComment()> é verdadeiro "
"Era esperado falso, mas " + result4581 + " <decl.removeJavaDocComment()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4582 + " <decl.getComment().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result4583 + " <decl.removeJavaDocComment()> é falso"
"Era esperado falso, mas " + result4584 + " <decl.getComment().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4585 + " <method.getJavadocComment().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4586 + " <method.getJavadoc().isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4587 + " <methodCallExpr.hasScope()> é falso"
"Era esperado falso, mas " + result4588 + " <objectCreationExpr.hasScope()> é verdadeiro "
"Era esperado falso, mas " + result4589 + " <methodCallExpr.hasScope()> é verdadeiro "
"Era esperado que   Exception.class fosse uma instancia de " + result4590 + " <problem.getCause().get()>, mas não é"
"Era esperado que   MethodCallExpr.class fosse uma instancia de " + " expression, mas não é"
"Era esperado que   FieldAccessExpr.class fosse uma instancia de " + " expression, mas não é"
"Era esperado que   MethodCallExpr.class fosse uma instancia de " + " expression, mas não é"
"Era esperado verdadeiro, mas o valor obtido é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result4591 + " <list.size()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result4592 + " <list.get(0).asString()>"
"Era esperado valores iguais, mas  'z' é diferente de " + result4593 + " <list.get(1).asString()>"
"Era esperado valores iguais, mas  'c' é diferente de " + result4594 + " <list.get(2).asString()>"
"Era esperado valores iguais, mas  3 é diferente de " + result4595 + " <list.size()>"
"Era esperado valores iguais, mas  '[abc, bcd, cde]' é diferente de " + result4596 + " <list.toString()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4597 + " <list.size()>"
"Era esperado valores iguais, mas  '[xxx, abc, bcd, cde]' é diferente de " + result4598 + " <list.toString()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4599 + " <list.size()>"
"Era esperado valores iguais, mas  '[abc, bcd, cde, xxx]' é diferente de " + result4600 + " <list.toString()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4601 + " <list.size()>"
"Era esperado valores iguais, mas  '[abc, xxx, bcd, cde]' é diferente de " + result4602 + " <list.toString()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4603 + " <list.size()>"
"Era esperado valores iguais, mas  '[abc, bcd, xxx, cde]' é diferente de " + result4604 + " <list.toString()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4605 + " <list.size()>"
"Era esperado valores iguais, mas  '[xxx, abc, bcd, cde]' é diferente de " + result4606 + " <list.toString()>"
"Era esperado valores iguais, mas  4 é diferente de " + result4607 + " <list.size()>"
"Era esperado valores iguais, mas  '[abc, bcd, cde, xxx]' é diferente de " + result4608 + " <list.toString()>"
"Era esperado valores iguais, mas  'Optional.empty' é diferente de " + result4609 + " <first.toString()>"
"Era esperado verdadeiro, mas " + result4610 + " <first.isPresent()> é falso"
"Era esperado valores iguais, mas  'Optional[abc]' é diferente de " + result4611 + " <first.toString()>"
"Era esperado valores iguais, mas  'Optional.empty' é diferente de " + result4612 + " <last.toString()>"
"Era esperado verdadeiro, mas " + result4613 + " <last.isPresent()> é falso"
"Era esperado valores iguais, mas  'Optional[cde]' é diferente de " + result4614 + " <last.toString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4615 + " <propertyChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4616 + " <parentChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4617 + " <listChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4618 + " <listReplacements.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4619 + " <propertyChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4620 + " <parentChanges.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4621 + " <listChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4622 + " <listReplacements.size()>"
"Era esperado valores iguais, mas  'Name ADDITION to/from NodeList at position 0' é diferente de " + result4623 + " <listChanges.get(0)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4624 + " <propertyChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4625 + " <parentChanges.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4626 + " <listChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4627 + " <listReplacements.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4628 + " <propertyChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4629 + " <parentChanges.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4630 + " <listChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4631 + " <listReplacements.size()>"
"Era esperado valores iguais, mas  'Name ADDITION to/from NodeList at position 0' é diferente de " + result4632 + " <listChanges.get(0)>"
"Era esperado valores iguais, mas  'Name REMOVAL to/from NodeList at position 0' é diferente de " + result4633 + " <listChanges.get(1)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4634 + " <propertyChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4635 + " <parentChanges.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4636 + " <listChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4637 + " <listReplacements.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4638 + " <propertyChanges.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4639 + " <parentChanges.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4640 + " <listChanges.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4641 + " <listReplacements.size()>"
"Era esperado valores iguais, mas  'Name ADDITION to/from NodeList at position 0' é diferente de " + result4642 + " <listChanges.get(0)>"
"Era esperado valores iguais, mas  'Name replaced within NodeList at position 0' é diferente de " + result4643 + " <listReplacements.get(0)>"
"Era esperado valores iguais, mas  expected é diferente de " + result4644 + " <LexicalPreservingPrinter.print(cu)>"
"Era esperado verdadeiro, mas " + result4645 + " <iterator.hasPrevious()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4646 + " <iterator.hasNext()> é falso"
"Era esperado verdadeiro, mas " + result4647 + " <iterator.hasNext()> é falso"
"Era esperado verdadeiro, mas " + result4648 + " <iterator.hasNext()> é falso"
"Era esperado verdadeiro, mas " + result4649 + " <iterator.hasNext()> é falso"
"Era esperado verdadeiro, mas " + result4650 + " <iterator.hasNext()> é falso"
"Era esperado verdadeiro, mas " + result4651 + " <iterator.hasNext()> é falso"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado verdadeiro, mas " + result4652 + " <name.getParentNode().isPresent()> é falso"
"Era esperado objetos iguais, mas  decl é diferente de " + result4653 + " <name.getParentNode().get()>"
"Era esperado valores iguais, mas  fqn é diferente de " + result4654 + " <node.findAll(TypeDeclaration.class).stream().map(td -> (TypeDeclaration<?>) td).map(td -> td.getFullyQualifiedName().orElse('?')).collect(joining(','))>"
"Era esperado verdadeiro, mas " + result4655 + " <recordDeclaration.isRecordDeclaration()> é falso"
"Era esperado verdadeiro, mas " + result4656 + " <recordDeclaration.getImplementedTypes().isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result4657 + " <recordDeclaration.getTypeParameters().isEmpty()> é falso"
"Era esperado verdadeiro, mas " + result4658 + " <recordDeclaration.getFullyQualifiedName().isPresent()> é falso"
"Era esperado valores iguais, mas  'Point' é diferente de " + result4659 + " <recordDeclaration.getFullyQualifiedName().get()>"
"Era esperado verdadeiro, mas " + result4660 + " <recordDeclaration.isRecordDeclaration()> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result4661 + " <parameters.size()>"
"Era esperado valores iguais, mas  'x' é diferente de " + result4662 + " <parameter0.getNameAsString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result4663 + " <parameter0.getTypeAsString()>"
"Era esperado valores iguais, mas  'y' é diferente de " + result4664 + " <parameter1.getNameAsString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result4665 + " <parameter1.getTypeAsString()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4666 + " <recordDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4667 + " <recordDeclarations.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4668 + " <parameters.size()>"
"Era esperado valores iguais, mas  'c1' é diferente de " + result4669 + " <parameter0.getNameAsString()>"
"Era esperado valores iguais, mas  'T1' é diferente de " + result4670 + " <parameter0.getTypeAsString()>"
"Era esperado valores iguais, mas  'cn' é diferente de " + result4671 + " <parameter1.getNameAsString()>"
"Era esperado valores iguais, mas  'Tn' é diferente de " + result4672 + " <parameter1.getTypeAsString()>"
"Era esperado verdadeiro, mas " + result4673 + " <parameter1.isVarArgs()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result4674 + " <recordDeclarations.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4675 + " <parameters.size()>"
"Era esperado valores iguais, mas  'rank' é diferente de " + result4676 + " <parameter0.getNameAsString()>"
"Era esperado valores iguais, mas  'Rank' é diferente de " + result4677 + " <parameter0.getTypeAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4678 + " <parameter0.getAnnotations().size()>"
"Era esperado valores iguais, mas  'suit' é diferente de " + result4679 + " <parameter1.getNameAsString()>"
"Era esperado valores iguais, mas  'Suit' é diferente de " + result4680 + " <parameter1.getTypeAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4681 + " <parameter1.getAnnotations().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4682 + " <recordDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4683 + " <recordDeclaration.getMembers().size()>"
"Era esperado valores iguais, mas  'T' é diferente de " + result4684 + " <recordDeclaration.getTypeParameters().get(0).getNameAsString()>"
"Era esperado verdadeiro, mas " + result4685 + " <parameters.get(0).isFinal()> é falso"
"Era esperado verdadeiro, mas " + result4686 + " <parameters.get(1).isFinal()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result4687 + " <recordDeclarations.size()>"
"Era esperado verdadeiro, mas " + result4688 + " <member.isClassOrInterfaceDeclaration()> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result4689 + " <recordDeclarations.size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4690 + " <objectCreationExprs.size()>"
"Era esperado valores iguais, mas  'Point' é diferente de " + result4691 + " <objectCreationExpr.getTypeAsString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4692 + " <recordDeclarations.size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4693 + " <recordDeclarations.size()>"
"Era esperado valores iguais, mas  'TT tt = new String @TypeAnno @TA2 TT(\'S\');' é diferente de " + result4694 + " <statement.toString()>"
"Era esperado valores iguais, mas  'Source.Inner.this' é diferente de " + result4695 + " <method.getReceiverParameter().get().getNameAsString()>"
"Era esperado valores iguais, mas  'this' é diferente de " + result4696 + " <method.getReceiverParameter().get().getNameAsString()>"
"Era esperado valores iguais, mas " + result4697 + " <method1.getSignature()> é diferente de " + result4698 + " <method2.getSignature()>"
"Era esperado valores iguais, mas " + result4699 + " <method1.getSignature()> é diferente de " + result4700 + " <method2.getSignature()>"
"Era esperado valores iguais, mas " + result4701 + " <method1.getSignature()> é diferente de " + result4702 + " <method2.getSignature()>"
"Era esperado valores diferentes, mas " + result4703 + " <method1.getSignature()> é igual a " + result4704 + " <method2.getSignature()>"
"Era esperado valores diferentes, mas " + result4705 + " <method1.getSignature()> é igual a " + result4706 + " <method2.getSignature()>"
"Era esperado valores diferentes, mas " + result4707 + " <method1.getSignature()> é igual a " + result4708 + " <method2.getSignature()>"
"Era esperado valores iguais, mas  'x(int, String)' é diferente de " + result4709 + " <method1.getSignature().toString()>"
"Era esperado verdadeiro, mas " + result4710 + " <method1.isVariableArityMethod()> é falso"
"Era esperado verdadeiro, mas " + result4711 + " <method2.isVariableArityMethod()> é falso"
"Era esperado verdadeiro, mas " + result4712 + " <method1.isFixedArityMethod()> é falso"
"Era esperado verdadeiro, mas " + result4713 + " <method2.isFixedArityMethod()> é falso"
"Era esperado falso, mas " + result4714 + " <first.isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4715 + " <last.isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4716 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4717 + " <iterator.hasPrevious()> é verdadeiro "
"Era esperado falso, mas " + result4718 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4719 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4720 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4721 + " <iterator.hasPrevious()> é verdadeiro "
"Era esperado falso, mas " + result4722 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4723 + " <iterator.hasPrevious()> é verdadeiro "
"Era esperado falso, mas " + result4724 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4725 + " <iterator.hasNext()> é verdadeiro "
"Era esperado falso, mas " + result4726 + " <decl.getDefaultValue().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4727 + " <defaultValue.getParentNode().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4728 + " <parameter0.isVarArgs()> é verdadeiro "
"Era esperado falso, mas " + result4729 + " <recordDeclaration.hasModifier(Modifier.Keyword.FINAL)> é verdadeiro "
"Era esperado falso, mas " + result4730 + " <recordDeclaration.hasModifier(Modifier.Keyword.FINAL)> é verdadeiro "
"Era esperado falso, mas " + result4731 + " <recordDeclaration.getTypeParameters().isEmpty()> é verdadeiro "
"Era esperado falso, mas " + result4732 + " <recordDeclaration.hasModifier(Modifier.Keyword.STATIC)> é verdadeiro "
"Era esperado falso, mas " + result4733 + " <recordDeclaration.hasModifier(Modifier.Keyword.STATIC)> é verdadeiro "
"Era esperado falso, mas " + result4734 + " <method.getReceiverParameter().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4735 + " <y.isInnerClass()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4736 + " <y.isNestedType()> é falso"
"Era esperado falso, mas " + result4737 + " <y.isLocalClassDeclaration()> é verdadeiro "
"Era esperado falso, mas " + result4738 + " <y.isInnerClass()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4739 + " <y.isNestedType()> é falso"
"Era esperado falso, mas " + result4740 + " <y.isLocalClassDeclaration()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4741 + " <y.isInnerClass()> é falso"
"Era esperado verdadeiro, mas " + result4742 + " <y.isNestedType()> é falso"
"Era esperado falso, mas " + result4743 + " <y.isLocalClassDeclaration()> é verdadeiro "
"Era esperado falso, mas " + result4744 + " <y.isInnerClass()> é verdadeiro "
"Era esperado falso, mas " + result4745 + " <y.isNestedType()> é verdadeiro "
"Era esperado falso, mas " + result4746 + " <y.isLocalClassDeclaration()> é verdadeiro "
"Era esperado falso, mas " + result4747 + " <x.isInnerClass()> é verdadeiro "
"Era esperado falso, mas " + result4748 + " <x.isNestedType()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4749 + " <x.isLocalClassDeclaration()> é falso"
"Era esperado valores iguais, mas  var1 é diferente de " + result4750 + " <var1.getType().getParentNode().get()>"
"Era esperado valores iguais, mas  var2 é diferente de " + result4751 + " <var2.getType().getParentNode().get()>"
"Era esperado verdadeiro, mas " + result4752 + " <modifiers.contains(Modifier.publicModifier())> é falso"
"Era esperado verdadeiro, mas " + result4753 + " <modifiers.contains(Modifier.staticModifier())> é falso"
"Era esperado verdadeiro, mas " + result4754 + " <modifiers.contains(Modifier.finalModifier())> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result4755 + " <modifiers.size()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4756 + " <modifiers.size()>"
"Era esperado verdadeiro, mas " + result4757 + " <modifiers.contains(Modifier.privateModifier())> é falso"
"Era esperado verdadeiro, mas " + result4758 + " <modifiers.contains(Modifier.synchronizedModifier())> é falso"
"Era esperado valores iguais, mas  2 é diferente de " + result4759 + " <modifiers.size()>"
"Era esperado valores iguais, mas " + result4760 + " <String.format('public Cons() {%1$s' + '    super();%1$s' + '}', SYSTEM_EOL)> é diferente de " + result4761 + " <cons.toString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4762 + " <decl.getOrphanComments().size()>"
"Era esperado objetos iguais, mas  decl é diferente de " + result4763 + " <c.getParentNode().get()>"
"Era esperado verdadeiro, mas " + result4764 + " <decl.removeOrphanComment(c)> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result4765 + " <decl.getOrphanComments().size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4766 + " <aField.getOrphanComments().size()>"
"Era esperado verdadeiro, mas " + result4767 + " <c.getParentNode().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result4768 + " <decl.hasJavaDocComment()> é falso"
"Era esperado verdadeiro, mas " + result4769 + " <decl.hasJavaDocComment()> é falso"
"Era esperado verdadeiro, mas " + result4770 + " <comment.findCompilationUnit().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result4771 + " <comment.findCompilationUnit().isPresent()> é falso"
"Era esperado valores iguais, mas " + result4772 + " <String.format('class X {%1$s}%1$s', SYSTEM_EOL)> é diferente de " + result4773 + " <cu.toString()>"
"Era esperado valores iguais, mas  'obj instanceof final @A @DA String s' é diferente de " + result4774 + " <expr.toString()>"
"Era esperado valores iguais, mas  'obj' é diferente de " + result4775 + " <expr.getExpression().toString()>"
"Era esperado valores iguais, mas  'String' é diferente de " + result4776 + " <expr.getType().asString()>"
"Era esperado verdadeiro, mas " + result4777 + " <expr.getPattern().isPresent()> é falso"
"Era esperado valores iguais, mas  'String' é diferente de " + result4778 + " <patternExpr.getType().asString()>"
"Era esperado valores iguais, mas  's' é diferente de " + result4779 + " <patternExpr.getName().asString()>"
"Era esperado verdadeiro, mas " + result4780 + " <expr.getName().isPresent()> é falso"
"Era esperado valores iguais, mas  's' é diferente de " + result4781 + " <expr.getName().get().asString()>"
"Era esperado valores iguais, mas  'obj instanceof String s' é diferente de " + result4782 + " <expr.toString()>"
"Era esperado valores iguais, mas  'obj' é diferente de " + result4783 + " <expr.getExpression().toString()>"
"Era esperado valores iguais, mas " + result4784 + " <String.class.getSimpleName()> é diferente de " + result4785 + " <expr.getType().asString()>"
"Era esperado valores iguais, mas  'obj' é diferente de " + result4786 + " <expr.getExpression().toString()>"
"Era esperado valores iguais, mas  'String' é diferente de " + result4787 + " <expr.getType().asString()>"
"Era esperado verdadeiro, mas " + result4788 + " <expr.getPattern().isPresent()> é falso"
"Era esperado valores iguais, mas  'String' é diferente de " + result4789 + " <patternExpr.getType().asString()>"
"Era esperado valores iguais, mas  's' é diferente de " + result4790 + " <patternExpr.getName().asString()>"
"Era esperado verdadeiro, mas " + result4791 + " <patternExpr.isFinal()> é falso"
"Era esperado verdadeiro, mas " + result4792 + " <expr.getName().isPresent()> é falso"
"Era esperado valores iguais, mas  's' é diferente de " + result4793 + " <expr.getName().get().asString()>"
"Era esperado valores iguais, mas  'obj instanceof final String s' é diferente de " + result4794 + " <expr.toString()>"
"Era esperado valores iguais, mas  x é diferente de " + result4795 + " <e.asDouble()>"
"Era esperado valores iguais, mas  x é diferente de " + result4796 + " <e.asDouble()>"
"Era esperado valores iguais, mas  a é diferente de " + result4797 + " <e.asDouble()>"
"Era esperado valores iguais, mas  a é diferente de " + result4798 + " <e.asDouble()>"
"Era esperado valores iguais, mas  x é diferente de " + result4799 + " <e.asDouble()>"
"Era esperado valores iguais, mas  'a' é diferente de " + result4800 + " <c.getValue()>"
"Era esperado valores iguais, mas  '\\t' é diferente de " + result4801 + " <c.getValue()>"
"Era esperado valores iguais, mas  'Ω' é diferente de " + result4802 + " <c.getValue()>"
"Era esperado valores iguais, mas  '\\177' é diferente de " + result4803 + " <c.getValue()>"
"Era esperado valores iguais, mas  '\\u03a9' é diferente de " + result4804 + " <c.getValue()>"
"Era esperado valores iguais, mas  '\\'' é diferente de " + result4805 + " <c.getValue()>"
"Era esperado valores iguais, mas  BinaryExpr.Operator.PLUS é diferente de " + result4806 + " <AssignExpr.Operator.PLUS.toBinaryOperator().get()>"
"Era esperado valores iguais, mas  'new @Test N()' é diferente de " + result4807 + " <e.toString()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4808 + " <methodCallExpr.getChildNodes().size()>"
"Era esperado valores iguais, mas " + result4809 + " <empty()> é diferente de " + result4810 + " <lambdaExpr.getParentNode()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result4811 + " <className.asString()>"
"Era esperado valores iguais, mas  'a.B' é diferente de " + result4812 + " <className.asString()>"
"Era esperado não nulo, mas " + result4813 + " <new MethodReferenceExpr().getScope()> é nulo"
"Era esperado valores iguais, mas  'new empty[] {}' é diferente de " + result4814 + " <expr.toString()>"
"Era esperado valores iguais, mas  'new byte[] {}' é diferente de " + result4815 + " <expr.toString()>"
"Era esperado valores iguais, mas  'new int[] { 1, 2, 3 }' é diferente de " + result4816 + " <expr.toString()>"
"Era esperado valores iguais, mas  'empty' é diferente de " + result4817 + " <new SimpleName().getIdentifier()>"
"Era esperado valores iguais, mas  'xxx\\u2122xxx' é diferente de " + result4818 + " <name.asString()>"
"Era esperado valores iguais, mas  'c' é diferente de " + result4819 + " <name.getIdentifier()>"
"Era esperado valores iguais, mas  'a.b.c' é diferente de " + result4820 + " <name.asString()>"
"Era esperado valores iguais, mas  'import java.util.List;' + SYSTEM_EOL é diferente de " + result4821 + " <importDeclaration.toString()>"
"Era esperado valores iguais, mas  'import java.util.List;' é diferente de " + result4822 + " <ConcreteSyntaxModel.genericPrettyPrint(importDeclaration)>"
"Era esperado valores iguais, mas  'package p1.p2;' + SYSTEM_EOL + SYSTEM_EOL é diferente de " + result4823 + " <cu.toString()>"
"Era esperado valores iguais, mas  'package p1.p2;' + SYSTEM_EOL + SYSTEM_EOL é diferente de " + result4824 + " <ConcreteSyntaxModel.genericPrettyPrint(cu)>"
"Era esperado verdadeiro, mas " + result4825 + " <name.getQualifier().get().isInternal()> é falso"
"Era esperado verdadeiro, mas " + result4826 + " <name.getQualifier().get().getQualifier().get().isInternal()> é falso"
"Era esperado verdadeiro, mas " + result4827 + " <name.isTopLevel()> é falso"
"Era esperado valores iguais, mas  3 é diferente de " + result4828 + " <entry2labels.size()>"
"Era esperado valores iguais, mas  'MONDAY' é diferente de " + result4829 + " <entry2labels.get(0).toString()>"
"Era esperado valores iguais, mas  'FRIDAY' é diferente de " + result4830 + " <entry2labels.get(1).toString()>"
"Era esperado valores iguais, mas  'SUNDAY' é diferente de " + result4831 + " <entry2labels.get(2).toString()>"
"Era esperado valores iguais, mas  THROWS_STATEMENT é diferente de " + result4832 + " <switchExpr.getEntry(0).getType()>"
"Era esperado valores iguais, mas  EXPRESSION é diferente de " + result4833 + " <switchExpr.getEntry(0).getType()>"
"Era esperado valores iguais, mas  BLOCK é diferente de " + result4834 + " <switchExpr.getEntry(2).getType()>"
"Era esperado valores iguais, mas  BlockStmt.class é diferente de " + result4835 + " <switchExpr.getEntry(2).getStatements().get(0).getClass()>"
"Era esperado valores iguais, mas  'xxx\\u03a9xxx' é diferente de " + result4836 + " <omega.getValue()>"
"Era esperado verdadeiro, mas " + result4837 + " <expr.isThisExpr()> é falso"
"Era esperado valores iguais, mas  'c' é diferente de " + result4838 + " <fieldAccess.getName().asString()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result4839 + " <className.asString()>"
"Era esperado valores iguais, mas  'c' é diferente de " + result4840 + " <fieldAccess.getName().asString()>"
"Era esperado valores iguais, mas  'a.B' é diferente de " + result4841 + " <className.asString()>"
"Era esperado valores iguais, mas  'c' é diferente de " + result4842 + " <fieldAccess.getName().asString()>"
"Era esperado valores iguais, mas  startToken é diferente de " + result4843 + " <tokenRange.getBegin().asString()>"
"Era esperado valores iguais, mas  endToken é diferente de " + result4844 + " <tokenRange.getEnd().asString()>"
"Era esperado valores iguais, mas  'Optional[y]' é diferente de " + result4845 + " <lambdaExpr.getExpressionBody().toString()>"
"Era esperado valores iguais, mas  'Optional.empty' é diferente de " + result4846 + " <lambdaExpr.getExpressionBody().toString()>"
"Era esperado valores iguais, mas  'a - 5' é diferente de " + result4847 + " <expr.toString()>"
"Era esperado valores iguais, mas  '(a, b) - 5' é diferente de " + result4848 + " <expr.toString()>"
"Era esperado valores iguais, mas  AssignExpr.Operator.PLUS é diferente de " + result4849 + " <BinaryExpr.Operator.PLUS.toAssignOperator().get()>"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  expected é diferente de " + " actual"
"Era esperado valores iguais, mas  '              html\n' + '                  body\n' + '                      pHello, world/p\n' + '                  /body\n' + '              /html\n' + '              ' é diferente de " + result4850 + " <textBlock.getValue()>"
"Era esperado valores iguais, mas " + result4851 + " <asList('<html>', '    <body>', '        <p>Hello, world</p>', '    </body>', '</html>', '')> é diferente de " + result4852 + " <textBlock.stripIndentOfLines().collect(toList())>"
"Era esperado valores iguais, mas  'html\n' + '    body\n' + '        pHello, world/p\n' + '    /body\n' + '/html\n' é diferente de " + result4853 + " <textBlock.stripIndent()>"
"Era esperado valores iguais, mas  'html\n' + '    body\n' + '        pHello, world/p\n' + '    /body\n' + '/html\n' é diferente de " + result4854 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  '              html\n' + '                  body\n' + '                      pHello, world/p\n' + '                  /body\n' + '              /html\n' é diferente de " + result4855 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  '      html\n' + '          body\n' + '              pHello, world/p\n' + '          /body\n' + '      /html\n' é diferente de " + result4856 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  'html\n' + '    body\n' + '        pHello, world/p\n' + '    /body\n' + '/html\n' é diferente de " + result4857 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  'String text = \'\'\'\n' + '    A text block inside a text block\n' + '\'\'\';\n' é diferente de " + result4858 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  'The quick brown fox  \n' + 'jumps over the lazy dog\n' é diferente de " + result4859 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  'Lorem ipsum dolor sit amet, consectetur adipiscing ' + 'elit, sed do eiusmod tempor incididunt ut labore ' + 'et dolore magna aliqua.' é diferente de " + result4860 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  'red   \n' + 'green \n' + 'blue  \n' é diferente de " + result4861 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  '\nHello\n' + 'World' é diferente de " + result4862 + " <textBlock.translateEscapes()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4863 + " <compilationUnit.getAllContainedComments().size()>"
"Era esperado valores iguais, mas  sourceRoot é diferente de " + " sourceRoot1"
"Era esperado valores iguais, mas  sourceRoot é diferente de " + " sourceRoot1"
"Era esperado valores iguais, mas  'PrimaryType' é diferente de " + result4864 + " <cu.getPrimaryTypeName().get()>"
"Era esperado valores iguais, mas  'PrimaryType' é diferente de " + result4865 + " <cu.getPrimaryType().get().getNameAsString()>"
"Era esperado falso, mas " + result4866 + " <c.getParentNode().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4867 + " <aClass.removeOrphanComment(c)> é verdadeiro "
"Era esperado falso, mas " + result4868 + " <decl.hasJavaDocComment()> é verdadeiro "
"Era esperado falso, mas " + result4869 + " <decl.hasJavaDocComment()> é verdadeiro "
"Era esperado falso, mas " + result4870 + " <decl.hasJavaDocComment()> é verdadeiro "
"Era esperado falso, mas " + result4871 + " <patternExpr.isFinal()> é verdadeiro "
"Era esperado falso, mas " + result4872 + " <expr.getPattern().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4873 + " <expr.getName().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4874 + " <name.isInternal()> é verdadeiro "
"Era esperado falso, mas " + result4875 + " <name.getQualifier().get().isTopLevel()> é verdadeiro "
"Era esperado falso, mas " + result4876 + " <name.getQualifier().get().getQualifier().get().isTopLevel()> é verdadeiro "
"Era esperado falso, mas " + result4877 + " <cu.getPrimaryTypeName().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4878 + " <cu.getPrimaryType().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  cu é diferente de " + result4879 + " <x.findCompilationUnit().get()>"
"Era esperado valores iguais, mas  'int x;' é diferente de " + result4880 + " <x.findAncestor(FieldDeclaration.class).get().toString()>"
"Era esperado valores iguais, mas " + result4881 + " <FieldDeclaration.class.getName()> é diferente de " + result4882 + " <vd.findAncestor(new Class[] { CompilationUnit.class, ClassOrInterfaceDeclaration.class, FieldDeclaration.class }).get().getClass().getName()>"
"Era esperado valores iguais, mas " + result4883 + " <ClassOrInterfaceDeclaration.class.getName()> é diferente de " + result4884 + " <vd.findAncestor(new Class[] { CompilationUnit.class, ClassOrInterfaceDeclaration.class }).get().getClass().getName()>"
"Era esperado falso, mas " + result4885 + " <x.findCompilationUnit().isPresent()> é verdadeiro "
"Era esperado valores iguais, mas  '1 + 111' é diferente de " + result4886 + " <b.toString()>"
"Era esperado valores iguais, mas  '11' é diferente de " + result4887 + " <b.toString()>"
"Era esperado valores iguais, mas  '[2, 3]' é diferente de " + result4888 + " <ints.toString()>"
"Era esperado valores iguais, mas  '[1, 2, 3]' é diferente de " + result4889 + " <ints.toString()>"
"Era esperado valores iguais, mas  '[1 + 2 + 3, 1 + 2, 1, 2, 3]' é diferente de " + result4890 + " <ints.toString()>"
"Era esperado valores iguais, mas  'Optional[2]' é diferente de " + result4891 + " <ints.toString()>"
"Era esperado valores iguais, mas  'Optional[1]' é diferente de " + result4892 + " <ints.toString()>"
"Era esperado valores iguais, mas  '[2, 3]' é diferente de " + result4893 + " <ints.toString()>"
"Era esperado valores iguais, mas  'int' é diferente de " + result4894 + " <typeAsString('int x')>"
"Era esperado valores iguais, mas  'ListLong' é diferente de " + result4895 + " <typeAsString('List<Long> x')>"
"Era esperado valores iguais, mas  'String' é diferente de " + result4896 + " <typeAsString('@A String x')>"
"Era esperado valores iguais, mas  'List? extends Object' é diferente de " + result4897 + " <typeAsString('List<? extends Object> x')>"
"Era esperado verdadeiro, mas " + result4898 + " <result.isSuccessful()> é falso"
"Era esperado valores iguais, mas  'Listlong' é diferente de " + result4899 + " <decl.getVariable(0).getType().asString()>"
"Era esperado verdadeiro, mas " + result4900 + " <type.isArrayType()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado valores iguais, mas  'TypeUtilsTestString.Tester' é diferente de " + result4901 + " <type.toString()>"
"Era esperado valores iguais, mas  '@C' + SYSTEM_EOL + 'int[][] a;' é diferente de " + result4902 + " <variableDeclarationStatement.toString()>"
"Era esperado valores iguais, mas  'Blob[][] a;' é diferente de " + result4903 + " <fieldDeclaration.toString()>"
"Era esperado valores iguais, mas  'Blob[][] a() {' + SYSTEM_EOL + '}' é diferente de " + result4904 + " <method.toString()>"
"Era esperado valores iguais, mas  ArrayType.Origin.NAME é diferente de " + result4905 + " <outerType.asArrayType().getOrigin()>"
"Era esperado valores iguais, mas  ArrayType.Origin.TYPE é diferente de " + result4906 + " <outerType.asArrayType().getComponentType().asArrayType().getOrigin()>"
"Era esperado valores iguais, mas  ArrayType.Origin.NAME é diferente de " + result4907 + " <outerType.asArrayType().getOrigin()>"
"Era esperado valores iguais, mas  ArrayType.Origin.TYPE é diferente de " + result4908 + " <outerType.asArrayType().getComponentType().asArrayType().getOrigin()>"
"Era esperado valores iguais, mas  'void a(Blob[][] a) {' + SYSTEM_EOL + '}' é diferente de " + result4909 + " <method.toString()>"
"Era esperado valores iguais, mas  'int[][]@X ... a' é diferente de " + result4910 + " <p.toString()>"
"Era esperado valores iguais, mas  'int[][]@X... a' é diferente de " + result4911 + " <ConcreteSyntaxModel.genericPrettyPrint(p)>"
"Era esperado valores iguais, mas  1 é diferente de " + result4912 + " <fd1.getVariable(0).getType().getArrayLevel()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4913 + " <fd2.getVariable(0).getType().getArrayLevel()>"
"Era esperado valores iguais, mas  8 é diferente de " + " type.getRange().get().end.column"
"Era esperado valores diferentes, mas  'A' é igual a " + result4914 + " <classOrInterfaceType.getName().toString()>"
"Era esperado valores iguais, mas  'A' é diferente de " + result4915 + " <classOrInterfaceType.getName().toString()>"
"Era esperado valores iguais, mas  'A.B' é diferente de " + result4916 + " <classB.getNameWithScope()>"
"Era esperado verdadeiro, mas " + result4917 + " <classB.getTypeArguments().isPresent()> é falso"
"Era esperado valores iguais, mas  1 é diferente de " + result4918 + " <classB.getTypeArguments().get().size()>"
"Era esperado valores iguais, mas  classA é diferente de " + result4919 + " <classB.getTypeArguments().get().get(0)>"
"Era esperado valores iguais, mas  'A.B' é diferente de " + result4920 + " <classB.getNameWithScope()>"
"Era esperado valores iguais, mas  'A.BA' é diferente de " + result4921 + " <classB.asString()>"
"Era esperado valores iguais, mas  1 é diferente de " + result4922 + " <classA.getAnnotations().size()>"
"Era esperado valores iguais, mas  annotationExpr é diferente de " + result4923 + " <classA.getAnnotation(0)>"
"Era esperado verdadeiro, mas " + result4924 + " <newClass.isPresent()> é falso"
"Era esperado objetos iguais, mas  classA é diferente de " + result4925 + " <newClass.get()>"
"Era esperado verdadeiro, mas " + result4926 + " <classA.isClassOrInterfaceType()> é falso"
"Era esperado valores iguais, mas  classA é diferente de " + result4927 + " <classA.asClassOrInterfaceType()>"
"Era esperado valores iguais, mas  classA é diferente de " + result4928 + " <classA.clone()>"
"Era esperado valores iguais, mas  JavaParserMetaModel.classOrInterfaceTypeMetaModel é diferente de " + result4929 + " <classA.getMetaModel()>"
"Era esperado valores iguais, mas  classA é diferente de " + " classOrInterfaceType"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4930 + " <parse.isSuccessful()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4931 + " <parse.isSuccessful()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4932 + " <parse.isSuccessful()> é falso"
"Era esperado verdadeiro, mas " + result4933 + " <superNode.isAncestorOf(subNode)> é falso"
"Era esperado verdadeiro, mas " + result4934 + " <subNode.isDescendantOf(superNode)> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4935 + " <parseA.isSuccessful()> é falso"
"Era esperado não nulo, mas  o valor obtido foi nulo"
"Era esperado verdadeiro, mas " + result4936 + " <parseB.isSuccessful()> é falso"
"Era esperado valores iguais, mas  'ABC!' é diferente de " + result4937 + " <clone.getData(ABC)>"
"Era esperado valores iguais, mas  'DEF!' é diferente de " + result4938 + " <clone.getData(DEF)>"
"Era esperado valores iguais, mas " + result4939 + " <Arrays.asList(''int a;' ADDITION in list at 1', ''int b;' ADDITION in list at 2', ''int c;' ADDITION in list at 3')> é diferente de " + " changes"
"Era esperado valores iguais, mas " + result4940 + " <Arrays.asList(''int a;' ADDITION in list at 0', ''int b;' ADDITION in list at 1', ''int c;' ADDITION in list at 2')> é diferente de " + " changes"
"Era esperado valores iguais, mas " + result4941 + " <Arrays.asList(''int a;' REMOVAL in list at 0', ''int b;' REMOVAL in list at 0', ''int c;' REMOVAL in list at 0')> é diferente de " + " changes"
"Era esperado valores iguais, mas " + result4942 + " <Arrays.asList(''int b;' REMOVAL in list at 1', ''int d;' ADDITION in list at 1')> é diferente de " + " changes"
"Era esperado valores iguais, mas " + result4943 + " <cd.getMembers().size()> é diferente de " + " 4"
"Era esperado valores iguais, mas " + result4944 + " <cd.getMembers().size()> é diferente de " + " 0"
"Era esperado valores iguais, mas " + result4945 + " <cd.getMembers().size()> é diferente de " + " 4"
"Era esperado valores iguais, mas " + result4946 + " <cd.getMembers().size()> é diferente de " + " 0"
"Era esperado valores iguais, mas  1 é diferente de " + result4947 + " <decl.getOrphanComments().size()>"
"Era esperado verdadeiro, mas " + result4948 + " <c.remove()> é falso"
"Era esperado valores iguais, mas  0 é diferente de " + result4949 + " <decl.getOrphanComments().size()>"
"Era esperado verdadeiro, mas " + result4950 + " <decl.getComment().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result4951 + " <c.remove()> é falso"
"Era esperado valores iguais, mas  ' xxx\\u2122xxx' é diferente de " + result4952 + " <comment.getContent()>"
"Era esperado verdadeiro, mas " + result4953 + " <block.toString().contains('TODO')> é falso"
"Era esperado valores iguais, mas  'a.b.c.X' é diferente de " + result4954 + " <i.getNameAsString()>"
"Era esperado valores iguais, mas  'a.b.c.D' é diferente de " + result4955 + " <i.getName().toString()>"
"Era esperado valores iguais, mas  'D' é diferente de " + result4956 + " <i.getName().getIdentifier()>"
"Era esperado valores iguais, mas  'a.b.c.X' é diferente de " + result4957 + " <i.getName().getQualifier().get().asString()>"
"Era esperado valores iguais, mas  'def' é diferente de " + result4958 + " <i.getName().getIdentifier()>"
"Era esperado valores iguais, mas  'a.b.c.X' é diferente de " + result4959 + " <i.getNameAsString()>"
"Era esperado valores iguais, mas " + result4960 + " <String.format('package z;%1$s' + '%1$s' + 'class Y {%1$s' + '}%1$s', SYSTEM_EOL)> é diferente de " + result4961 + " <cu.toString()>"
"Era esperado valores iguais, mas " + result4962 + " <String.format('package x;%1$s' + '%1$s' + 'class B {%1$s' + '%1$s' + '    int y;%1$s' + '}%1$s', SYSTEM_EOL)> é diferente de " + result4963 + " <cu.toString()>"
"Era esperado falso, mas " + result4964 + " <node.isAncestorOf(node)> é verdadeiro "
"Era esperado falso, mas " + result4965 + " <node.isDescendantOf(node)> é verdadeiro "
"Era esperado falso, mas " + result4966 + " <subNode.isAncestorOf(superNode)> é verdadeiro "
"Era esperado falso, mas " + result4967 + " <superNode.isDescendantOf(subNode)> é verdadeiro "
"Era esperado falso, mas " + result4968 + " <superNodeA.isAncestorOf(superNodeB)> é verdadeiro "
"Era esperado falso, mas " + result4969 + " <superNodeA.isDescendantOf(subNodeB)> é verdadeiro "
"Era esperado falso, mas " + result4970 + " <superNodeB.isAncestorOf(superNodeA)> é verdadeiro "
"Era esperado falso, mas " + result4971 + " <superNodeB.isDescendantOf(subNodeA)> é verdadeiro "
"Era esperado falso, mas " + result4972 + " <decl.getComment().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result4973 + " <c.remove()> é verdadeiro "
"Era esperado falso, mas " + result4974 + " <cu.getClassByName('A').get().getName().remove()> é verdadeiro "
"Era esperado verdadeiro, mas " + result4975 + " <cu.getClassByName('A').get().getMethodsByName('foo').get(0).getBody().get().remove()> é falso"
"Era esperado verdadeiro, mas " + result4976 + " <res.getProblems().isEmpty()> é falso"
"Era esperado valores iguais, mas " + result4977 + " <p1.hashCode()> é diferente de " + result4978 + " <p2.hashCode()>"
"Era esperado valores diferentes, mas " + result4979 + " <p1.hashCode()> é igual a " + result4980 + " <p2.hashCode()>"
"Era esperado valores iguais, mas  'List@C ? extends Object' é diferente de " + result4981 + " <type.toString()>"
"Era esperado valores iguais, mas  '(2 + 3) + (4 + 5) (2 + 3) (4 + 5) 2 + 3 4 + 5 2 3 4 5 ' é diferente de " + result4982 + " <result.toString()>"
"Era esperado valores iguais, mas  '(2 + 3) + (4 + 5) (2 + 3) 2 + 3 2 3 (4 + 5) 4 + 5 4 5 ' é diferente de " + result4983 + " <result.toString()>"
"Era esperado valores iguais, mas  '2 3 2 + 3 (2 + 3) 4 5 4 + 5 (4 + 5) (2 + 3) + (4 + 5) ' é diferente de " + result4984 + " <result.toString()>"
"Era esperado valores iguais, mas  'x = 1' é diferente de " + result4985 + " <visitor.next().toString()>"
"Era esperado valores iguais, mas  'int x = 1;' é diferente de " + result4986 + " <visitor.next().toString()>"
"Era esperado falso, mas " + result4987 + " <visitor.hasNext()> é verdadeiro "
"Era esperado valores iguais, mas  '(2 + 3) (4 + 5) ' é diferente de " + result4988 + " <result.toString()>"
"Era esperado valores iguais, mas " + result4989 + " <p1.hashCode()> é diferente de " + result4990 + " <p2.hashCode()>"
"Era esperado valores iguais, mas " + result4991 + " <p1.hashCode()> é diferente de " + result4992 + " <p2.hashCode()>"
"Era esperado valores iguais, mas  3 é diferente de " + result4993 + " <p1.getAllComments().size()>"
"Era esperado valores iguais, mas  2 é diferente de " + result4994 + " <p2.getAllComments().size()>"
"Era esperado valores diferentes, mas " + result4995 + " <p1.hashCode()> é igual a " + result4996 + " <p2.hashCode()>"
"Era esperado valores iguais, mas  0 é diferente de " + result4997 + " <NoCommentHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4998 + " <NoCommentHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas  0 é diferente de " + result4999 + " <NoCommentHashCodeVisitor.hashCode(node)>"
"Era esperado nulo, mas o valor obtido não é nulo"
"Era esperado objetos iguais, mas  argument é diferente de " + result5000 + " <argumentCaptor.getValue()>"
"Era esperado verdadeiro, mas " + result5001 + " <NoCommentEqualsVisitor.equals(p1, p2)> é falso"
"Era esperado verdadeiro, mas " + result5002 + " <NoCommentEqualsVisitor.equals(p1, p2)> é falso"
"Era esperado falso, mas " + result5003 + " <NoCommentEqualsVisitor.equals(p1, p2)> é verdadeiro "
"Era esperado valores iguais, mas  'extra c' é diferente de " + result5004 + " <list.get(0).getValue()>"
"Era esperado valores iguais, mas  'extra b' é diferente de " + result5005 + " <list.get(1).getValue()>"
"Era esperado valores iguais, mas  'extra a' é diferente de " + result5006 + " <list.get(2).getValue()>"
"Era esperado valores iguais, mas  'extra t' é diferente de " + result5007 + " <list.get(3).getValue()>"
"Era esperado valores iguais, mas  'x' é diferente de " + result5008 + " <list.get(4).getValue()>"
"Era esperado valores iguais, mas  'c' é diferente de " + result5009 + " <list.get(5).getValue()>"
"Era esperado valores iguais, mas  6 é diferente de " + result5010 + " <list.size()>"
"Era esperado valores iguais, mas  '2' é diferente de " + result5011 + " <result.toString()>"
"Era esperado valores iguais, mas  '1' é diferente de " + result5012 + " <result.toString()>"
"Era esperado nulo, mas o valor obtido não é nulo"
"Era esperado valores iguais, mas  'void x() {' + SYSTEM_EOL + '}' é diferente de " + result5013 + " <result.toString()>"
"Era esperado objetos iguais, mas  argument é diferente de " + result5014 + " <argumentCaptor.getValue()>"
"Era esperado objetos iguais, mas  argument é diferente de " + result5015 + " <argumentCaptor.getValue()>"
"Era esperado valores iguais, mas " + result5016 + " <oce.size()> é diferente de " + result5017 + " <foundObjs.get()>"
"Era esperado valores iguais, mas  2 é diferente de " + result5018 + " <oce.size()>"
"Era esperado valores iguais, mas " + result5019 + " <node.hashCode()> é diferente de " + result5020 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5021 + " <node.hashCode()> é diferente de " + result5022 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5023 + " <node.hashCode()> é diferente de " + result5024 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5025 + " <node.hashCode()> é diferente de " + result5026 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5027 + " <node.hashCode()> é diferente de " + result5028 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5029 + " <node.hashCode()> é diferente de " + result5030 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5031 + " <node.hashCode()> é diferente de " + result5032 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5033 + " <node.hashCode()> é diferente de " + result5034 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5035 + " <node.hashCode()> é diferente de " + result5036 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5037 + " <node.hashCode()> é diferente de " + result5038 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5039 + " <node.hashCode()> é diferente de " + result5040 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5041 + " <node.hashCode()> é diferente de " + result5042 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5043 + " <node.hashCode()> é diferente de " + result5044 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5045 + " <node.hashCode()> é diferente de " + result5046 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5047 + " <node.hashCode()> é diferente de " + result5048 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5049 + " <node.hashCode()> é diferente de " + result5050 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5051 + " <node.hashCode()> é diferente de " + result5052 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5053 + " <node.hashCode()> é diferente de " + result5054 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5055 + " <node.hashCode()> é diferente de " + result5056 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5057 + " <node.hashCode()> é diferente de " + result5058 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5059 + " <node.hashCode()> é diferente de " + result5060 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5061 + " <node.hashCode()> é diferente de " + result5062 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5063 + " <node.hashCode()> é diferente de " + result5064 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5065 + " <node.hashCode()> é diferente de " + result5066 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5067 + " <node.hashCode()> é diferente de " + result5068 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5069 + " <node.hashCode()> é diferente de " + result5070 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5071 + " <node.hashCode()> é diferente de " + result5072 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5073 + " <node.hashCode()> é diferente de " + result5074 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5075 + " <node.hashCode()> é diferente de " + result5076 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5077 + " <node.hashCode()> é diferente de " + result5078 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5079 + " <node.hashCode()> é diferente de " + result5080 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5081 + " <node.hashCode()> é diferente de " + result5082 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5083 + " <node.hashCode()> é diferente de " + result5084 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5085 + " <node.hashCode()> é diferente de " + result5086 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5087 + " <node.hashCode()> é diferente de " + result5088 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5089 + " <node.hashCode()> é diferente de " + result5090 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5091 + " <node.hashCode()> é diferente de " + result5092 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5093 + " <node.hashCode()> é diferente de " + result5094 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5095 + " <node.hashCode()> é diferente de " + result5096 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5097 + " <node.hashCode()> é diferente de " + result5098 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5099 + " <node.hashCode()> é diferente de " + result5100 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5101 + " <node.hashCode()> é diferente de " + result5102 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5103 + " <node.hashCode()> é diferente de " + result5104 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5105 + " <node.hashCode()> é diferente de " + result5106 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5107 + " <node.hashCode()> é diferente de " + result5108 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5109 + " <node.hashCode()> é diferente de " + result5110 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5111 + " <node.hashCode()> é diferente de " + result5112 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5113 + " <node.hashCode()> é diferente de " + result5114 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5115 + " <node.hashCode()> é diferente de " + result5116 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5117 + " <node.hashCode()> é diferente de " + result5118 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5119 + " <node.hashCode()> é diferente de " + result5120 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5121 + " <node.hashCode()> é diferente de " + result5122 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5123 + " <node.hashCode()> é diferente de " + result5124 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5125 + " <node.hashCode()> é diferente de " + result5126 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5127 + " <node.hashCode()> é diferente de " + result5128 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5129 + " <node.hashCode()> é diferente de " + result5130 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5131 + " <node.hashCode()> é diferente de " + result5132 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5133 + " <node.hashCode()> é diferente de " + result5134 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5135 + " <node.hashCode()> é diferente de " + result5136 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5137 + " <node.hashCode()> é diferente de " + result5138 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5139 + " <node.hashCode()> é diferente de " + result5140 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5141 + " <node.hashCode()> é diferente de " + result5142 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5143 + " <node.hashCode()> é diferente de " + result5144 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5145 + " <node.hashCode()> é diferente de " + result5146 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5147 + " <node.hashCode()> é diferente de " + result5148 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5149 + " <node.hashCode()> é diferente de " + result5150 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5151 + " <node.hashCode()> é diferente de " + result5152 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5153 + " <node.hashCode()> é diferente de " + result5154 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5155 + " <node.hashCode()> é diferente de " + result5156 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5157 + " <node.hashCode()> é diferente de " + result5158 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5159 + " <node.hashCode()> é diferente de " + result5160 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5161 + " <node.hashCode()> é diferente de " + result5162 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5163 + " <node.hashCode()> é diferente de " + result5164 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5165 + " <node.hashCode()> é diferente de " + result5166 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5167 + " <node.hashCode()> é diferente de " + result5168 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5169 + " <node.hashCode()> é diferente de " + result5170 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5171 + " <node.hashCode()> é diferente de " + result5172 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5173 + " <node.hashCode()> é diferente de " + result5174 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5175 + " <node.hashCode()> é diferente de " + result5176 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5177 + " <node.hashCode()> é diferente de " + result5178 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5179 + " <node.hashCode()> é diferente de " + result5180 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5181 + " <node.hashCode()> é diferente de " + result5182 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5183 + " <node.hashCode()> é diferente de " + result5184 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5185 + " <node.hashCode()> é diferente de " + result5186 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5187 + " <node.hashCode()> é diferente de " + result5188 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5189 + " <node.hashCode()> é diferente de " + result5190 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5191 + " <node.hashCode()> é diferente de " + result5192 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5193 + " <node.hashCode()> é diferente de " + result5194 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5195 + " <node.hashCode()> é diferente de " + result5196 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5197 + " <node.hashCode()> é diferente de " + result5198 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5199 + " <node.hashCode()> é diferente de " + result5200 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5201 + " <node.hashCode()> é diferente de " + result5202 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5203 + " <node.hashCode()> é diferente de " + result5204 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5205 + " <node.hashCode()> é diferente de " + result5206 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5207 + " <node.hashCode()> é diferente de " + result5208 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5209 + " <node.hashCode()> é diferente de " + result5210 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas " + result5211 + " <node.hashCode()> é diferente de " + result5212 + " <ObjectIdentityHashCodeVisitor.hashCode(node)>"
"Era esperado valores iguais, mas  STATEMENT_GROUP é diferente de " + result5213 + " <switchStmt.getEntry(0).getType()>"
"Era esperado valores iguais, mas  STATEMENT_GROUP é diferente de " + result5214 + " <switchStmt.getEntry(1).getType()>"
"Era esperado valores iguais, mas  STATEMENT_GROUP é diferente de " + result5215 + " <switchStmt.getEntry(2).getType()>"
"Era esperado valores iguais, mas  new NodeList() é diferente de " + result5216 + " <switchStmt.getEntry(2).getLabels()>"
"Era esperado valores iguais, mas  EXPRESSION é diferente de " + result5217 + " <switchStmt.getEntry(0).getType()>"
"Era esperado valores iguais, mas  BinaryExpr.class é diferente de " + result5218 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  EnclosedExpr.class é diferente de " + result5219 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  EnclosedExpr.class é diferente de " + result5220 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5221 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5222 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5223 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5224 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5225 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5226 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5227 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5228 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  EnclosedExpr.class é diferente de " + result5229 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  ConditionalExpr.class é diferente de " + result5230 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  NameExpr.class é diferente de " + result5231 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5232 + " <statement.getExpression().getClass()>"
"Era esperado valores iguais, mas  MethodCallExpr.class é diferente de " + result5233 + " <statement.getExpression().getClass()>"
"Era esperado falso, mas " + result5234 + " <ifStmt.hasElseBlock()> é verdadeiro "
"Era esperado verdadeiro, mas " + result5235 + " <ifStmt.hasElseBranch()> é falso"
"Era esperado falso, mas " + result5236 + " <ifStmt.hasCascadingIfStmt()> é verdadeiro "
"Era esperado verdadeiro, mas " + result5237 + " <ifStmt.hasElseBlock()> é falso"
"Era esperado verdadeiro, mas " + result5238 + " <ifStmt.hasElseBranch()> é falso"
"Era esperado falso, mas " + result5239 + " <ifStmt.hasCascadingIfStmt()> é verdadeiro "
"Era esperado falso, mas " + result5240 + " <ifStmt.hasElseBlock()> é verdadeiro "
"Era esperado verdadeiro, mas " + result5241 + " <ifStmt.hasElseBranch()> é falso"
"Era esperado verdadeiro, mas " + result5242 + " <ifStmt.hasCascadingIfStmt()> é falso"
"Era esperado valores iguais, mas " + result5243 + " <PrimitiveType.intType()> é diferente de " + result5244 + " <statement.getVariableDeclarator().getType()>"
"Era esperado valores iguais, mas  'i' é diferente de " + result5245 + " <statement.getVariableDeclarator().getName().getIdentifier()>"
"Era esperado verdadeiro, mas " + result5246 + " <statement.hasFinalVariable()> é falso"
"Era esperado valores iguais, mas  new ClassOrInterfaceType(null, 'Object') é diferente de " + result5247 + " <statement.getVariableDeclarator().getType()>"
"Era esperado valores iguais, mas  'o' é diferente de " + result5248 + " <statement.getVariableDeclarator().getName().getIdentifier()>"
"Era esperado valores iguais, mas  'hond' é diferente de " + result5249 + " <statement.getLabel().get().asString()>"
"Era esperado valores iguais, mas  'break;' é diferente de " + result5250 + " <statement.toString()>"
"Era esperado verdadeiro, mas " + result5251 + " <statement.getLabel().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result5252 + " <statement.getLabel().isPresent()> é falso"
"Era esperado valores iguais, mas  label é diferente de " + result5253 + " <statement.getLabel().get()>"
"Era esperado verdadeiro, mas " + result5254 + " <statement.getLabel().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result5255 + " <new BreakStmt().isBreakStmt()> é falso"
"Era esperado objetos iguais, mas  breakStatement é diferente de " + result5256 + " <breakStatement.asBreakStmt()>"
"Era esperado verdadeiro, mas " + result5257 + " <optBreak.isPresent()> é falso"
"Era esperado objetos iguais, mas  breakStatement é diferente de " + result5258 + " <optBreak.get()>"
"Era esperado objetos diferentes, mas  breakStatement é igual a " + " clonedStatement"
"Era esperado valores iguais, mas  breakStatement é diferente de " + " clonedStatement"
"Era esperado verdadeiro, mas " + result5259 + " <breakStatement.getLabel().isPresent()> é falso"
"Era esperado verdadeiro, mas " + result5260 + " <breakStatement.remove(label)> é falso"
"Era esperado verdadeiro, mas " + result5261 + " <breakStatement.getLabel().isPresent()> é falso"
"Era esperado objetos iguais, mas  originalLabel é diferente de " + result5262 + " <breakStatement.getLabel().get()>"
"Era esperado verdadeiro, mas " + result5263 + " <breakStatement.getLabel().isPresent()> é falso"
"Era esperado objetos iguais, mas  replacementLabel é diferente de " + result5264 + " <breakStatement.getLabel().get()>"
"Era esperado valores diferentes, mas  compilationUnit é igual a " + " null"
"Era esperado valores diferentes, mas  compilationUnit é igual a " + " value"
"Era esperado valores iguais, mas " + result5265 + " <src.trim()> é diferente de " + result5266 + " <resultNode.toString().trim()>"
"Era esperado que   VariableDeclarationExpr.class fosse uma instancia de " + result5267 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   VariableDeclarationExpr.class fosse uma instancia de " + result5268 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   VariableDeclarationExpr.class fosse uma instancia de " + result5269 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   NameExpr.class fosse uma instancia de " + result5270 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   NameExpr.class fosse uma instancia de " + result5271 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   NameExpr.class fosse uma instancia de " + result5272 + " <tryStmt.getResources().get(1)>, mas não é"
"Era esperado que   FieldAccessExpr.class fosse uma instancia de " + result5273 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   FieldAccessExpr.class fosse uma instancia de " + result5274 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   FieldAccessExpr.class fosse uma instancia de " + result5275 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   VariableDeclarationExpr.class fosse uma instancia de " + result5276 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado que   VariableDeclarationExpr.class fosse uma instancia de " + result5277 + " <tryStmt.getResources().get(0)>, mas não é"
"Era esperado valores iguais, mas  true é diferente de " + result5278 + " <blockStmt.getStatements().isEmpty()>"
"Era esperado valores iguais, mas  1 é diferente de " + result5279 + " <statementUnderTest.findAll(MethodReferenceExpr.class).size()>"
"Era esperado valores iguais, mas  1 é diferente de " + result5280 + " <statementUnderTest.findAll(MethodReferenceExpr.class).size()>"
"Era esperado valores iguais, mas  line é diferente de " + " node.getBegin().get().line"
"Era esperado valores iguais, mas  column é diferente de " + " node.getBegin().get().column"
"Era esperado valores iguais, mas  line é diferente de " + " node.getEnd().get().line"
"Era esperado valores iguais, mas  column é diferente de " + " node.getEnd().get().column"
"Era esperado valores iguais, mas  expected é diferente de " + result5281 + " <node.getNameAsString()>"
"Era esperado valores iguais, mas  expected é diferente de " + result5282 + " <node.getName().toString()>"
"Era esperado valores iguais, mas  expectedValue é diferente de " + result5283 + " <expr.getType().isUsingDiamondOperator()>"
"Era esperado não nulo, mas " + result5284 + " <assignExpr.getTarget()> é nulo"
"Era esperado valores iguais, mas  NameExpr.class é diferente de " + result5285 + " <assignExpr.getTarget().getClass()>"
"Era esperado valores iguais, mas " + result5286 + " <assignExpr.getTarget().asNameExpr().getNameAsString()> é diferente de " + " 'mString'"
"Era esperado valores iguais, mas  false é diferente de " + result5287 + " <compilationUnit.getComment().isPresent()>"
"Era esperado valores iguais, mas  false é diferente de " + result5288 + " <classUnderTest.getComment().isPresent()>"
"Era esperado valores iguais, mas  false é diferente de " + result5289 + " <fieldUnderTest.getComment().isPresent()>"
"Era esperado falso, mas " + result5290 + " <statement.hasFinalVariable()> é verdadeiro "
"Era esperado falso, mas " + result5291 + " <statement.getLabel().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result5292 + " <statement.getLabel().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result5293 + " <statement.getLabel().isPresent()> é verdadeiro "
"Era esperado falso, mas " + result5294 + " <breakStatement.getLabel().isPresent()> é verdadeiro "
"Era esperado verdadeiro, mas " + result5295 + " <position.equals(secondPosition)> é falso"
"Era esperado falso, mas " + result5296 + " <position.equals(secondPosition)> é verdadeiro "
"Era esperado falso, mas " + result5297 + " <secondPosition.isAfter(position)> é verdadeiro "
"Era esperado falso, mas " + result5298 + " <secondPosition.isBefore(position)> é verdadeiro "
"Era esperado verdadeiro, mas " + result5299 + " <range.equals(secondRange)> é falso"
"Era esperado verdadeiro, mas " + result5300 + " <range.contains(secondRange)> é falso"
"Era esperado valores iguais, mas  RETURN_VALUE é diferente de " + result5301 + " <castValue(RETURN_VALUE, returnType, valueType.asString())>"
"Era esperado valores iguais, mas " + result5302 + " <String.format('(%s) %s', returnType, RETURN_VALUE)> é diferente de " + result5303 + " <castValue(RETURN_VALUE, returnType, valueType.asString())>"
"Era esperado valores iguais, mas " + result5304 + " <expectedSourcesCus.size()> é diferente de " + result5305 + " <editedSourceCus.size()>"
