
Projeto: /home/vitor-otto/opensource/liquibase-4.19.1

Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-maven-plugin/src/test/java/org/liquibase/maven/plugins/AbstractLiquibaseMojoTest.java linha: 32 Método: assertTrue("The configuration pom could not be found, " + testPom.getAbsolutePath(), testPom.exists())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-maven-plugin/src/test/java/org/liquibase/maven/plugins/AbstractLiquibaseMojoTest.java linha: 37 Método: assertNotNull("There should be a configuration for the plugin in the pom", config)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-maven-plugin/src/test/java/org/liquibase/maven/plugins/AbstractLiquibaseMojoTest.java linha: 45 Método: assertEquals("The values do not match for property '" + key + "'", expectedValue, actualValue)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-maven-plugin/src/test/java/org/liquibase/maven/plugins/AbstractLiquibaseMojoTest.java linha: 55 Método: assertEquals("The values do not match for property '" + key + "'", expectedValue, actualValue)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 834 Método: assertEquals("element name", "customChange", node.getTagName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 835 Método: assertEquals("customChange attributes", attsMap("class", "liquibase.change.custom.ExampleCustomSqlChange"), attsMap(node))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 840 Método: assertEquals("params count", 3, params.getLength())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 842 Método: assertEquals("element name", "param", params.item(0).getNodeName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 843 Método: assertEquals("param[0] attributes", attsMap("name", "tableName", "value", "tab_name"), attsMap(params.item(0)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 847 Método: assertEquals("element name", "param", params.item(1).getNodeName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 848 Método: assertEquals("param[1] attributes", attsMap("name", "columnName", "value", "col_name"), attsMap(params.item(1)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 852 Método: assertEquals("element name", "param", params.item(2).getNodeName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 853 Método: assertEquals("param[2] attributes", attsMap("name", "newValue", "value", ""), attsMap(params.item(2)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 867 Método: assertEquals("element name", "customPrecondition", node.getTagName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 868 Método: assertEquals("customPrecondition attributes", attsMap("className", "liquibase.precondition.ExampleCustomPrecondition"), attsMap(node))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 873 Método: assertEquals("params count", 2, params.getLength())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 875 Método: assertEquals("element name", "param", params.item(0).getNodeName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 876 Método: assertEquals("param[0] attributes", attsMap("name", "name", "value", "test_1"), attsMap(params.item(0)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 880 Método: assertEquals("element name", "param", params.item(1).getNodeName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 881 Método: assertEquals("param[1] attributes", attsMap("name", "count", "value", "31"), attsMap(params.item(1)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 897 Método: assertEquals("element name", "changeSet", node.getTagName())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/serializer/core/xml/XMLChangeLogSerializerTest.java linha: 898 Método: assertEquals("changeSet Attributes", attsMap("id", "1", "author", "tms", "runAlways", "true", "runOnChange", "true", "logicalFilePath", "path/to/file.json", "contextFilter", "context", "dbms", "mssql", "objectQuotingStrategy", "LEGACY", "failOnError", "true", "labels", "label", "created", "created", "runInTransaction", "false"), attsMap(node))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/verify/AbstractVerifyTest.java linha: 73 Método: assertTrue(String.format("Unexpected difference in %s\nOriginal:\n[%s]\nNew state:\n[%s]\n", stateFile.getAbsolutePath(), existingContent, stateContentString), contentsAreEqual)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/verify/change/VerifyChangeClassesTest.java linha: 116 Método: assertFalse("Validation errors for " + changeMetaData.getName() + " on " + database.getShortName() + ": " + errors.toString(), errors.hasErrors())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/verify/change/VerifyChangeClassesTest.java linha: 135 Método: assertFalse("Change " + changeMetaData.getName() + " contains 'null' for " + database.getShortName() + ": " + sqlLine, sqlLine.contains(" null "))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/verify/change/VerifyChangeClassesTest.java linha: 187 Método: assertTrue("No errors even with " + changeMetaData.getName() + " with a null " + paramToRemove + " on " + database.getShortName(), change.validate(database).hasErrors())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/verify/change/VerifyChangeClassesTest.java linha: 263 Método: assertFalse("Validation errors for " + changeMetaData.getName() + " on " + database.getShortName() + ": " + errors.toString(), errors.hasErrors())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 34 Método: Assert.assertNull("This should be a valid string", codePointCheck)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 39 Método: assertEquals("The first character should be invalid", 0, codePointCheck.position)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 45 Método: assertEquals("The last character should be invalid", codePointCheck.position, builder.length() - 1)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 53 Método: assertEquals("The character in position " + pos + " should be invalid", codePointCheck.position, pos)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 64 Método: assertEquals("There should be no messages from Main.checkSetup", 0, messages.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 69 Método: assertEquals("There should be one message from Main.checkSetup", 1, messages.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 125 Método: assertTrue("Read context from liquibase.properties", ((cli.logFile != null) && ("target" + "/logfile_set_from_liquibase_properties.log").equals(cli.logFile)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 133 Método: assertTrue("We just want to survive until this point", true)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 198 Método: assertEquals("Option --driver was parsed correctly", "DRIVER", cli.driver)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 199 Método: assertEquals("Option --username was parsed correctly", "USERNAME", cli.username)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 200 Método: assertEquals("Option --password was parsed correctly", "PASSWORD", cli.password)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 201 Método: assertEquals("Option --url was parsed correctly", "URL", cli.url)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 202 Método: assertEquals("Option --changeLogFile was parsed correctly", "FILE", cli.changeLogFile)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 203 Método: assertEquals("Option --classpath was parsed correctly", "CLASSPATH;CLASSPATH2", cli.classpath)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 204 Método: assertEquals("Option --contexts was parsed correctly", "CONTEXT1,CONTEXT2", cli.contexts)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 205 Método: assertEquals("Option --promptForNonLocalDatabase was parsed correctly", Boolean.TRUE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 207 Método: assertEquals("Main command 'update' was parsed correctly", "update", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 208 Método: assertEquals("Option --changeExecListenerClass was parsed correctly", "MockChangeExecListener", cli.changeExecListenerClass)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 210 Método: assertEquals("Option --changeExecListenerPropertiesFile was parsed correctly", "PROPS", cli.changeExecListenerPropertiesFile)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 224 Método: assertEquals("Option --promptForNonLocalDatabase=false was parsed correctly", Boolean.FALSE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 226 Método: assertEquals("Main command 'update' was parsed correctly", "update", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 239 Método: assertEquals("Option --promptForNonLocalDatabase was parsed correctly", Boolean.FALSE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 241 Método: assertEquals("Main command 'migrate' was parsed correctly as 'update'", "update", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 254 Método: assertEquals("Option --promptForNonLocalDatabase=true was parsed correctly", Boolean.TRUE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 256 Método: assertEquals("Main command 'update' was parsed correctly", "update", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 282 Método: assertEquals("specifying an empty URL should return 1 error message.", 1, errMsgs.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 297 Método: assertEquals("the combination of --diffTypes=data and diffChangeLog must not be accepted.", 1, errMsgs.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 326 Método: assertEquals("Main command 'status' was not correctly parsed", "status", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 344 Método: assertEquals("Main command 'status' was not correctly parsed", "status", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 363 Método: assertEquals("Main command 'status' was not correctly parsed", "status", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 389 Método: assertEquals("Parsing example Windows classpath returns 2 entries", 2, classloaderURLs.length)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 390 Método: assertEquals("Windows path C:\\ is correctly parsed", "file:/c:/", classloaderURLs[0].toExternalForm())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 391 Método: assertEquals("Windows path C:\\windows\\ is correctly parsed", "file:/c:/windows/", classloaderURLs[1].toExternalForm())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 490 Método: assertEquals("Changelog parameter in properties file is recognized", "parameterValue", cli.changeLogParameters.get("some_changelog_parameter"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 501 Método: assertEquals("Correct default value for --promptForNonLocalDatabase", Boolean.TRUE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 505 Método: assertEquals("Correct default value for --promptForNonLocalDatabase", Boolean.FALSE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 509 Método: assertEquals("Correct default value for --promptForNonLocalDatabase", Boolean.FALSE, cli.promptForNonLocalDatabase)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 545 Método: assertEquals("Command " + cli.command, 1, cli.checkSetup().size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 634 Método: assertEquals("Command line option --driver is parsed correctly", "DRIVER", cli.driver)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 635 Método: assertEquals("Command line option --username is parsed correctly", "USERNAME", cli.username)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 636 Método: assertEquals("Command line option --password is parsed correctly", "PASSWORD", cli.password)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 637 Método: assertEquals("Command line option --url is parsed correctly", "URL", cli.url)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 638 Método: assertEquals("Command line option --changeLogFile is parsed correctly", "FILE", cli.changeLogFile)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 639 Método: assertEquals("Command line option --classpath is parsed correctly", "CLASSPATH;CLASSPATH2", cli.classpath)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 640 Método: assertEquals("Command line option --contexts is parsed correctly", "CONTEXT1,CONTEXT2", cli.contexts)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 641 Método: assertEquals("Command line option --databaseChangeLogTablespaceName is parsed correctly", "MYTABLES", cli.databaseChangeLogTablespaceName)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 642 Método: assertEquals("Main command 'tag' is parsed correctly", "tag", cli.command)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 643 Método: assertEquals("Command parameter 'TagHere' is parsed correctly", "TagHere", cli.commandParams.iterator().next())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 700 Método: assertEquals("Password containing an equal sign (=) is parsed correctly", argValue, tested.password)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 713 Método: assertEquals("Custom database change log table gets parsed correctly (as a property)", "PROPSCHANGELOG", main.databaseChangeLogTableName)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 715 Método: assertEquals("Custom database change log LOCK table gets parsed correctly (as a property)", "PROPSCHANGELOGLOCK", main.databaseChangeLogLockTableName)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 725 Método: assertEquals("Custom database change log table gets parsed correctly (as an option argument)", "OPTSCHANGELOG", main.databaseChangeLogTableName)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/commandline/MainTest.java linha: 727 Método: assertEquals("Custom database change log LOCK table gets parsed correctly (as an option argument)", "OPTSCHANGELOGLOCK", main.databaseChangeLogLockTableName)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/integration/servlet/LiquibaseServletListenerTest.java linha: 75 Método: assertFalse("connection.closed", pooled.isClosed())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/lockservice/LockServiceFactoryTest.java linha: 128 Método: Assert.assertEquals("NPE Errors", 0, npeErrors.get())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/lockservice/LockServiceFactoryTest.java linha: 129 Método: Assert.assertEquals("Errors", 0, errors.get())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/test/Assert.java linha: 12 Método: org.junit.Assert.assertEquals("Set size does not match: " + StringUtil.join(expected, ",") + " vs " + StringUtil.join(set, ","), expected.length, set.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/test/Assert.java linha: 14 Método: org.junit.Assert.assertTrue("Missing expected element " + string, set.contains(string))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/test/Assert.java linha: 17 Método: org.junit.Assert.assertTrue("Unexpected element in set: " + found, Arrays.asList(expected).contains(found))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/test/Assert.java linha: 22 Método: org.junit.Assert.assertEquals("Set size does not match", expected.length, array.length)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/test/Assert.java linha: 25 Método: org.junit.Assert.assertEquals("Difference in element " + i, expected[i], array[i])
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/test/Assert.java linha: 30 Método: org.junit.Assert.assertEquals("List size does not match", expected.length, list.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/AbstractSqlGeneratorTest.java linha: 42 Método: assertFalse("Unexpected true supports for " + database.getShortName(), isImpl)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/AbstractSqlGeneratorTest.java linha: 40 Método: assertTrue("Unexpected false supports for " + database.getShortName(), isImpl)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/AbstractSqlGeneratorTest.java linha: 54 Método: assertFalse("isValid failed against " + database, generatorUnderTest.validate(createSampleSqlStatement(), database, new MockSqlGeneratorChain()).hasErrors())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/AbstractSqlGeneratorTest.java linha: 52 Método: assertTrue("The validation should be failed for " + database, generatorUnderTest.validate(createSampleSqlStatement(), database, new MockSqlGeneratorChain()).hasErrors())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/CreateTableGeneratorTest.java linha: 633 Método: assertEquals("Error on " + database, "CREATE TABLE CATALOG_NAME.SCHEMA_NAME.TABLE_NAME (COLUMN1_NAME " + "bigint IDENTITY (1, 1) NOT NULL)", generatedSql[0].toSql())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/CreateTableGeneratorTest.java linha: 991 Método: assertEquals("Error with " + database, "CREATE TABLE SCHEMA_NAME.TABLE_NAME (COLUMN1_NAME BIGINT IDENTITY NULL)", generatedSql[0].toSql())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/CreateTableGeneratorTest.java linha: 1009 Método: assertEquals("Error with " + database, "CREATE TABLE [SCHEMA-NAME].[TABLE NAME] ([1ST_COLUMN_NAME] BIGINT IDENTITY NULL)", generatedSql[0].toSql())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/MarkChangeSetRanGeneratorTest.java linha: 38 Método: assertTrue(sqls[0].toSql(), sqls[0].toSql().contains("MARK_RAN"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/MarkChangeSetRanGeneratorTest.java linha: 53 Método: assertTrue(sqls[0].toSql(), sqls[0].toSql().contains("(childChangeLogContext1, childChangeLogContext2 AND childChangeLogContext3) AND " + "(includeContext1, includeContext2 AND includeContext3) AND " + "(rootContext1 OR (rootContext2) AND (rootContext3)) AND " + "(changeSetContext1 AND changeSetContext2)"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/InsertOrUpdateGeneratorPostgresTest.java linha: 60 Método: assertTrue("missing update statement", theSql.contains("UPDATE myschema.mytable SET col2 = 'value2' WHERE pk_col1 = 'value1'"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/InsertOrUpdateGeneratorPostgresTest.java linha: 61 Método: assertFalse("should not have had insert statement", theSql.contains("INSERT INTO myschema.mytable (pk_col1, col2) VALUES ('value1', 'value2');"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/InsertOrUpdateGeneratorOracleTest.java linha: 93 Método: assertFalse("should not have had insert statement", theSql.contains("INSERT INTO mycatalog.mytable (pk_col1, col2) VALUES ('value1', 'value2');"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/InsertOrUpdateGeneratorOracleTest.java linha: 94 Método: assertTrue("missing update statement", theSql.contains("UPDATE mycatalog.mytable"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/core/InsertOrUpdateGeneratorOracleTest.java linha: 98 Método: assertEquals("Wrong number of lines", 1, sqlLines.length)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/GeneratorLevelTest.java linha: 22 Método: assertEquals("Incorrect level/naming convention for " + className, SqlGenerator.PRIORITY_DATABASE, specializationlevel)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/sqlgenerator/GeneratorLevelTest.java linha: 20 Método: assertEquals("Incorrect level/naming convention for " + className, SqlGenerator.PRIORITY_DEFAULT, specializationlevel)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/diff/output/changelog/DiffToChangeLogTest.java linha: 26 Método: assertThat("Error checking " + type.getName(), orderedOutputTypes, contains(obj.getOrderedOutputTypes(type).toArray()))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/diff/output/changelog/DiffToChangeLogTest.java linha: 46 Método: assertThat("There should be some types", orderedOutputTypes, hasSize(greaterThan(5)))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/diff/output/changelog/DiffToChangeLogTest.java linha: 49 Método: assertThat("There should be some types", unexpectedOrderedOutputTypes, hasSize(7))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/diff/output/changelog/DiffToChangeLogTest.java linha: 51 Método: assertThat("There should be some types", missingOrderedOutputTypes, hasSize(6))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/diff/output/changelog/DiffToChangeLogTest.java linha: 53 Método: assertThat("There should be some types", changedOrderedOutputTypes, hasSize(6))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/change/ChangeFactoryTest.java linha: 33 Método: assertFalse("unsupported create sequence", SqlGeneratorFactory.getInstance().supports(statement, database10))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/change/ChangeFactoryTest.java linha: 34 Método: assertTrue("supported create sequence", SqlGeneratorFactory.getInstance().supports(statement, database11))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/change/AbstractSQLChangeTest.java linha: 67 Método: assertEquals("setSql should trim", "SOME SQL", sql.getSql())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/change/AbstractSQLChangeTest.java linha: 70 Método: assertNull("setSql should set empty strings to null", sql.getSql())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/DatabaseListTest.java linha: 17 Método: assertTrue("'all' should match any database", DatabaseList.definitionMatches("all", new MySQLDatabase(), false))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/DatabaseListTest.java linha: 18 Método: assertTrue("'all' should match any database, even when others are added", DatabaseList.definitionMatches("all, oracle", new MySQLDatabase(), false))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/DatabaseListTest.java linha: 20 Método: assertFalse("'none' should not match any database", DatabaseList.definitionMatches("none", new MySQLDatabase(), false))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/DatabaseListTest.java linha: 21 Método: assertFalse("'none' should not match any database, even when others are added", DatabaseList.definitionMatches("none, oracle", new OracleDatabase(), false))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/core/OracleDatabaseTest.java linha: 53 Método: assertEquals("table name without schema is correctly escaped as simply tableName", "tableName", database.escapeTableName(null, null, "tableName"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/core/OracleDatabaseTest.java linha: 68 Método: assertEquals("table name without schema but with catalog is correctly escaped as catalogName.tableName", "catalogName.tableName", database.escapeTableName("catalogName", "schemaName", "tableName"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/core/OracleDatabaseTest.java linha: 74 Método: assertTrue("Oracle Database is correctly reported as being able to do INITIALLY DEFERRED column constraints.", getDatabase().supportsInitiallyDeferrableColumns())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/core/OracleDatabaseTest.java linha: 80 Método: Assert.assertEquals("Oracle Database's 'give me the current timestamp' function is correctly reported.", "SYSTIMESTAMP", getDatabase().getCurrentDateTimeFunction())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/core/OracleDatabaseTest.java linha: 93 Método: assertEquals("The correct JDBC driver class name is reported if the URL is a Oracle JDBC URL", "oracle.jdbc.OracleDriver", database.getDefaultDriver("jdbc:oracle:thin:@localhost/XE"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-core/src/test/java/liquibase/database/core/OracleDatabaseTest.java linha: 95 Método: assertNull("No JDBC driver class is returned if the URL is NOT an Oracle Database JDBC URL.", database.getDefaultDriver("jdbc:db2://localhost;databaseName=liquibase"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 421 Método: assertNotNull("generated output change log must not be empty", outputResult)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 422 Método: assertTrue("generated output change log is at least 100 bytes long", outputResult.length() > 100)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 426 Método: assertTrue("create databasechangelog command not found in: \n" + outputResult, outputResult.contains("CREATE TABLE " + database.escapeTableName(database.getLiquibaseCatalogName(), database.getLiquibaseSchemaName(), database.getDatabaseChangeLogTableName())))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 427 Método: assertTrue("create databasechangeloglock command not found in: \n" + outputResult, outputResult.contains("CREATE TABLE " + database.escapeTableName(database.getLiquibaseCatalogName(), database.getLiquibaseSchemaName(), database.getDatabaseChangeLogLockTableName())))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 429 Método: assertTrue("generated output contains a correctly encoded Euro sign", outputResult.contains("€"))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 432 Método: assertEquals("no database objects were actually created during creation of the output changelog", 0, snapshot.get(Schema.class).iterator().next().getDatabaseObjects(Table.class).size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 627 Método: assertTrue("comapring a database with itself should return a result of 'DBs are equal'", diffResult.areEqual())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 698 Método: assertTrue("recreating the database from the generated change log should cause both 'before' and " + "'after' snapshots to be equal.", finalDiffResult.areEqual())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 725 Método: assertEquals("a database that was 'updated' to an empty snapshot should only have 2 tables left: " + "the database change log table and the lock table.", 2, emptyAgainSnapshot.get(Table.class).size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 728 Método: assertEquals("a database that was 'updated' to an empty snapshot should not contain any views.", 0, emptyAgainSnapshot.get(View.class).size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 809 Método: assertTrue("running the same change log two times against an alternative schema should produce " + "equal snapshots.", finalDiffResult.areEqual())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 863 Método: assertFalse("querying the changelog table on an empty target should return at least 1 un-run changeset", list.isEmpty())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 934 Método: assertTrue("Update to SQL preserves encoding", new RegexMatcher(writer.toString(), new String[] { "^.*INSERT.*VALUES.*àèìòùáéíóúÀÈÌÒÙÁÉÍÓÚâêîôûäëïöü.*?\\)", "çñ®", "^.*INSERT.*VALUES.*àèìòùáéíóúÀÈÌÒÙÁÉÍÓÚâêîôûäëïöü.*?\\)", "çñ®" }).allMatchedInSequentialOrder())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 1022 Método: assertNotNull("generated SQL may not be empty", outputResult)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 1023 Método: assertTrue("Expect at least 100 bytes of output in generated SQL", outputResult.length() > 100)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 1025 Método: assertTrue("create databasechangelog command not found in: \n" + outputResult, outputResult.contains(expected))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 1026 Método: assertTrue("create databasechangeloglock command not found in: \n" + outputResult, outputResult.contains(expected))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 1027 Método: assertFalse("the schema name '" + schemaName + "' should be ignored\n\n" + outputResult, outputResult.contains(schemaName + "."))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/AbstractIntegrationTest.java linha: 1041 Método: assertEquals("generating two change logs without any changes in between should result in an empty generated " + "differential changeset.", 0, changeSets.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 49 Método: assertNotNull("Null default value for " + table.getName() + "." + column.getName(), defaultValue)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 76 Método: assertTrue("Unexpected default type " + defaultValue.getClass().getName() + " for " + table.getName() + "." + column.getName(), defaultValue instanceof Number)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 72 Método: assertTrue("Unexpected default type " + defaultValue.getClass().getName() + " for " + table.getName() + "." + column.getName(), defaultValue instanceof DatabaseFunction)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 70 Método: assertTrue("Unexpected default type " + defaultValue.getClass().getName() + " for " + table.getName() + "." + column.getName(), defaultValue instanceof String)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 62 Método: assertTrue("Unexpected default type " + defaultValue.getClass().getName() + " for " + table.getName() + "." + column.getName(), defaultValue instanceof Date)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 123 Método: assertEquals("Wrong data type for " + table.getName() + "." + column.getName(), expectedType.toLowerCase(), foundType.toLowerCase())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/MssqlIntegrationTest.java linha: 166 Método: assertFalse("Parameter found in " + table.getName() + "." + column.getName(), foundTypeDefinition.contains("("))
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/mssql/AbstractMssqlIntegrationTest.java linha: 37 Método: assertNotNull("Must not allow using a defaultSchemaName that is different from the DB user's login schema.", caughtException)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/pgsql/PostgreSQLIntegrationTest.java linha: 165 Método: Assert.assertTrue("There should be a table named \"FIRST_TABLE\"", found)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/pgsql/PostgreSQLIntegrationTest.java linha: 200 Método: Assert.assertTrue("There should be a sequence column starting with function \"" + function + "\"", found)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/h2/H2IntegrationTest.java linha: 158 Método: Assert.assertEquals("Rollbacking for " + insertedValue, 2, queryResult.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/dbtest/h2/H2IntegrationTest.java linha: 188 Método: Assert.assertEquals("Rollbacking for " + insertedValue, 2, queryResult.size())
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/statementexecute/AbstractExecuteTest.java linha: 79 Método: assertNotNull("SqlStatement to test is NOT null.", statementUnderTest)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/statementexecute/AbstractExecuteTest.java linha: 107 Método: assertNotNull("Null SQL for " + database, sql)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/statementexecute/AbstractExecuteTest.java linha: 108 Método: assertEquals("Unexpected number of  SQL statements for " + database, expectedSql.length, sql.length)
Assert com mensagem: /home/vitor-otto/opensource/liquibase-4.19.1/liquibase-integration-tests/src/test/java/liquibase/statementexecute/AbstractExecuteTest.java linha: 116 Método: assertEquals("Incorrect SQL for " + database.getClass().getName(), convertedSql.toLowerCase().trim(), sql[index].toSql().toLowerCase())
Total asserts: 1461
Asserts sem descrição: 1302
Asserts com descrição: 159
Assertion Roulette: 1077
