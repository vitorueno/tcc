
Projeto: /home/vitor-otto/opensource/unirest-java-3.14.2

Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 163 Método: assertThrows(UnirestAssertion.class, () -> client.assertThat(POST, path).hadBody("I'm a big ol beat"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 181 Método: assertThrows(UnirestAssertion.class, () -> client.assertThat(POST, path).hadField("nope", "buddy"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/AssertTest.java linha: 182 Método: assertThrows(UnirestAssertion.class, () -> client.assertThat(POST, path).hadField("hey", "nope"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-mocks/src/test/java/kong/tests/Base.java linha: 59 Método: assertEquals(message, e.getMessage(), "Wrong Error Message")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java linha: 73 Método: JSONAssert.assertEquals("{\"text\":\"foo\",\"nmbr\":42,\"another\":{\"text\":\"bar\",\"nmbr\":666}}", json, true)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 134 Método: assertThrows(UnirestException.class, request::asEmpty)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 148 Método: assertThrows(UnirestException.class, request::asEmpty)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 226 Método: assertThrows(Exception.class, () -> Unirest.get(url).asEmptyAsync().get())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 230 Método: assertEquals(error, e.getMessage(), "Wrong Error Message")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 234 Método: assertThrows(Exception.class, () -> Unirest.get(url).asEmpty())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/CertificateTests.java linha: 238 Método: assertEquals(error, e.getMessage(), "Wrong Error Message")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/JsonPatchTest.java linha: 155 Método: JSONAssert.assertEquals(expected, patch, true)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/apache/ApacheInterceptorTest.java linha: 51 Método: assertThrows(ExecutionException.class, () -> Unirest.get(MockServer.GET).asStringAsync().get())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestObjectMapperTest.java linha: 47 Método: JSONAssert.assertEquals(expectStr, actualStr, true)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/HeaderTest.java linha: 269 Método: assertNotNull(header, "Authorization Header Missing")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestMonitor.java linha: 84 Método: assertEquals(spidey.length(), stat.total, "Wrong Expected Length")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/TestMonitor.java linha: 90 Método: assertEquals(spidey.length(), stat.total, "Wrong Expected Length")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 169 Método: assertFalse(headers.containsKey(s), "Should Have No Header " + s)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 181 Método: assertTrue(headers.containsKey(key), String.format("Expect header of '%s' but none was present", key))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 182 Método: assertTrue(headers.get(key).contains(value), "Expected Header Value Failed expected: " + value + " But Got: " + headers.get(key))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 187 Método: assertTrue(params.containsKey(key), String.format("Expect param of '%s' but none was present", key))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 188 Método: assertTrue(params.get(key).contains(value), "Expected Query or Form value: " + value)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 225 Método: assertNotNull(raw, "Authorization Header Missing")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 252 Método: assertTrue(contentType.endsWith(charset.toString()), "Expected Content Type With Charset: " + charset.toString())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 256 Método: Assertions.assertNotNull(jsonPatches, "Asserting JSONPatch but no patch object present")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 299 Método: assertEquals(1, h.size(), "Expected exactly 1 Content-Type header")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 313 Método: assertNotNull(c, "expected a cookie to be passed to the server but got none. Name: " + name)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/RequestCapture.java linha: 319 Método: assertNull(cookies.get(name), "Cookie should not have been passed but it was! ")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 116 Método: assertThrows(UnirestException.class, () -> Unirest.get(MockServer.HOST + "/{method}").routeParam("method222", "get").queryString("name", "Mark").asEmpty())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/PathParamTest.java linha: 126 Método: assertThrows(UnirestException.class, () -> Unirest.get(MockServer.HOST + "/{method}").queryString("name", "Mark").asEmpty())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/InterceptorTest.java linha: 87 Método: assertThrows(UnirestException.class, () -> Unirest.get(MockServer.GET).asEmpty())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/UniBodyPostingTest.java linha: 185 Método: assertThrows(UnirestConfigException.class, () -> Unirest.post(MockServer.POST).body(new Foo("die")))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BddTest.java linha: 73 Método: assertTrue(status, "Expected a async call but it never responded")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest-bdd-tests/src/test/java/BehaviorTests/BddTest.java linha: 81 Método: assertFalse(status, "Should have failed")
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 95 Método: assertThrows(UnirestConfigException.class, () -> config.socketTimeout(533))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 167 Método: assertThrows(UnirestException.class, Unirest::shutDown)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 200 Método: assertThrows(UnirestConfigException.class, () -> config.getAsyncClient())
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 274 Método: assertThrows(UnirestConfigException.class, () -> config.sslContext(context))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 285 Método: assertThrows(UnirestConfigException.class, () -> config.clientCertificateStore(store, "foo"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/ConfigTest.java linha: 288 Método: assertThrows(UnirestConfigException.class, () -> config.clientCertificateStore("/a/path/file.pk12", "foo"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 41 Método: assertThrows(NullPointerException.class, () -> obj.query((String) null))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 47 Método: assertThrows(IllegalArgumentException.class, () -> obj.query("foo"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 53 Método: assertThrows(JSONPointerException.class, () -> obj.query("/shwoop/dedoop"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 59 Método: assertThrows(JSONPointerException.class, () -> obj.query("/foo/5"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 65 Método: assertThrows(JSONPointerException.class, () -> obj.query("/foo/bar"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 72 Método: assertThrows(NullPointerException.class, () -> new JSONPointer((String) null))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONPointerTest.java linha: 172 Método: JSONAssert.assertEquals(s, obj.query(s2).toString(), true)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 79 Método: assertThrows(JSONException.class, () -> new JSONObject("foo"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 100 Método: assertEquals(33.5d, obj.getDouble("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 105 Método: assertEquals(33.5d, obj.optDouble("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 106 Método: assertEquals(66.6d, obj.optDouble("boo", 66.6d), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 107 Método: assertEquals(Double.NaN, obj.optDouble("boo"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 139 Método: assertEquals(33.5f, obj.getFloat("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 144 Método: assertEquals(33.5f, obj.optFloat("key"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 145 Método: assertEquals(66.6f, obj.optFloat("boo", 66.6f), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 146 Método: assertEquals(Float.NaN, obj.optFloat("boo"), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 384 Método: assertThrows(NullPointerException.class, () -> obj.put(null, "hi"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 406 Método: assertThrows(NullPointerException.class, () -> new JSONObject().accumulate(null, "hi"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 422 Método: assertThrows(NullPointerException.class, () -> new JSONObject().append(null, "hi"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 430 Método: assertThrows(JSONException.class, () -> obj.append("bar", 33))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 620 Método: assertThrows(JSONException.class, exRunnable)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONObjectTest.java linha: 626 Método: JSONAssert.assertEquals(subObj.toString(), value.toString(), true)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 67 Método: assertThrows(JSONException.class, () -> values.toJSONObject(names))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 151 Método: assertEquals(33.5d, obj.getDouble(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 155 Método: assertEquals(33.5d, obj.optDouble(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 156 Método: assertEquals(66.6d, obj.optDouble(1, 66.6d), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 157 Método: assertEquals(Double.NaN, obj.optDouble(5), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 166 Método: assertEquals(33.5f, obj.getFloat(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 170 Método: assertEquals(33.5f, obj.optFloat(0), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 171 Método: assertEquals(66.6f, obj.optFloat(5, 66.6f), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 172 Método: assertEquals(Float.NaN, obj.optFloat(5), 4)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 429 Método: assertEquals(6.4f, ((Double) array.get(3)).floatValue(), 2)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 454 Método: assertEquals(6.4f, ((Double) array.get(3)).floatValue(), 2)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 500 Método: assertThrows(JSONException.class, () -> new JSONArray(new Object()))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/json/JSONArrayTest.java linha: 546 Método: assertThrows(JSONException.class, exRunnable)
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/CompoundInterceptorTest.java linha: 105 Método: assertThrows(UnirestException.class, () -> compound.onFail(e, summary, config))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 107 Método: assertThrows(UnirestException.class, () -> getTestDate("date", "Leeeeeeeroy Jenkins!"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/unirest/src/test/java/kong/unirest/JsonObjectMapperTest.java linha: 175 Método: assertThrows(UnirestException.class, () -> getTestDate("calendar", "Leeeeeeeroy Jenkins!"))
Assert com mensagem: /home/vitor-otto/opensource/unirest-java-3.14.2/object-mapper-jackson/src/test/java/kong/unirest/jackson/JacksonObjectMapperTest.java linha: 73 Método: JSONAssert.assertEquals("{\"text\":\"foo\",\"nmbr\":42,\"another\":{\"text\":\"bar\",\"nmbr\":666,\"another\":null}}", json, true)
Total asserts: 1043
Asserts sem descrição: 964
Asserts com descrição: 79
Assertion Roulette: 680
