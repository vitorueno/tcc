
Projeto: /home/vitor-otto/opensource/jodd-5.3.0

Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorTest.java linha: 65 Método: assertFalse(vtor.hasViolations(), "method must return false when violations list is empty")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorTest.java linha: 68 Método: assertTrue(vtor.hasViolations(), "method must return true when add some violation")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorTest.java linha: 110 Método: assertTrue(new ArrayList<>(vtor.enabledProfiles).contains("testProfile"), "first element of enabled profiles must be testProfile when use testProfile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorTest.java linha: 133 Método: assertTrue(enabledProfileList.contains("testProfile1"), "first element must be equal to first added profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorTest.java linha: 134 Método: assertTrue(enabledProfileList.contains("testProfile2"), "second element must be equal to second added profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/EqualToFieldConstraintTest.java linha: 95 Método: assertThrows(VtorException.class, () -> EqualToFieldConstraint.validate(testVal, "someValue", "wrongField"))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/HasSubstringConstraintTest.java linha: 104 Método: assertTrue(hasSubstringConstraint.isValid(mockContext(), "value"), "result mast be true when validate low case string")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/HasSubstringConstraintTest.java linha: 105 Método: assertTrue(hasSubstringConstraint.isValid(mockContext(), "VALUE"), "result mast be true when validate upper case string")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/HasSubstringConstraintTest.java linha: 106 Método: assertFalse(hasSubstringConstraint.isValid(mockContext(), "FOO"), "result must be false when validate string without substring")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/LengthConstraintTest.java linha: 38 Método: assertTrue(LengthConstraint.validate(null, 1, 2), "result must be true when validate a null value")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 39 Método: assertEquals(0.0, rangeConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 40 Método: assertEquals(0.0, rangeConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 46 Método: assertEquals(1.1, rangeConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 47 Método: assertEquals(10.1, rangeConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 56 Método: assertEquals(1.1, rangeConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 57 Método: assertEquals(10.1, rangeConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 68 Método: assertEquals(1.1, rangeConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/RangeConstraintTest.java linha: 69 Método: assertEquals(10.1, rangeConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MinConstraintTest.java linha: 38 Método: assertEquals(0.0, minConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MinConstraintTest.java linha: 44 Método: assertEquals(10.0, minConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MinConstraintTest.java linha: 51 Método: assertEquals(10.0, minConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MinConstraintTest.java linha: 61 Método: assertEquals(10.0, minConstraint.getMin(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/EqualToDeclaredFieldConstraintTest.java linha: 93 Método: assertThrows(VtorException.class, () -> EqualToDeclaredFieldConstraint.validate(testVal, "someValue", "wrongField"))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MaxConstraintTest.java linha: 39 Método: assertEquals(0.0, maxConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MaxConstraintTest.java linha: 45 Método: assertEquals(0.1, maxConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MaxConstraintTest.java linha: 52 Método: assertEquals(0.1, maxConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/constraint/MaxConstraintTest.java linha: 62 Método: assertEquals(0.1, maxConstraint.getMax(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ValidationContextTest.java linha: 50 Método: assertEquals(context.map.size(), 1, "context must return a map with one element when resolve an object which has one field with constraint annotations")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ValidationContextTest.java linha: 51 Método: assertNotNull(context.map.get("field1"), "context must return a map with key field1 when resolve an object which has field with name field1 and constraint annotations")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ValidationContextTest.java linha: 52 Método: assertNull(context.map.get("field2"), "context must not return a map with key field2 when resolve an object which has a field with name field2 without constraint annotations")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ValidationContextTest.java linha: 53 Método: assertEquals(context.map.get("field1").size(), 2, "context must return a map with two checks when resolve an object which has a field with two constraint annotations")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ValidationContextTest.java linha: 64 Método: assertThrows(VtorException.class, () -> context.addClassChecks(ClassForCheck1.class))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ViolationTest.java linha: 48 Método: assertEquals(validatedObject, violation.getValidatedObject(), "validatedObject must be equal to a validatedObject which was given to constructor")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/ViolationTest.java linha: 49 Método: assertEquals(invalidValue, violation.getInvalidValue(), "invalidValue must be equal to a invalidValue which was given to constructor")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 54 Método: assertFalse(vtor.matchProfiles(null), "result must be false when match null value")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 57 Método: assertFalse(vtor.matchProfiles(new String[] { "testProfile2", "testProfile3" }), "result must be false when match list of profiles without any assigned profiles")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 60 Método: assertTrue(vtor.matchProfiles(new String[] { "testProfile1", "testProfile2", "testProfile3" }), "result must be true when match list of profiles with one assigned profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 63 Método: assertTrue(vtor.matchProfiles(new String[] { "testProfile1", "testProfile2", "testProfile3" }), "result must be true when match list of profiles with one assigned profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 66 Método: assertTrue(vtor.matchProfiles(new String[] { "testProfile1", "testProfile2", "testProfile3" }), "result must be true when match list of profiles with one assigned profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 69 Método: assertTrue(vtor.matchProfiles(new String[] { "testProfile1", "testProfile2", "testProfile3" }), "result must be true when match list of profiles with one assigned profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 72 Método: assertTrue(vtor.matchProfiles(new String[] { "testProfile2", "testProfile1", "testProfile3" }), "result must be true when match unordered list of profiles with one assigned profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 75 Método: assertFalse(vtor.matchProfiles(new String[] { "+testProfile2", "testProfile1", "testProfile3" }), "result must be false when match a list of profiles with one wrong mandatory profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 78 Método: assertFalse(vtor.matchProfiles(new String[] { "testProfile2", "-testProfile1", "testProfile3" }), "result must be false when match a list of profiles with one assigned profile which was marked as optional")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 88 Método: assertTrue(vtor.matchProfiles(null), "result must be true when match null value")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 89 Método: assertTrue(vtor.matchProfiles(new String[] { "testProfile2", "", "testProfile3" }), "result must be true when match a list with empty profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-vtor/src/test/java/jodd/vtor/VtorMatchProfilesTest.java linha: 90 Método: assertFalse(vtor.matchProfiles(new String[] { "testProfile2", "testProfile3" }), "result must be false when match a list without empty profile")
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-proxetta/src/test/java/jodd/proxetta/ReturnTest.java linha: 76 Método: assertEquals(7.7, retro.method7(), 0.005)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-proxetta/src/test/java/jodd/proxetta/ReturnTest.java linha: 77 Método: assertEquals(8.8, retro.method8(), 0.005)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-proxetta/src/test/java/jodd/proxetta/ReturnTest.java linha: 107 Método: assertEquals(0, retro.method7(), 0.005)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-proxetta/src/test/java/jodd/proxetta/ReturnTest.java linha: 108 Método: assertEquals(0, retro.method8(), 0.005)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-proxetta/src/test/java/jodd/proxetta/advice/DelegateAdviceTest.java linha: 49 Método: assertEquals(calc.calculate(2.5d, 8.5d), newCalc.calculate(2.5d, 8.5d), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-proxetta/src/test/java/jodd/proxetta/advice/DelegateAdviceTest.java linha: 50 Método: assertEquals(calc.calculate(2.5f, 8.5f), newCalc.calculate(2.5f, 8.5f), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/cli/CliParamTest.java linha: 212 Método: assertThrows(CliException.class, () -> cli.accept("1"))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/cli/CliErrorsTest.java linha: 51 Método: assertThrows(CliException.class, () -> cli.accept("123", "-c"))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/cli/CliErrorsTest.java linha: 67 Método: assertThrows(CliException.class, () -> cli.accept("-x"))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastFloatBufferTest.java linha: 50 Método: assertArrayEquals(array((float) 173, (float) 8, (float) 98), buff.toArray(), 0.1f)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastFloatBufferTest.java linha: 54 Método: assertArrayEquals(array((float) 173, (float) 8, (float) 98, (float) 173, (float) 8, (float) 98), buff.toArray(), 0.1f)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastFloatBufferTest.java linha: 58 Método: assertArrayEquals(array((float) 173, (float) 8, (float) 98, (float) 173, (float) 8, (float) 98, (float) 5), buff.toArray(), 0.1f)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastFloatBufferTest.java linha: 138 Método: assertEquals(SIZE + 2, array[0], 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastDoubleBufferTest.java linha: 50 Método: assertArrayEquals(array((double) 173, (double) 8, (double) 98), buff.toArray(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastDoubleBufferTest.java linha: 54 Método: assertArrayEquals(array((double) 173, (double) 8, (double) 98, (double) 173, (double) 8, (double) 98), buff.toArray(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastDoubleBufferTest.java linha: 58 Método: assertArrayEquals(array((double) 173, (double) 8, (double) 98, (double) 173, (double) 8, (double) 98, (double) 5), buff.toArray(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/buffer/FastDoubleBufferTest.java linha: 139 Método: assertEquals(SIZE + 2, array[0], 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 45 Método: assertEquals(27, m.floatValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 46 Método: assertEquals(27, m.doubleValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 65 Método: assertEquals(27, m.floatValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 66 Método: assertEquals(27, m.doubleValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 85 Método: assertEquals(27, m.floatValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 86 Método: assertEquals(27, m.doubleValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 105 Método: assertEquals(27, m.floatValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 106 Método: assertEquals(27, m.doubleValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 125 Método: assertEquals(27, m.floatValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 126 Método: assertEquals(27, m.doubleValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 144 Método: assertEquals(27, m.floatValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/mutable/MutableTest.java linha: 145 Método: assertEquals(27, m.doubleValue(), 0.1)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/MultiComparatorTest.java linha: 46 Método: assertThrows(NullPointerException.class, () -> new MultiComparator<>(null).compare(new Object(), new Object()))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/MultiComparatorTest.java linha: 57 Método: assertThrows(NullPointerException.class, () -> new MultiComparator<>(comparators).compare(new Object(), new Object()))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 60 Método: assertThrows(NullPointerException.class, () -> {
    CollectionUtil.collectionOf(null);
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 104 Método: assertThrows(NoSuchElementException.class, () -> {
    actual.next();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 105 Método: assertThrows(UnsupportedOperationException.class, () -> {
    actual.remove();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 136 Método: assertThrows(NoSuchElementException.class, () -> {
    actual.next();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 154 Método: assertThrows(NoSuchElementException.class, () -> {
    actual.nextElement();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 177 Método: assertThrows(NoSuchElementException.class, () -> {
    actual.nextElement();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/CollectionUtilTest.java linha: 206 Método: assertThrows(IllegalStateException.class, () -> {
    actual.filter(p -> 1 == p);
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/NaturalOrderComparatorTest.java linha: 405 Método: assertTrue(c13 == 0, input)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/NaturalOrderComparatorTest.java linha: 402 Método: assertTrue(c13 < 0, input)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-core/src/test/java/jodd/util/NaturalOrderComparatorTest.java linha: 399 Método: assertTrue(c13 > 0, input)
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-petite/src/test/java/jodd/petite/resolver/ReferenceResolverTest.java linha: 118 Método: assertThrows(PetiteException.class, () -> referencesResolver.readAllReferencesFromAnnotation(methodOrCtor))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-petite/src/test/java/jodd/petite/resolver/ReferenceResolverTest.java linha: 257 Método: assertThrows(PetiteException.class, () -> {
    referencesResolver.resolveReferenceFromValues(methodOrCtor, "i1");
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-petite/src/test/java/jodd/petite/WiringModeTest.java linha: 64 Método: assertThrows(PetiteException.class, () -> pc.getBean("green"))
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-decora/src/test/java/jodd/decora/DecoraServletFilterInitTest.java linha: 75 Método: assertThrows(ServletException.class, () -> {
    decoraServletFilter.init(filterConfigMock);
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-decora/src/test/java/jodd/decora/DecoraServletFilterInitTest.java linha: 88 Método: assertThrows(ServletException.class, () -> {
    decoraServletFilter.init(filterConfigMock);
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-decora/src/test/java/jodd/decora/parser/PageRegionExtractorTest.java linha: 59 Método: assertThrows(DecoraException.class, () -> {
    pageRegionExtractor.end();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-decora/src/test/java/jodd/decora/parser/PageRegionExtractorTest.java linha: 84 Método: assertThrows(DecoraException.class, () -> {
    pageRegionExtractor.tag(tag);
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-decora/src/test/java/jodd/decora/parser/DecoratorTagVisitorTest.java linha: 50 Método: assertThrows(DecoraException.class, () -> {
    decoraTagVisitor.checkNestedDecoraTags();
})
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-db/src/test/java/jodd/db/DbUtilTest.java linha: 363 Método: assertEquals(java.sql.Date.class, targetType, "Can only convert to " + Date.class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-db/src/test/java/jodd/db/DbUtilTest.java linha: 379 Método: assertEquals(BigDecimal.class, targetType, "Can only convert to " + BigDecimal.class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-db/src/test/java/jodd/db/DbUtilTest.java linha: 394 Método: assertEquals(Time.class, targetType, "Can only convert to " + Time.class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-db/src/test/java/jodd/db/DbUtilTest.java linha: 409 Método: assertEquals(Timestamp.class, targetType, "Can only convert to " + Timestamp.class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-db/src/test/java/jodd/db/DbUtilTest.java linha: 424 Método: assertEquals(byte[].class, targetType, "Can only convert to " + byte[].class.getCanonicalName())
Assert com mensagem: /home/vitor-otto/opensource/jodd-5.3.0/jodd-db/src/test/java/jodd/db/oom/DbOomTest.java linha: 637 Método: assertEquals(1.0f, ((Float) result[4]).floatValue(), 0.05)
Total asserts: 4483
Asserts sem descrição: 4382
Asserts com descrição: 101
Assertion Roulette: 4101
