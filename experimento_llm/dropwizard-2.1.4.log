assertNotNull(factory.configureSslContextFactory(new SslContextFactory.Server()))
Assertions.assertEquals(ConstraintViolationException.class, throwable.getClass())
Assertions.assertEquals(Collections.singletonMap("color", "orange"), response)
Assertions.assertEquals(Collections.singletonMap("message", "stuff!"), response)
assertFalse(findEntityClassesFromDirectory.isEmpty())
assertEquals(4, findEntityClassesFromDirectory.size())
assertFalse(findEntityClassesFromDirectory.isEmpty())
assertEquals(8, findEntityClassesFromDirectory.size())
assertTimeout(Duration.ofSeconds(5L), () -> assertThat(event.getCreatedAt()).isEqualTo(Instant.ofEpochMilli(0)))
assertTimeout(Duration.ofSeconds(5L), () -> assertThat(task.getDuration()).isEqualTo(Duration.ofSeconds(0)))
assertTrue(requestContext.getSecurityContext().isSecure())
assertEquals(http.getAdminContextPath(), environment.getAdminContext().getContextPath())
assertEquals(http.getApplicationContextPath(), environment.getApplicationContext().getContextPath())
assertEquals(http.getAdminContextPath(), environment.getAdminContext().getContextPath())
assertEquals(http.getApplicationContextPath(), environment.getApplicationContext().getContextPath())
assertEquals(OK_STATUS_CODE, getResponseStatusForRequestMethod("GET", false))
assertEquals(OK_STATUS_CODE, getResponseStatusForRequestMethod("POST", true))
assertEquals(DISALLOWED_STATUS_CODE, getResponseStatusForRequestMethod("PUT", true))
assertEquals(DISALLOWED_STATUS_CODE, getResponseStatusForRequestMethod("DELETE", false))
assertEquals(DISALLOWED_STATUS_CODE, getResponseStatusForRequestMethod("TRACE", false))
assertSame(inv, test.getInvocable())
Assertions.assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), reponse.getStatus())
assertFalse(Optionals.fromGuavaOptional(com.google.common.base.Optional.absent()).isPresent())
assertTrue(Optionals.fromGuavaOptional(com.google.common.base.Optional.of("Foo")).isPresent())
assertEquals(java.util.Optional.of("Foo"), Optionals.fromGuavaOptional(com.google.common.base.Optional.of("Foo")))
assertFalse(Optionals.toGuavaOptional(java.util.Optional.empty()).isPresent())
assertTrue(Optionals.toGuavaOptional(java.util.Optional.of("Foo")).isPresent())
assertEquals(com.google.common.base.Optional.of("Foo"), Optionals.toGuavaOptional(java.util.Optional.of("Foo")))
