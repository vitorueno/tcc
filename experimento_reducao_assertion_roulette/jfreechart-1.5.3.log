Antes do refactor: 


Projeto: /home/vitor-otto/opensource/jfreechart-1.5.3

Total asserts: 9471
Asserts sem descrição: 8328
Asserts com descrição: 1143
Assertion Roulette: 7616

Após o refactor: 


Projeto: /home/vitor-otto/opensource/jfreechart-1.5.3

chamada antiga: assertNull(p1.getUnderlyingDataset())
nova chamada: assertNull(p1.getUnderlyingDataset(), "Era esperado nulo, mas " + result0 + " <p1.getUnderlyingDataset()> não é nulo")
chamada antiga: assertEquals(p1.getItemCount(), 0)
nova chamada: assertEquals(p1.getItemCount(), 0, "Era esperado valores iguais, mas " + result1 + " <p1.getItemCount()> é diferente de " + " 0")
chamada antiga: assertTrue(p1.getKeys().isEmpty())
nova chamada: assertTrue(p1.getKeys().isEmpty(), "Era esperado verdadeiro, mas " + result2 + " <p1.getKeys().isEmpty()> é falso")
chamada antiga: assertNull(p1.getValue("R1"))
nova chamada: assertNull(p1.getValue("R1"), "Era esperado nulo, mas " + result3 + " <p1.getValue('R1')> não é nulo")
chamada antiga: assertEquals(d1.getValue("C1"), 1.1)
nova chamada: assertEquals(d1.getValue("C1"), 1.1, "Era esperado valores iguais, mas " + result4 + " <d1.getValue('C1')> é diferente de " + " 1.1")
chamada antiga: assertEquals(d1.getValue("C2"), 2.2)
nova chamada: assertEquals(d1.getValue("C2"), 2.2, "Era esperado valores iguais, mas " + result5 + " <d1.getValue('C2')> é diferente de " + " 2.2")
chamada antiga: assertEquals(d1.getKey(0), "C1")
nova chamada: assertEquals(d1.getKey(0), "C1", "Era esperado valores iguais, mas " + result6 + " <d1.getKey(0)> é diferente de " + " 'C1'")
chamada antiga: assertEquals(d1.getKey(1), "C2")
nova chamada: assertEquals(d1.getKey(1), "C2", "Era esperado valores iguais, mas " + result7 + " <d1.getKey(1)> é diferente de " + " 'C2'")
chamada antiga: assertEquals(0, d1.getIndex("C1"))
nova chamada: assertEquals(0, d1.getIndex("C1"), "Era esperado valores iguais, mas  0 é diferente de " + result8 + " <d1.getIndex('C1')>")
chamada antiga: assertEquals(1, d1.getIndex("C2"))
nova chamada: assertEquals(1, d1.getIndex("C2"), "Era esperado valores iguais, mas  1 é diferente de " + result9 + " <d1.getIndex('C2')>")
chamada antiga: assertEquals(-1, d1.getIndex("XX"))
nova chamada: assertEquals(-1, d1.getIndex("XX"), "Era esperado valores iguais, mas  -1 é diferente de " + result10 + " <d1.getIndex('XX')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result11 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1.getUnderlyingDataset(), d2.getUnderlyingDataset())
nova chamada: assertEquals(d1.getUnderlyingDataset(), d2.getUnderlyingDataset(), "Era esperado valores iguais, mas " + result12 + " <d1.getUnderlyingDataset()> é diferente de " + result13 + " <d2.getUnderlyingDataset()>")
chamada antiga: assertEquals(d1.getExtractType(), d2.getExtractType())
nova chamada: assertEquals(d1.getExtractType(), d2.getExtractType(), "Era esperado valores iguais, mas " + result14 + " <d1.getExtractType()> é diferente de " + result15 + " <d2.getExtractType()>")
chamada antiga: assertEquals(d1.getExtractIndex(), d2.getExtractIndex())
nova chamada: assertEquals(d1.getExtractIndex(), d2.getExtractIndex(), "Era esperado valores iguais, mas " + result16 + " <d1.getExtractIndex()> é diferente de " + result17 + " <d2.getExtractIndex()>")
chamada antiga: assertEquals(1.0, d.getValue("R1", "C1"))
nova chamada: assertEquals(1.0, d.getValue("R1", "C1"), "Era esperado valores iguais, mas  1.0 é diferente de " + result18 + " <d.getValue('R1', 'C1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3.0, d.getValue("R1", "C1"))
nova chamada: assertEquals(3.0, d.getValue("R1", "C1"), "Era esperado valores iguais, mas  3.0 é diferente de " + result19 + " <d.getValue('R1', 'C1')>")
chamada antiga: assertEquals(2.0, d.getValue("R2", "C1"))
nova chamada: assertEquals(2.0, d.getValue("R2", "C1"), "Era esperado valores iguais, mas  2.0 é diferente de " + result20 + " <d.getValue('R2', 'C1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 0)
nova chamada: assertTrue(d.getRowCount() == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 1)
nova chamada: assertTrue(d.getRowCount() == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 2)
nova chamada: assertTrue(d.getRowCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 2)
nova chamada: assertTrue(d.getRowCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 2)
nova chamada: assertTrue(d.getRowCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 0)
nova chamada: assertTrue(d.getColumnCount() == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 1)
nova chamada: assertTrue(d.getColumnCount() == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 2)
nova chamada: assertTrue(d.getColumnCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 2)
nova chamada: assertTrue(d.getColumnCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 2)
nova chamada: assertTrue(d.getColumnCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result21 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result22 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result23 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result24 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result25 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result26 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertNull(d1.getValue("R1", "C1"))
nova chamada: assertNull(d1.getValue("R1", "C1"), "Era esperado nulo, mas " + result27 + " <d1.getValue('R1', 'C1')> não é nulo")
chamada antiga: assertEquals(1.0, d1.getValue("R2", "C1"))
nova chamada: assertEquals(1.0, d1.getValue("R2", "C1"), "Era esperado valores iguais, mas  1.0 é diferente de " + result28 + " <d1.getValue('R2', 'C1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, d.getRowCount())
nova chamada: assertEquals(0, d.getRowCount(), "Era esperado valores iguais, mas  0 é diferente de " + result29 + " <d.getRowCount()>")
chamada antiga: assertEquals(0, d.getColumnCount())
nova chamada: assertEquals(0, d.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result30 + " <d.getColumnCount()>")
chamada antiga: assertEquals(2.0, d.getValue(0, 0))
nova chamada: assertEquals(2.0, d.getValue(0, 0), "Era esperado valores iguais, mas  2.0 é diferente de " + result31 + " <d.getValue(0, 0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result32 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result33 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result34 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result35 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d instanceof PublicCloneable)
nova chamada: assertTrue(d instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, d.getColumnCount())
nova chamada: assertEquals(2, d.getColumnCount(), "Era esperado valores iguais, mas  2 é diferente de " + result36 + " <d.getColumnCount()>")
chamada antiga: assertEquals(1, d.getColumnCount())
nova chamada: assertEquals(1, d.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result37 + " <d.getColumnCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, d.getRowCount())
nova chamada: assertEquals(2, d.getRowCount(), "Era esperado valores iguais, mas  2 é diferente de " + result38 + " <d.getRowCount()>")
chamada antiga: assertEquals(1, d.getRowCount())
nova chamada: assertEquals(1, d.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result39 + " <d.getRowCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0.1, d.getStartValue("Series 1", "Category 1"))
nova chamada: assertEquals(0.1, d.getStartValue("Series 1", "Category 1"), "Era esperado valores iguais, mas  0.1 é diferente de " + result40 + " <d.getStartValue('Series 1', 'Category 1')>")
chamada antiga: assertEquals(0.2, d.getStartValue("Series 1", "Category 2"))
nova chamada: assertEquals(0.2, d.getStartValue("Series 1", "Category 2"), "Era esperado valores iguais, mas  0.2 é diferente de " + result41 + " <d.getStartValue('Series 1', 'Category 2')>")
chamada antiga: assertEquals(0.3, d.getStartValue("Series 1", "Category 3"))
nova chamada: assertEquals(0.3, d.getStartValue("Series 1", "Category 3"), "Era esperado valores iguais, mas  0.3 é diferente de " + result42 + " <d.getStartValue('Series 1', 'Category 3')>")
chamada antiga: assertEquals(0.3, d.getStartValue("Series 2", "Category 1"))
nova chamada: assertEquals(0.3, d.getStartValue("Series 2", "Category 1"), "Era esperado valores iguais, mas  0.3 é diferente de " + result43 + " <d.getStartValue('Series 2', 'Category 1')>")
chamada antiga: assertEquals(0.4, d.getStartValue("Series 2", "Category 2"))
nova chamada: assertEquals(0.4, d.getStartValue("Series 2", "Category 2"), "Era esperado valores iguais, mas  0.4 é diferente de " + result44 + " <d.getStartValue('Series 2', 'Category 2')>")
chamada antiga: assertEquals(0.5, d.getStartValue("Series 2", "Category 3"))
nova chamada: assertEquals(0.5, d.getStartValue("Series 2", "Category 3"), "Era esperado valores iguais, mas  0.5 é diferente de " + result45 + " <d.getStartValue('Series 2', 'Category 3')>")
chamada antiga: assertEquals(0.5, d.getEndValue("Series 1", "Category 1"))
nova chamada: assertEquals(0.5, d.getEndValue("Series 1", "Category 1"), "Era esperado valores iguais, mas  0.5 é diferente de " + result46 + " <d.getEndValue('Series 1', 'Category 1')>")
chamada antiga: assertEquals(0.6, d.getEndValue("Series 1", "Category 2"))
nova chamada: assertEquals(0.6, d.getEndValue("Series 1", "Category 2"), "Era esperado valores iguais, mas  0.6 é diferente de " + result47 + " <d.getEndValue('Series 1', 'Category 2')>")
chamada antiga: assertEquals(0.7, d.getEndValue("Series 1", "Category 3"))
nova chamada: assertEquals(0.7, d.getEndValue("Series 1", "Category 3"), "Era esperado valores iguais, mas  0.7 é diferente de " + result48 + " <d.getEndValue('Series 1', 'Category 3')>")
chamada antiga: assertEquals(0.7, d.getEndValue("Series 2", "Category 1"))
nova chamada: assertEquals(0.7, d.getEndValue("Series 2", "Category 1"), "Era esperado valores iguais, mas  0.7 é diferente de " + result49 + " <d.getEndValue('Series 2', 'Category 1')>")
chamada antiga: assertEquals(0.8, d.getEndValue("Series 2", "Category 2"))
nova chamada: assertEquals(0.8, d.getEndValue("Series 2", "Category 2"), "Era esperado valores iguais, mas  0.8 é diferente de " + result50 + " <d.getEndValue('Series 2', 'Category 2')>")
chamada antiga: assertEquals(0.9, d.getEndValue("Series 2", "Category 3"))
nova chamada: assertEquals(0.9, d.getEndValue("Series 2", "Category 3"), "Era esperado valores iguais, mas  0.9 é diferente de " + result51 + " <d.getEndValue('Series 2', 'Category 3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, d.getRowCount())
nova chamada: assertEquals(2, d.getRowCount(), "Era esperado valores iguais, mas  2 é diferente de " + result52 + " <d.getRowCount()>")
chamada antiga: assertEquals(3, d.getColumnCount())
nova chamada: assertEquals(3, d.getColumnCount(), "Era esperado valores iguais, mas  3 é diferente de " + result53 + " <d.getColumnCount()>")
chamada antiga: assertTrue(dA.equals(dB))
nova chamada: assertTrue(dA.equals(dB), "Era esperado verdadeiro, mas " + result54 + " <dA.equals(dB)> é falso")
chamada antiga: assertTrue(dB.equals(dA))
nova chamada: assertTrue(dB.equals(dA), "Era esperado verdadeiro, mas " + result55 + " <dB.equals(dA)> é falso")
chamada antiga: assertTrue(empty1.equals(empty2))
nova chamada: assertTrue(empty1.equals(empty2), "Era esperado verdadeiro, mas " + result56 + " <empty1.equals(empty2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result57 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result58 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result59 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result60 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(99.9, d1.getStartValue("Series 1", "Category 2"))
nova chamada: assertEquals(99.9, d1.getStartValue("Series 1", "Category 2"), "Era esperado valores iguais, mas  99.9 é diferente de " + result61 + " <d1.getStartValue('Series 1', 'Category 2')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(99.9, d1.getEndValue("Series 1", "Category 2"))
nova chamada: assertEquals(99.9, d1.getEndValue("Series 1", "Category 2"), "Era esperado valores iguais, mas  99.9 é diferente de " + result62 + " <d1.getEndValue('Series 1', 'Category 2')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, empty.getSeriesCount())
nova chamada: assertEquals(0, empty.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result63 + " <empty.getSeriesCount()>")
chamada antiga: assertEquals(0, empty.getCategoryCount())
nova chamada: assertEquals(0, empty.getCategoryCount(), "Era esperado valores iguais, mas  0 é diferente de " + result64 + " <empty.getCategoryCount()>")
chamada antiga: assertEquals(-1, empty.getSeriesIndex("ABC"))
nova chamada: assertEquals(-1, empty.getSeriesIndex("ABC"), "Era esperado valores iguais, mas  -1 é diferente de " + result65 + " <empty.getSeriesIndex('ABC')>")
chamada antiga: assertEquals(-1, empty.getRowIndex("ABC"))
nova chamada: assertEquals(-1, empty.getRowIndex("ABC"), "Era esperado valores iguais, mas  -1 é diferente de " + result66 + " <empty.getRowIndex('ABC')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(-1, empty.getCategoryIndex("ABC"))
nova chamada: assertEquals(-1, empty.getCategoryIndex("ABC"), "Era esperado valores iguais, mas  -1 é diferente de " + result67 + " <empty.getCategoryIndex('ABC')>")
chamada antiga: assertEquals(-1, empty.getColumnIndex("ABC"))
nova chamada: assertEquals(-1, empty.getColumnIndex("ABC"), "Era esperado valores iguais, mas  -1 é diferente de " + result68 + " <empty.getColumnIndex('ABC')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, keys.size())
nova chamada: assertEquals(0, keys.size(), "Era esperado valores iguais, mas  0 é diferente de " + result69 + " <keys.size()>")
chamada antiga: assertEquals(0, keys.size())
nova chamada: assertEquals(0, keys.size(), "Era esperado valores iguais, mas  0 é diferente de " + result70 + " <keys.size()>")
chamada antiga: assertEquals(0, empty.getColumnCount())
nova chamada: assertEquals(0, empty.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result71 + " <empty.getColumnCount()>")
chamada antiga: assertEquals(0, empty.getColumnCount())
nova chamada: assertEquals(0, empty.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result72 + " <empty.getColumnCount()>")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result73 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result74 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result75 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result76 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result77 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result78 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result79 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result80 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result81 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result82 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result83 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result84 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(0, dataset.getColumnCount())
nova chamada: assertEquals(0, dataset.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result85 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(0, dataset.getColumnCount())
nova chamada: assertEquals(0, dataset.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result86 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(0, dataset.getColumnCount())
nova chamada: assertEquals(0, dataset.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result87 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(2, dataset.getColumnCount())
nova chamada: assertEquals(2, dataset.getColumnCount(), "Era esperado valores iguais, mas  2 é diferente de " + result88 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(2, dataset.getColumnCount())
nova chamada: assertEquals(2, dataset.getColumnCount(), "Era esperado valores iguais, mas  2 é diferente de " + result89 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(1, dataset.getColumnCount())
nova chamada: assertEquals(1, dataset.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result90 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(0, dataset.getColumnCount())
nova chamada: assertEquals(0, dataset.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result91 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(0, dataset.getRowCount())
nova chamada: assertEquals(0, dataset.getRowCount(), "Era esperado valores iguais, mas  0 é diferente de " + result92 + " <dataset.getRowCount()>")
chamada antiga: assertEquals(1, dataset.getRowCount())
nova chamada: assertEquals(1, dataset.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result93 + " <dataset.getRowCount()>")
chamada antiga: assertEquals(0, dataset.getRowCount())
nova chamada: assertEquals(0, dataset.getRowCount(), "Era esperado valores iguais, mas  0 é diferente de " + result94 + " <dataset.getRowCount()>")
chamada antiga: assertEquals(-1, dataset.getColumnIndex("C1"))
nova chamada: assertEquals(-1, dataset.getColumnIndex("C1"), "Era esperado valores iguais, mas  -1 é diferente de " + result95 + " <dataset.getColumnIndex('C1')>")
chamada antiga: assertEquals(0, dataset.getColumnIndex("C2"))
nova chamada: assertEquals(0, dataset.getColumnIndex("C2"), "Era esperado valores iguais, mas  0 é diferente de " + result96 + " <dataset.getColumnIndex('C2')>")
chamada antiga: assertEquals(1, dataset.getColumnIndex("C3"))
nova chamada: assertEquals(1, dataset.getColumnIndex("C3"), "Era esperado valores iguais, mas  1 é diferente de " + result97 + " <dataset.getColumnIndex('C3')>")
chamada antiga: assertEquals(-1, dataset.getColumnIndex("C4"))
nova chamada: assertEquals(-1, dataset.getColumnIndex("C4"), "Era esperado valores iguais, mas  -1 é diferente de " + result98 + " <dataset.getColumnIndex('C4')>")
chamada antiga: assertEquals(0, dataset.getRowIndex("R1"))
nova chamada: assertEquals(0, dataset.getRowIndex("R1"), "Era esperado valores iguais, mas  0 é diferente de " + result99 + " <dataset.getRowIndex('R1')>")
chamada antiga: assertEquals(1, dataset.getRowIndex("R2"))
nova chamada: assertEquals(1, dataset.getRowIndex("R2"), "Era esperado valores iguais, mas  1 é diferente de " + result100 + " <dataset.getRowIndex('R2')>")
chamada antiga: assertEquals(2, dataset.getRowIndex("R3"))
nova chamada: assertEquals(2, dataset.getRowIndex("R3"), "Era esperado valores iguais, mas  2 é diferente de " + result101 + " <dataset.getRowIndex('R3')>")
chamada antiga: assertEquals(3, dataset.getRowIndex("R4"))
nova chamada: assertEquals(3, dataset.getRowIndex("R4"), "Era esperado valores iguais, mas  3 é diferente de " + result102 + " <dataset.getRowIndex('R4')>")
chamada antiga: assertEquals(2.0, dataset.getValue("R1", "C2"))
nova chamada: assertEquals(2.0, dataset.getValue("R1", "C2"), "Era esperado valores iguais, mas  2.0 é diferente de " + result103 + " <dataset.getValue('R1', 'C2')>")
chamada antiga: assertEquals(3.0, dataset.getValue("R1", "C3"))
nova chamada: assertEquals(3.0, dataset.getValue("R1", "C3"), "Era esperado valores iguais, mas  3.0 é diferente de " + result104 + " <dataset.getValue('R1', 'C3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(keys.contains("C2"))
nova chamada: assertTrue(keys.contains("C2"), "Era esperado verdadeiro, mas " + result105 + " <keys.contains('C2')> é falso")
chamada antiga: assertTrue(keys.contains("C3"))
nova chamada: assertTrue(keys.contains("C3"), "Era esperado verdadeiro, mas " + result106 + " <keys.contains('C3')> é falso")
chamada antiga: assertEquals(2, keys.size())
nova chamada: assertEquals(2, keys.size(), "Era esperado valores iguais, mas  2 é diferente de " + result107 + " <keys.size()>")
chamada antiga: assertTrue(keys.contains("C4"))
nova chamada: assertTrue(keys.contains("C4"), "Era esperado verdadeiro, mas " + result108 + " <keys.contains('C4')> é falso")
chamada antiga: assertEquals(1, keys.size())
nova chamada: assertEquals(1, keys.size(), "Era esperado valores iguais, mas  1 é diferente de " + result109 + " <keys.size()>")
chamada antiga: assertTrue(ko1 != ko2)
nova chamada: assertTrue(ko1 != ko2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.getClass() == ko2.getClass())
nova chamada: assertTrue(ko1.getClass() == ko2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result110 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko1 != ko2)
nova chamada: assertTrue(ko1 != ko2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.getClass() == ko2.getClass())
nova chamada: assertTrue(ko1.getClass() == ko2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result111 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko2.getObject("K1") == obj1)
nova chamada: assertTrue(ko2.getObject("K1") == obj1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1 != ko2)
nova chamada: assertTrue(ko1 != ko2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.getClass() == ko2.getClass())
nova chamada: assertTrue(ko1.getClass() == ko2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result112 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko2.getObject("K1") != obj1)
nova chamada: assertTrue(ko2.getObject("K1") != obj1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(data.getKey(0), "A")
nova chamada: assertEquals(data.getKey(0), "A", "Era esperado valores iguais, mas " + result113 + " <data.getKey(0)> é diferente de " + " 'A'")
chamada antiga: assertEquals(data.getKey(1), "B")
nova chamada: assertEquals(data.getKey(1), "B", "Era esperado valores iguais, mas " + result114 + " <data.getKey(1)> é diferente de " + " 'B'")
chamada antiga: assertEquals(data.getKey(2), "C")
nova chamada: assertEquals(data.getKey(2), "C", "Era esperado valores iguais, mas " + result115 + " <data.getKey(2)> é diferente de " + " 'C'")
chamada antiga: assertEquals(data.getKey(3), "D")
nova chamada: assertEquals(data.getKey(3), "D", "Era esperado valores iguais, mas " + result116 + " <data.getKey(3)> é diferente de " + " 'D'")
chamada antiga: assertEquals(data.getObject("A"), 1.0)
nova chamada: assertEquals(data.getObject("A"), 1.0, "Era esperado valores iguais, mas " + result117 + " <data.getObject('A')> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getObject("B"), 2.0)
nova chamada: assertEquals(data.getObject("B"), 2.0, "Era esperado valores iguais, mas " + result118 + " <data.getObject('B')> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getObject("C"), 3.0)
nova chamada: assertEquals(data.getObject("C"), 3.0, "Era esperado valores iguais, mas " + result119 + " <data.getObject('C')> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getObject("D"), null)
nova chamada: assertEquals(data.getObject("D"), null, "Era esperado valores iguais, mas " + result120 + " <data.getObject('D')> é diferente de " + " null")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(data.getObject(0), 1.0)
nova chamada: assertEquals(data.getObject(0), 1.0, "Era esperado valores iguais, mas " + result121 + " <data.getObject(0)> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getObject(1), 2.0)
nova chamada: assertEquals(data.getObject(1), 2.0, "Era esperado valores iguais, mas " + result122 + " <data.getObject(1)> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getObject(2), 3.0)
nova chamada: assertEquals(data.getObject(2), 3.0, "Era esperado valores iguais, mas " + result123 + " <data.getObject(2)> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getObject(3), null)
nova chamada: assertEquals(data.getObject(3), null, "Era esperado valores iguais, mas " + result124 + " <data.getObject(3)> é diferente de " + " null")
chamada antiga: assertEquals(ko1, ko2)
nova chamada: assertEquals(ko1, ko2, "Era esperado valores iguais, mas  ko1 é diferente de " + " ko2")
chamada antiga: assertEquals("Object 1", ko1.getObject(0))
nova chamada: assertEquals("Object 1", ko1.getObject(0), "Era esperado valores iguais, mas  'Object 1' é diferente de " + result125 + " <ko1.getObject(0)>")
chamada antiga: assertNull(ko1.getObject(1))
nova chamada: assertNull(ko1.getObject(1), "Era esperado nulo, mas " + result126 + " <ko1.getObject(1)> não é nulo")
chamada antiga: assertEquals("Object 2", ko1.getObject(2))
nova chamada: assertEquals("Object 2", ko1.getObject(2), "Era esperado valores iguais, mas  'Object 2' é diferente de " + result127 + " <ko1.getObject(2)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("Key 1", ko1.getKey(0))
nova chamada: assertEquals("Key 1", ko1.getKey(0), "Era esperado valores iguais, mas  'Key 1' é diferente de " + result128 + " <ko1.getKey(0)>")
chamada antiga: assertEquals("Key 2", ko1.getKey(1))
nova chamada: assertEquals("Key 2", ko1.getKey(1), "Era esperado valores iguais, mas  'Key 2' é diferente de " + result129 + " <ko1.getKey(1)>")
chamada antiga: assertEquals("Key 3", ko1.getKey(2))
nova chamada: assertEquals("Key 3", ko1.getKey(2), "Era esperado valores iguais, mas  'Key 3' é diferente de " + result130 + " <ko1.getKey(2)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, ko1.getIndex("Key 1"))
nova chamada: assertEquals(0, ko1.getIndex("Key 1"), "Era esperado valores iguais, mas  0 é diferente de " + result131 + " <ko1.getIndex('Key 1')>")
chamada antiga: assertEquals(1, ko1.getIndex("Key 2"))
nova chamada: assertEquals(1, ko1.getIndex("Key 2"), "Era esperado valores iguais, mas  1 é diferente de " + result132 + " <ko1.getIndex('Key 2')>")
chamada antiga: assertEquals(2, ko1.getIndex("Key 3"))
nova chamada: assertEquals(2, ko1.getIndex("Key 3"), "Era esperado valores iguais, mas  2 é diferente de " + result133 + " <ko1.getIndex('Key 3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("Object 1", ko1.getObject("Key 1"))
nova chamada: assertEquals("Object 1", ko1.getObject("Key 1"), "Era esperado valores iguais, mas  'Object 1' é diferente de " + result134 + " <ko1.getObject('Key 1')>")
chamada antiga: assertEquals(null, ko1.getObject("Key 2"))
nova chamada: assertEquals(null, ko1.getObject("Key 2"), "Era esperado valores iguais, mas  null é diferente de " + result135 + " <ko1.getObject('Key 2')>")
chamada antiga: assertEquals("Object 2", ko1.getObject("Key 3"))
nova chamada: assertEquals("Object 2", ko1.getObject("Key 3"), "Era esperado valores iguais, mas  'Object 2' é diferente de " + result136 + " <ko1.getObject('Key 3')>")
chamada antiga: assertEquals("AAA", ko1.getObject("Key 2"))
nova chamada: assertEquals("AAA", ko1.getObject("Key 2"), "Era esperado valores iguais, mas  'AAA' é diferente de " + result137 + " <ko1.getObject('Key 2')>")
chamada antiga: assertEquals("BBB", ko1.getObject("Key 3"))
nova chamada: assertEquals("BBB", ko1.getObject("Key 3"), "Era esperado valores iguais, mas  'BBB' é diferente de " + result138 + " <ko1.getObject('Key 3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, ko1.getItemCount())
nova chamada: assertEquals(2, ko1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result139 + " <ko1.getItemCount()>")
chamada antiga: assertEquals(1, ko1.getIndex("Key 3"))
nova chamada: assertEquals(1, ko1.getIndex("Key 3"), "Era esperado valores iguais, mas  1 é diferente de " + result140 + " <ko1.getIndex('Key 3')>")
chamada antiga: assertEquals(1, ko1.getItemCount())
nova chamada: assertEquals(1, ko1.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result141 + " <ko1.getItemCount()>")
chamada antiga: assertEquals(0, ko1.getIndex("Key 3"))
nova chamada: assertEquals(0, ko1.getIndex("Key 3"), "Era esperado valores iguais, mas  0 é diferente de " + result142 + " <ko1.getIndex('Key 3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, ko1.getItemCount())
nova chamada: assertEquals(2, ko1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result143 + " <ko1.getItemCount()>")
chamada antiga: assertEquals(1, ko1.getIndex("Key 3"))
nova chamada: assertEquals(1, ko1.getIndex("Key 3"), "Era esperado valores iguais, mas  1 é diferente de " + result144 + " <ko1.getIndex('Key 3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(RangeType.FULL, RangeType.FULL)
nova chamada: assertEquals(RangeType.FULL, RangeType.FULL, "Era esperado valores iguais, mas  RangeType.FULL é diferente de " + " RangeType.FULL")
chamada antiga: assertEquals(RangeType.NEGATIVE, RangeType.NEGATIVE)
nova chamada: assertEquals(RangeType.NEGATIVE, RangeType.NEGATIVE, "Era esperado valores iguais, mas  RangeType.NEGATIVE é diferente de " + " RangeType.NEGATIVE")
chamada antiga: assertEquals(RangeType.POSITIVE, RangeType.POSITIVE)
nova chamada: assertEquals(RangeType.POSITIVE, RangeType.POSITIVE, "Era esperado valores iguais, mas  RangeType.POSITIVE é diferente de " + " RangeType.POSITIVE")
chamada antiga: assertFalse(RangeType.FULL.equals(RangeType.NEGATIVE))
nova chamada: assertFalse(RangeType.FULL.equals(RangeType.NEGATIVE), "Era esperado falso, mas " + result145 + " <RangeType.FULL.equals(RangeType.NEGATIVE)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.FULL.equals(RangeType.POSITIVE))
nova chamada: assertFalse(RangeType.FULL.equals(RangeType.POSITIVE), "Era esperado falso, mas " + result146 + " <RangeType.FULL.equals(RangeType.POSITIVE)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.FULL.equals(null))
nova chamada: assertFalse(RangeType.FULL.equals(null), "Era esperado falso, mas " + result147 + " <RangeType.FULL.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.NEGATIVE.equals(RangeType.FULL))
nova chamada: assertFalse(RangeType.NEGATIVE.equals(RangeType.FULL), "Era esperado falso, mas " + result148 + " <RangeType.NEGATIVE.equals(RangeType.FULL)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.NEGATIVE.equals(RangeType.POSITIVE))
nova chamada: assertFalse(RangeType.NEGATIVE.equals(RangeType.POSITIVE), "Era esperado falso, mas " + result149 + " <RangeType.NEGATIVE.equals(RangeType.POSITIVE)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.NEGATIVE.equals(null))
nova chamada: assertFalse(RangeType.NEGATIVE.equals(null), "Era esperado falso, mas " + result150 + " <RangeType.NEGATIVE.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.POSITIVE.equals(RangeType.NEGATIVE))
nova chamada: assertFalse(RangeType.POSITIVE.equals(RangeType.NEGATIVE), "Era esperado falso, mas " + result151 + " <RangeType.POSITIVE.equals(RangeType.NEGATIVE)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.POSITIVE.equals(RangeType.FULL))
nova chamada: assertFalse(RangeType.POSITIVE.equals(RangeType.FULL), "Era esperado falso, mas " + result152 + " <RangeType.POSITIVE.equals(RangeType.FULL)> é verdadeiro ")
chamada antiga: assertFalse(RangeType.POSITIVE.equals(null))
nova chamada: assertFalse(RangeType.POSITIVE.equals(null), "Era esperado falso, mas " + result153 + " <RangeType.POSITIVE.equals(null)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result154 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertSame(r1, r2)
nova chamada: assertSame(r1, r2, "Era esperado objetos iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(2, n.length)
nova chamada: assertEquals(2, n.length, "Era esperado valores iguais, mas  2 é diferente de " + " n.length")
chamada antiga: assertEquals(4, n[0].length)
nova chamada: assertEquals(4, n[0].length, "Era esperado valores iguais, mas  4 é diferente de " + " n[0].length")
chamada antiga: assertEquals(5, n[1].length)
nova chamada: assertEquals(5, n[1].length, "Era esperado valores iguais, mas  5 é diferente de " + " n[1].length")
chamada antiga: assertTrue(DataUtils.equal(null, null))
nova chamada: assertTrue(DataUtils.equal(null, null), "Era esperado verdadeiro, mas " + result155 + " <DataUtils.equal(null, null)> é falso")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result156 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result157 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result158 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result159 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result160 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result161 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result162 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result163 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result164 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result165 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result166 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result167 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result168 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result169 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result170 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result171 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result172 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result173 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result174 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result175 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertFalse(DataUtils.equal(a, b))
nova chamada: assertFalse(DataUtils.equal(a, b), "Era esperado falso, mas " + result176 + " <DataUtils.equal(a, b)> é verdadeiro ")
chamada antiga: assertTrue(DataUtils.equal(a, b))
nova chamada: assertTrue(DataUtils.equal(a, b), "Era esperado verdadeiro, mas " + result177 + " <DataUtils.equal(a, b)> é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result178 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result179 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result180 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result181 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result182 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result183 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals("Series 1", d.getSeriesKey(0))
nova chamada: assertEquals("Series 1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'Series 1' é diferente de " + result184 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals("Series 2", d.getSeriesKey(1))
nova chamada: assertEquals("Series 2", d.getSeriesKey(1), "Era esperado valores iguais, mas  'Series 2' é diferente de " + result185 + " <d.getSeriesKey(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, d.indexOf("Series 1"))
nova chamada: assertEquals(0, d.indexOf("Series 1"), "Era esperado valores iguais, mas  0 é diferente de " + result186 + " <d.indexOf('Series 1')>")
chamada antiga: assertEquals(1, d.indexOf("Series 2"))
nova chamada: assertEquals(1, d.indexOf("Series 2"), "Era esperado valores iguais, mas  1 é diferente de " + result187 + " <d.indexOf('Series 2')>")
chamada antiga: assertEquals(-1, d.indexOf("Green Eggs and Ham"))
nova chamada: assertEquals(-1, d.indexOf("Green Eggs and Ham"), "Era esperado valores iguais, mas  -1 é diferente de " + result188 + " <d.indexOf('Green Eggs and Ham')>")
chamada antiga: assertEquals(-1, d.indexOf(null))
nova chamada: assertEquals(-1, d.indexOf(null), "Era esperado valores iguais, mas  -1 é diferente de " + result189 + " <d.indexOf(null)>")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result190 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result191 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result192 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result193 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result194 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result195 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1 instanceof Cloneable)
nova chamada: assertFalse(i1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertEquals(1.0, item1.getX())
nova chamada: assertEquals(1.0, item1.getX(), "Era esperado valores iguais, mas  1.0 é diferente de " + result196 + " <item1.getX()>")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result197 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item2.equals(item1))
nova chamada: assertTrue(item2.equals(item1), "Era esperado verdadeiro, mas " + result198 + " <item2.equals(item1)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result199 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result200 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result201 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result202 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result203 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result204 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result205 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result206 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item1 != item2)
nova chamada: assertTrue(item1 != item2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.getClass() == item2.getClass())
nova chamada: assertTrue(item1.getClass() == item2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result207 + " <item1.equals(item2)> é falso")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result208 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v2.equals(v1))
nova chamada: assertTrue(v2.equals(v1), "Era esperado verdadeiro, mas " + result209 + " <v2.equals(v1)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result210 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result211 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result212 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result213 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result214 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result215 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result216 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result217 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result218 + " <v1.equals(v2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(v1 != v2)
nova chamada: assertTrue(v1 != v2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.getClass() == v2.getClass())
nova chamada: assertTrue(v1.getClass() == v2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result219 + " <v1.equals(v2)> é falso")
chamada antiga: assertEquals(v1, v2)
nova chamada: assertEquals(v1, v2, "Era esperado valores iguais, mas  v1 é diferente de " + " v2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result220 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result221 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result222 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result223 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result224 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result225 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result226 + " <s1.hashCode()> é diferente de " + result227 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result228 + " <s1.hashCode()> é diferente de " + result229 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result230 + " <s1.hashCode()> é diferente de " + result231 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result232 + " <s1.hashCode()> é diferente de " + result233 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result234 + " <s1.hashCode()> é diferente de " + result235 + " <s2.hashCode()>")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result236 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result237 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result238 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result239 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result240 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result241 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result242 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result243 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(1, s1.indexOf(2.0))
nova chamada: assertEquals(1, s1.indexOf(2.0), "Era esperado valores iguais, mas  1 é diferente de " + result244 + " <s1.indexOf(2.0)>")
chamada antiga: assertEquals(2, s1.indexOf(3.0))
nova chamada: assertEquals(2, s1.indexOf(3.0), "Era esperado valores iguais, mas  2 é diferente de " + result245 + " <s1.indexOf(3.0)>")
chamada antiga: assertEquals(-4, s1.indexOf(99.9))
nova chamada: assertEquals(-4, s1.indexOf(99.9), "Era esperado valores iguais, mas  -4 é diferente de " + result246 + " <s1.indexOf(99.9)>")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result247 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(1, s1.indexOf(3.0))
nova chamada: assertEquals(1, s1.indexOf(3.0), "Era esperado valores iguais, mas  1 é diferente de " + result248 + " <s1.indexOf(3.0)>")
chamada antiga: assertEquals(2, s1.indexOf(2.0))
nova chamada: assertEquals(2, s1.indexOf(2.0), "Era esperado valores iguais, mas  2 é diferente de " + result249 + " <s1.indexOf(2.0)>")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result250 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(1, s1.indexOf(2.0))
nova chamada: assertEquals(1, s1.indexOf(2.0), "Era esperado valores iguais, mas  1 é diferente de " + result251 + " <s1.indexOf(2.0)>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result252 + " <s1.getItemCount()>")
chamada antiga: assertEquals(3.0, s1.getX(1))
nova chamada: assertEquals(3.0, s1.getX(1), "Era esperado valores iguais, mas  3.0 é diferente de " + result253 + " <s1.getX(1)>")
chamada antiga: assertEquals(3.0, s1.getX(0))
nova chamada: assertEquals(3.0, s1.getX(0), "Era esperado valores iguais, mas  3.0 é diferente de " + result254 + " <s1.getX(0)>")
chamada antiga: assertEquals(6, s1.getItemCount())
nova chamada: assertEquals(6, s1.getItemCount(), "Era esperado valores iguais, mas  6 é diferente de " + result255 + " <s1.getItemCount()>")
chamada antiga: assertEquals(5, s1.getItemCount())
nova chamada: assertEquals(5, s1.getItemCount(), "Era esperado valores iguais, mas  5 é diferente de " + result256 + " <s1.getItemCount()>")
chamada antiga: assertEquals(2, series.getY(0))
nova chamada: assertEquals(2, series.getY(0), "Era esperado valores iguais, mas  2 é diferente de " + result257 + " <series.getY(0)>")
chamada antiga: assertEquals(3, series.getY(0))
nova chamada: assertEquals(3, series.getY(0), "Era esperado valores iguais, mas  3 é diferente de " + result258 + " <series.getY(0)>")
chamada antiga: assertEquals(99.0, series.getY(1))
nova chamada: assertEquals(99.0, series.getY(1), "Era esperado valores iguais, mas  99.0 é diferente de " + result259 + " <series.getY(1)>")
chamada antiga: assertTrue(old == null)
nova chamada: assertTrue(old == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, series.getItemCount())
nova chamada: assertEquals(1, series.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result260 + " <series.getItemCount()>")
chamada antiga: assertEquals(2L, series.getY(0))
nova chamada: assertEquals(2L, series.getY(0), "Era esperado valores iguais, mas  2L é diferente de " + result261 + " <series.getY(0)>")
chamada antiga: assertTrue(old == null)
nova chamada: assertTrue(old == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result262 + " <series.getItemCount()>")
chamada antiga: assertEquals(3L, series.getY(1))
nova chamada: assertEquals(3L, series.getY(1), "Era esperado valores iguais, mas  3L é diferente de " + result263 + " <series.getY(1)>")
chamada antiga: assertEquals(new XYDataItem(Long.valueOf(1), Long.valueOf(2)), old)
nova chamada: assertEquals(new XYDataItem(Long.valueOf(1), Long.valueOf(2)), old, "Era esperado valores iguais, mas  new XYDataItem(Long.valueOf(1), Long.valueOf(2)) é diferente de " + " old")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result264 + " <series.getItemCount()>")
chamada antiga: assertEquals(99L, series.getY(0))
nova chamada: assertEquals(99L, series.getY(0), "Era esperado valores iguais, mas  99L é diferente de " + result265 + " <series.getY(0)>")
chamada antiga: assertEquals(3L, series.getY(1))
nova chamada: assertEquals(3L, series.getY(1), "Era esperado valores iguais, mas  3L é diferente de " + result266 + " <series.getY(1)>")
chamada antiga: assertEquals(1.0, series.getY(0))
nova chamada: assertEquals(1.0, series.getY(0), "Era esperado valores iguais, mas  1.0 é diferente de " + result267 + " <series.getY(0)>")
chamada antiga: assertEquals(2.0, series.getY(1))
nova chamada: assertEquals(2.0, series.getY(1), "Era esperado valores iguais, mas  2.0 é diferente de " + result268 + " <series.getY(1)>")
chamada antiga: assertEquals(3.0, series.getY(2))
nova chamada: assertEquals(3.0, series.getY(2), "Era esperado valores iguais, mas  3.0 é diferente de " + result269 + " <series.getY(2)>")
chamada antiga: assertEquals(3, series.getItemCount())
nova chamada: assertEquals(3, series.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result270 + " <series.getItemCount()>")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result271 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, s1.getMaximumItemCount())
nova chamada: assertEquals(2, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result272 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, array.length)
nova chamada: assertEquals(2, array.length, "Era esperado valores iguais, mas  2 é diferente de " + " array.length")
chamada antiga: assertEquals(0, array[0].length)
nova chamada: assertEquals(0, array[0].length, "Era esperado valores iguais, mas  0 é diferente de " + " array[0].length")
chamada antiga: assertEquals(0, array[1].length)
nova chamada: assertEquals(0, array[1].length, "Era esperado valores iguais, mas  0 é diferente de " + " array[1].length")
chamada antiga: assertEquals(1, array[0].length)
nova chamada: assertEquals(1, array[0].length, "Era esperado valores iguais, mas  1 é diferente de " + " array[0].length")
chamada antiga: assertEquals(1, array[1].length)
nova chamada: assertEquals(1, array[1].length, "Era esperado valores iguais, mas  1 é diferente de " + " array[1].length")
chamada antiga: assertEquals(2, array.length)
nova chamada: assertEquals(2, array.length, "Era esperado valores iguais, mas  2 é diferente de " + " array.length")
chamada antiga: assertEquals(2, array.length)
nova chamada: assertEquals(2, array.length, "Era esperado valores iguais, mas  2 é diferente de " + " array.length")
chamada antiga: assertEquals(2, array[0].length)
nova chamada: assertEquals(2, array[0].length, "Era esperado valores iguais, mas  2 é diferente de " + " array[0].length")
chamada antiga: assertEquals(2, array[1].length)
nova chamada: assertEquals(2, array[1].length, "Era esperado valores iguais, mas  2 é diferente de " + " array[1].length")
chamada antiga: assertTrue(Double.isNaN(array[1][1]))
nova chamada: assertTrue(Double.isNaN(array[1][1]), "Era esperado verdadeiro, mas " + result273 + " <Double.isNaN(array[1][1])> é falso")
chamada antiga: assertEquals(1, dataset.getSeriesCount())
nova chamada: assertEquals(1, dataset.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result274 + " <dataset.getSeriesCount()>")
chamada antiga: assertEquals(4, dataset.getItemCount(0))
nova chamada: assertEquals(4, dataset.getItemCount(0), "Era esperado valores iguais, mas  4 é diferente de " + result275 + " <dataset.getItemCount(0)>")
chamada antiga: assertEquals("S", dataset.getSeriesKey(0))
nova chamada: assertEquals("S", dataset.getSeriesKey(0), "Era esperado valores iguais, mas  'S' é diferente de " + result276 + " <dataset.getSeriesKey(0)>")
chamada antiga: assertTrue(Double.isNaN(dataset.getYValue(0, 3)))
nova chamada: assertTrue(Double.isNaN(dataset.getYValue(0, 3)), "Era esperado verdadeiro, mas " + result277 + " <Double.isNaN(dataset.getYValue(0, 3))> é falso")
chamada antiga: assertEquals(1.0, series.getY(0))
nova chamada: assertEquals(1.0, series.getY(0), "Era esperado valores iguais, mas  1.0 é diferente de " + result278 + " <series.getY(0)>")
chamada antiga: assertEquals(2.0, series.getY(1))
nova chamada: assertEquals(2.0, series.getY(1), "Era esperado valores iguais, mas  2.0 é diferente de " + result279 + " <series.getY(1)>")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result280 + " <series.getItemCount()>")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result281 + " <s1.getItemCount()>")
chamada antiga: assertTrue(Double.isNaN(s1.getMinX()))
nova chamada: assertTrue(Double.isNaN(s1.getMinX()), "Era esperado verdadeiro, mas " + result282 + " <Double.isNaN(s1.getMinX())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxX()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxX()), "Era esperado verdadeiro, mas " + result283 + " <Double.isNaN(s1.getMaxX())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result284 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result285 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result286 + " <s1.getItemCount()>")
chamada antiga: assertEquals(0, s1.getItemCount())
nova chamada: assertEquals(0, s1.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result287 + " <s1.getItemCount()>")
chamada antiga: assertTrue(Double.isNaN(s1.getMinX()))
nova chamada: assertTrue(Double.isNaN(s1.getMinX()), "Era esperado verdadeiro, mas " + result288 + " <Double.isNaN(s1.getMinX())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxX()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxX()), "Era esperado verdadeiro, mas " + result289 + " <Double.isNaN(s1.getMaxX())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result290 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result291 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result292 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result293 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result294 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result295 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result296 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result297 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertEquals("S1", s1.getKey())
nova chamada: assertEquals("S1", s1.getKey(), "Era esperado valores iguais, mas  'S1' é diferente de " + result298 + " <s1.getKey()>")
chamada antiga: assertEquals("OK", s1.getKey())
nova chamada: assertEquals("OK", s1.getKey(), "Era esperado valores iguais, mas  'OK' é diferente de " + result299 + " <s1.getKey()>")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result300 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result301 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result302 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result303 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result304 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result305 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1 instanceof PublicCloneable)
nova chamada: assertTrue(c1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(0, c.getSeriesCount())
nova chamada: assertEquals(0, c.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result306 + " <c.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result307 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result308 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result309 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result310 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result311 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result312 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result313 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 instanceof PublicCloneable)
nova chamada: assertTrue(c1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result314 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result315 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(0, c.getSeriesCount())
nova chamada: assertEquals(0, c.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result316 + " <c.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result317 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result318 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result319 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result320 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result321 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result322 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1 instanceof PublicCloneable)
nova chamada: assertTrue(c1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(0, c.getSeriesCount())
nova chamada: assertEquals(0, c.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result323 + " <c.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result324 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result325 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result326 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result327 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result328 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result329 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result330 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result331 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result332 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result333 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1 instanceof Cloneable)
nova chamada: assertFalse(i1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result334 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result335 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result336 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result337 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result338 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result339 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result340 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result341 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result342 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result343 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result344 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result345 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result346 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result347 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result348 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result349 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result350 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result351 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result352 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result353 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result354 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result355 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result356 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result357 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result358 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result359 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result360 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result361 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result362 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result363 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result364 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result365 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result366 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result367 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result368 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result369 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result370 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result371 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result372 + " <s2.equals(s1)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result373 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(0, s1.indexOf(new XYCoordinate(1.0, 1.0)))
nova chamada: assertEquals(0, s1.indexOf(new XYCoordinate(1.0, 1.0)), "Era esperado valores iguais, mas  0 é diferente de " + result374 + " <s1.indexOf(new XYCoordinate(1.0, 1.0))>")
chamada antiga: assertEquals(0, s1.indexOf(new XYCoordinate(1.0, 1.0)))
nova chamada: assertEquals(0, s1.indexOf(new XYCoordinate(1.0, 1.0)), "Era esperado valores iguais, mas  0 é diferente de " + result375 + " <s1.indexOf(new XYCoordinate(1.0, 1.0))>")
chamada antiga: assertEquals(1, s1.indexOf(new XYCoordinate(3.0, 3.0)))
nova chamada: assertEquals(1, s1.indexOf(new XYCoordinate(3.0, 3.0)), "Era esperado valores iguais, mas  1 é diferente de " + result376 + " <s1.indexOf(new XYCoordinate(3.0, 3.0))>")
chamada antiga: assertEquals(2, s1.indexOf(new XYCoordinate(2.0, 2.0)))
nova chamada: assertEquals(2, s1.indexOf(new XYCoordinate(2.0, 2.0)), "Era esperado valores iguais, mas  2 é diferente de " + result377 + " <s1.indexOf(new XYCoordinate(2.0, 2.0))>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result378 + " <s1.getItemCount()>")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result379 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, s1.getMaximumItemCount())
nova chamada: assertEquals(2, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result380 + " <s1.getMaximumItemCount()>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result381 + " <s1.isEmpty()> é falso")
chamada antiga: assertFalse(s1.isEmpty())
nova chamada: assertFalse(s1.isEmpty(), "Era esperado falso, mas " + result382 + " <s1.isEmpty()> é verdadeiro ")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result383 + " <s1.isEmpty()> é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result384 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result385 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result386 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result387 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result388 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result389 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result390 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result391 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals("S1", d.getSeriesKey(0))
nova chamada: assertEquals("S1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result392 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals("S2", d.getSeriesKey(1))
nova chamada: assertEquals("S2", d.getSeriesKey(1), "Era esperado valores iguais, mas  'S2' é diferente de " + result393 + " <d.getSeriesKey(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, d.indexOf("S1"))
nova chamada: assertEquals(0, d.indexOf("S1"), "Era esperado valores iguais, mas  0 é diferente de " + result394 + " <d.indexOf('S1')>")
chamada antiga: assertEquals(1, d.indexOf("S2"))
nova chamada: assertEquals(1, d.indexOf("S2"), "Era esperado valores iguais, mas  1 é diferente de " + result395 + " <d.indexOf('S2')>")
chamada antiga: assertEquals(-1, d.indexOf("Green Eggs and Ham"))
nova chamada: assertEquals(-1, d.indexOf("Green Eggs and Ham"), "Era esperado valores iguais, mas  -1 é diferente de " + result396 + " <d.indexOf('Green Eggs and Ham')>")
chamada antiga: assertEquals(-1, d.indexOf(null))
nova chamada: assertEquals(-1, d.indexOf(null), "Era esperado valores iguais, mas  -1 é diferente de " + result397 + " <d.indexOf(null)>")
chamada antiga: assertEquals(1, d.getSeriesCount())
nova chamada: assertEquals(1, d.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result398 + " <d.getSeriesCount()>")
chamada antiga: assertEquals("S1", d.getSeriesKey(0))
nova chamada: assertEquals("S1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result399 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals(1, d.getSeriesCount())
nova chamada: assertEquals(1, d.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result400 + " <d.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result401 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c2.equals(c1))
nova chamada: assertTrue(c2.equals(c1), "Era esperado verdadeiro, mas " + result402 + " <c2.equals(c1)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result403 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result404 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result405 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result406 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(2, vsc.getSeriesCount())
nova chamada: assertEquals(2, vsc.getSeriesCount(), "Era esperado valores iguais, mas  2 é diferente de " + result407 + " <vsc.getSeriesCount()>")
chamada antiga: assertTrue(b)
nova chamada: assertTrue(b, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, vsc.getSeriesCount())
nova chamada: assertEquals(1, vsc.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result408 + " <vsc.getSeriesCount()>")
chamada antiga: assertEquals("S2", vsc.getSeriesKey(0))
nova chamada: assertEquals("S2", vsc.getSeriesKey(0), "Era esperado valores iguais, mas  'S2' é diferente de " + result409 + " <vsc.getSeriesKey(0)>")
chamada antiga: assertFalse(b)
nova chamada: assertFalse(b, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1, vsc.getSeriesCount())
nova chamada: assertEquals(1, vsc.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result410 + " <vsc.getSeriesCount()>")
chamada antiga: assertTrue(b)
nova chamada: assertTrue(b, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, vsc.getSeriesCount())
nova chamada: assertEquals(0, vsc.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result411 + " <vsc.getSeriesCount()>")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result412 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item2.equals(item1))
nova chamada: assertTrue(item2.equals(item1), "Era esperado verdadeiro, mas " + result413 + " <item2.equals(item1)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result414 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result415 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result416 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result417 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result418 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result419 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result420 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result421 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result422 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result423 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result424 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result425 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item1 != item2)
nova chamada: assertTrue(item1 != item2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.getClass() == item2.getClass())
nova chamada: assertTrue(item1.getClass() == item2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result426 + " <item1.equals(item2)> é falso")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result427 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result428 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result429 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result430 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result431 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result432 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1 instanceof Cloneable)
nova chamada: assertFalse(i1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result433 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c2.equals(c1))
nova chamada: assertTrue(c2.equals(c1), "Era esperado verdadeiro, mas " + result434 + " <c2.equals(c1)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result435 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result436 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result437 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result438 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1 instanceof PublicCloneable)
nova chamada: assertTrue(c1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result439 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v2.equals(v1))
nova chamada: assertTrue(v2.equals(v1), "Era esperado verdadeiro, mas " + result440 + " <v2.equals(v1)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result441 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result442 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result443 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result444 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result445 + " <v1.equals(v2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(v1 instanceof Cloneable)
nova chamada: assertFalse(v1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(v1, v2)
nova chamada: assertEquals(v1, v2, "Era esperado valores iguais, mas  v1 é diferente de " + " v2")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result446 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i2.equals(i1))
nova chamada: assertTrue(i2.equals(i1), "Era esperado verdadeiro, mas " + result447 + " <i2.equals(i1)> é falso")
chamada antiga: assertFalse(i1 instanceof Cloneable)
nova chamada: assertFalse(i1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result448 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result449 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result450 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result451 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result452 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result453 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result454 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result455 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals("S1", d.getSeriesKey(0))
nova chamada: assertEquals("S1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result456 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals("S2", d.getSeriesKey(1))
nova chamada: assertEquals("S2", d.getSeriesKey(1), "Era esperado valores iguais, mas  'S2' é diferente de " + result457 + " <d.getSeriesKey(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, d.indexOf("S1"))
nova chamada: assertEquals(0, d.indexOf("S1"), "Era esperado valores iguais, mas  0 é diferente de " + result458 + " <d.indexOf('S1')>")
chamada antiga: assertEquals(1, d.indexOf("S2"))
nova chamada: assertEquals(1, d.indexOf("S2"), "Era esperado valores iguais, mas  1 é diferente de " + result459 + " <d.indexOf('S2')>")
chamada antiga: assertEquals(-1, d.indexOf("Green Eggs and Ham"))
nova chamada: assertEquals(-1, d.indexOf("Green Eggs and Ham"), "Era esperado valores iguais, mas  -1 é diferente de " + result460 + " <d.indexOf('Green Eggs and Ham')>")
chamada antiga: assertEquals(-1, d.indexOf(null))
nova chamada: assertEquals(-1, d.indexOf(null), "Era esperado valores iguais, mas  -1 é diferente de " + result461 + " <d.indexOf(null)>")
chamada antiga: assertEquals(1, d.getSeriesCount())
nova chamada: assertEquals(1, d.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result462 + " <d.getSeriesCount()>")
chamada antiga: assertEquals("S1", d.getSeriesKey(0))
nova chamada: assertEquals("S1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result463 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals(1, d.getSeriesCount())
nova chamada: assertEquals(1, d.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result464 + " <d.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result465 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result466 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result467 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result468 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result469 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(6, dataset.getItemCount())
nova chamada: assertEquals(6, dataset.getItemCount(), "Era esperado valores iguais, mas  6 é diferente de " + result470 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(6, dataset.getX(0, 5).intValue())
nova chamada: assertEquals(6, dataset.getX(0, 5).intValue(), "Era esperado valores iguais, mas  6 é diferente de " + result471 + " <dataset.getX(0, 5).intValue()>")
chamada antiga: assertEquals(null, dataset.getY(0, 5))
nova chamada: assertEquals(null, dataset.getY(0, 5), "Era esperado valores iguais, mas  null é diferente de " + result472 + " <dataset.getY(0, 5)>")
chamada antiga: assertEquals(6, dataset.getX(1, 5).intValue())
nova chamada: assertEquals(6, dataset.getX(1, 5).intValue(), "Era esperado valores iguais, mas  6 é diferente de " + result473 + " <dataset.getX(1, 5).intValue()>")
chamada antiga: assertEquals(2, dataset.getY(1, 5).intValue())
nova chamada: assertEquals(2, dataset.getY(1, 5).intValue(), "Era esperado valores iguais, mas  2 é diferente de " + result474 + " <dataset.getY(1, 5).intValue()>")
chamada antiga: assertEquals(7, dataset.getItemCount())
nova chamada: assertEquals(7, dataset.getItemCount(), "Era esperado valores iguais, mas  7 é diferente de " + result475 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(null, dataset.getY(0, 6))
nova chamada: assertEquals(null, dataset.getY(0, 6), "Era esperado valores iguais, mas  null é diferente de " + result476 + " <dataset.getY(0, 6)>")
chamada antiga: assertEquals(2, dataset.getY(1, 6).intValue())
nova chamada: assertEquals(2, dataset.getY(1, 6).intValue(), "Era esperado valores iguais, mas  2 é diferente de " + result477 + " <dataset.getY(1, 6).intValue()>")
chamada antiga: assertEquals(7, dataset.getItemCount())
nova chamada: assertEquals(7, dataset.getItemCount(), "Era esperado valores iguais, mas  7 é diferente de " + result478 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(4, dataset.getItemCount())
nova chamada: assertEquals(4, dataset.getItemCount(), "Era esperado valores iguais, mas  4 é diferente de " + result479 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(4, dataset.getItemCount())
nova chamada: assertEquals(4, dataset.getItemCount(), "Era esperado valores iguais, mas  4 é diferente de " + result480 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(0, dataset.getItemCount())
nova chamada: assertEquals(0, dataset.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result481 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(5, dataset.getItemCount())
nova chamada: assertEquals(5, dataset.getItemCount(), "Era esperado valores iguais, mas  5 é diferente de " + result482 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(1.0, dataset.getX(0, 0))
nova chamada: assertEquals(1.0, dataset.getX(0, 0), "Era esperado valores iguais, mas  1.0 é diferente de " + result483 + " <dataset.getX(0, 0)>")
chamada antiga: assertEquals(3.0, dataset.getX(0, 1))
nova chamada: assertEquals(3.0, dataset.getX(0, 1), "Era esperado valores iguais, mas  3.0 é diferente de " + result484 + " <dataset.getX(0, 1)>")
chamada antiga: assertEquals(4.0, dataset.getX(0, 2))
nova chamada: assertEquals(4.0, dataset.getX(0, 2), "Era esperado valores iguais, mas  4.0 é diferente de " + result485 + " <dataset.getX(0, 2)>")
chamada antiga: assertEquals(5.0, dataset.getX(0, 3))
nova chamada: assertEquals(5.0, dataset.getX(0, 3), "Era esperado valores iguais, mas  5.0 é diferente de " + result486 + " <dataset.getX(0, 3)>")
chamada antiga: assertEquals(6.0, dataset.getX(0, 4))
nova chamada: assertEquals(6.0, dataset.getX(0, 4), "Era esperado valores iguais, mas  6.0 é diferente de " + result487 + " <dataset.getX(0, 4)>")
chamada antiga: assertEquals(4, dataset.getItemCount())
nova chamada: assertEquals(4, dataset.getItemCount(), "Era esperado valores iguais, mas  4 é diferente de " + result488 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(2, dataset.getItemCount())
nova chamada: assertEquals(2, dataset.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result489 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(2, dataset.getItemCount())
nova chamada: assertEquals(2, dataset.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result490 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(1, dataset.getItemCount())
nova chamada: assertEquals(1, dataset.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result491 + " <dataset.getItemCount()>")
chamada antiga: assertEquals(2, dataset2.getItemCount())
nova chamada: assertEquals(2, dataset2.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result492 + " <dataset2.getItemCount()>")
chamada antiga: assertEquals(2, dataset2.getItemCount())
nova chamada: assertEquals(2, dataset2.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result493 + " <dataset2.getItemCount()>")
chamada antiga: assertEquals(1, dataset2.getItemCount())
nova chamada: assertEquals(1, dataset2.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result494 + " <dataset2.getItemCount()>")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result495 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result496 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result497 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result498 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result499 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result500 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result501 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result502 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result503 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result504 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result505 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result506 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result507 + " <s2.equals(s1)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result508 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result509 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result510 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(1, s1.indexOf(3.0))
nova chamada: assertEquals(1, s1.indexOf(3.0), "Era esperado valores iguais, mas  1 é diferente de " + result511 + " <s1.indexOf(3.0)>")
chamada antiga: assertEquals(2, s1.indexOf(2.0))
nova chamada: assertEquals(2, s1.indexOf(2.0), "Era esperado valores iguais, mas  2 é diferente de " + result512 + " <s1.indexOf(2.0)>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result513 + " <s1.getItemCount()>")
chamada antiga: assertEquals(3.0, s1.getX(1))
nova chamada: assertEquals(3.0, s1.getX(1), "Era esperado valores iguais, mas  3.0 é diferente de " + result514 + " <s1.getX(1)>")
chamada antiga: assertEquals(3.0, s1.getX(0))
nova chamada: assertEquals(3.0, s1.getX(0), "Era esperado valores iguais, mas  3.0 é diferente de " + result515 + " <s1.getX(0)>")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result516 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, s1.getMaximumItemCount())
nova chamada: assertEquals(2, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result517 + " <s1.getMaximumItemCount()>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result518 + " <s1.isEmpty()> é falso")
chamada antiga: assertFalse(s1.isEmpty())
nova chamada: assertFalse(s1.isEmpty(), "Era esperado falso, mas " + result519 + " <s1.isEmpty()> é verdadeiro ")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result520 + " <s1.isEmpty()> é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result521 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result522 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result523 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result524 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result525 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result526 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals("Series 1", d1.getSeries(0).getKey())
nova chamada: assertEquals("Series 1", d1.getSeries(0).getKey(), "Era esperado valores iguais, mas  'Series 1' é diferente de " + result527 + " <d1.getSeries(0).getKey()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result528 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result529 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result530 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result531 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result532 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result533 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result534 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result535 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result536 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result537 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result538 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result539 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result540 + " <s2.equals(s1)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result541 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result542 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result543 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(1, s1.indexOf(3.0))
nova chamada: assertEquals(1, s1.indexOf(3.0), "Era esperado valores iguais, mas  1 é diferente de " + result544 + " <s1.indexOf(3.0)>")
chamada antiga: assertEquals(2, s1.indexOf(2.0))
nova chamada: assertEquals(2, s1.indexOf(2.0), "Era esperado valores iguais, mas  2 é diferente de " + result545 + " <s1.indexOf(2.0)>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result546 + " <s1.getItemCount()>")
chamada antiga: assertEquals(3.0, s1.getX(1))
nova chamada: assertEquals(3.0, s1.getX(1), "Era esperado valores iguais, mas  3.0 é diferente de " + result547 + " <s1.getX(1)>")
chamada antiga: assertEquals(3.0, s1.getX(0))
nova chamada: assertEquals(3.0, s1.getX(0), "Era esperado valores iguais, mas  3.0 é diferente de " + result548 + " <s1.getX(0)>")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result549 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, s1.getMaximumItemCount())
nova chamada: assertEquals(2, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result550 + " <s1.getMaximumItemCount()>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result551 + " <s1.isEmpty()> é falso")
chamada antiga: assertFalse(s1.isEmpty())
nova chamada: assertFalse(s1.isEmpty(), "Era esperado falso, mas " + result552 + " <s1.isEmpty()> é verdadeiro ")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result553 + " <s1.isEmpty()> é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result554 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i2.equals(i1))
nova chamada: assertTrue(i2.equals(i1), "Era esperado verdadeiro, mas " + result555 + " <i2.equals(i1)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result556 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result557 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i1 != i2)
nova chamada: assertTrue(i1 != i2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(i1.getClass() == i2.getClass())
nova chamada: assertTrue(i1.getClass() == i2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result558 + " <i1.equals(i2)> é falso")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result559 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result560 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result561 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result562 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result563 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result564 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result565 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result566 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result567 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result568 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result569 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result570 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result571 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result572 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(0, xysc.getSeriesCount())
nova chamada: assertEquals(0, xysc.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result573 + " <xysc.getSeriesCount()>")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(c2, c1)
nova chamada: assertEquals(c2, c1, "Era esperado valores iguais, mas  c2 é diferente de " + " c1")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result574 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result575 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result576 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result577 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertNotSame(c1, c2)
nova chamada: assertNotSame(c1, c2, "Era esperado objetos diferentes, mas  c1 é igual a " + " c2")
chamada antiga: assertSame(c1.getClass(), c2.getClass())
nova chamada: assertSame(c1.getClass(), c2.getClass(), "Era esperado objetos iguais, mas " + result578 + " <c1.getClass()> é diferente de " + result579 + " <c2.getClass()>")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result580 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1 instanceof PublicCloneable)
nova chamada: assertTrue(c1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals("s1", c.getSeries(0).getKey())
nova chamada: assertEquals("s1", c.getSeries(0).getKey(), "Era esperado valores iguais, mas  's1' é diferente de " + result581 + " <c.getSeries(0).getKey()>")
chamada antiga: assertEquals("s1", c.getSeries("s1").getKey())
nova chamada: assertEquals("s1", c.getSeries("s1").getKey(), "Era esperado valores iguais, mas  's1' é diferente de " + result582 + " <c.getSeries('s1').getKey()>")
chamada antiga: assertEquals(1, c.getSeriesCount())
nova chamada: assertEquals(1, c.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result583 + " <c.getSeriesCount()>")
chamada antiga: assertEquals(0, c.getSeriesCount())
nova chamada: assertEquals(0, c.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result584 + " <c.getSeriesCount()>")
chamada antiga: assertEquals(-1, dataset.indexOf(s1))
nova chamada: assertEquals(-1, dataset.indexOf(s1), "Era esperado valores iguais, mas  -1 é diferente de " + result585 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(-1, dataset.indexOf(s2))
nova chamada: assertEquals(-1, dataset.indexOf(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result586 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(0, dataset.indexOf(s1))
nova chamada: assertEquals(0, dataset.indexOf(s1), "Era esperado valores iguais, mas  0 é diferente de " + result587 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(-1, dataset.indexOf(s2))
nova chamada: assertEquals(-1, dataset.indexOf(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result588 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(0, dataset.indexOf(s1))
nova chamada: assertEquals(0, dataset.indexOf(s1), "Era esperado valores iguais, mas  0 é diferente de " + result589 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(1, dataset.indexOf(s2))
nova chamada: assertEquals(1, dataset.indexOf(s2), "Era esperado valores iguais, mas  1 é diferente de " + result590 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(-1, dataset.indexOf(s1))
nova chamada: assertEquals(-1, dataset.indexOf(s1), "Era esperado valores iguais, mas  -1 é diferente de " + result591 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(0, dataset.indexOf(s2))
nova chamada: assertEquals(0, dataset.indexOf(s2), "Era esperado valores iguais, mas  0 é diferente de " + result592 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(0, dataset.indexOf(s2b))
nova chamada: assertEquals(0, dataset.indexOf(s2b), "Era esperado valores iguais, mas  0 é diferente de " + result593 + " <dataset.indexOf(s2b)>")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), r)
nova chamada: assertEquals(new Range(1.0, 1.0), r, "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(0.5, 1.5), r)
nova chamada: assertEquals(new Range(0.5, 1.5), r, "Era esperado valores iguais, mas  new Range(0.5, 1.5) é diferente de " + " r")
chamada antiga: assertEquals(new Range(-1.0, 1.0), r)
nova chamada: assertEquals(new Range(-1.0, 1.0), r, "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(-1.5, 1.5), r)
nova chamada: assertEquals(new Range(-1.5, 1.5), r, "Era esperado valores iguais, mas  new Range(-1.5, 1.5) é diferente de " + " r")
chamada antiga: assertNull(dataset.getRangeBounds(false))
nova chamada: assertNull(dataset.getRangeBounds(false), "Era esperado nulo, mas " + result594 + " <dataset.getRangeBounds(false)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(true))
nova chamada: assertNull(dataset.getRangeBounds(true), "Era esperado nulo, mas " + result595 + " <dataset.getRangeBounds(true)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(false))
nova chamada: assertNull(dataset.getRangeBounds(false), "Era esperado nulo, mas " + result596 + " <dataset.getRangeBounds(false)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(true))
nova chamada: assertNull(dataset.getRangeBounds(true), "Era esperado nulo, mas " + result597 + " <dataset.getRangeBounds(true)> não é nulo")
chamada antiga: assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(1.1, 1.1) é diferente de " + result598 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(1.1, 1.1), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(1.1, 1.1) é diferente de " + result599 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.1, 1.1) é diferente de " + result600 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.1, 1.1) é diferente de " + result601 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.1, 1.1) é diferente de " + result602 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.1, 1.1) é diferente de " + result603 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.1, 1.1) é diferente de " + result604 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.1, 1.1), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.1, 1.1) é diferente de " + result605 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.1, 5.0) é diferente de " + result606 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.1, 5.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.1, 5.0) é diferente de " + result607 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)), "Era esperado verdadeiro, mas " + result608 + " <Double.isNaN(dataset.getRangeLowerBound(false))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)), "Era esperado verdadeiro, mas " + result609 + " <Double.isNaN(dataset.getRangeLowerBound(true))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)), "Era esperado verdadeiro, mas " + result610 + " <Double.isNaN(dataset.getRangeLowerBound(false))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeLowerBound(true)), "Era esperado verdadeiro, mas " + result611 + " <Double.isNaN(dataset.getRangeLowerBound(true))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)), "Era esperado verdadeiro, mas " + result612 + " <Double.isNaN(dataset.getRangeUpperBound(false))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)), "Era esperado verdadeiro, mas " + result613 + " <Double.isNaN(dataset.getRangeUpperBound(true))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)), "Era esperado verdadeiro, mas " + result614 + " <Double.isNaN(dataset.getRangeUpperBound(false))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeUpperBound(true)), "Era esperado verdadeiro, mas " + result615 + " <Double.isNaN(dataset.getRangeUpperBound(true))> é falso")
chamada antiga: assertEquals("C", collection.getSeries(0).getKey())
nova chamada: assertEquals("C", collection.getSeries(0).getKey(), "Era esperado valores iguais, mas  'C' é diferente de " + result616 + " <collection.getSeries(0).getKey()>")
chamada antiga: assertEquals("B", series2.getKey())
nova chamada: assertEquals("B", series2.getKey(), "Era esperado valores iguais, mas  'B' é diferente de " + result617 + " <series2.getKey()>")
chamada antiga: assertTrue(bd1.equals(bd2))
nova chamada: assertTrue(bd1.equals(bd2), "Era esperado verdadeiro, mas " + result618 + " <bd1.equals(bd2)> é falso")
chamada antiga: assertTrue(bd2.equals(bd1))
nova chamada: assertTrue(bd2.equals(bd1), "Era esperado verdadeiro, mas " + result619 + " <bd2.equals(bd1)> é falso")
chamada antiga: assertTrue(bd1 != bd2)
nova chamada: assertTrue(bd1 != bd2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(bd1.getClass() == bd2.getClass())
nova chamada: assertTrue(bd1.getClass() == bd2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(bd1.equals(bd2))
nova chamada: assertTrue(bd1.equals(bd2), "Era esperado verdadeiro, mas " + result620 + " <bd1.equals(bd2)> é falso")
chamada antiga: assertFalse(bd1.equals(bd2))
nova chamada: assertFalse(bd1.equals(bd2), "Era esperado falso, mas " + result621 + " <bd1.equals(bd2)> é verdadeiro ")
chamada antiga: assertTrue(bd1.equals(bd2))
nova chamada: assertTrue(bd1.equals(bd2), "Era esperado verdadeiro, mas " + result622 + " <bd1.equals(bd2)> é falso")
chamada antiga: assertTrue(bd1 instanceof PublicCloneable)
nova chamada: assertTrue(bd1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(bd1, bd2)
nova chamada: assertEquals(bd1, bd2, "Era esperado valores iguais, mas  bd1 é diferente de " + " bd2")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result623 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v2.equals(v1))
nova chamada: assertTrue(v2.equals(v1), "Era esperado verdadeiro, mas " + result624 + " <v2.equals(v1)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result625 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result626 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result627 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result628 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result629 + " <v1.equals(v2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(v1 instanceof Cloneable)
nova chamada: assertFalse(v1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(v1, v2)
nova chamada: assertEquals(v1, v2, "Era esperado valores iguais, mas  v1 é diferente de " + " v2")
chamada antiga: assertEquals(1.0, item1.getX())
nova chamada: assertEquals(1.0, item1.getX(), "Era esperado valores iguais, mas  1.0 é diferente de " + result630 + " <item1.getX()>")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result631 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item2.equals(item1))
nova chamada: assertTrue(item2.equals(item1), "Era esperado verdadeiro, mas " + result632 + " <item2.equals(item1)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result633 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result634 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result635 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result636 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result637 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result638 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result639 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result640 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item1 != item2)
nova chamada: assertTrue(item1 != item2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.getClass() == item2.getClass())
nova chamada: assertTrue(item1.getClass() == item2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result641 + " <item1.equals(item2)> é falso")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result642 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result643 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result644 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result645 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result646 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result647 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result648 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result649 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result650 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(0, d.getSeriesCount())
nova chamada: assertEquals(0, d.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result651 + " <d.getSeriesCount()>")
chamada antiga: assertEquals(2, d.getSeriesCount())
nova chamada: assertEquals(2, d.getSeriesCount(), "Era esperado valores iguais, mas  2 é diferente de " + result652 + " <d.getSeriesCount()>")
chamada antiga: assertEquals("S1", d.getSeriesKey(0))
nova chamada: assertEquals("S1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result653 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals("S2", d.getSeriesKey(1))
nova chamada: assertEquals("S2", d.getSeriesKey(1), "Era esperado valores iguais, mas  'S2' é diferente de " + result654 + " <d.getSeriesKey(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3, d.getItemCount(0))
nova chamada: assertEquals(3, d.getItemCount(0), "Era esperado valores iguais, mas  3 é diferente de " + result655 + " <d.getItemCount(0)>")
chamada antiga: assertEquals(3, d.getItemCount(1))
nova chamada: assertEquals(3, d.getItemCount(1), "Era esperado valores iguais, mas  3 é diferente de " + result656 + " <d.getItemCount(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result657 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result658 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result659 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result660 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result661 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result662 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result663 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result664 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1 instanceof PublicCloneable)
nova chamada: assertTrue(d1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(0, d.indexOf("S1"))
nova chamada: assertEquals(0, d.indexOf("S1"), "Era esperado valores iguais, mas  0 é diferente de " + result665 + " <d.indexOf('S1')>")
chamada antiga: assertEquals(1, d.indexOf("S2"))
nova chamada: assertEquals(1, d.indexOf("S2"), "Era esperado valores iguais, mas  1 é diferente de " + result666 + " <d.indexOf('S2')>")
chamada antiga: assertEquals(-1, d.indexOf("Green Eggs and Ham"))
nova chamada: assertEquals(-1, d.indexOf("Green Eggs and Ham"), "Era esperado valores iguais, mas  -1 é diferente de " + result667 + " <d.indexOf('Green Eggs and Ham')>")
chamada antiga: assertEquals(-1, d.indexOf(null))
nova chamada: assertEquals(-1, d.indexOf(null), "Era esperado valores iguais, mas  -1 é diferente de " + result668 + " <d.indexOf(null)>")
chamada antiga: assertEquals(1, d.getSeriesCount())
nova chamada: assertEquals(1, d.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result669 + " <d.getSeriesCount()>")
chamada antiga: assertEquals("S1", d.getSeriesKey(0))
nova chamada: assertEquals("S1", d.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result670 + " <d.getSeriesKey(0)>")
chamada antiga: assertEquals(1, d.getSeriesCount())
nova chamada: assertEquals(1, d.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result671 + " <d.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result672 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result673 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result674 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result675 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result676 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result677 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result678 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result679 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result680 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result681 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result682 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result683 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result684 + " <s2.equals(s1)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result685 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result686 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(0, s1.indexOf(1.0))
nova chamada: assertEquals(0, s1.indexOf(1.0), "Era esperado valores iguais, mas  0 é diferente de " + result687 + " <s1.indexOf(1.0)>")
chamada antiga: assertEquals(1, s1.indexOf(3.0))
nova chamada: assertEquals(1, s1.indexOf(3.0), "Era esperado valores iguais, mas  1 é diferente de " + result688 + " <s1.indexOf(3.0)>")
chamada antiga: assertEquals(2, s1.indexOf(2.0))
nova chamada: assertEquals(2, s1.indexOf(2.0), "Era esperado valores iguais, mas  2 é diferente de " + result689 + " <s1.indexOf(2.0)>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result690 + " <s1.getItemCount()>")
chamada antiga: assertEquals(3.0, s1.getX(1))
nova chamada: assertEquals(3.0, s1.getX(1), "Era esperado valores iguais, mas  3.0 é diferente de " + result691 + " <s1.getX(1)>")
chamada antiga: assertEquals(3.0, s1.getX(0))
nova chamada: assertEquals(3.0, s1.getX(0), "Era esperado valores iguais, mas  3.0 é diferente de " + result692 + " <s1.getX(0)>")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result693 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, s1.getMaximumItemCount())
nova chamada: assertEquals(2, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result694 + " <s1.getMaximumItemCount()>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result695 + " <s1.isEmpty()> é falso")
chamada antiga: assertFalse(s1.isEmpty())
nova chamada: assertFalse(s1.isEmpty(), "Era esperado falso, mas " + result696 + " <s1.isEmpty()> é verdadeiro ")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result697 + " <s1.isEmpty()> é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result698 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result699 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result700 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result701 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result702 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result703 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result704 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result705 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result706 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result707 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1 != m2)
nova chamada: assertTrue(m1 != m2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.getClass() == m2.getClass())
nova chamada: assertTrue(m1.getClass() == m2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result708 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(0, m.getItemColumn(0))
nova chamada: assertEquals(0, m.getItemColumn(0), "Era esperado valores iguais, mas  0 é diferente de " + result709 + " <m.getItemColumn(0)>")
chamada antiga: assertEquals(1, m.getItemColumn(1))
nova chamada: assertEquals(1, m.getItemColumn(1), "Era esperado valores iguais, mas  1 é diferente de " + result710 + " <m.getItemColumn(1)>")
chamada antiga: assertEquals(0, m.getItemColumn(2))
nova chamada: assertEquals(0, m.getItemColumn(2), "Era esperado valores iguais, mas  0 é diferente de " + result711 + " <m.getItemColumn(2)>")
chamada antiga: assertEquals(1, m.getItemColumn(3))
nova chamada: assertEquals(1, m.getItemColumn(3), "Era esperado valores iguais, mas  1 é diferente de " + result712 + " <m.getItemColumn(3)>")
chamada antiga: assertEquals(0, m.getItemColumn(4))
nova chamada: assertEquals(0, m.getItemColumn(4), "Era esperado valores iguais, mas  0 é diferente de " + result713 + " <m.getItemColumn(4)>")
chamada antiga: assertEquals(1, m.getItemColumn(5))
nova chamada: assertEquals(1, m.getItemColumn(5), "Era esperado valores iguais, mas  1 é diferente de " + result714 + " <m.getItemColumn(5)>")
chamada antiga: assertEquals(0, m.getItemRow(0))
nova chamada: assertEquals(0, m.getItemRow(0), "Era esperado valores iguais, mas  0 é diferente de " + result715 + " <m.getItemRow(0)>")
chamada antiga: assertEquals(0, m.getItemRow(1))
nova chamada: assertEquals(0, m.getItemRow(1), "Era esperado valores iguais, mas  0 é diferente de " + result716 + " <m.getItemRow(1)>")
chamada antiga: assertEquals(1, m.getItemRow(2))
nova chamada: assertEquals(1, m.getItemRow(2), "Era esperado valores iguais, mas  1 é diferente de " + result717 + " <m.getItemRow(2)>")
chamada antiga: assertEquals(1, m.getItemRow(3))
nova chamada: assertEquals(1, m.getItemRow(3), "Era esperado valores iguais, mas  1 é diferente de " + result718 + " <m.getItemRow(3)>")
chamada antiga: assertEquals(2, m.getItemRow(4))
nova chamada: assertEquals(2, m.getItemRow(4), "Era esperado valores iguais, mas  2 é diferente de " + result719 + " <m.getItemRow(4)>")
chamada antiga: assertEquals(2, m.getItemRow(5))
nova chamada: assertEquals(2, m.getItemRow(5), "Era esperado valores iguais, mas  2 é diferente de " + result720 + " <m.getItemRow(5)>")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result721 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko2.equals(ko1))
nova chamada: assertTrue(ko2.equals(ko1), "Era esperado verdadeiro, mas " + result722 + " <ko2.equals(ko1)> é falso")
chamada antiga: assertFalse(ko1.equals(ko2))
nova chamada: assertFalse(ko1.equals(ko2), "Era esperado falso, mas " + result723 + " <ko1.equals(ko2)> é verdadeiro ")
chamada antiga: assertFalse(ko1.equals(ko2))
nova chamada: assertFalse(ko1.equals(ko2), "Era esperado falso, mas " + result724 + " <ko1.equals(ko2)> é verdadeiro ")
chamada antiga: assertTrue(ko1 != ko2)
nova chamada: assertTrue(ko1 != ko2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.getClass() == ko2.getClass())
nova chamada: assertTrue(ko1.getClass() == ko2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result725 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko1 != ko2)
nova chamada: assertTrue(ko1 != ko2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.getClass() == ko2.getClass())
nova chamada: assertTrue(ko1.getClass() == ko2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result726 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko2.getObject() == obj1)
nova chamada: assertTrue(ko2.getObject() == obj1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1 != ko2)
nova chamada: assertTrue(ko1 != ko2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.getClass() == ko2.getClass())
nova chamada: assertTrue(ko1.getClass() == ko2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(ko1.equals(ko2))
nova chamada: assertTrue(ko1.equals(ko2), "Era esperado verdadeiro, mas " + result727 + " <ko1.equals(ko2)> é falso")
chamada antiga: assertTrue(ko2.getObject() != obj1)
nova chamada: assertTrue(ko2.getObject() != obj1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(ko1, ko2)
nova chamada: assertEquals(ko1, ko2, "Era esperado valores iguais, mas  ko1 é diferente de " + " ko2")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertNotEquals(item1, item2)
nova chamada: assertNotEquals(item1, item2, "Era esperado valores diferentes, mas  item1 é igual a " + " item2")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertNotEquals(item1, item2)
nova chamada: assertNotEquals(item1, item2, "Era esperado valores diferentes, mas  item1 é igual a " + " item2")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertNotSame(item1, item2)
nova chamada: assertNotSame(item1, item2, "Era esperado objetos diferentes, mas  item1 é igual a " + " item2")
chamada antiga: assertSame(item1.getClass(), item2.getClass())
nova chamada: assertSame(item1.getClass(), item2.getClass(), "Era esperado objetos iguais, mas " + result728 + " <item1.getClass()> é diferente de " + result729 + " <item2.getClass()>")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertTrue(item2.compareTo(item1) > 0)
nova chamada: assertTrue(item2.compareTo(item1) > 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item3.compareTo(item1) > 0)
nova chamada: assertTrue(item3.compareTo(item1) > 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item4.compareTo(item1) == 0)
nova chamada: assertTrue(item4.compareTo(item1) == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.compareTo(item2) < 0)
nova chamada: assertTrue(item1.compareTo(item2) < 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1.0, d.getValue("R1", "C1"))
nova chamada: assertEquals(1.0, d.getValue("R1", "C1"), "Era esperado valores iguais, mas  1.0 é diferente de " + result730 + " <d.getValue('R1', 'C1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1 != v2)
nova chamada: assertTrue(v1 != v2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.getClass() == v2.getClass())
nova chamada: assertTrue(v1.getClass() == v2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result731 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result732 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertEquals(kv2D1, kv2D2)
nova chamada: assertEquals(kv2D1, kv2D2, "Era esperado valores iguais, mas  kv2D1 é diferente de " + " kv2D2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result733 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result734 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result735 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result736 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(11, d.getValue("R1", "C1"))
nova chamada: assertEquals(11, d.getValue("R1", "C1"), "Era esperado valores iguais, mas  11 é diferente de " + result737 + " <d.getValue('R1', 'C1')>")
chamada antiga: assertNull(d.getValue("R1", "C2"))
nova chamada: assertNull(d.getValue("R1", "C2"), "Era esperado nulo, mas " + result738 + " <d.getValue('R1', 'C2')> não é nulo")
chamada antiga: assertEquals(22, d.getValue("R2", "C2"))
nova chamada: assertEquals(22, d.getValue("R2", "C2"), "Era esperado valores iguais, mas  22 é diferente de " + result739 + " <d.getValue('R2', 'C2')>")
chamada antiga: assertNull(d.getValue("R2", "C1"))
nova chamada: assertNull(d.getValue("R2", "C1"), "Era esperado nulo, mas " + result740 + " <d.getValue('R2', 'C1')> não é nulo")
chamada antiga: assertEquals(0, d.getRowCount())
nova chamada: assertEquals(0, d.getRowCount(), "Era esperado valores iguais, mas  0 é diferente de " + result741 + " <d.getRowCount()>")
chamada antiga: assertEquals(1, d.getRowCount())
nova chamada: assertEquals(1, d.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result742 + " <d.getRowCount()>")
chamada antiga: assertEquals(2, d.getRowCount())
nova chamada: assertEquals(2, d.getRowCount(), "Era esperado valores iguais, mas  2 é diferente de " + result743 + " <d.getRowCount()>")
chamada antiga: assertEquals(0, d.getColumnCount())
nova chamada: assertEquals(0, d.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result744 + " <d.getColumnCount()>")
chamada antiga: assertEquals(1, d.getColumnCount())
nova chamada: assertEquals(1, d.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result745 + " <d.getColumnCount()>")
chamada antiga: assertEquals(2, d.getColumnCount())
nova chamada: assertEquals(2, d.getColumnCount(), "Era esperado valores iguais, mas  2 é diferente de " + result746 + " <d.getColumnCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(d.getValue(1, 0))
nova chamada: assertNull(d.getValue(1, 0), "Era esperado nulo, mas " + result747 + " <d.getValue(1, 0)> não é nulo")
chamada antiga: assertNull(d.getValue(0, 1))
nova chamada: assertNull(d.getValue(0, 1), "Era esperado nulo, mas " + result748 + " <d.getValue(0, 1)> não é nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("R1", d.getRowKey(0))
nova chamada: assertEquals("R1", d.getRowKey(0), "Era esperado valores iguais, mas  'R1' é diferente de " + result749 + " <d.getRowKey(0)>")
chamada antiga: assertEquals("R2", d.getRowKey(1))
nova chamada: assertEquals("R2", d.getRowKey(1), "Era esperado valores iguais, mas  'R2' é diferente de " + result750 + " <d.getRowKey(1)>")
chamada antiga: assertEquals("R1", d.getRowKey(0))
nova chamada: assertEquals("R1", d.getRowKey(0), "Era esperado valores iguais, mas  'R1' é diferente de " + result751 + " <d.getRowKey(0)>")
chamada antiga: assertEquals("R0", d.getRowKey(0))
nova chamada: assertEquals("R0", d.getRowKey(0), "Era esperado valores iguais, mas  'R0' é diferente de " + result752 + " <d.getRowKey(0)>")
chamada antiga: assertEquals("R1", d.getRowKey(1))
nova chamada: assertEquals("R1", d.getRowKey(1), "Era esperado valores iguais, mas  'R1' é diferente de " + result753 + " <d.getRowKey(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("C1", d.getColumnKey(0))
nova chamada: assertEquals("C1", d.getColumnKey(0), "Era esperado valores iguais, mas  'C1' é diferente de " + result754 + " <d.getColumnKey(0)>")
chamada antiga: assertEquals("C2", d.getColumnKey(1))
nova chamada: assertEquals("C2", d.getColumnKey(1), "Era esperado valores iguais, mas  'C2' é diferente de " + result755 + " <d.getColumnKey(1)>")
chamada antiga: assertEquals(0, d.getRowCount())
nova chamada: assertEquals(0, d.getRowCount(), "Era esperado valores iguais, mas  0 é diferente de " + result756 + " <d.getRowCount()>")
chamada antiga: assertEquals(0, d.getColumnCount())
nova chamada: assertEquals(0, d.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result757 + " <d.getColumnCount()>")
chamada antiga: assertEquals(2.0, d.getValue(0, 0))
nova chamada: assertEquals(2.0, d.getValue(0, 0), "Era esperado valores iguais, mas  2.0 é diferente de " + result758 + " <d.getValue(0, 0)>")
chamada antiga: assertEquals(2, d.getColumnCount())
nova chamada: assertEquals(2, d.getColumnCount(), "Era esperado valores iguais, mas  2 é diferente de " + result759 + " <d.getColumnCount()>")
chamada antiga: assertEquals(2, d.getRowCount())
nova chamada: assertEquals(2, d.getRowCount(), "Era esperado valores iguais, mas  2 é diferente de " + result760 + " <d.getRowCount()>")
chamada antiga: assertEquals(1, d.getColumnCount())
nova chamada: assertEquals(1, d.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result761 + " <d.getColumnCount()>")
chamada antiga: assertEquals(1, d.getRowCount())
nova chamada: assertEquals(1, d.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result762 + " <d.getRowCount()>")
chamada antiga: assertEquals(1.0, d.getValue(0, 0))
nova chamada: assertEquals(1.0, d.getValue(0, 0), "Era esperado valores iguais, mas  1.0 é diferente de " + result763 + " <d.getValue(0, 0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result764 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result765 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result766 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals(f1.hashCode(), f2.hashCode())
nova chamada: assertEquals(f1.hashCode(), f2.hashCode(), "Era esperado valores iguais, mas " + result767 + " <f1.hashCode()> é diferente de " + result768 + " <f2.hashCode()>")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertNotEquals(f1, f2)
nova chamada: assertNotEquals(f1, f2, "Era esperado valores diferentes, mas  f1 é igual a " + " f2")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals(f1.hashCode(), f2.hashCode())
nova chamada: assertEquals(f1.hashCode(), f2.hashCode(), "Era esperado valores iguais, mas " + result769 + " <f1.hashCode()> é diferente de " + result770 + " <f2.hashCode()>")
chamada antiga: assertTrue(Arrays.equals(new double[] { 1.0, 2.0 }, f.getCoefficients()))
nova chamada: assertTrue(Arrays.equals(new double[] { 1.0, 2.0 }, f.getCoefficients()), "Era esperado verdadeiro, mas " + result771 + " <Arrays.equals(new double[] { 1.0, 2.0 }, f.getCoefficients())> é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Arrays.equals(new double[] { 1.0, 2.0 }, c))
nova chamada: assertTrue(Arrays.equals(new double[] { 1.0, 2.0 }, c), "Era esperado verdadeiro, mas " + result772 + " <Arrays.equals(new double[] { 1.0, 2.0 }, c)> é falso")
chamada antiga: assertTrue(Arrays.equals(new double[] { 1.0, 2.0 }, f.getCoefficients()))
nova chamada: assertTrue(Arrays.equals(new double[] { 1.0, 2.0 }, f.getCoefficients()), "Era esperado verdadeiro, mas " + result773 + " <Arrays.equals(new double[] { 1.0, 2.0 }, f.getCoefficients())> é falso")
chamada antiga: assertEquals(1, f.getOrder())
nova chamada: assertEquals(1, f.getOrder(), "Era esperado valores iguais, mas  1 é diferente de " + result774 + " <f.getOrder()>")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result775 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result776 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result777 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals(f1.hashCode(), f2.hashCode())
nova chamada: assertEquals(f1.hashCode(), f2.hashCode(), "Era esperado valores iguais, mas " + result778 + " <f1.hashCode()> é diferente de " + result779 + " <f2.hashCode()>")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertNotEquals(f1, f2)
nova chamada: assertNotEquals(f1, f2, "Era esperado valores diferentes, mas  f1 é igual a " + " f2")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals(f1.hashCode(), f2.hashCode())
nova chamada: assertEquals(f1.hashCode(), f2.hashCode(), "Era esperado valores iguais, mas " + result780 + " <f1.hashCode()> é diferente de " + result781 + " <f2.hashCode()>")
chamada antiga: assertEquals("A", v.getKey())
nova chamada: assertEquals("A", v.getKey(), "Era esperado valores iguais, mas  'A' é diferente de " + result782 + " <v.getKey()>")
chamada antiga: assertEquals(1, v.getValue())
nova chamada: assertEquals(1, v.getValue(), "Era esperado valores iguais, mas  1 é diferente de " + result783 + " <v.getValue()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(v.getValue())
nova chamada: assertNull(v.getValue(), "Era esperado nulo, mas " + result784 + " <v.getValue()> não é nulo")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result785 + " <v1.equals(v2)> é falso")
chamada antiga: assertTrue(v2.equals(v1))
nova chamada: assertTrue(v2.equals(v1), "Era esperado verdadeiro, mas " + result786 + " <v2.equals(v1)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result787 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result788 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result789 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result790 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertFalse(v2.equals(v1))
nova chamada: assertFalse(v2.equals(v1), "Era esperado falso, mas " + result791 + " <v2.equals(v1)> é verdadeiro ")
chamada antiga: assertTrue(v1 != v2)
nova chamada: assertTrue(v1 != v2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.getClass() == v2.getClass())
nova chamada: assertTrue(v1.getClass() == v2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result792 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result793 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertEquals(v1, v2)
nova chamada: assertEquals(v1, v2, "Era esperado valores iguais, mas  v1 é diferente de " + " v2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result794 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result795 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result796 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result797 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result798 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result799 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertEquals(new Range(5.0, 6.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(5.0, 6.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + result800 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(1, dataset.getSeriesCount())
nova chamada: assertEquals(1, dataset.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result801 + " <dataset.getSeriesCount()>")
chamada antiga: assertEquals(0, dataset.getItemCount(0))
nova chamada: assertEquals(0, dataset.getItemCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result802 + " <dataset.getItemCount(0)>")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)), "Era esperado verdadeiro, mas " + result803 + " <Double.isNaN(dataset.getRangeLowerBound(false))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)), "Era esperado verdadeiro, mas " + result804 + " <Double.isNaN(dataset.getRangeUpperBound(false))> é falso")
chamada antiga: assertEquals(new Range(5.0, 6.0), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(5.0, 6.0), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + result805 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(5.0, 6.0), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(5.0, 6.0), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + result806 + " <d1.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(5.0, 6.5), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(5.0, 6.5), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(5.0, 6.5) é diferente de " + result807 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(5.0, 6.5), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(5.0, 6.5), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(5.0, 6.5) é diferente de " + result808 + " <d1.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(5.0, 7.5), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(5.0, 7.5), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(5.0, 7.5) é diferente de " + result809 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(5.0, 7.5), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(5.0, 7.5), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(5.0, 7.5) é diferente de " + result810 + " <d1.getRangeBounds(true)>")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result811 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result812 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result813 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result814 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result815 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result816 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result817 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result818 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result819 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals("Series 1", d1.getSeriesKey(0))
nova chamada: assertEquals("Series 1", d1.getSeriesKey(0), "Era esperado valores iguais, mas  'Series 1' é diferente de " + result820 + " <d1.getSeriesKey(0)>")
chamada antiga: assertTrue(values[0] > d.getStartXValue(0, 630))
nova chamada: assertTrue(values[0] > d.getStartXValue(0, 630), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(values[0] < d.getEndXValue(0, 630))
nova chamada: assertTrue(values[0] < d.getEndXValue(0, 630), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(new Number[0])))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(new Number[0])), "Era esperado verdadeiro, mas " + result821 + " <Double.isNaN(Statistics.calculateMean(new Number[0]))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(new Number[0], false)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(new Number[0], false)), "Era esperado verdadeiro, mas " + result822 + " <Double.isNaN(Statistics.calculateMean(new Number[0], false))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values)), "Era esperado verdadeiro, mas " + result823 + " <Double.isNaN(Statistics.calculateMean(values))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)), "Era esperado verdadeiro, mas " + result824 + " <Double.isNaN(Statistics.calculateMean(values, true))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values)), "Era esperado verdadeiro, mas " + result825 + " <Double.isNaN(Statistics.calculateMean(values))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)), "Era esperado verdadeiro, mas " + result826 + " <Double.isNaN(Statistics.calculateMean(values, true))> é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values)), "Era esperado verdadeiro, mas " + result827 + " <Double.isNaN(Statistics.calculateMean(values))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)), "Era esperado verdadeiro, mas " + result828 + " <Double.isNaN(Statistics.calculateMean(values, true))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values, false)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values, false)), "Era esperado verdadeiro, mas " + result829 + " <Double.isNaN(Statistics.calculateMean(values, false))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values)), "Era esperado verdadeiro, mas " + result830 + " <Double.isNaN(Statistics.calculateMean(values))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)), "Era esperado verdadeiro, mas " + result831 + " <Double.isNaN(Statistics.calculateMean(values, true))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values)), "Era esperado verdadeiro, mas " + result832 + " <Double.isNaN(Statistics.calculateMean(values))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values, true)), "Era esperado verdadeiro, mas " + result833 + " <Double.isNaN(Statistics.calculateMean(values, true))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMean(values)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMean(values)), "Era esperado verdadeiro, mas " + result834 + " <Double.isNaN(Statistics.calculateMean(values))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMedian(null, false)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMedian(null, false)), "Era esperado verdadeiro, mas " + result835 + " <Double.isNaN(Statistics.calculateMedian(null, false))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMedian(null, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMedian(null, true)), "Era esperado verdadeiro, mas " + result836 + " <Double.isNaN(Statistics.calculateMedian(null, true))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMedian(list, false)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMedian(list, false)), "Era esperado verdadeiro, mas " + result837 + " <Double.isNaN(Statistics.calculateMedian(list, false))> é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.calculateMedian(list, true)))
nova chamada: assertTrue(Double.isNaN(Statistics.calculateMedian(list, true)), "Era esperado verdadeiro, mas " + result838 + " <Double.isNaN(Statistics.calculateMedian(list, true))> é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Double.isNaN(Statistics.getStdDev(new Double[] { 1.0 })))
nova chamada: assertTrue(Double.isNaN(Statistics.getStdDev(new Double[] { 1.0 })), "Era esperado verdadeiro, mas " + result839 + " <Double.isNaN(Statistics.getStdDev(new Double[] { 1.0 }))> é falso")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result840 + " <b1.equals(b2)> é falso")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result841 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result842 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result843 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result844 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result845 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(0, d1.getItemCount(0))
nova chamada: assertEquals(0, d1.getItemCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result846 + " <d1.getItemCount(0)>")
chamada antiga: assertEquals(2, d1.getItemCount(0))
nova chamada: assertEquals(2, d1.getItemCount(0), "Era esperado valores iguais, mas  2 é diferente de " + result847 + " <d1.getItemCount(0)>")
chamada antiga: assertEquals(0, d1.getItemCount(0))
nova chamada: assertEquals(0, d1.getItemCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result848 + " <d1.getItemCount(0)>")
chamada antiga: assertNull(d.getRangeBounds(true))
nova chamada: assertNull(d.getRangeBounds(true), "Era esperado nulo, mas " + result849 + " <d.getRangeBounds(true)> não é nulo")
chamada antiga: assertEquals(new Range(4.5, 4.5), d.getRangeBounds(false))
nova chamada: assertEquals(new Range(4.5, 4.5), d.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(4.5, 4.5) é diferente de " + result850 + " <d.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(3.5, 5.5), d.getRangeBounds(true))
nova chamada: assertEquals(new Range(3.5, 5.5), d.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(3.5, 5.5) é diferente de " + result851 + " <d.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(0.5, 4.5), d.getRangeBounds(false))
nova chamada: assertEquals(new Range(0.5, 4.5), d.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(0.5, 4.5) é diferente de " + result852 + " <d.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.5, 5.5), d.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.5, 5.5), d.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.5, 5.5) é diferente de " + result853 + " <d.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(0.5, 4.5), d.getRangeBounds(false))
nova chamada: assertEquals(new Range(0.5, 4.5), d.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(0.5, 4.5) é diferente de " + result854 + " <d.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.5, 5.5), d.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.5, 5.5), d.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.5, 5.5) é diferente de " + result855 + " <d.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(Double.NEGATIVE_INFINITY, 4.5), d.getRangeBounds(false))
nova chamada: assertEquals(new Range(Double.NEGATIVE_INFINITY, 4.5), d.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(Double.NEGATIVE_INFINITY, 4.5) é diferente de " + result856 + " <d.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(Double.NEGATIVE_INFINITY, 5.5), d.getRangeBounds(true))
nova chamada: assertEquals(new Range(Double.NEGATIVE_INFINITY, 5.5), d.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(Double.NEGATIVE_INFINITY, 5.5) é diferente de " + result857 + " <d.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(0.5, Double.POSITIVE_INFINITY), d.getRangeBounds(false))
nova chamada: assertEquals(new Range(0.5, Double.POSITIVE_INFINITY), d.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(0.5, Double.POSITIVE_INFINITY) é diferente de " + result858 + " <d.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.5, Double.POSITIVE_INFINITY), d.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.5, Double.POSITIVE_INFINITY), d.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.5, Double.POSITIVE_INFINITY) é diferente de " + result859 + " <d.getRangeBounds(true)>")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result860 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result861 + " <d2.equals(d1)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result862 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result863 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(new Range(1.0, 1.0), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(1.0, 1.0), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result864 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.0, 3.0), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.0, 3.0), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.0, 3.0) é diferente de " + result865 + " <d1.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(10.0, 10.0), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(10.0, 10.0), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(10.0, 10.0) é diferente de " + result866 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-10.0, 30.0), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(-10.0, 30.0), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-10.0, 30.0) é diferente de " + result867 + " <d1.getRangeBounds(true)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(new Range(1.0, 1.0), data.getRangeBounds(false))
nova chamada: assertEquals(new Range(1.0, 1.0), data.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result868 + " <data.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(0.5, 1.5), data.getRangeBounds(true))
nova chamada: assertEquals(new Range(0.5, 1.5), data.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(0.5, 1.5) é diferente de " + result869 + " <data.getRangeBounds(true)>")
chamada antiga: assertEquals(1.5, d.getValue("R1", "C1"))
nova chamada: assertEquals(1.5, d.getValue("R1", "C1"), "Era esperado valores iguais, mas  1.5 é diferente de " + result870 + " <d.getValue('R1', 'C1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 0)
nova chamada: assertTrue(d.getRowCount() == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 1)
nova chamada: assertTrue(d.getRowCount() == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 2)
nova chamada: assertTrue(d.getRowCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getRowCount() == 2)
nova chamada: assertTrue(d.getRowCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 0)
nova chamada: assertTrue(d.getColumnCount() == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 1)
nova chamada: assertTrue(d.getColumnCount() == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 2)
nova chamada: assertTrue(d.getColumnCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d.getColumnCount() == 2)
nova chamada: assertTrue(d.getColumnCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result871 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result872 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result873 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result874 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result875 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result876 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result877 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result878 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(values, d1.getValues("R2", "C1"))
nova chamada: assertEquals(values, d1.getValues("R2", "C1"), "Era esperado valores iguais, mas  values é diferente de " + result879 + " <d1.getValues('R2', 'C1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result880 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result881 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result882 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result883 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Double.isNaN(q1))
nova chamada: assertTrue(Double.isNaN(q1), "Era esperado verdadeiro, mas " + result884 + " <Double.isNaN(q1)> é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Double.isNaN(q3))
nova chamada: assertTrue(Double.isNaN(q3), "Era esperado verdadeiro, mas " + result885 + " <Double.isNaN(q3)> é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result886 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i2.equals(i1))
nova chamada: assertTrue(i2.equals(i1), "Era esperado verdadeiro, mas " + result887 + " <i2.equals(i1)> é falso")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(bin1.accepts(0.0))
nova chamada: assertFalse(bin1.accepts(0.0), "Era esperado falso, mas " + result888 + " <bin1.accepts(0.0)> é verdadeiro ")
chamada antiga: assertTrue(bin1.accepts(1.0))
nova chamada: assertTrue(bin1.accepts(1.0), "Era esperado verdadeiro, mas " + result889 + " <bin1.accepts(1.0)> é falso")
chamada antiga: assertTrue(bin1.accepts(1.5))
nova chamada: assertTrue(bin1.accepts(1.5), "Era esperado verdadeiro, mas " + result890 + " <bin1.accepts(1.5)> é falso")
chamada antiga: assertTrue(bin1.accepts(2.0))
nova chamada: assertTrue(bin1.accepts(2.0), "Era esperado verdadeiro, mas " + result891 + " <bin1.accepts(2.0)> é falso")
chamada antiga: assertFalse(bin1.accepts(2.1))
nova chamada: assertFalse(bin1.accepts(2.1), "Era esperado falso, mas " + result892 + " <bin1.accepts(2.1)> é verdadeiro ")
chamada antiga: assertFalse(bin1.accepts(Double.NaN))
nova chamada: assertFalse(bin1.accepts(Double.NaN), "Era esperado falso, mas " + result893 + " <bin1.accepts(Double.NaN)> é verdadeiro ")
chamada antiga: assertFalse(bin2.accepts(0.0))
nova chamada: assertFalse(bin2.accepts(0.0), "Era esperado falso, mas " + result894 + " <bin2.accepts(0.0)> é verdadeiro ")
chamada antiga: assertFalse(bin2.accepts(1.0))
nova chamada: assertFalse(bin2.accepts(1.0), "Era esperado falso, mas " + result895 + " <bin2.accepts(1.0)> é verdadeiro ")
chamada antiga: assertTrue(bin2.accepts(1.5))
nova chamada: assertTrue(bin2.accepts(1.5), "Era esperado verdadeiro, mas " + result896 + " <bin2.accepts(1.5)> é falso")
chamada antiga: assertFalse(bin2.accepts(2.0))
nova chamada: assertFalse(bin2.accepts(2.0), "Era esperado falso, mas " + result897 + " <bin2.accepts(2.0)> é verdadeiro ")
chamada antiga: assertFalse(bin2.accepts(2.1))
nova chamada: assertFalse(bin2.accepts(2.1), "Era esperado falso, mas " + result898 + " <bin2.accepts(2.1)> é verdadeiro ")
chamada antiga: assertFalse(bin2.accepts(Double.NaN))
nova chamada: assertFalse(bin2.accepts(Double.NaN), "Era esperado falso, mas " + result899 + " <bin2.accepts(Double.NaN)> é verdadeiro ")
chamada antiga: assertTrue(b1.overlapsWith(b2))
nova chamada: assertTrue(b1.overlapsWith(b2), "Era esperado verdadeiro, mas " + result900 + " <b1.overlapsWith(b2)> é falso")
chamada antiga: assertTrue(b2.overlapsWith(b1))
nova chamada: assertTrue(b2.overlapsWith(b1), "Era esperado verdadeiro, mas " + result901 + " <b2.overlapsWith(b1)> é falso")
chamada antiga: assertFalse(b1.overlapsWith(b3))
nova chamada: assertFalse(b1.overlapsWith(b3), "Era esperado falso, mas " + result902 + " <b1.overlapsWith(b3)> é verdadeiro ")
chamada antiga: assertFalse(b3.overlapsWith(b1))
nova chamada: assertFalse(b3.overlapsWith(b1), "Era esperado falso, mas " + result903 + " <b3.overlapsWith(b1)> é verdadeiro ")
chamada antiga: assertTrue(b1.overlapsWith(b4))
nova chamada: assertTrue(b1.overlapsWith(b4), "Era esperado verdadeiro, mas " + result904 + " <b1.overlapsWith(b4)> é falso")
chamada antiga: assertTrue(b4.overlapsWith(b1))
nova chamada: assertTrue(b4.overlapsWith(b1), "Era esperado verdadeiro, mas " + result905 + " <b4.overlapsWith(b1)> é falso")
chamada antiga: assertFalse(b1.overlapsWith(b5))
nova chamada: assertFalse(b1.overlapsWith(b5), "Era esperado falso, mas " + result906 + " <b1.overlapsWith(b5)> é verdadeiro ")
chamada antiga: assertFalse(b5.overlapsWith(b1))
nova chamada: assertFalse(b5.overlapsWith(b1), "Era esperado falso, mas " + result907 + " <b5.overlapsWith(b1)> é verdadeiro ")
chamada antiga: assertTrue(b1.overlapsWith(b6))
nova chamada: assertTrue(b1.overlapsWith(b6), "Era esperado verdadeiro, mas " + result908 + " <b1.overlapsWith(b6)> é falso")
chamada antiga: assertTrue(b6.overlapsWith(b1))
nova chamada: assertTrue(b6.overlapsWith(b1), "Era esperado verdadeiro, mas " + result909 + " <b6.overlapsWith(b1)> é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result910 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b1))
nova chamada: assertTrue(b2.equals(b1), "Era esperado verdadeiro, mas " + result911 + " <b2.equals(b1)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result912 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result913 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result914 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result915 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result916 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result917 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result918 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result919 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result920 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result921 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result922 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result923 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result924 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result925 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result926 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result927 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result928 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result929 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1 instanceof Cloneable)
nova chamada: assertFalse(m1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result930 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result931 + " <d2.equals(d1)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result932 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result933 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertEquals(new Range(7.0, 8.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.0, 8.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.0, 8.0) é diferente de " + result934 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(7.5, 8.5), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.5, 8.5), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.5, 8.5) é diferente de " + result935 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(0, dataset.getColumnCount())
nova chamada: assertEquals(0, dataset.getColumnCount(), "Era esperado valores iguais, mas  0 é diferente de " + result936 + " <dataset.getColumnCount()>")
chamada antiga: assertEquals(0, dataset.getRowCount())
nova chamada: assertEquals(0, dataset.getRowCount(), "Era esperado valores iguais, mas  0 é diferente de " + result937 + " <dataset.getRowCount()>")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeLowerBound(false)), "Era esperado verdadeiro, mas " + result938 + " <Double.isNaN(dataset.getRangeLowerBound(false))> é falso")
chamada antiga: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)))
nova chamada: assertTrue(Double.isNaN(dataset.getRangeUpperBound(false)), "Era esperado verdadeiro, mas " + result939 + " <Double.isNaN(dataset.getRangeUpperBound(false))> é falso")
chamada antiga: assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.0, 8.0) é diferente de " + result940 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(7.0, 8.0), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(7.0, 8.0) é diferente de " + result941 + " <d1.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.5, 8.5) é diferente de " + result942 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(7.5, 8.5), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(7.5, 8.5) é diferente de " + result943 + " <d1.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.5, 9.5) é diferente de " + result944 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(7.5, 9.5), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(7.5, 9.5) é diferente de " + result945 + " <d1.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false))
nova chamada: assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(8.5, 9.6) é diferente de " + result946 + " <d1.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true))
nova chamada: assertEquals(new Range(8.5, 9.6), d1.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(8.5, 9.6) é diferente de " + result947 + " <d1.getRangeBounds(true)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(new Range(7.0, 8.0), data.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.0, 8.0), data.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.0, 8.0) é diferente de " + result948 + " <data.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(7.0, 8.0), data.getRangeBounds(true))
nova chamada: assertEquals(new Range(7.0, 8.0), data.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(7.0, 8.0) é diferente de " + result949 + " <data.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(7.0, 9.5), data.getRangeBounds(false))
nova chamada: assertEquals(new Range(7.0, 9.5), data.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(7.0, 9.5) é diferente de " + result950 + " <data.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(7.0, 9.5), data.getRangeBounds(true))
nova chamada: assertEquals(new Range(7.0, 9.5), data.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(7.0, 9.5) é diferente de " + result951 + " <data.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(8.5, 9.5), data.getRangeBounds(false))
nova chamada: assertEquals(new Range(8.5, 9.5), data.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(8.5, 9.5) é diferente de " + result952 + " <data.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(8.5, 9.5), data.getRangeBounds(true))
nova chamada: assertEquals(new Range(8.5, 9.5), data.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(8.5, 9.5) é diferente de " + result953 + " <data.getRangeBounds(true)>")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result954 + " <k1.equals(k2)> é falso")
chamada antiga: assertTrue(k2.equals(k1))
nova chamada: assertTrue(k2.equals(k1), "Era esperado verdadeiro, mas " + result955 + " <k2.equals(k1)> é falso")
chamada antiga: assertFalse(k1.equals(k2))
nova chamada: assertFalse(k1.equals(k2), "Era esperado falso, mas " + result956 + " <k1.equals(k2)> é verdadeiro ")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result957 + " <k1.equals(k2)> é falso")
chamada antiga: assertTrue(o1 != o2)
nova chamada: assertTrue(o1 != o2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(o1.getClass() == o2.getClass())
nova chamada: assertTrue(o1.getClass() == o2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(o1.equals(o2))
nova chamada: assertTrue(o1.equals(o2), "Era esperado verdadeiro, mas " + result958 + " <o1.equals(o2)> é falso")
chamada antiga: assertFalse(o1.equals(o2))
nova chamada: assertFalse(o1.equals(o2), "Era esperado falso, mas " + result959 + " <o1.equals(o2)> é verdadeiro ")
chamada antiga: assertEquals(ko2D1, ko2D2)
nova chamada: assertEquals(ko2D1, ko2D2, "Era esperado valores iguais, mas  ko2D1 é diferente de " + " ko2D2")
chamada antiga: assertEquals("Obj1", data.getObject(0, 0))
nova chamada: assertEquals("Obj1", data.getObject(0, 0), "Era esperado valores iguais, mas  'Obj1' é diferente de " + result960 + " <data.getObject(0, 0)>")
chamada antiga: assertEquals("Obj2", data.getObject(1, 1))
nova chamada: assertEquals("Obj2", data.getObject(1, 1), "Era esperado valores iguais, mas  'Obj2' é diferente de " + result961 + " <data.getObject(1, 1)>")
chamada antiga: assertNull(data.getObject(0, 1))
nova chamada: assertNull(data.getObject(0, 1), "Era esperado nulo, mas " + result962 + " <data.getObject(0, 1)> não é nulo")
chamada antiga: assertNull(data.getObject(1, 0))
nova chamada: assertNull(data.getObject(1, 0), "Era esperado nulo, mas " + result963 + " <data.getObject(1, 0)> não é nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("Obj1", data.getObject("R1", "C1"))
nova chamada: assertEquals("Obj1", data.getObject("R1", "C1"), "Era esperado valores iguais, mas  'Obj1' é diferente de " + result964 + " <data.getObject('R1', 'C1')>")
chamada antiga: assertEquals("Obj2", data.getObject("R2", "C2"))
nova chamada: assertEquals("Obj2", data.getObject("R2", "C2"), "Era esperado valores iguais, mas  'Obj2' é diferente de " + result965 + " <data.getObject('R2', 'C2')>")
chamada antiga: assertNull(data.getObject("R1", "C2"))
nova chamada: assertNull(data.getObject("R1", "C2"), "Era esperado nulo, mas " + result966 + " <data.getObject('R1', 'C2')> não é nulo")
chamada antiga: assertNull(data.getObject("R2", "C1"))
nova chamada: assertNull(data.getObject("R2", "C1"), "Era esperado nulo, mas " + result967 + " <data.getObject('R2', 'C1')> não é nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("Obj1", data.getObject("R1", "C1"))
nova chamada: assertEquals("Obj1", data.getObject("R1", "C1"), "Era esperado valores iguais, mas  'Obj1' é diferente de " + result968 + " <data.getObject('R1', 'C1')>")
chamada antiga: assertEquals("Obj2", data.getObject("R2", "C2"))
nova chamada: assertEquals("Obj2", data.getObject("R2", "C2"), "Era esperado valores iguais, mas  'Obj2' é diferente de " + result969 + " <data.getObject('R2', 'C2')>")
chamada antiga: assertNull(data.getObject("R1", "C2"))
nova chamada: assertNull(data.getObject("R1", "C2"), "Era esperado nulo, mas " + result970 + " <data.getObject('R1', 'C2')> não é nulo")
chamada antiga: assertNull(data.getObject("R2", "C1"))
nova chamada: assertNull(data.getObject("R2", "C1"), "Era esperado nulo, mas " + result971 + " <data.getObject('R2', 'C1')> não é nulo")
chamada antiga: assertEquals("ABC", data.getObject("R2", "C2"))
nova chamada: assertEquals("ABC", data.getObject("R2", "C2"), "Era esperado valores iguais, mas  'ABC' é diferente de " + result972 + " <data.getObject('R2', 'C2')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, data.getRowCount())
nova chamada: assertEquals(1, data.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result973 + " <data.getRowCount()>")
chamada antiga: assertEquals("Obj2", data.getObject(0, 1))
nova chamada: assertEquals("Obj2", data.getObject(0, 1), "Era esperado valores iguais, mas  'Obj2' é diferente de " + result974 + " <data.getObject(0, 1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, data.getColumnCount())
nova chamada: assertEquals(1, data.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result975 + " <data.getColumnCount()>")
chamada antiga: assertEquals("Obj2", data.getObject(1, 0))
nova chamada: assertEquals("Obj2", data.getObject(1, 0), "Era esperado valores iguais, mas  'Obj2' é diferente de " + result976 + " <data.getObject(1, 0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, data.getRowCount())
nova chamada: assertEquals(1, data.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result977 + " <data.getRowCount()>")
chamada antiga: assertEquals("Obj1", data.getObject(0, 0))
nova chamada: assertEquals("Obj1", data.getObject(0, 0), "Era esperado valores iguais, mas  'Obj1' é diferente de " + result978 + " <data.getObject(0, 0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, data.getColumnCount())
nova chamada: assertEquals(1, data.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result979 + " <data.getColumnCount()>")
chamada antiga: assertEquals("Obj1", data.getObject(0, 0))
nova chamada: assertEquals("Obj1", data.getObject(0, 0), "Era esperado valores iguais, mas  'Obj1' é diferente de " + result980 + " <data.getObject(0, 0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, data.getRowCount())
nova chamada: assertEquals(1, data.getRowCount(), "Era esperado valores iguais, mas  1 é diferente de " + result981 + " <data.getRowCount()>")
chamada antiga: assertEquals(1, data.getColumnCount())
nova chamada: assertEquals(1, data.getColumnCount(), "Era esperado valores iguais, mas  1 é diferente de " + result982 + " <data.getColumnCount()>")
chamada antiga: assertEquals("Obj1", data.getObject(0, 0))
nova chamada: assertEquals("Obj1", data.getObject(0, 0), "Era esperado valores iguais, mas  'Obj1' é diferente de " + result983 + " <data.getObject(0, 0)>")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result984 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t2.equals(t1))
nova chamada: assertTrue(t2.equals(t1), "Era esperado verdadeiro, mas " + result985 + " <t2.equals(t1)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result986 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result987 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result988 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result989 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result990 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result991 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result992 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result993 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result994 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(0, t1.getSubtaskCount())
nova chamada: assertEquals(0, t1.getSubtaskCount(), "Era esperado valores iguais, mas  0 é diferente de " + result995 + " <t1.getSubtaskCount()>")
chamada antiga: assertEquals(1, t1.getSubtaskCount())
nova chamada: assertEquals(1, t1.getSubtaskCount(), "Era esperado valores iguais, mas  1 é diferente de " + result996 + " <t1.getSubtaskCount()>")
chamada antiga: assertEquals(2, t1.getSubtaskCount())
nova chamada: assertEquals(2, t1.getSubtaskCount(), "Era esperado valores iguais, mas  2 é diferente de " + result997 + " <t1.getSubtaskCount()>")
chamada antiga: assertEquals(3, t1.getSubtaskCount())
nova chamada: assertEquals(3, t1.getSubtaskCount(), "Era esperado valores iguais, mas  3 é diferente de " + result998 + " <t1.getSubtaskCount()>")
chamada antiga: assertEquals(2, t1.getSubtaskCount())
nova chamada: assertEquals(2, t1.getSubtaskCount(), "Era esperado valores iguais, mas  2 é diferente de " + result999 + " <t1.getSubtaskCount()>")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1000 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1001 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1002 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1003 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1004 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1005 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1006 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1007 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1008 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1009 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1010 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1011 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(2, c.getSeriesCount())
nova chamada: assertEquals(2, c.getSeriesCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1012 + " <c.getSeriesCount()>")
chamada antiga: assertEquals("S1", c.getSeriesKey(0))
nova chamada: assertEquals("S1", c.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result1013 + " <c.getSeriesKey(0)>")
chamada antiga: assertEquals("S2", c.getSeriesKey(1))
nova chamada: assertEquals("S2", c.getSeriesKey(1), "Era esperado valores iguais, mas  'S2' é diferente de " + result1014 + " <c.getSeriesKey(1)>")
chamada antiga: assertEquals(2, c.getRowCount())
nova chamada: assertEquals(2, c.getRowCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1015 + " <c.getRowCount()>")
chamada antiga: assertEquals("S1", c.getRowKey(0))
nova chamada: assertEquals("S1", c.getRowKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result1016 + " <c.getRowKey(0)>")
chamada antiga: assertEquals("S2", c.getRowKey(1))
nova chamada: assertEquals("S2", c.getRowKey(1), "Era esperado valores iguais, mas  'S2' é diferente de " + result1017 + " <c.getRowKey(1)>")
chamada antiga: assertEquals(0, c.getRowIndex("S1"))
nova chamada: assertEquals(0, c.getRowIndex("S1"), "Era esperado valores iguais, mas  0 é diferente de " + result1018 + " <c.getRowIndex('S1')>")
chamada antiga: assertEquals(1, c.getRowIndex("S2"))
nova chamada: assertEquals(1, c.getRowIndex("S2"), "Era esperado valores iguais, mas  1 é diferente de " + result1019 + " <c.getRowIndex('S2')>")
chamada antiga: assertEquals(1L, c.getValue("S1", "Task 1"))
nova chamada: assertEquals(1L, c.getValue("S1", "Task 1"), "Era esperado valores iguais, mas  1L é diferente de " + result1020 + " <c.getValue('S1', 'Task 1')>")
chamada antiga: assertEquals(3L, c.getValue("S1", "Task 2"))
nova chamada: assertEquals(3L, c.getValue("S1", "Task 2"), "Era esperado valores iguais, mas  3L é diferente de " + result1021 + " <c.getValue('S1', 'Task 2')>")
chamada antiga: assertEquals(5L, c.getValue("S2", "Task 3"))
nova chamada: assertEquals(5L, c.getValue("S2", "Task 3"), "Era esperado valores iguais, mas  5L é diferente de " + result1022 + " <c.getValue('S2', 'Task 3')>")
chamada antiga: assertEquals(1L, c.getValue(0, 0))
nova chamada: assertEquals(1L, c.getValue(0, 0), "Era esperado valores iguais, mas  1L é diferente de " + result1023 + " <c.getValue(0, 0)>")
chamada antiga: assertEquals(3L, c.getValue(0, 1))
nova chamada: assertEquals(3L, c.getValue(0, 1), "Era esperado valores iguais, mas  3L é diferente de " + result1024 + " <c.getValue(0, 1)>")
chamada antiga: assertEquals(null, c.getValue(0, 2))
nova chamada: assertEquals(null, c.getValue(0, 2), "Era esperado valores iguais, mas  null é diferente de " + result1025 + " <c.getValue(0, 2)>")
chamada antiga: assertEquals(null, c.getValue(1, 0))
nova chamada: assertEquals(null, c.getValue(1, 0), "Era esperado valores iguais, mas  null é diferente de " + result1026 + " <c.getValue(1, 0)>")
chamada antiga: assertEquals(null, c.getValue(1, 1))
nova chamada: assertEquals(null, c.getValue(1, 1), "Era esperado valores iguais, mas  null é diferente de " + result1027 + " <c.getValue(1, 1)>")
chamada antiga: assertEquals(5L, c.getValue(1, 2))
nova chamada: assertEquals(5L, c.getValue(1, 2), "Era esperado valores iguais, mas  5L é diferente de " + result1028 + " <c.getValue(1, 2)>")
chamada antiga: assertEquals(1L, c.getStartValue("S1", "Task 1"))
nova chamada: assertEquals(1L, c.getStartValue("S1", "Task 1"), "Era esperado valores iguais, mas  1L é diferente de " + result1029 + " <c.getStartValue('S1', 'Task 1')>")
chamada antiga: assertEquals(3L, c.getStartValue("S1", "Task 2"))
nova chamada: assertEquals(3L, c.getStartValue("S1", "Task 2"), "Era esperado valores iguais, mas  3L é diferente de " + result1030 + " <c.getStartValue('S1', 'Task 2')>")
chamada antiga: assertEquals(5L, c.getStartValue("S2", "Task 3"))
nova chamada: assertEquals(5L, c.getStartValue("S2", "Task 3"), "Era esperado valores iguais, mas  5L é diferente de " + result1031 + " <c.getStartValue('S2', 'Task 3')>")
chamada antiga: assertEquals(1L, c.getStartValue(0, 0))
nova chamada: assertEquals(1L, c.getStartValue(0, 0), "Era esperado valores iguais, mas  1L é diferente de " + result1032 + " <c.getStartValue(0, 0)>")
chamada antiga: assertEquals(3L, c.getStartValue(0, 1))
nova chamada: assertEquals(3L, c.getStartValue(0, 1), "Era esperado valores iguais, mas  3L é diferente de " + result1033 + " <c.getStartValue(0, 1)>")
chamada antiga: assertEquals(null, c.getStartValue(0, 2))
nova chamada: assertEquals(null, c.getStartValue(0, 2), "Era esperado valores iguais, mas  null é diferente de " + result1034 + " <c.getStartValue(0, 2)>")
chamada antiga: assertEquals(null, c.getStartValue(1, 0))
nova chamada: assertEquals(null, c.getStartValue(1, 0), "Era esperado valores iguais, mas  null é diferente de " + result1035 + " <c.getStartValue(1, 0)>")
chamada antiga: assertEquals(null, c.getStartValue(1, 1))
nova chamada: assertEquals(null, c.getStartValue(1, 1), "Era esperado valores iguais, mas  null é diferente de " + result1036 + " <c.getStartValue(1, 1)>")
chamada antiga: assertEquals(5L, c.getStartValue(1, 2))
nova chamada: assertEquals(5L, c.getStartValue(1, 2), "Era esperado valores iguais, mas  5L é diferente de " + result1037 + " <c.getStartValue(1, 2)>")
chamada antiga: assertEquals(100L, c3.getStartValue(0, 0))
nova chamada: assertEquals(100L, c3.getStartValue(0, 0), "Era esperado valores iguais, mas  100L é diferente de " + result1038 + " <c3.getStartValue(0, 0)>")
chamada antiga: assertEquals(220L, c3.getStartValue(0, 1))
nova chamada: assertEquals(220L, c3.getStartValue(0, 1), "Era esperado valores iguais, mas  220L é diferente de " + result1039 + " <c3.getStartValue(0, 1)>")
chamada antiga: assertTrue(c3.getStartValue(1, 0) == null)
nova chamada: assertTrue(c3.getStartValue(1, 0) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2220L, c3.getStartValue(1, 1))
nova chamada: assertEquals(2220L, c3.getStartValue(1, 1), "Era esperado valores iguais, mas  2220L é diferente de " + result1040 + " <c3.getStartValue(1, 1)>")
chamada antiga: assertEquals(10L, c.getStartValue("S1", "Task 1", 0))
nova chamada: assertEquals(10L, c.getStartValue("S1", "Task 1", 0), "Era esperado valores iguais, mas  10L é diferente de " + result1041 + " <c.getStartValue('S1', 'Task 1', 0)>")
chamada antiga: assertEquals(16L, c.getStartValue("S1", "Task 1", 1))
nova chamada: assertEquals(16L, c.getStartValue("S1", "Task 1", 1), "Era esperado valores iguais, mas  16L é diferente de " + result1042 + " <c.getStartValue('S1', 'Task 1', 1)>")
chamada antiga: assertEquals(30L, c.getStartValue("S1", "Task 2", 0))
nova chamada: assertEquals(30L, c.getStartValue("S1", "Task 2", 0), "Era esperado valores iguais, mas  30L é diferente de " + result1043 + " <c.getStartValue('S1', 'Task 2', 0)>")
chamada antiga: assertEquals(36L, c.getStartValue("S1", "Task 2", 1))
nova chamada: assertEquals(36L, c.getStartValue("S1", "Task 2", 1), "Era esperado valores iguais, mas  36L é diferente de " + result1044 + " <c.getStartValue('S1', 'Task 2', 1)>")
chamada antiga: assertEquals(50L, c.getStartValue("S2", "Task 3", 0))
nova chamada: assertEquals(50L, c.getStartValue("S2", "Task 3", 0), "Era esperado valores iguais, mas  50L é diferente de " + result1045 + " <c.getStartValue('S2', 'Task 3', 0)>")
chamada antiga: assertEquals(56L, c.getStartValue("S2", "Task 3", 1))
nova chamada: assertEquals(56L, c.getStartValue("S2", "Task 3", 1), "Era esperado valores iguais, mas  56L é diferente de " + result1046 + " <c.getStartValue('S2', 'Task 3', 1)>")
chamada antiga: assertEquals(10L, c.getStartValue(0, 0, 0))
nova chamada: assertEquals(10L, c.getStartValue(0, 0, 0), "Era esperado valores iguais, mas  10L é diferente de " + result1047 + " <c.getStartValue(0, 0, 0)>")
chamada antiga: assertEquals(16L, c.getStartValue(0, 0, 1))
nova chamada: assertEquals(16L, c.getStartValue(0, 0, 1), "Era esperado valores iguais, mas  16L é diferente de " + result1048 + " <c.getStartValue(0, 0, 1)>")
chamada antiga: assertEquals(30L, c.getStartValue(0, 1, 0))
nova chamada: assertEquals(30L, c.getStartValue(0, 1, 0), "Era esperado valores iguais, mas  30L é diferente de " + result1049 + " <c.getStartValue(0, 1, 0)>")
chamada antiga: assertEquals(36L, c.getStartValue(0, 1, 1))
nova chamada: assertEquals(36L, c.getStartValue(0, 1, 1), "Era esperado valores iguais, mas  36L é diferente de " + result1050 + " <c.getStartValue(0, 1, 1)>")
chamada antiga: assertEquals(50L, c.getStartValue(1, 2, 0))
nova chamada: assertEquals(50L, c.getStartValue(1, 2, 0), "Era esperado valores iguais, mas  50L é diferente de " + result1051 + " <c.getStartValue(1, 2, 0)>")
chamada antiga: assertEquals(56L, c.getStartValue(1, 2, 1))
nova chamada: assertEquals(56L, c.getStartValue(1, 2, 1), "Era esperado valores iguais, mas  56L é diferente de " + result1052 + " <c.getStartValue(1, 2, 1)>")
chamada antiga: assertEquals(11L, c3.getStartValue(0, 0, 0))
nova chamada: assertEquals(11L, c3.getStartValue(0, 0, 0), "Era esperado valores iguais, mas  11L é diferente de " + result1053 + " <c3.getStartValue(0, 0, 0)>")
chamada antiga: assertEquals(22L, c3.getStartValue(0, 1, 0))
nova chamada: assertEquals(22L, c3.getStartValue(0, 1, 0), "Era esperado valores iguais, mas  22L é diferente de " + result1054 + " <c3.getStartValue(0, 1, 0)>")
chamada antiga: assertEquals(33L, c3.getStartValue(0, 1, 1))
nova chamada: assertEquals(33L, c3.getStartValue(0, 1, 1), "Era esperado valores iguais, mas  33L é diferente de " + result1055 + " <c3.getStartValue(0, 1, 1)>")
chamada antiga: assertTrue(c3.getStartValue(1, 0, 0) == null)
nova chamada: assertTrue(c3.getStartValue(1, 0, 0) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(44L, c3.getStartValue(1, 1, 0))
nova chamada: assertEquals(44L, c3.getStartValue(1, 1, 0), "Era esperado valores iguais, mas  44L é diferente de " + result1056 + " <c3.getStartValue(1, 1, 0)>")
chamada antiga: assertEquals(55L, c3.getStartValue(1, 1, 1))
nova chamada: assertEquals(55L, c3.getStartValue(1, 1, 1), "Era esperado valores iguais, mas  55L é diferente de " + result1057 + " <c3.getStartValue(1, 1, 1)>")
chamada antiga: assertEquals(66L, c3.getStartValue(1, 1, 2))
nova chamada: assertEquals(66L, c3.getStartValue(1, 1, 2), "Era esperado valores iguais, mas  66L é diferente de " + result1058 + " <c3.getStartValue(1, 1, 2)>")
chamada antiga: assertTrue(millis == null)
nova chamada: assertTrue(millis == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2L, c.getEndValue("S1", "Task 1"))
nova chamada: assertEquals(2L, c.getEndValue("S1", "Task 1"), "Era esperado valores iguais, mas  2L é diferente de " + result1059 + " <c.getEndValue('S1', 'Task 1')>")
chamada antiga: assertEquals(4L, c.getEndValue("S1", "Task 2"))
nova chamada: assertEquals(4L, c.getEndValue("S1", "Task 2"), "Era esperado valores iguais, mas  4L é diferente de " + result1060 + " <c.getEndValue('S1', 'Task 2')>")
chamada antiga: assertEquals(6L, c.getEndValue("S2", "Task 3"))
nova chamada: assertEquals(6L, c.getEndValue("S2", "Task 3"), "Era esperado valores iguais, mas  6L é diferente de " + result1061 + " <c.getEndValue('S2', 'Task 3')>")
chamada antiga: assertEquals(2L, c.getEndValue(0, 0))
nova chamada: assertEquals(2L, c.getEndValue(0, 0), "Era esperado valores iguais, mas  2L é diferente de " + result1062 + " <c.getEndValue(0, 0)>")
chamada antiga: assertEquals(4L, c.getEndValue(0, 1))
nova chamada: assertEquals(4L, c.getEndValue(0, 1), "Era esperado valores iguais, mas  4L é diferente de " + result1063 + " <c.getEndValue(0, 1)>")
chamada antiga: assertEquals(null, c.getEndValue(0, 2))
nova chamada: assertEquals(null, c.getEndValue(0, 2), "Era esperado valores iguais, mas  null é diferente de " + result1064 + " <c.getEndValue(0, 2)>")
chamada antiga: assertEquals(null, c.getEndValue(1, 0))
nova chamada: assertEquals(null, c.getEndValue(1, 0), "Era esperado valores iguais, mas  null é diferente de " + result1065 + " <c.getEndValue(1, 0)>")
chamada antiga: assertEquals(null, c.getEndValue(1, 1))
nova chamada: assertEquals(null, c.getEndValue(1, 1), "Era esperado valores iguais, mas  null é diferente de " + result1066 + " <c.getEndValue(1, 1)>")
chamada antiga: assertEquals(6L, c.getEndValue(1, 2))
nova chamada: assertEquals(6L, c.getEndValue(1, 2), "Era esperado valores iguais, mas  6L é diferente de " + result1067 + " <c.getEndValue(1, 2)>")
chamada antiga: assertEquals(200L, c3.getEndValue(0, 0))
nova chamada: assertEquals(200L, c3.getEndValue(0, 0), "Era esperado valores iguais, mas  200L é diferente de " + result1068 + " <c3.getEndValue(0, 0)>")
chamada antiga: assertEquals(350L, c3.getEndValue(0, 1))
nova chamada: assertEquals(350L, c3.getEndValue(0, 1), "Era esperado valores iguais, mas  350L é diferente de " + result1069 + " <c3.getEndValue(0, 1)>")
chamada antiga: assertTrue(c3.getEndValue(1, 0) == null)
nova chamada: assertTrue(c3.getEndValue(1, 0) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3350L, c3.getEndValue(1, 1))
nova chamada: assertEquals(3350L, c3.getEndValue(1, 1), "Era esperado valores iguais, mas  3350L é diferente de " + result1070 + " <c3.getEndValue(1, 1)>")
chamada antiga: assertEquals(15L, c.getEndValue("S1", "Task 1", 0))
nova chamada: assertEquals(15L, c.getEndValue("S1", "Task 1", 0), "Era esperado valores iguais, mas  15L é diferente de " + result1071 + " <c.getEndValue('S1', 'Task 1', 0)>")
chamada antiga: assertEquals(20L, c.getEndValue("S1", "Task 1", 1))
nova chamada: assertEquals(20L, c.getEndValue("S1", "Task 1", 1), "Era esperado valores iguais, mas  20L é diferente de " + result1072 + " <c.getEndValue('S1', 'Task 1', 1)>")
chamada antiga: assertEquals(35L, c.getEndValue("S1", "Task 2", 0))
nova chamada: assertEquals(35L, c.getEndValue("S1", "Task 2", 0), "Era esperado valores iguais, mas  35L é diferente de " + result1073 + " <c.getEndValue('S1', 'Task 2', 0)>")
chamada antiga: assertEquals(40L, c.getEndValue("S1", "Task 2", 1))
nova chamada: assertEquals(40L, c.getEndValue("S1", "Task 2", 1), "Era esperado valores iguais, mas  40L é diferente de " + result1074 + " <c.getEndValue('S1', 'Task 2', 1)>")
chamada antiga: assertEquals(55L, c.getEndValue("S2", "Task 3", 0))
nova chamada: assertEquals(55L, c.getEndValue("S2", "Task 3", 0), "Era esperado valores iguais, mas  55L é diferente de " + result1075 + " <c.getEndValue('S2', 'Task 3', 0)>")
chamada antiga: assertEquals(60L, c.getEndValue("S2", "Task 3", 1))
nova chamada: assertEquals(60L, c.getEndValue("S2", "Task 3", 1), "Era esperado valores iguais, mas  60L é diferente de " + result1076 + " <c.getEndValue('S2', 'Task 3', 1)>")
chamada antiga: assertEquals(15L, c.getEndValue(0, 0, 0))
nova chamada: assertEquals(15L, c.getEndValue(0, 0, 0), "Era esperado valores iguais, mas  15L é diferente de " + result1077 + " <c.getEndValue(0, 0, 0)>")
chamada antiga: assertEquals(20L, c.getEndValue(0, 0, 1))
nova chamada: assertEquals(20L, c.getEndValue(0, 0, 1), "Era esperado valores iguais, mas  20L é diferente de " + result1078 + " <c.getEndValue(0, 0, 1)>")
chamada antiga: assertEquals(35L, c.getEndValue(0, 1, 0))
nova chamada: assertEquals(35L, c.getEndValue(0, 1, 0), "Era esperado valores iguais, mas  35L é diferente de " + result1079 + " <c.getEndValue(0, 1, 0)>")
chamada antiga: assertEquals(40L, c.getEndValue(0, 1, 1))
nova chamada: assertEquals(40L, c.getEndValue(0, 1, 1), "Era esperado valores iguais, mas  40L é diferente de " + result1080 + " <c.getEndValue(0, 1, 1)>")
chamada antiga: assertEquals(55L, c.getEndValue(1, 2, 0))
nova chamada: assertEquals(55L, c.getEndValue(1, 2, 0), "Era esperado valores iguais, mas  55L é diferente de " + result1081 + " <c.getEndValue(1, 2, 0)>")
chamada antiga: assertEquals(60L, c.getEndValue(1, 2, 1))
nova chamada: assertEquals(60L, c.getEndValue(1, 2, 1), "Era esperado valores iguais, mas  60L é diferente de " + result1082 + " <c.getEndValue(1, 2, 1)>")
chamada antiga: assertEquals(111L, c3.getEndValue(0, 0, 0))
nova chamada: assertEquals(111L, c3.getEndValue(0, 0, 0), "Era esperado valores iguais, mas  111L é diferente de " + result1083 + " <c3.getEndValue(0, 0, 0)>")
chamada antiga: assertEquals(222L, c3.getEndValue(0, 1, 0))
nova chamada: assertEquals(222L, c3.getEndValue(0, 1, 0), "Era esperado valores iguais, mas  222L é diferente de " + result1084 + " <c3.getEndValue(0, 1, 0)>")
chamada antiga: assertEquals(333L, c3.getEndValue(0, 1, 1))
nova chamada: assertEquals(333L, c3.getEndValue(0, 1, 1), "Era esperado valores iguais, mas  333L é diferente de " + result1085 + " <c3.getEndValue(0, 1, 1)>")
chamada antiga: assertTrue(c3.getEndValue(1, 0, 0) == null)
nova chamada: assertTrue(c3.getEndValue(1, 0, 0) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(444L, c3.getEndValue(1, 1, 0))
nova chamada: assertEquals(444L, c3.getEndValue(1, 1, 0), "Era esperado valores iguais, mas  444L é diferente de " + result1086 + " <c3.getEndValue(1, 1, 0)>")
chamada antiga: assertEquals(555L, c3.getEndValue(1, 1, 1))
nova chamada: assertEquals(555L, c3.getEndValue(1, 1, 1), "Era esperado valores iguais, mas  555L é diferente de " + result1087 + " <c3.getEndValue(1, 1, 1)>")
chamada antiga: assertEquals(666L, c3.getEndValue(1, 1, 2))
nova chamada: assertEquals(666L, c3.getEndValue(1, 1, 2), "Era esperado valores iguais, mas  666L é diferente de " + result1088 + " <c3.getEndValue(1, 1, 2)>")
chamada antiga: assertTrue(millis == null)
nova chamada: assertTrue(millis == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0.10, c.getPercentComplete("S1", "Task 1"))
nova chamada: assertEquals(0.10, c.getPercentComplete("S1", "Task 1"), "Era esperado valores iguais, mas  0.10 é diferente de " + result1089 + " <c.getPercentComplete('S1', 'Task 1')>")
chamada antiga: assertEquals(0.20, c.getPercentComplete("S1", "Task 2"))
nova chamada: assertEquals(0.20, c.getPercentComplete("S1", "Task 2"), "Era esperado valores iguais, mas  0.20 é diferente de " + result1090 + " <c.getPercentComplete('S1', 'Task 2')>")
chamada antiga: assertEquals(0.30, c.getPercentComplete("S2", "Task 3"))
nova chamada: assertEquals(0.30, c.getPercentComplete("S2", "Task 3"), "Era esperado valores iguais, mas  0.30 é diferente de " + result1091 + " <c.getPercentComplete('S2', 'Task 3')>")
chamada antiga: assertEquals(0.10, c.getPercentComplete(0, 0))
nova chamada: assertEquals(0.10, c.getPercentComplete(0, 0), "Era esperado valores iguais, mas  0.10 é diferente de " + result1092 + " <c.getPercentComplete(0, 0)>")
chamada antiga: assertEquals(0.20, c.getPercentComplete(0, 1))
nova chamada: assertEquals(0.20, c.getPercentComplete(0, 1), "Era esperado valores iguais, mas  0.20 é diferente de " + result1093 + " <c.getPercentComplete(0, 1)>")
chamada antiga: assertEquals(null, c.getPercentComplete(0, 2))
nova chamada: assertEquals(null, c.getPercentComplete(0, 2), "Era esperado valores iguais, mas  null é diferente de " + result1094 + " <c.getPercentComplete(0, 2)>")
chamada antiga: assertEquals(null, c.getPercentComplete(1, 0))
nova chamada: assertEquals(null, c.getPercentComplete(1, 0), "Era esperado valores iguais, mas  null é diferente de " + result1095 + " <c.getPercentComplete(1, 0)>")
chamada antiga: assertEquals(null, c.getPercentComplete(1, 1))
nova chamada: assertEquals(null, c.getPercentComplete(1, 1), "Era esperado valores iguais, mas  null é diferente de " + result1096 + " <c.getPercentComplete(1, 1)>")
chamada antiga: assertEquals(0.30, c.getPercentComplete(1, 2))
nova chamada: assertEquals(0.30, c.getPercentComplete(1, 2), "Era esperado valores iguais, mas  0.30 é diferente de " + result1097 + " <c.getPercentComplete(1, 2)>")
chamada antiga: assertEquals(0.1, c3.getPercentComplete(0, 0))
nova chamada: assertEquals(0.1, c3.getPercentComplete(0, 0), "Era esperado valores iguais, mas  0.1 é diferente de " + result1098 + " <c3.getPercentComplete(0, 0)>")
chamada antiga: assertEquals(0.2, c3.getPercentComplete(0, 1))
nova chamada: assertEquals(0.2, c3.getPercentComplete(0, 1), "Era esperado valores iguais, mas  0.2 é diferente de " + result1099 + " <c3.getPercentComplete(0, 1)>")
chamada antiga: assertTrue(c3.getPercentComplete(1, 0) == null)
nova chamada: assertTrue(c3.getPercentComplete(1, 0) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0.3, c3.getPercentComplete(1, 1))
nova chamada: assertEquals(0.3, c3.getPercentComplete(1, 1), "Era esperado valores iguais, mas  0.3 é diferente de " + result1100 + " <c3.getPercentComplete(1, 1)>")
chamada antiga: assertEquals(0.111, c3.getPercentComplete(0, 0, 0))
nova chamada: assertEquals(0.111, c3.getPercentComplete(0, 0, 0), "Era esperado valores iguais, mas  0.111 é diferente de " + result1101 + " <c3.getPercentComplete(0, 0, 0)>")
chamada antiga: assertEquals(0.222, c3.getPercentComplete(0, 1, 0))
nova chamada: assertEquals(0.222, c3.getPercentComplete(0, 1, 0), "Era esperado valores iguais, mas  0.222 é diferente de " + result1102 + " <c3.getPercentComplete(0, 1, 0)>")
chamada antiga: assertEquals(0.333, c3.getPercentComplete(0, 1, 1))
nova chamada: assertEquals(0.333, c3.getPercentComplete(0, 1, 1), "Era esperado valores iguais, mas  0.333 é diferente de " + result1103 + " <c3.getPercentComplete(0, 1, 1)>")
chamada antiga: assertEquals(0.444, c3.getPercentComplete(1, 1, 0))
nova chamada: assertEquals(0.444, c3.getPercentComplete(1, 1, 0), "Era esperado valores iguais, mas  0.444 é diferente de " + result1104 + " <c3.getPercentComplete(1, 1, 0)>")
chamada antiga: assertEquals(0.555, c3.getPercentComplete(1, 1, 1))
nova chamada: assertEquals(0.555, c3.getPercentComplete(1, 1, 1), "Era esperado valores iguais, mas  0.555 é diferente de " + result1105 + " <c3.getPercentComplete(1, 1, 1)>")
chamada antiga: assertEquals(0.666, c3.getPercentComplete(1, 1, 2))
nova chamada: assertEquals(0.666, c3.getPercentComplete(1, 1, 2), "Era esperado valores iguais, mas  0.666 é diferente de " + result1106 + " <c3.getPercentComplete(1, 1, 2)>")
chamada antiga: assertEquals(3, c.getColumnCount())
nova chamada: assertEquals(3, c.getColumnCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1107 + " <c.getColumnCount()>")
chamada antiga: assertEquals("Task 1", c.getColumnKey(0))
nova chamada: assertEquals("Task 1", c.getColumnKey(0), "Era esperado valores iguais, mas  'Task 1' é diferente de " + result1108 + " <c.getColumnKey(0)>")
chamada antiga: assertEquals("Task 2", c.getColumnKey(1))
nova chamada: assertEquals("Task 2", c.getColumnKey(1), "Era esperado valores iguais, mas  'Task 2' é diferente de " + result1109 + " <c.getColumnKey(1)>")
chamada antiga: assertEquals("Task 3", c.getColumnKey(2))
nova chamada: assertEquals("Task 3", c.getColumnKey(2), "Era esperado valores iguais, mas  'Task 3' é diferente de " + result1110 + " <c.getColumnKey(2)>")
chamada antiga: assertEquals(0, c.getColumnIndex("Task 1"))
nova chamada: assertEquals(0, c.getColumnIndex("Task 1"), "Era esperado valores iguais, mas  0 é diferente de " + result1111 + " <c.getColumnIndex('Task 1')>")
chamada antiga: assertEquals(1, c.getColumnIndex("Task 2"))
nova chamada: assertEquals(1, c.getColumnIndex("Task 2"), "Era esperado valores iguais, mas  1 é diferente de " + result1112 + " <c.getColumnIndex('Task 2')>")
chamada antiga: assertEquals(2, c.getColumnIndex("Task 3"))
nova chamada: assertEquals(2, c.getColumnIndex("Task 3"), "Era esperado valores iguais, mas  2 é diferente de " + result1113 + " <c.getColumnIndex('Task 3')>")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1114 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c2.equals(c1))
nova chamada: assertTrue(c2.equals(c1), "Era esperado verdadeiro, mas " + result1115 + " <c2.equals(c1)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1116 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1117 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1118 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(3, taskCount)
nova chamada: assertEquals(3, taskCount, "Era esperado valores iguais, mas  3 é diferente de " + " taskCount")
chamada antiga: assertEquals(1, tsc.getSubIntervalCount(0, 0))
nova chamada: assertEquals(1, tsc.getSubIntervalCount(0, 0), "Era esperado valores iguais, mas  1 é diferente de " + result1119 + " <tsc.getSubIntervalCount(0, 0)>")
chamada antiga: assertEquals(2, tsc.getSubIntervalCount(0, 1))
nova chamada: assertEquals(2, tsc.getSubIntervalCount(0, 1), "Era esperado valores iguais, mas  2 é diferente de " + result1120 + " <tsc.getSubIntervalCount(0, 1)>")
chamada antiga: assertEquals(0, tsc.getSubIntervalCount(1, 0))
nova chamada: assertEquals(0, tsc.getSubIntervalCount(1, 0), "Era esperado valores iguais, mas  0 é diferente de " + result1121 + " <tsc.getSubIntervalCount(1, 0)>")
chamada antiga: assertEquals(3, tsc.getSubIntervalCount(1, 1))
nova chamada: assertEquals(3, tsc.getSubIntervalCount(1, 1), "Era esperado valores iguais, mas  3 é diferente de " + result1122 + " <tsc.getSubIntervalCount(1, 1)>")
chamada antiga: assertEquals(c.getSeries(0), s1)
nova chamada: assertEquals(c.getSeries(0), s1, "Era esperado valores iguais, mas " + result1123 + " <c.getSeries(0)> é diferente de " + " s1")
chamada antiga: assertEquals(c.getSeries("S1"), s1)
nova chamada: assertEquals(c.getSeries("S1"), s1, "Era esperado valores iguais, mas " + result1124 + " <c.getSeries('S1')> é diferente de " + " s1")
chamada antiga: assertEquals(c.getSeries("XX"), null)
nova chamada: assertEquals(c.getSeries("XX"), null, "Era esperado valores iguais, mas " + result1125 + " <c.getSeries('XX')> é diferente de " + " null")
chamada antiga: assertEquals(c.getSeries(1), s2)
nova chamada: assertEquals(c.getSeries(1), s2, "Era esperado valores iguais, mas " + result1126 + " <c.getSeries(1)> é diferente de " + " s2")
chamada antiga: assertEquals(c.getSeries("S2"), s2)
nova chamada: assertEquals(c.getSeries("S2"), s2, "Era esperado valores iguais, mas " + result1127 + " <c.getSeries('S2')> é diferente de " + " s2")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("S1", c.getSeries(0).getKey())
nova chamada: assertEquals("S1", c.getSeries(0).getKey(), "Era esperado valores iguais, mas  'S1' é diferente de " + result1128 + " <c.getSeries(0).getKey()>")
chamada antiga: assertEquals(0, c.getSeriesCount())
nova chamada: assertEquals(0, c.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1129 + " <c.getSeriesCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1130 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1131 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1132 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1133 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1134 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1135 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1136 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1137 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1138 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1139 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1140 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1141 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1142 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result1143 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1144 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1145 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1146 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1147 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1148 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertTrue(t1.equals(new Task("T1", new Date(1), new Date(2))))
nova chamada: assertTrue(t1.equals(new Task("T1", new Date(1), new Date(2))), "Era esperado verdadeiro, mas " + result1149 + " <t1.equals(new Task('T1', new Date(1), new Date(2)))> é falso")
chamada antiga: assertTrue(t2.equals(new Task("T2", new Date(11), new Date(22))))
nova chamada: assertTrue(t2.equals(new Task("T2", new Date(11), new Date(22))), "Era esperado verdadeiro, mas " + result1150 + " <t2.equals(new Task('T2', new Date(11), new Date(22)))> é falso")
chamada antiga: assertTrue(t3 == null)
nova chamada: assertTrue(t3 == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result1151 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result1152 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertFalse(r1.equals(0.0))
nova chamada: assertFalse(r1.equals(0.0), "Era esperado falso, mas " + result1153 + " <r1.equals(0.0)> é verdadeiro ")
chamada antiga: assertEquals(a1.hashCode(), a2.hashCode())
nova chamada: assertEquals(a1.hashCode(), a2.hashCode(), "Era esperado valores iguais, mas " + result1154 + " <a1.hashCode()> é diferente de " + result1155 + " <a2.hashCode()>")
chamada antiga: assertEquals(a1.hashCode(), a2.hashCode())
nova chamada: assertEquals(a1.hashCode(), a2.hashCode(), "Era esperado valores iguais, mas " + result1156 + " <a1.hashCode()> é diferente de " + result1157 + " <a2.hashCode()>")
chamada antiga: assertFalse(r1.contains(Double.NaN))
nova chamada: assertFalse(r1.contains(Double.NaN), "Era esperado falso, mas " + result1158 + " <r1.contains(Double.NaN)> é verdadeiro ")
chamada antiga: assertFalse(r1.contains(Double.NEGATIVE_INFINITY))
nova chamada: assertFalse(r1.contains(Double.NEGATIVE_INFINITY), "Era esperado falso, mas " + result1159 + " <r1.contains(Double.NEGATIVE_INFINITY)> é verdadeiro ")
chamada antiga: assertFalse(r1.contains(-1.0))
nova chamada: assertFalse(r1.contains(-1.0), "Era esperado falso, mas " + result1160 + " <r1.contains(-1.0)> é verdadeiro ")
chamada antiga: assertTrue(r1.contains(0.0))
nova chamada: assertTrue(r1.contains(0.0), "Era esperado verdadeiro, mas " + result1161 + " <r1.contains(0.0)> é falso")
chamada antiga: assertTrue(r1.contains(0.5))
nova chamada: assertTrue(r1.contains(0.5), "Era esperado verdadeiro, mas " + result1162 + " <r1.contains(0.5)> é falso")
chamada antiga: assertTrue(r1.contains(1.0))
nova chamada: assertTrue(r1.contains(1.0), "Era esperado verdadeiro, mas " + result1163 + " <r1.contains(1.0)> é falso")
chamada antiga: assertFalse(r1.contains(2.0))
nova chamada: assertFalse(r1.contains(2.0), "Era esperado falso, mas " + result1164 + " <r1.contains(2.0)> é verdadeiro ")
chamada antiga: assertFalse(r1.contains(Double.POSITIVE_INFINITY))
nova chamada: assertFalse(r1.contains(Double.POSITIVE_INFINITY), "Era esperado falso, mas " + result1165 + " <r1.contains(Double.POSITIVE_INFINITY)> é verdadeiro ")
chamada antiga: assertTrue(Double.isNaN(d))
nova chamada: assertTrue(Double.isNaN(d), "Era esperado verdadeiro, mas " + result1166 + " <Double.isNaN(d)> é falso")
chamada antiga: assertFalse(r1.intersects(-2.0, -1.0))
nova chamada: assertFalse(r1.intersects(-2.0, -1.0), "Era esperado falso, mas " + result1167 + " <r1.intersects(-2.0, -1.0)> é verdadeiro ")
chamada antiga: assertFalse(r1.intersects(-2.0, 0.0))
nova chamada: assertFalse(r1.intersects(-2.0, 0.0), "Era esperado falso, mas " + result1168 + " <r1.intersects(-2.0, 0.0)> é verdadeiro ")
chamada antiga: assertTrue(r1.intersects(-2.0, 0.5))
nova chamada: assertTrue(r1.intersects(-2.0, 0.5), "Era esperado verdadeiro, mas " + result1169 + " <r1.intersects(-2.0, 0.5)> é falso")
chamada antiga: assertTrue(r1.intersects(-2.0, 1.0))
nova chamada: assertTrue(r1.intersects(-2.0, 1.0), "Era esperado verdadeiro, mas " + result1170 + " <r1.intersects(-2.0, 1.0)> é falso")
chamada antiga: assertTrue(r1.intersects(-2.0, 1.5))
nova chamada: assertTrue(r1.intersects(-2.0, 1.5), "Era esperado verdadeiro, mas " + result1171 + " <r1.intersects(-2.0, 1.5)> é falso")
chamada antiga: assertTrue(r1.intersects(0.0, 0.5))
nova chamada: assertTrue(r1.intersects(0.0, 0.5), "Era esperado verdadeiro, mas " + result1172 + " <r1.intersects(0.0, 0.5)> é falso")
chamada antiga: assertTrue(r1.intersects(0.0, 1.0))
nova chamada: assertTrue(r1.intersects(0.0, 1.0), "Era esperado verdadeiro, mas " + result1173 + " <r1.intersects(0.0, 1.0)> é falso")
chamada antiga: assertTrue(r1.intersects(0.0, 1.5))
nova chamada: assertTrue(r1.intersects(0.0, 1.5), "Era esperado verdadeiro, mas " + result1174 + " <r1.intersects(0.0, 1.5)> é falso")
chamada antiga: assertTrue(r1.intersects(0.5, 0.6))
nova chamada: assertTrue(r1.intersects(0.5, 0.6), "Era esperado verdadeiro, mas " + result1175 + " <r1.intersects(0.5, 0.6)> é falso")
chamada antiga: assertTrue(r1.intersects(0.5, 1.0))
nova chamada: assertTrue(r1.intersects(0.5, 1.0), "Era esperado verdadeiro, mas " + result1176 + " <r1.intersects(0.5, 1.0)> é falso")
chamada antiga: assertTrue(r1.intersects(0.5, 1.5))
nova chamada: assertTrue(r1.intersects(0.5, 1.5), "Era esperado verdadeiro, mas " + result1177 + " <r1.intersects(0.5, 1.5)> é falso")
chamada antiga: assertFalse(r1.intersects(1.0, 1.1))
nova chamada: assertFalse(r1.intersects(1.0, 1.1), "Era esperado falso, mas " + result1178 + " <r1.intersects(1.0, 1.1)> é verdadeiro ")
chamada antiga: assertFalse(r1.intersects(1.5, 2.0))
nova chamada: assertFalse(r1.intersects(1.5, 2.0), "Era esperado falso, mas " + result1179 + " <r1.intersects(1.5, 2.0)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(Range.combine(null, null))
nova chamada: assertNull(Range.combine(null, null), "Era esperado nulo, mas " + result1180 + " <Range.combine(null, null)> não é nulo")
chamada antiga: assertEquals(r1, Range.combine(r1, null))
nova chamada: assertEquals(r1, Range.combine(r1, null), "Era esperado valores iguais, mas  r1 é diferente de " + result1181 + " <Range.combine(r1, null)>")
chamada antiga: assertEquals(r2, Range.combine(null, r2))
nova chamada: assertEquals(r2, Range.combine(null, r2), "Era esperado valores iguais, mas  r2 é diferente de " + result1182 + " <Range.combine(null, r2)>")
chamada antiga: assertEquals(new Range(1.0, 2.5), Range.combine(r1, r2))
nova chamada: assertEquals(new Range(1.0, 2.5), Range.combine(r1, r2), "Era esperado valores iguais, mas  new Range(1.0, 2.5) é diferente de " + result1183 + " <Range.combine(r1, r2)>")
chamada antiga: assertTrue(Double.isNaN(rr.getLowerBound()))
nova chamada: assertTrue(Double.isNaN(rr.getLowerBound()), "Era esperado verdadeiro, mas " + result1184 + " <Double.isNaN(rr.getLowerBound())> é falso")
chamada antiga: assertTrue(Double.isNaN(rr.getUpperBound()))
nova chamada: assertTrue(Double.isNaN(rr.getUpperBound()), "Era esperado verdadeiro, mas " + result1185 + " <Double.isNaN(rr.getUpperBound())> é falso")
chamada antiga: assertNull(Range.combineIgnoringNaN(null, null))
nova chamada: assertNull(Range.combineIgnoringNaN(null, null), "Era esperado nulo, mas " + result1186 + " <Range.combineIgnoringNaN(null, null)> não é nulo")
chamada antiga: assertEquals(r1, Range.combineIgnoringNaN(r1, null))
nova chamada: assertEquals(r1, Range.combineIgnoringNaN(r1, null), "Era esperado valores iguais, mas  r1 é diferente de " + result1187 + " <Range.combineIgnoringNaN(r1, null)>")
chamada antiga: assertEquals(r2, Range.combineIgnoringNaN(null, r2))
nova chamada: assertEquals(r2, Range.combineIgnoringNaN(null, r2), "Era esperado valores iguais, mas  r2 é diferente de " + result1188 + " <Range.combineIgnoringNaN(null, r2)>")
chamada antiga: assertEquals(new Range(1.0, 2.5), Range.combineIgnoringNaN(r1, r2))
nova chamada: assertEquals(new Range(1.0, 2.5), Range.combineIgnoringNaN(r1, r2), "Era esperado valores iguais, mas  new Range(1.0, 2.5) é diferente de " + result1189 + " <Range.combineIgnoringNaN(r1, r2)>")
chamada antiga: assertTrue(new Range(Double.NaN, Double.NaN).isNaNRange())
nova chamada: assertTrue(new Range(Double.NaN, Double.NaN).isNaNRange(), "Era esperado verdadeiro, mas " + result1190 + " <new Range(Double.NaN, Double.NaN).isNaNRange()> é falso")
chamada antiga: assertFalse(new Range(1.0, 2.0).isNaNRange())
nova chamada: assertFalse(new Range(1.0, 2.0).isNaNRange(), "Era esperado falso, mas " + result1191 + " <new Range(1.0, 2.0).isNaNRange()> é verdadeiro ")
chamada antiga: assertFalse(new Range(Double.NaN, 2.0).isNaNRange())
nova chamada: assertFalse(new Range(Double.NaN, 2.0).isNaNRange(), "Era esperado falso, mas " + result1192 + " <new Range(Double.NaN, 2.0).isNaNRange()> é verdadeiro ")
chamada antiga: assertFalse(new Range(1.0, Double.NaN).isNaNRange())
nova chamada: assertFalse(new Range(1.0, Double.NaN).isNaNRange(), "Era esperado falso, mas " + result1193 + " <new Range(1.0, Double.NaN).isNaNRange()> é verdadeiro ")
chamada antiga: assertEquals(0, d.getItemCount())
nova chamada: assertEquals(0, d.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1194 + " <d.getItemCount()>")
chamada antiga: assertEquals(0, d.getItemCount())
nova chamada: assertEquals(0, d.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1195 + " <d.getItemCount()>")
chamada antiga: assertEquals(1, d.getItemCount())
nova chamada: assertEquals(1, d.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1196 + " <d.getItemCount()>")
chamada antiga: assertEquals(2, d.getItemCount())
nova chamada: assertEquals(2, d.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1197 + " <d.getItemCount()>")
chamada antiga: assertEquals(0, d.getItemCount())
nova chamada: assertEquals(0, d.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1198 + " <d.getItemCount()>")
chamada antiga: assertTrue(keys.isEmpty())
nova chamada: assertTrue(keys.isEmpty(), "Era esperado verdadeiro, mas " + result1199 + " <keys.isEmpty()> é falso")
chamada antiga: assertEquals(1, keys.size())
nova chamada: assertEquals(1, keys.size(), "Era esperado valores iguais, mas  1 é diferente de " + result1200 + " <keys.size()>")
chamada antiga: assertTrue(keys.contains("A"))
nova chamada: assertTrue(keys.contains("A"), "Era esperado verdadeiro, mas " + result1201 + " <keys.contains('A')> é falso")
chamada antiga: assertEquals(2, keys.size())
nova chamada: assertEquals(2, keys.size(), "Era esperado valores iguais, mas  2 é diferente de " + result1202 + " <keys.size()>")
chamada antiga: assertTrue(keys.contains("A"))
nova chamada: assertTrue(keys.contains("A"), "Era esperado verdadeiro, mas " + result1203 + " <keys.contains('A')> é falso")
chamada antiga: assertTrue(keys.contains("B"))
nova chamada: assertTrue(keys.contains("B"), "Era esperado verdadeiro, mas " + result1204 + " <keys.contains('B')> é falso")
chamada antiga: assertEquals(0, keys.size())
nova chamada: assertEquals(0, keys.size(), "Era esperado valores iguais, mas  0 é diferente de " + result1205 + " <keys.size()>")
chamada antiga: assertEquals(2, v1.getItemCount())
nova chamada: assertEquals(2, v1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1206 + " <v1.getItemCount()>")
chamada antiga: assertEquals(0, v1.getItemCount())
nova chamada: assertEquals(0, v1.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1207 + " <v1.getItemCount()>")
chamada antiga: assertEquals(3, v2.getValue(2))
nova chamada: assertEquals(3, v2.getValue(2), "Era esperado valores iguais, mas  3 é diferente de " + result1208 + " <v2.getValue(2)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("K2", v2.getKey(1))
nova chamada: assertEquals("K2", v2.getKey(1), "Era esperado valores iguais, mas  'K2' é diferente de " + result1209 + " <v2.getKey(1)>")
chamada antiga: assertEquals(-1, v1.getIndex("K1"))
nova chamada: assertEquals(-1, v1.getIndex("K1"), "Era esperado valores iguais, mas  -1 é diferente de " + result1210 + " <v1.getIndex('K1')>")
chamada antiga: assertEquals(2, v2.getIndex("K3"))
nova chamada: assertEquals(2, v2.getIndex("K3"), "Era esperado valores iguais, mas  2 é diferente de " + result1211 + " <v2.getIndex('K3')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(-1, v.getIndex("K1"))
nova chamada: assertEquals(-1, v.getIndex("K1"), "Era esperado valores iguais, mas  -1 é diferente de " + result1212 + " <v.getIndex('K1')>")
chamada antiga: assertEquals(0, v.getIndex("K1"))
nova chamada: assertEquals(0, v.getIndex("K1"), "Era esperado valores iguais, mas  0 é diferente de " + result1213 + " <v.getIndex('K1')>")
chamada antiga: assertEquals(-1, v.getIndex("K1"))
nova chamada: assertEquals(-1, v.getIndex("K1"), "Era esperado valores iguais, mas  -1 é diferente de " + result1214 + " <v.getIndex('K1')>")
chamada antiga: assertEquals(1.0, v1.getValue("A"))
nova chamada: assertEquals(1.0, v1.getValue("A"), "Era esperado valores iguais, mas  1.0 é diferente de " + result1215 + " <v1.getValue('A')>")
chamada antiga: assertEquals(2.0, v1.getValue("B"))
nova chamada: assertEquals(2.0, v1.getValue("B"), "Era esperado valores iguais, mas  2.0 é diferente de " + result1216 + " <v1.getValue('B')>")
chamada antiga: assertEquals(3.0, v1.getValue("B"))
nova chamada: assertEquals(3.0, v1.getValue("B"), "Era esperado valores iguais, mas  3.0 é diferente de " + result1217 + " <v1.getValue('B')>")
chamada antiga: assertEquals(2, v1.getItemCount())
nova chamada: assertEquals(2, v1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1218 + " <v1.getItemCount()>")
chamada antiga: assertNull(v1.getValue("A"))
nova chamada: assertNull(v1.getValue("A"), "Era esperado nulo, mas " + result1219 + " <v1.getValue('A')> não é nulo")
chamada antiga: assertEquals(2, v1.getItemCount())
nova chamada: assertEquals(2, v1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1220 + " <v1.getItemCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1.0, v1.getValue(0))
nova chamada: assertEquals(1.0, v1.getValue(0), "Era esperado valores iguais, mas  1.0 é diferente de " + result1221 + " <v1.getValue(0)>")
chamada antiga: assertEquals(2.0, v1.getValue(0))
nova chamada: assertEquals(2.0, v1.getValue(0), "Era esperado valores iguais, mas  2.0 é diferente de " + result1222 + " <v1.getValue(0)>")
chamada antiga: assertEquals(1.0, v1.getValue(1))
nova chamada: assertEquals(1.0, v1.getValue(1), "Era esperado valores iguais, mas  1.0 é diferente de " + result1223 + " <v1.getValue(1)>")
chamada antiga: assertEquals(2.0, v1.getValue(0))
nova chamada: assertEquals(2.0, v1.getValue(0), "Era esperado valores iguais, mas  2.0 é diferente de " + result1224 + " <v1.getValue(0)>")
chamada antiga: assertEquals(1.0, v1.getValue(1))
nova chamada: assertEquals(1.0, v1.getValue(1), "Era esperado valores iguais, mas  1.0 é diferente de " + result1225 + " <v1.getValue(1)>")
chamada antiga: assertEquals(3.0, v1.getValue(2))
nova chamada: assertEquals(3.0, v1.getValue(2), "Era esperado valores iguais, mas  3.0 é diferente de " + result1226 + " <v1.getValue(2)>")
chamada antiga: assertEquals(1.0, v1.getValue(0))
nova chamada: assertEquals(1.0, v1.getValue(0), "Era esperado valores iguais, mas  1.0 é diferente de " + result1227 + " <v1.getValue(0)>")
chamada antiga: assertEquals(3.0, v1.getValue(1))
nova chamada: assertEquals(3.0, v1.getValue(1), "Era esperado valores iguais, mas  3.0 é diferente de " + result1228 + " <v1.getValue(1)>")
chamada antiga: assertEquals(4.0, v1.getValue(2))
nova chamada: assertEquals(4.0, v1.getValue(2), "Era esperado valores iguais, mas  4.0 é diferente de " + result1229 + " <v1.getValue(2)>")
chamada antiga: assertTrue(v1 != v2)
nova chamada: assertTrue(v1 != v2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.getClass() == v2.getClass())
nova chamada: assertTrue(v1.getClass() == v2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(v1.equals(v2))
nova chamada: assertTrue(v1.equals(v2), "Era esperado verdadeiro, mas " + result1230 + " <v1.equals(v2)> é falso")
chamada antiga: assertFalse(v1.equals(v2))
nova chamada: assertFalse(v1.equals(v2), "Era esperado falso, mas " + result1231 + " <v1.equals(v2)> é verdadeiro ")
chamada antiga: assertEquals(data.getKey(0), "A")
nova chamada: assertEquals(data.getKey(0), "A", "Era esperado valores iguais, mas " + result1232 + " <data.getKey(0)> é diferente de " + " 'A'")
chamada antiga: assertEquals(data.getKey(1), "B")
nova chamada: assertEquals(data.getKey(1), "B", "Era esperado valores iguais, mas " + result1233 + " <data.getKey(1)> é diferente de " + " 'B'")
chamada antiga: assertEquals(data.getKey(2), "C")
nova chamada: assertEquals(data.getKey(2), "C", "Era esperado valores iguais, mas " + result1234 + " <data.getKey(2)> é diferente de " + " 'C'")
chamada antiga: assertEquals(data.getKey(3), "D")
nova chamada: assertEquals(data.getKey(3), "D", "Era esperado valores iguais, mas " + result1235 + " <data.getKey(3)> é diferente de " + " 'D'")
chamada antiga: assertEquals(data.getValue("A"), 1.0)
nova chamada: assertEquals(data.getValue("A"), 1.0, "Era esperado valores iguais, mas " + result1236 + " <data.getValue('A')> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue("B"), 2.0)
nova chamada: assertEquals(data.getValue("B"), 2.0, "Era esperado valores iguais, mas " + result1237 + " <data.getValue('B')> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue("C"), 3.0)
nova chamada: assertEquals(data.getValue("C"), 3.0, "Era esperado valores iguais, mas " + result1238 + " <data.getValue('C')> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue("D"), null)
nova chamada: assertEquals(data.getValue("D"), null, "Era esperado valores iguais, mas " + result1239 + " <data.getValue('D')> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue(0), 1.0)
nova chamada: assertEquals(data.getValue(0), 1.0, "Era esperado valores iguais, mas " + result1240 + " <data.getValue(0)> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue(1), 2.0)
nova chamada: assertEquals(data.getValue(1), 2.0, "Era esperado valores iguais, mas " + result1241 + " <data.getValue(1)> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue(2), 3.0)
nova chamada: assertEquals(data.getValue(2), 3.0, "Era esperado valores iguais, mas " + result1242 + " <data.getValue(2)> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(3), null)
nova chamada: assertEquals(data.getValue(3), null, "Era esperado valores iguais, mas " + result1243 + " <data.getValue(3)> é diferente de " + " null")
chamada antiga: assertEquals(1, data.getIndex("B"))
nova chamada: assertEquals(1, data.getIndex("B"), "Era esperado valores iguais, mas  1 é diferente de " + result1244 + " <data.getIndex('B')>")
chamada antiga: assertEquals(-1, data.getIndex("B"))
nova chamada: assertEquals(-1, data.getIndex("B"), "Era esperado valores iguais, mas  -1 é diferente de " + result1245 + " <data.getIndex('B')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(data.getKey(0), "A")
nova chamada: assertEquals(data.getKey(0), "A", "Era esperado valores iguais, mas " + result1246 + " <data.getKey(0)> é diferente de " + " 'A'")
chamada antiga: assertEquals(data.getKey(1), "B")
nova chamada: assertEquals(data.getKey(1), "B", "Era esperado valores iguais, mas " + result1247 + " <data.getKey(1)> é diferente de " + " 'B'")
chamada antiga: assertEquals(data.getKey(2), "C")
nova chamada: assertEquals(data.getKey(2), "C", "Era esperado valores iguais, mas " + result1248 + " <data.getKey(2)> é diferente de " + " 'C'")
chamada antiga: assertEquals(data.getKey(3), "D")
nova chamada: assertEquals(data.getKey(3), "D", "Era esperado valores iguais, mas " + result1249 + " <data.getKey(3)> é diferente de " + " 'D'")
chamada antiga: assertEquals(data.getValue("A"), 2.0)
nova chamada: assertEquals(data.getValue("A"), 2.0, "Era esperado valores iguais, mas " + result1250 + " <data.getValue('A')> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue("B"), null)
nova chamada: assertEquals(data.getValue("B"), null, "Era esperado valores iguais, mas " + result1251 + " <data.getValue('B')> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue("C"), 1.0)
nova chamada: assertEquals(data.getValue("C"), 1.0, "Era esperado valores iguais, mas " + result1252 + " <data.getValue('C')> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue("D"), 3.0)
nova chamada: assertEquals(data.getValue("D"), 3.0, "Era esperado valores iguais, mas " + result1253 + " <data.getValue('D')> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(0), 2.0)
nova chamada: assertEquals(data.getValue(0), 2.0, "Era esperado valores iguais, mas " + result1254 + " <data.getValue(0)> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue(1), null)
nova chamada: assertEquals(data.getValue(1), null, "Era esperado valores iguais, mas " + result1255 + " <data.getValue(1)> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue(2), 1.0)
nova chamada: assertEquals(data.getValue(2), 1.0, "Era esperado valores iguais, mas " + result1256 + " <data.getValue(2)> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue(3), 3.0)
nova chamada: assertEquals(data.getValue(3), 3.0, "Era esperado valores iguais, mas " + result1257 + " <data.getValue(3)> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getKey(0), "D")
nova chamada: assertEquals(data.getKey(0), "D", "Era esperado valores iguais, mas " + result1258 + " <data.getKey(0)> é diferente de " + " 'D'")
chamada antiga: assertEquals(data.getKey(1), "C")
nova chamada: assertEquals(data.getKey(1), "C", "Era esperado valores iguais, mas " + result1259 + " <data.getKey(1)> é diferente de " + " 'C'")
chamada antiga: assertEquals(data.getKey(2), "B")
nova chamada: assertEquals(data.getKey(2), "B", "Era esperado valores iguais, mas " + result1260 + " <data.getKey(2)> é diferente de " + " 'B'")
chamada antiga: assertEquals(data.getKey(3), "A")
nova chamada: assertEquals(data.getKey(3), "A", "Era esperado valores iguais, mas " + result1261 + " <data.getKey(3)> é diferente de " + " 'A'")
chamada antiga: assertEquals(data.getValue("A"), 2.0)
nova chamada: assertEquals(data.getValue("A"), 2.0, "Era esperado valores iguais, mas " + result1262 + " <data.getValue('A')> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue("B"), null)
nova chamada: assertEquals(data.getValue("B"), null, "Era esperado valores iguais, mas " + result1263 + " <data.getValue('B')> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue("C"), 1.0)
nova chamada: assertEquals(data.getValue("C"), 1.0, "Era esperado valores iguais, mas " + result1264 + " <data.getValue('C')> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue("D"), 3.0)
nova chamada: assertEquals(data.getValue("D"), 3.0, "Era esperado valores iguais, mas " + result1265 + " <data.getValue('D')> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(0), 3.0)
nova chamada: assertEquals(data.getValue(0), 3.0, "Era esperado valores iguais, mas " + result1266 + " <data.getValue(0)> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(1), 1.0)
nova chamada: assertEquals(data.getValue(1), 1.0, "Era esperado valores iguais, mas " + result1267 + " <data.getValue(1)> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue(2), null)
nova chamada: assertEquals(data.getValue(2), null, "Era esperado valores iguais, mas " + result1268 + " <data.getValue(2)> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue(3), 2.0)
nova chamada: assertEquals(data.getValue(3), 2.0, "Era esperado valores iguais, mas " + result1269 + " <data.getValue(3)> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getKey(0), "C")
nova chamada: assertEquals(data.getKey(0), "C", "Era esperado valores iguais, mas " + result1270 + " <data.getKey(0)> é diferente de " + " 'C'")
chamada antiga: assertEquals(data.getKey(1), "A")
nova chamada: assertEquals(data.getKey(1), "A", "Era esperado valores iguais, mas " + result1271 + " <data.getKey(1)> é diferente de " + " 'A'")
chamada antiga: assertEquals(data.getKey(2), "D")
nova chamada: assertEquals(data.getKey(2), "D", "Era esperado valores iguais, mas " + result1272 + " <data.getKey(2)> é diferente de " + " 'D'")
chamada antiga: assertEquals(data.getKey(3), "B")
nova chamada: assertEquals(data.getKey(3), "B", "Era esperado valores iguais, mas " + result1273 + " <data.getKey(3)> é diferente de " + " 'B'")
chamada antiga: assertEquals(data.getValue("A"), 2.0)
nova chamada: assertEquals(data.getValue("A"), 2.0, "Era esperado valores iguais, mas " + result1274 + " <data.getValue('A')> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue("B"), null)
nova chamada: assertEquals(data.getValue("B"), null, "Era esperado valores iguais, mas " + result1275 + " <data.getValue('B')> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue("C"), 1.0)
nova chamada: assertEquals(data.getValue("C"), 1.0, "Era esperado valores iguais, mas " + result1276 + " <data.getValue('C')> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue("D"), 3.0)
nova chamada: assertEquals(data.getValue("D"), 3.0, "Era esperado valores iguais, mas " + result1277 + " <data.getValue('D')> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(0), 1.0)
nova chamada: assertEquals(data.getValue(0), 1.0, "Era esperado valores iguais, mas " + result1278 + " <data.getValue(0)> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue(1), 2.0)
nova chamada: assertEquals(data.getValue(1), 2.0, "Era esperado valores iguais, mas " + result1279 + " <data.getValue(1)> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue(2), 3.0)
nova chamada: assertEquals(data.getValue(2), 3.0, "Era esperado valores iguais, mas " + result1280 + " <data.getValue(2)> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(3), null)
nova chamada: assertEquals(data.getValue(3), null, "Era esperado valores iguais, mas " + result1281 + " <data.getValue(3)> é diferente de " + " null")
chamada antiga: assertEquals(data.getKey(0), "D")
nova chamada: assertEquals(data.getKey(0), "D", "Era esperado valores iguais, mas " + result1282 + " <data.getKey(0)> é diferente de " + " 'D'")
chamada antiga: assertEquals(data.getKey(1), "A")
nova chamada: assertEquals(data.getKey(1), "A", "Era esperado valores iguais, mas " + result1283 + " <data.getKey(1)> é diferente de " + " 'A'")
chamada antiga: assertEquals(data.getKey(2), "C")
nova chamada: assertEquals(data.getKey(2), "C", "Era esperado valores iguais, mas " + result1284 + " <data.getKey(2)> é diferente de " + " 'C'")
chamada antiga: assertEquals(data.getKey(3), "B")
nova chamada: assertEquals(data.getKey(3), "B", "Era esperado valores iguais, mas " + result1285 + " <data.getKey(3)> é diferente de " + " 'B'")
chamada antiga: assertEquals(data.getValue("A"), 2.0)
nova chamada: assertEquals(data.getValue("A"), 2.0, "Era esperado valores iguais, mas " + result1286 + " <data.getValue('A')> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue("B"), null)
nova chamada: assertEquals(data.getValue("B"), null, "Era esperado valores iguais, mas " + result1287 + " <data.getValue('B')> é diferente de " + " null")
chamada antiga: assertEquals(data.getValue("C"), 1.0)
nova chamada: assertEquals(data.getValue("C"), 1.0, "Era esperado valores iguais, mas " + result1288 + " <data.getValue('C')> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue("D"), 3.0)
nova chamada: assertEquals(data.getValue("D"), 3.0, "Era esperado valores iguais, mas " + result1289 + " <data.getValue('D')> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(0), 3.0)
nova chamada: assertEquals(data.getValue(0), 3.0, "Era esperado valores iguais, mas " + result1290 + " <data.getValue(0)> é diferente de " + " 3.0")
chamada antiga: assertEquals(data.getValue(1), 2.0)
nova chamada: assertEquals(data.getValue(1), 2.0, "Era esperado valores iguais, mas " + result1291 + " <data.getValue(1)> é diferente de " + " 2.0")
chamada antiga: assertEquals(data.getValue(2), 1.0)
nova chamada: assertEquals(data.getValue(2), 1.0, "Era esperado valores iguais, mas " + result1292 + " <data.getValue(2)> é diferente de " + " 1.0")
chamada antiga: assertEquals(data.getValue(3), null)
nova chamada: assertEquals(data.getValue(3), null, "Era esperado valores iguais, mas " + result1293 + " <data.getValue(3)> é diferente de " + " null")
chamada antiga: assertEquals(v1, v2)
nova chamada: assertEquals(v1, v2, "Era esperado valores iguais, mas  v1 é diferente de " + " v2")
chamada antiga: assertEquals(1.5, d.getFlow(0, "A", "Z"))
nova chamada: assertEquals(1.5, d.getFlow(0, "A", "Z"), "Era esperado valores iguais, mas  1.5 é diferente de " + result1294 + " <d.getFlow(0, 'A', 'Z')>")
chamada antiga: assertEquals(1, d.getStageCount())
nova chamada: assertEquals(1, d.getStageCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1295 + " <d.getStageCount()>")
chamada antiga: assertEquals(1, d.getStageCount())
nova chamada: assertEquals(1, d.getStageCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1296 + " <d.getStageCount()>")
chamada antiga: assertEquals(2, d.getStageCount())
nova chamada: assertEquals(2, d.getStageCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1297 + " <d.getStageCount()>")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertNotEquals(d1, d2)
nova chamada: assertNotEquals(d1, d2, "Era esperado valores diferentes, mas  d1 é igual a " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1298 + " <d1.equals(d2)> é falso")
chamada antiga: assertNotEquals(d1, d2)
nova chamada: assertNotEquals(d1, d2, "Era esperado valores diferentes, mas  d1 é igual a " + " d2")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d instanceof PublicCloneable)
nova chamada: assertTrue(d instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1299 + " <k1.equals(k2)> é falso")
chamada antiga: assertTrue(k2.equals(k1))
nova chamada: assertTrue(k2.equals(k1), "Era esperado verdadeiro, mas " + result1300 + " <k2.equals(k1)> é falso")
chamada antiga: assertFalse(k1.equals(k2))
nova chamada: assertFalse(k1.equals(k2), "Era esperado falso, mas " + result1301 + " <k1.equals(k2)> é verdadeiro ")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1302 + " <k1.equals(k2)> é falso")
chamada antiga: assertFalse(k1.equals(k2))
nova chamada: assertFalse(k1.equals(k2), "Era esperado falso, mas " + result1303 + " <k1.equals(k2)> é verdadeiro ")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1304 + " <k1.equals(k2)> é falso")
chamada antiga: assertTrue(k1 != k2)
nova chamada: assertTrue(k1 != k2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(k1.getClass() == k2.getClass())
nova chamada: assertTrue(k1.getClass() == k2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1305 + " <k1.equals(k2)> é falso")
chamada antiga: assertEquals(k1, k2)
nova chamada: assertEquals(k1, k2, "Era esperado valores iguais, mas  k1 é diferente de " + " k2")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1306 + " <k1.equals(k2)> é falso")
chamada antiga: assertTrue(k2.equals(k1))
nova chamada: assertTrue(k2.equals(k1), "Era esperado verdadeiro, mas " + result1307 + " <k2.equals(k1)> é falso")
chamada antiga: assertFalse(k1.equals(k2))
nova chamada: assertFalse(k1.equals(k2), "Era esperado falso, mas " + result1308 + " <k1.equals(k2)> é verdadeiro ")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1309 + " <k1.equals(k2)> é falso")
chamada antiga: assertFalse(k1.equals(k2))
nova chamada: assertFalse(k1.equals(k2), "Era esperado falso, mas " + result1310 + " <k1.equals(k2)> é verdadeiro ")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1311 + " <k1.equals(k2)> é falso")
chamada antiga: assertTrue(k1 != k2)
nova chamada: assertTrue(k1 != k2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(k1.getClass() == k2.getClass())
nova chamada: assertTrue(k1.getClass() == k2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(k1.equals(k2))
nova chamada: assertTrue(k1.equals(k2), "Era esperado verdadeiro, mas " + result1312 + " <k1.equals(k2)> é falso")
chamada antiga: assertEquals(k1, k2)
nova chamada: assertEquals(k1, k2, "Era esperado valores iguais, mas  k1 é diferente de " + " k2")
chamada antiga: assertTrue(millisecond.equals(millisecond))
nova chamada: assertTrue(millisecond.equals(millisecond), "Era esperado verdadeiro, mas " + result1313 + " <millisecond.equals(millisecond)> é falso")
chamada antiga: assertTrue(milli1.equals(milli2))
nova chamada: assertTrue(milli1.equals(milli2), "Era esperado verdadeiro, mas " + result1314 + " <milli1.equals(milli2)> é falso")
chamada antiga: assertEquals(122, m1.getMillisecond())
nova chamada: assertEquals(122, m1.getMillisecond(), "Era esperado valores iguais, mas  122 é diferente de " + result1315 + " <m1.getMillisecond()>")
chamada antiga: assertEquals(1016729759122L, m1.getLastMillisecond(cal))
nova chamada: assertEquals(1016729759122L, m1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1016729759122L é diferente de " + result1316 + " <m1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(123, m2.getMillisecond())
nova chamada: assertEquals(123, m2.getMillisecond(), "Era esperado valores iguais, mas  123 é diferente de " + result1317 + " <m2.getMillisecond()>")
chamada antiga: assertEquals(1016729759123L, m2.getFirstMillisecond(cal))
nova chamada: assertEquals(1016729759123L, m2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1016729759123L é diferente de " + result1318 + " <m2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(122, m1.getMillisecond())
nova chamada: assertEquals(122, m1.getMillisecond(), "Era esperado valores iguais, mas  122 é diferente de " + result1319 + " <m1.getMillisecond()>")
chamada antiga: assertEquals(1016722559122L, m1.getLastMillisecond(cal))
nova chamada: assertEquals(1016722559122L, m1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1016722559122L é diferente de " + result1320 + " <m1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(123, m2.getMillisecond())
nova chamada: assertEquals(123, m2.getMillisecond(), "Era esperado valores iguais, mas  123 é diferente de " + result1321 + " <m2.getMillisecond()>")
chamada antiga: assertEquals(1016722559123L, m2.getFirstMillisecond(cal))
nova chamada: assertEquals(1016722559123L, m2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1016722559123L é diferente de " + result1322 + " <m2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result1323 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(hash1, hash2)
nova chamada: assertEquals(hash1, hash2, "Era esperado valores iguais, mas  hash1 é diferente de " + " hash2")
chamada antiga: assertEquals(ms.getFirstMillisecond(), ms.getMiddleMillisecond())
nova chamada: assertEquals(ms.getFirstMillisecond(), ms.getMiddleMillisecond(), "Era esperado valores iguais, mas " + result1324 + " <ms.getFirstMillisecond()> é diferente de " + result1325 + " <ms.getMiddleMillisecond()>")
chamada antiga: assertEquals(ms.getMiddleMillisecond(), ms.getLastMillisecond())
nova chamada: assertEquals(ms.getMiddleMillisecond(), ms.getLastMillisecond(), "Era esperado valores iguais, mas " + result1326 + " <ms.getMiddleMillisecond()> é diferente de " + result1327 + " <ms.getLastMillisecond()>")
chamada antiga: assertEquals(ms.getFirstMillisecond(), ms.getMiddleMillisecond())
nova chamada: assertEquals(ms.getFirstMillisecond(), ms.getMiddleMillisecond(), "Era esperado valores iguais, mas " + result1328 + " <ms.getFirstMillisecond()> é diferente de " + result1329 + " <ms.getMiddleMillisecond()>")
chamada antiga: assertEquals(ms.getMiddleMillisecond(), ms.getLastMillisecond())
nova chamada: assertEquals(ms.getMiddleMillisecond(), ms.getLastMillisecond(), "Era esperado valores iguais, mas " + result1330 + " <ms.getMiddleMillisecond()> é diferente de " + result1331 + " <ms.getLastMillisecond()>")
chamada antiga: assertFalse(m instanceof Cloneable)
nova chamada: assertFalse(m instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1143902595500L, m.getFirstMillisecond())
nova chamada: assertEquals(1143902595500L, m.getFirstMillisecond(), "Era esperado valores iguais, mas  1143902595500L é diferente de " + result1332 + " <m.getFirstMillisecond()>")
chamada antiga: assertEquals(-623289609500L, m.getFirstMillisecond(cal))
nova chamada: assertEquals(-623289609500L, m.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -623289609500L é diferente de " + result1333 + " <m.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(955766455500L, m.getFirstMillisecond(calendar))
nova chamada: assertEquals(955766455500L, m.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  955766455500L é diferente de " + result1334 + " <m.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(61750L, m.getLastMillisecond())
nova chamada: assertEquals(61750L, m.getLastMillisecond(), "Era esperado valores iguais, mas  61750L é diferente de " + result1335 + " <m.getLastMillisecond()>")
chamada antiga: assertEquals(-614962684250L, m.getLastMillisecond(cal))
nova chamada: assertEquals(-614962684250L, m.getLastMillisecond(cal), "Era esperado valores iguais, mas  -614962684250L é diferente de " + result1336 + " <m.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(987889550250L, m.getLastMillisecond(calendar))
nova chamada: assertEquals(987889550250L, m.getLastMillisecond(calendar), "Era esperado valores iguais, mas  987889550250L é diferente de " + result1337 + " <m.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3155850061500L, m.getSerialIndex())
nova chamada: assertEquals(3155850061500L, m.getSerialIndex(), "Era esperado valores iguais, mas  3155850061500L é diferente de " + result1338 + " <m.getSerialIndex()>")
chamada antiga: assertEquals(176461500L, m.getSerialIndex())
nova chamada: assertEquals(176461500L, m.getSerialIndex(), "Era esperado valores iguais, mas  176461500L é diferente de " + result1339 + " <m.getSerialIndex()>")
chamada antiga: assertEquals(2000, m.getSecond().getMinute().getHour().getYear())
nova chamada: assertEquals(2000, m.getSecond().getMinute().getHour().getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1340 + " <m.getSecond().getMinute().getHour().getYear()>")
chamada antiga: assertEquals(12, m.getSecond().getMinute().getHour().getMonth())
nova chamada: assertEquals(12, m.getSecond().getMinute().getHour().getMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1341 + " <m.getSecond().getMinute().getHour().getMonth()>")
chamada antiga: assertEquals(12, m.getSecond().getMinute().getHour().getDayOfMonth())
nova chamada: assertEquals(12, m.getSecond().getMinute().getHour().getDayOfMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1342 + " <m.getSecond().getMinute().getHour().getDayOfMonth()>")
chamada antiga: assertEquals(1, m.getSecond().getMinute().getHour().getHour())
nova chamada: assertEquals(1, m.getSecond().getMinute().getHour().getHour(), "Era esperado valores iguais, mas  1 é diferente de " + result1343 + " <m.getSecond().getMinute().getHour().getHour()>")
chamada antiga: assertEquals(30, m.getSecond().getMinute().getMinute())
nova chamada: assertEquals(30, m.getSecond().getMinute().getMinute(), "Era esperado valores iguais, mas  30 é diferente de " + result1344 + " <m.getSecond().getMinute().getMinute()>")
chamada antiga: assertEquals(55, m.getSecond().getSecond())
nova chamada: assertEquals(55, m.getSecond().getSecond(), "Era esperado valores iguais, mas  55 é diferente de " + result1345 + " <m.getSecond().getSecond()>")
chamada antiga: assertEquals(556, m.getMillisecond())
nova chamada: assertEquals(556, m.getMillisecond(), "Era esperado valores iguais, mas  556 é diferente de " + result1346 + " <m.getMillisecond()>")
chamada antiga: assertNull(m.next())
nova chamada: assertNull(m.next(), "Era esperado nulo, mas " + result1347 + " <m.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), m.getStart())
nova chamada: assertEquals(cal.getTime(), m.getStart(), "Era esperado valores iguais, mas " + result1348 + " <cal.getTime()> é diferente de " + result1349 + " <m.getStart()>")
chamada antiga: assertEquals(cal.getTime(), m.getEnd())
nova chamada: assertEquals(cal.getTime(), m.getEnd(), "Era esperado valores iguais, mas " + result1350 + " <cal.getTime()> é diferente de " + result1351 + " <m.getEnd()>")
chamada antiga: assertTrue(item.equals(item))
nova chamada: assertTrue(item.equals(item), "Era esperado verdadeiro, mas " + result1352 + " <item.equals(item)> é falso")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1353 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item2.equals(item1))
nova chamada: assertTrue(item2.equals(item1), "Era esperado verdadeiro, mas " + result1354 + " <item2.equals(item1)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result1355 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1356 + " <item1.equals(item2)> é falso")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertTrue(quarter.equals(quarter))
nova chamada: assertTrue(quarter.equals(quarter), "Era esperado verdadeiro, mas " + result1357 + " <quarter.equals(quarter)> é falso")
chamada antiga: assertTrue(q1.equals(q2))
nova chamada: assertTrue(q1.equals(q2), "Era esperado verdadeiro, mas " + result1358 + " <q1.equals(q2)> é falso")
chamada antiga: assertEquals(1, q1.getQuarter())
nova chamada: assertEquals(1, q1.getQuarter(), "Era esperado valores iguais, mas  1 é diferente de " + result1359 + " <q1.getQuarter()>")
chamada antiga: assertEquals(1017619199999L, q1.getLastMillisecond(cal))
nova chamada: assertEquals(1017619199999L, q1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1017619199999L é diferente de " + result1360 + " <q1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(2, q2.getQuarter())
nova chamada: assertEquals(2, q2.getQuarter(), "Era esperado valores iguais, mas  2 é diferente de " + result1361 + " <q2.getQuarter()>")
chamada antiga: assertEquals(1017619200000L, q2.getFirstMillisecond(cal))
nova chamada: assertEquals(1017619200000L, q2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1017619200000L é diferente de " + result1362 + " <q2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(1, q1.getQuarter())
nova chamada: assertEquals(1, q1.getQuarter(), "Era esperado valores iguais, mas  1 é diferente de " + result1363 + " <q1.getQuarter()>")
chamada antiga: assertEquals(1017608399999L, q1.getLastMillisecond(cal))
nova chamada: assertEquals(1017608399999L, q1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1017608399999L é diferente de " + result1364 + " <q1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(2, q2.getQuarter())
nova chamada: assertEquals(2, q2.getQuarter(), "Era esperado valores iguais, mas  2 é diferente de " + result1365 + " <q2.getQuarter()>")
chamada antiga: assertEquals(1017608400000L, q2.getFirstMillisecond(cal))
nova chamada: assertEquals(1017608400000L, q2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1017608400000L é diferente de " + result1366 + " <q2.getFirstMillisecond(cal)>")
chamada antiga: assertNull(previous)
nova chamada: assertNull(previous, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(this.q2Y1900, next)
nova chamada: assertEquals(this.q2Y1900, next, "Era esperado valores iguais, mas  this.q2Y1900 é diferente de " + " next")
chamada antiga: assertEquals(this.q3Y9999, previous)
nova chamada: assertEquals(this.q3Y9999, previous, "Era esperado valores iguais, mas  this.q3Y9999 é diferente de " + " previous")
chamada antiga: assertNull(next)
nova chamada: assertNull(next, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(1, quarter.getQuarter())
nova chamada: assertEquals(1, quarter.getQuarter(), "Era esperado valores iguais, mas  1 é diferente de " + result1367 + " <quarter.getQuarter()>")
chamada antiga: assertEquals(2000, quarter.getYear().getYear())
nova chamada: assertEquals(2000, quarter.getYear().getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1368 + " <quarter.getYear().getYear()>")
chamada antiga: assertEquals(2, quarter.getQuarter())
nova chamada: assertEquals(2, quarter.getQuarter(), "Era esperado valores iguais, mas  2 é diferente de " + result1369 + " <quarter.getQuarter()>")
chamada antiga: assertEquals(2001, quarter.getYear().getYear())
nova chamada: assertEquals(2001, quarter.getYear().getYear(), "Era esperado valores iguais, mas  2001 é diferente de " + result1370 + " <quarter.getYear().getYear()>")
chamada antiga: assertEquals(3, quarter.getQuarter())
nova chamada: assertEquals(3, quarter.getQuarter(), "Era esperado valores iguais, mas  3 é diferente de " + result1371 + " <quarter.getQuarter()>")
chamada antiga: assertEquals(2002, quarter.getYear().getYear())
nova chamada: assertEquals(2002, quarter.getYear().getYear(), "Era esperado valores iguais, mas  2002 é diferente de " + result1372 + " <quarter.getYear().getYear()>")
chamada antiga: assertEquals(q1, q2)
nova chamada: assertEquals(q1, q2, "Era esperado valores iguais, mas  q1 é diferente de " + " q2")
chamada antiga: assertTrue(q1.equals(q2))
nova chamada: assertTrue(q1.equals(q2), "Era esperado verdadeiro, mas " + result1373 + " <q1.equals(q2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(q instanceof Cloneable)
nova chamada: assertFalse(q instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(15634800000L, q.getFirstMillisecond())
nova chamada: assertEquals(15634800000L, q.getFirstMillisecond(), "Era esperado valores iguais, mas  15634800000L é diferente de " + result1374 + " <q.getFirstMillisecond()>")
chamada antiga: assertEquals(-623347200000L, q.getFirstMillisecond(cal))
nova chamada: assertEquals(-623347200000L, q.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -623347200000L é diferente de " + result1375 + " <q.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(978307200000L, q.getFirstMillisecond(calendar))
nova chamada: assertEquals(978307200000L, q.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  978307200000L é diferente de " + result1376 + " <q.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(23583599999L, q.getLastMillisecond())
nova chamada: assertEquals(23583599999L, q.getLastMillisecond(), "Era esperado valores iguais, mas  23583599999L é diferente de " + result1377 + " <q.getLastMillisecond()>")
chamada antiga: assertEquals(-615488400001L, q.getLastMillisecond(cal))
nova chamada: assertEquals(-615488400001L, q.getLastMillisecond(cal), "Era esperado valores iguais, mas  -615488400001L é diferente de " + result1378 + " <q.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1001894399999L, q.getLastMillisecond(calendar))
nova chamada: assertEquals(1001894399999L, q.getLastMillisecond(calendar), "Era esperado valores iguais, mas  1001894399999L é diferente de " + result1379 + " <q.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(8001L, q.getSerialIndex())
nova chamada: assertEquals(8001L, q.getSerialIndex(), "Era esperado valores iguais, mas  8001L é diferente de " + result1380 + " <q.getSerialIndex()>")
chamada antiga: assertEquals(7601L, q.getSerialIndex())
nova chamada: assertEquals(7601L, q.getSerialIndex(), "Era esperado valores iguais, mas  7601L é diferente de " + result1381 + " <q.getSerialIndex()>")
chamada antiga: assertEquals(new Year(2000), q.getYear())
nova chamada: assertEquals(new Year(2000), q.getYear(), "Era esperado valores iguais, mas  new Year(2000) é diferente de " + result1382 + " <q.getYear()>")
chamada antiga: assertEquals(2, q.getQuarter())
nova chamada: assertEquals(2, q.getQuarter(), "Era esperado valores iguais, mas  2 é diferente de " + result1383 + " <q.getQuarter()>")
chamada antiga: assertNull(q.next())
nova chamada: assertNull(q.next(), "Era esperado nulo, mas " + result1384 + " <q.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), q.getStart())
nova chamada: assertEquals(cal.getTime(), q.getStart(), "Era esperado valores iguais, mas " + result1385 + " <cal.getTime()> é diferente de " + result1386 + " <q.getStart()>")
chamada antiga: assertEquals(cal.getTime(), q.getEnd())
nova chamada: assertEquals(cal.getTime(), q.getEnd(), "Era esperado valores iguais, mas " + result1387 + " <cal.getTime()> é diferente de " + result1388 + " <q.getEnd()>")
chamada antiga: assertTrue(hour.equals(hour))
nova chamada: assertTrue(hour.equals(hour), "Era esperado verdadeiro, mas " + result1389 + " <hour.equals(hour)> é falso")
chamada antiga: assertTrue(hour1.equals(hour2))
nova chamada: assertTrue(hour1.equals(hour2), "Era esperado verdadeiro, mas " + result1390 + " <hour1.equals(hour2)> é falso")
chamada antiga: assertEquals(15, h1.getHour())
nova chamada: assertEquals(15, h1.getHour(), "Era esperado valores iguais, mas  15 é diferente de " + result1391 + " <h1.getHour()>")
chamada antiga: assertEquals(1014307199999L, h1.getLastMillisecond(cal))
nova chamada: assertEquals(1014307199999L, h1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1014307199999L é diferente de " + result1392 + " <h1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(16, h2.getHour())
nova chamada: assertEquals(16, h2.getHour(), "Era esperado valores iguais, mas  16 é diferente de " + result1393 + " <h2.getHour()>")
chamada antiga: assertEquals(1014307200000L, h2.getFirstMillisecond(cal))
nova chamada: assertEquals(1014307200000L, h2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1014307200000L é diferente de " + result1394 + " <h2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(15, h1.getHour())
nova chamada: assertEquals(15, h1.getHour(), "Era esperado valores iguais, mas  15 é diferente de " + result1395 + " <h1.getHour()>")
chamada antiga: assertEquals(1014267599999L, h1.getLastMillisecond(cal))
nova chamada: assertEquals(1014267599999L, h1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1014267599999L é diferente de " + result1396 + " <h1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(16, h2.getHour())
nova chamada: assertEquals(16, h2.getHour(), "Era esperado valores iguais, mas  16 é diferente de " + result1397 + " <h2.getHour()>")
chamada antiga: assertEquals(1014267600000L, h2.getFirstMillisecond(cal))
nova chamada: assertEquals(1014267600000L, h2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1014267600000L é diferente de " + result1398 + " <h2.getFirstMillisecond(cal)>")
chamada antiga: assertNull(previous)
nova chamada: assertNull(previous, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(1, next.getHour())
nova chamada: assertEquals(1, next.getHour(), "Era esperado valores iguais, mas  1 é diferente de " + result1399 + " <next.getHour()>")
chamada antiga: assertEquals(1900, next.getYear())
nova chamada: assertEquals(1900, next.getYear(), "Era esperado valores iguais, mas  1900 é diferente de " + result1400 + " <next.getYear()>")
chamada antiga: assertEquals(22, previous.getHour())
nova chamada: assertEquals(22, previous.getHour(), "Era esperado valores iguais, mas  22 é diferente de " + result1401 + " <previous.getHour()>")
chamada antiga: assertEquals(9999, previous.getYear())
nova chamada: assertEquals(9999, previous.getYear(), "Era esperado valores iguais, mas  9999 é diferente de " + result1402 + " <previous.getYear()>")
chamada antiga: assertNull(next)
nova chamada: assertNull(next, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(13, h.getHour())
nova chamada: assertEquals(13, h.getHour(), "Era esperado valores iguais, mas  13 é diferente de " + result1403 + " <h.getHour()>")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(h1.equals(h2))
nova chamada: assertTrue(h1.equals(h2), "Era esperado verdadeiro, mas " + result1404 + " <h1.equals(h2)> é falso")
chamada antiga: assertEquals(hash1, hash2)
nova chamada: assertEquals(hash1, hash2, "Era esperado valores iguais, mas  hash1 é diferente de " + " hash2")
chamada antiga: assertFalse(h instanceof Cloneable)
nova chamada: assertFalse(h instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1143900000000L, h.getFirstMillisecond())
nova chamada: assertEquals(1143900000000L, h.getFirstMillisecond(), "Era esperado valores iguais, mas  1143900000000L é diferente de " + result1405 + " <h.getFirstMillisecond()>")
chamada antiga: assertEquals(-623293200000L, h.getFirstMillisecond(cal))
nova chamada: assertEquals(-623293200000L, h.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -623293200000L é diferente de " + result1406 + " <h.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(955764000000L, h.getFirstMillisecond(calendar))
nova chamada: assertEquals(955764000000L, h.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  955764000000L é diferente de " + result1407 + " <h.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3599999L, h.getLastMillisecond())
nova chamada: assertEquals(3599999L, h.getLastMillisecond(), "Era esperado valores iguais, mas  3599999L é diferente de " + result1408 + " <h.getLastMillisecond()>")
chamada antiga: assertEquals(-614959200001L, h.getLastMillisecond(cal))
nova chamada: assertEquals(-614959200001L, h.getLastMillisecond(cal), "Era esperado valores iguais, mas  -614959200001L é diferente de " + result1409 + " <h.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(987890399999L, h.getLastMillisecond(calendar))
nova chamada: assertEquals(987890399999L, h.getLastMillisecond(calendar), "Era esperado valores iguais, mas  987890399999L é diferente de " + result1410 + " <h.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(876625L, h.getSerialIndex())
nova chamada: assertEquals(876625L, h.getSerialIndex(), "Era esperado valores iguais, mas  876625L é diferente de " + result1411 + " <h.getSerialIndex()>")
chamada antiga: assertEquals(49L, h.getSerialIndex())
nova chamada: assertEquals(49L, h.getSerialIndex(), "Era esperado valores iguais, mas  49L é diferente de " + result1412 + " <h.getSerialIndex()>")
chamada antiga: assertEquals(2000, h.getYear())
nova chamada: assertEquals(2000, h.getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1413 + " <h.getYear()>")
chamada antiga: assertEquals(12, h.getMonth())
nova chamada: assertEquals(12, h.getMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1414 + " <h.getMonth()>")
chamada antiga: assertEquals(12, h.getDayOfMonth())
nova chamada: assertEquals(12, h.getDayOfMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1415 + " <h.getDayOfMonth()>")
chamada antiga: assertEquals(2, h.getHour())
nova chamada: assertEquals(2, h.getHour(), "Era esperado valores iguais, mas  2 é diferente de " + result1416 + " <h.getHour()>")
chamada antiga: assertNull(h.next())
nova chamada: assertNull(h.next(), "Era esperado nulo, mas " + result1417 + " <h.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), h.getStart())
nova chamada: assertEquals(cal.getTime(), h.getStart(), "Era esperado valores iguais, mas " + result1418 + " <cal.getTime()> é diferente de " + result1419 + " <h.getStart()>")
chamada antiga: assertEquals(cal.getTime(), h.getEnd())
nova chamada: assertEquals(cal.getTime(), h.getEnd(), "Era esperado valores iguais, mas " + result1420 + " <cal.getTime()> é diferente de " + result1421 + " <h.getEnd()>")
chamada antiga: assertTrue(second.equals(second))
nova chamada: assertTrue(second.equals(second), "Era esperado verdadeiro, mas " + result1422 + " <second.equals(second)> é falso")
chamada antiga: assertTrue(second1.equals(second2))
nova chamada: assertTrue(second1.equals(second2), "Era esperado verdadeiro, mas " + result1423 + " <second1.equals(second2)> é falso")
chamada antiga: assertEquals(58, s1.getSecond())
nova chamada: assertEquals(58, s1.getSecond(), "Era esperado valores iguais, mas  58 é diferente de " + result1424 + " <s1.getSecond()>")
chamada antiga: assertEquals(1016729758999L, s1.getLastMillisecond(cal))
nova chamada: assertEquals(1016729758999L, s1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1016729758999L é diferente de " + result1425 + " <s1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(59, s2.getSecond())
nova chamada: assertEquals(59, s2.getSecond(), "Era esperado valores iguais, mas  59 é diferente de " + result1426 + " <s2.getSecond()>")
chamada antiga: assertEquals(1016729759000L, s2.getFirstMillisecond(cal))
nova chamada: assertEquals(1016729759000L, s2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1016729759000L é diferente de " + result1427 + " <s2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(58, s1.getSecond())
nova chamada: assertEquals(58, s1.getSecond(), "Era esperado valores iguais, mas  58 é diferente de " + result1428 + " <s1.getSecond()>")
chamada antiga: assertEquals(1016751358999L, s1.getLastMillisecond(cal))
nova chamada: assertEquals(1016751358999L, s1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1016751358999L é diferente de " + result1429 + " <s1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(59, s2.getSecond())
nova chamada: assertEquals(59, s2.getSecond(), "Era esperado valores iguais, mas  59 é diferente de " + result1430 + " <s2.getSecond()>")
chamada antiga: assertEquals(1016751359000L, s2.getFirstMillisecond(cal))
nova chamada: assertEquals(1016751359000L, s2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1016751359000L é diferente de " + result1431 + " <s2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1432 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(s instanceof Cloneable)
nova chamada: assertFalse(s instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1143902595000L, s.getFirstMillisecond())
nova chamada: assertEquals(1143902595000L, s.getFirstMillisecond(), "Era esperado valores iguais, mas  1143902595000L é diferente de " + result1433 + " <s.getFirstMillisecond()>")
chamada antiga: assertEquals(-623289610000L, s.getFirstMillisecond(cal))
nova chamada: assertEquals(-623289610000L, s.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -623289610000L é diferente de " + result1434 + " <s.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(955766455000L, s.getFirstMillisecond(calendar))
nova chamada: assertEquals(955766455000L, s.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  955766455000L é diferente de " + result1435 + " <s.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(61999L, s.getLastMillisecond())
nova chamada: assertEquals(61999L, s.getLastMillisecond(), "Era esperado valores iguais, mas  61999L é diferente de " + result1436 + " <s.getLastMillisecond()>")
chamada antiga: assertEquals(-614962684001L, s.getLastMillisecond(cal))
nova chamada: assertEquals(-614962684001L, s.getLastMillisecond(cal), "Era esperado valores iguais, mas  -614962684001L é diferente de " + result1437 + " <s.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(987889550999L, s.getLastMillisecond(calendar))
nova chamada: assertEquals(987889550999L, s.getLastMillisecond(calendar), "Era esperado valores iguais, mas  987889550999L é diferente de " + result1438 + " <s.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3155850061L, s.getSerialIndex())
nova chamada: assertEquals(3155850061L, s.getSerialIndex(), "Era esperado valores iguais, mas  3155850061L é diferente de " + result1439 + " <s.getSerialIndex()>")
chamada antiga: assertEquals(176461L, s.getSerialIndex())
nova chamada: assertEquals(176461L, s.getSerialIndex(), "Era esperado valores iguais, mas  176461L é diferente de " + result1440 + " <s.getSerialIndex()>")
chamada antiga: assertEquals(2000, s.getMinute().getHour().getYear())
nova chamada: assertEquals(2000, s.getMinute().getHour().getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1441 + " <s.getMinute().getHour().getYear()>")
chamada antiga: assertEquals(12, s.getMinute().getHour().getMonth())
nova chamada: assertEquals(12, s.getMinute().getHour().getMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1442 + " <s.getMinute().getHour().getMonth()>")
chamada antiga: assertEquals(12, s.getMinute().getHour().getDayOfMonth())
nova chamada: assertEquals(12, s.getMinute().getHour().getDayOfMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1443 + " <s.getMinute().getHour().getDayOfMonth()>")
chamada antiga: assertEquals(1, s.getMinute().getHour().getHour())
nova chamada: assertEquals(1, s.getMinute().getHour().getHour(), "Era esperado valores iguais, mas  1 é diferente de " + result1444 + " <s.getMinute().getHour().getHour()>")
chamada antiga: assertEquals(30, s.getMinute().getMinute())
nova chamada: assertEquals(30, s.getMinute().getMinute(), "Era esperado valores iguais, mas  30 é diferente de " + result1445 + " <s.getMinute().getMinute()>")
chamada antiga: assertEquals(56, s.getSecond())
nova chamada: assertEquals(56, s.getSecond(), "Era esperado valores iguais, mas  56 é diferente de " + result1446 + " <s.getSecond()>")
chamada antiga: assertNull(s.next())
nova chamada: assertNull(s.next(), "Era esperado nulo, mas " + result1447 + " <s.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), s.getStart())
nova chamada: assertEquals(cal.getTime(), s.getStart(), "Era esperado valores iguais, mas " + result1448 + " <cal.getTime()> é diferente de " + result1449 + " <s.getStart()>")
chamada antiga: assertEquals(cal.getTime(), s.getEnd())
nova chamada: assertEquals(cal.getTime(), s.getEnd(), "Era esperado valores iguais, mas " + result1450 + " <cal.getTime()> é diferente de " + result1451 + " <s.getEnd()>")
chamada antiga: assertEquals(d.getItemCount(), 1)
nova chamada: assertEquals(d.getItemCount(), 1, "Era esperado valores iguais, mas " + result1452 + " <d.getItemCount()> é diferente de " + " 1")
chamada antiga: assertEquals(d.getSeriesCount(), 1)
nova chamada: assertEquals(d.getSeriesCount(), 1, "Era esperado valores iguais, mas " + result1453 + " <d.getSeriesCount()> é diferente de " + " 1")
chamada antiga: assertEquals(d.getItemCount(), 2)
nova chamada: assertEquals(d.getItemCount(), 2, "Era esperado valores iguais, mas " + result1454 + " <d.getItemCount()> é diferente de " + " 2")
chamada antiga: assertEquals(d.getSeriesCount(), 2)
nova chamada: assertEquals(d.getSeriesCount(), 2, "Era esperado valores iguais, mas " + result1455 + " <d.getSeriesCount()> é diferente de " + " 2")
chamada antiga: assertTrue(Double.isNaN(d.getYValue(0, 1)))
nova chamada: assertTrue(Double.isNaN(d.getYValue(0, 1)), "Era esperado verdadeiro, mas " + result1456 + " <Double.isNaN(d.getYValue(0, 1))> é falso")
chamada antiga: assertTrue(Double.isNaN(d.getYValue(1, 0)))
nova chamada: assertTrue(Double.isNaN(d.getYValue(1, 0)), "Era esperado verdadeiro, mas " + result1457 + " <Double.isNaN(d.getYValue(1, 0))> é falso")
chamada antiga: assertEquals(d.getTimePeriod(0), new Year(1996))
nova chamada: assertEquals(d.getTimePeriod(0), new Year(1996), "Era esperado valores iguais, mas " + result1458 + " <d.getTimePeriod(0)> é diferente de " + " new Year(1996)")
chamada antiga: assertEquals(d.getTimePeriod(1), new Year(1998))
nova chamada: assertEquals(d.getTimePeriod(1), new Year(1998), "Era esperado valores iguais, mas " + result1459 + " <d.getTimePeriod(1)> é diferente de " + " new Year(1998)")
chamada antiga: assertEquals(d.getTimePeriod(2), new Year(1999))
nova chamada: assertEquals(d.getTimePeriod(2), new Year(1999), "Era esperado valores iguais, mas " + result1460 + " <d.getTimePeriod(2)> é diferente de " + " new Year(1999)")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1461 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result1462 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1463 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1464 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1465 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1466 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result1467 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(clone.equals(d))
nova chamada: assertTrue(clone.equals(d), "Era esperado verdadeiro, mas " + result1468 + " <clone.equals(d)> é falso")
chamada antiga: assertFalse(clone.equals(d))
nova chamada: assertFalse(clone.equals(d), "Era esperado falso, mas " + result1469 + " <clone.equals(d)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1470 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d.getItemCount(), 1)
nova chamada: assertEquals(d.getItemCount(), 1, "Era esperado valores iguais, mas " + result1471 + " <d.getItemCount()> é diferente de " + " 1")
chamada antiga: assertEquals(d.getSeriesCount(), 1)
nova chamada: assertEquals(d.getSeriesCount(), 1, "Era esperado valores iguais, mas " + result1472 + " <d.getSeriesCount()> é diferente de " + " 1")
chamada antiga: assertEquals(0, d.getItemCount())
nova chamada: assertEquals(0, d.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1473 + " <d.getItemCount()>")
chamada antiga: assertEquals(0, d.getSeriesCount())
nova chamada: assertEquals(0, d.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1474 + " <d.getSeriesCount()>")
chamada antiga: assertTrue(p.equals(p))
nova chamada: assertTrue(p.equals(p), "Era esperado verdadeiro, mas " + result1475 + " <p.equals(p)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result1476 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result1477 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result1478 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result1479 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result1480 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result1481 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1482 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(s1 instanceof Cloneable)
nova chamada: assertFalse(s1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(new Date(10L), p1.getStart())
nova chamada: assertEquals(new Date(10L), p1.getStart(), "Era esperado valores iguais, mas  new Date(10L) é diferente de " + result1483 + " <p1.getStart()>")
chamada antiga: assertEquals(0, s1.compareTo(s2))
nova chamada: assertEquals(0, s1.compareTo(s2), "Era esperado valores iguais, mas  0 é diferente de " + result1484 + " <s1.compareTo(s2)>")
chamada antiga: assertEquals(-1, s1.compareTo(s2))
nova chamada: assertEquals(-1, s1.compareTo(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result1485 + " <s1.compareTo(s2)>")
chamada antiga: assertEquals(1, s1.compareTo(s2))
nova chamada: assertEquals(1, s1.compareTo(s2), "Era esperado valores iguais, mas  1 é diferente de " + result1486 + " <s1.compareTo(s2)>")
chamada antiga: assertEquals(-1, s1.compareTo(s2))
nova chamada: assertEquals(-1, s1.compareTo(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result1487 + " <s1.compareTo(s2)>")
chamada antiga: assertEquals(1, s1.compareTo(s2))
nova chamada: assertEquals(1, s1.compareTo(s2), "Era esperado valores iguais, mas  1 é diferente de " + result1488 + " <s1.compareTo(s2)>")
chamada antiga: assertEquals(-1, s1.compareTo(s2))
nova chamada: assertEquals(-1, s1.compareTo(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result1489 + " <s1.compareTo(s2)>")
chamada antiga: assertEquals(1, s1.compareTo(s2))
nova chamada: assertEquals(1, s1.compareTo(s2), "Era esperado valores iguais, mas  1 é diferente de " + result1490 + " <s1.compareTo(s2)>")
chamada antiga: assertTrue(tpv.equals(tpv))
nova chamada: assertTrue(tpv.equals(tpv), "Era esperado verdadeiro, mas " + result1491 + " <tpv.equals(tpv)> é falso")
chamada antiga: assertTrue(tpv1.equals(tpv2))
nova chamada: assertTrue(tpv1.equals(tpv2), "Era esperado verdadeiro, mas " + result1492 + " <tpv1.equals(tpv2)> é falso")
chamada antiga: assertTrue(tpv2.equals(tpv1))
nova chamada: assertTrue(tpv2.equals(tpv1), "Era esperado verdadeiro, mas " + result1493 + " <tpv2.equals(tpv1)> é falso")
chamada antiga: assertEquals(tpv1, tpv2)
nova chamada: assertEquals(tpv1, tpv2, "Era esperado valores iguais, mas  tpv1 é diferente de " + " tpv2")
chamada antiga: assertTrue(day.equals(day))
nova chamada: assertTrue(day.equals(day), "Era esperado verdadeiro, mas " + result1494 + " <day.equals(day)> é falso")
chamada antiga: assertTrue(day1.equals(day2))
nova chamada: assertTrue(day1.equals(day2), "Era esperado verdadeiro, mas " + result1495 + " <day1.equals(day2)> é falso")
chamada antiga: assertEquals(MonthConstants.FEBRUARY, d1.getMonth())
nova chamada: assertEquals(MonthConstants.FEBRUARY, d1.getMonth(), "Era esperado valores iguais, mas  MonthConstants.FEBRUARY é diferente de " + result1496 + " <d1.getMonth()>")
chamada antiga: assertEquals(1078099199999L, d1.getLastMillisecond(cal))
nova chamada: assertEquals(1078099199999L, d1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1078099199999L é diferente de " + result1497 + " <d1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(MonthConstants.MARCH, d2.getMonth())
nova chamada: assertEquals(MonthConstants.MARCH, d2.getMonth(), "Era esperado valores iguais, mas  MonthConstants.MARCH é diferente de " + result1498 + " <d2.getMonth()>")
chamada antiga: assertEquals(1078099200000L, d2.getFirstMillisecond(cal))
nova chamada: assertEquals(1078099200000L, d2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1078099200000L é diferente de " + result1499 + " <d2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(MonthConstants.FEBRUARY, d1.getMonth())
nova chamada: assertEquals(MonthConstants.FEBRUARY, d1.getMonth(), "Era esperado valores iguais, mas  MonthConstants.FEBRUARY é diferente de " + result1500 + " <d1.getMonth()>")
chamada antiga: assertEquals(1078091999999L, d1.getLastMillisecond(cal))
nova chamada: assertEquals(1078091999999L, d1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1078091999999L é diferente de " + result1501 + " <d1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(MonthConstants.MARCH, d2.getMonth())
nova chamada: assertEquals(MonthConstants.MARCH, d2.getMonth(), "Era esperado valores iguais, mas  MonthConstants.MARCH é diferente de " + result1502 + " <d2.getMonth()>")
chamada antiga: assertEquals(1078092000000L, d2.getFirstMillisecond(cal))
nova chamada: assertEquals(1078092000000L, d2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1078092000000L é diferente de " + result1503 + " <d2.getFirstMillisecond(cal)>")
chamada antiga: assertNull(previous)
nova chamada: assertNull(previous, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(2, next.getDayOfMonth())
nova chamada: assertEquals(2, next.getDayOfMonth(), "Era esperado valores iguais, mas  2 é diferente de " + result1504 + " <next.getDayOfMonth()>")
chamada antiga: assertEquals(30, previous.getDayOfMonth())
nova chamada: assertEquals(30, previous.getDayOfMonth(), "Era esperado valores iguais, mas  30 é diferente de " + result1505 + " <previous.getDayOfMonth()>")
chamada antiga: assertNull(next)
nova chamada: assertNull(next, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(37256, d.getSerialDate().toSerial())
nova chamada: assertEquals(37256, d.getSerialDate().toSerial(), "Era esperado valores iguais, mas  37256 é diferente de " + result1506 + " <d.getSerialDate().toSerial()>")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1507 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(d instanceof Cloneable)
nova chamada: assertFalse(d instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(2, d.getSerialIndex())
nova chamada: assertEquals(2, d.getSerialIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result1508 + " <d.getSerialIndex()>")
chamada antiga: assertEquals(36631, d.getSerialIndex())
nova chamada: assertEquals(36631, d.getSerialIndex(), "Era esperado valores iguais, mas  36631 é diferente de " + result1509 + " <d.getSerialIndex()>")
chamada antiga: assertEquals(5094000000L, d.getFirstMillisecond())
nova chamada: assertEquals(5094000000L, d.getFirstMillisecond(), "Era esperado valores iguais, mas  5094000000L é diferente de " + result1510 + " <d.getFirstMillisecond()>")
chamada antiga: assertEquals(-621187200000L, d.getFirstMillisecond(cal))
nova chamada: assertEquals(-621187200000L, d.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -621187200000L é diferente de " + result1511 + " <d.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1007164800000L, d.getFirstMillisecond(calendar))
nova chamada: assertEquals(1007164800000L, d.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  1007164800000L é diferente de " + result1512 + " <d.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(82799999L, d.getLastMillisecond())
nova chamada: assertEquals(82799999L, d.getLastMillisecond(), "Era esperado valores iguais, mas  82799999L é diferente de " + result1513 + " <d.getLastMillisecond()>")
chamada antiga: assertEquals(-628358400001L, d.getLastMillisecond(cal))
nova chamada: assertEquals(-628358400001L, d.getLastMillisecond(cal), "Era esperado valores iguais, mas  -628358400001L é diferente de " + result1514 + " <d.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(989017199999L, d.getLastMillisecond(calendar))
nova chamada: assertEquals(989017199999L, d.getLastMillisecond(calendar), "Era esperado valores iguais, mas  989017199999L é diferente de " + result1515 + " <d.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2000, d.getYear())
nova chamada: assertEquals(2000, d.getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1516 + " <d.getYear()>")
chamada antiga: assertEquals(12, d.getMonth())
nova chamada: assertEquals(12, d.getMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1517 + " <d.getMonth()>")
chamada antiga: assertEquals(26, d.getDayOfMonth())
nova chamada: assertEquals(26, d.getDayOfMonth(), "Era esperado valores iguais, mas  26 é diferente de " + result1518 + " <d.getDayOfMonth()>")
chamada antiga: assertNull(d.next())
nova chamada: assertNull(d.next(), "Era esperado nulo, mas " + result1519 + " <d.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), d.getStart())
nova chamada: assertEquals(cal.getTime(), d.getStart(), "Era esperado valores iguais, mas " + result1520 + " <cal.getTime()> é diferente de " + result1521 + " <d.getStart()>")
chamada antiga: assertEquals(cal.getTime(), d.getEnd())
nova chamada: assertEquals(cal.getTime(), d.getEnd(), "Era esperado valores iguais, mas " + result1522 + " <cal.getTime()> é diferente de " + result1523 + " <d.getEnd()>")
chamada antiga: assertEquals(42, seriesValue)
nova chamada: assertEquals(42, seriesValue, "Era esperado valores iguais, mas  42 é diferente de " + " seriesValue")
chamada antiga: assertEquals(10, cloneValue)
nova chamada: assertEquals(10, cloneValue, "Era esperado valores iguais, mas  10 é diferente de " + " cloneValue")
chamada antiga: assertEquals("Test Series", series.getKey())
nova chamada: assertEquals("Test Series", series.getKey(), "Era esperado valores iguais, mas  'Test Series' é diferente de " + result1524 + " <series.getKey()>")
chamada antiga: assertEquals("Clone Series", clone.getKey())
nova chamada: assertEquals("Clone Series", clone.getKey(), "Era esperado valores iguais, mas  'Clone Series' é diferente de " + result1525 + " <clone.getKey()>")
chamada antiga: assertEquals(1, value)
nova chamada: assertEquals(1, value, "Era esperado valores iguais, mas  1 é diferente de " + " value")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1526 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1527 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1528 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1529 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1530 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1531 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1532 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1533 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1534 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(0, tpv.getItemCount())
nova chamada: assertEquals(0, tpv.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1535 + " <tpv.getItemCount()>")
chamada antiga: assertEquals(1, tpv.getItemCount())
nova chamada: assertEquals(1, tpv.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1536 + " <tpv.getItemCount()>")
chamada antiga: assertEquals(tpv, listener.getLastEvent().getSource())
nova chamada: assertEquals(tpv, listener.getLastEvent().getSource(), "Era esperado valores iguais, mas  tpv é diferente de " + result1537 + " <listener.getLastEvent().getSource()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(-1, s.getMinStartIndex())
nova chamada: assertEquals(-1, s.getMinStartIndex(), "Era esperado valores iguais, mas  -1 é diferente de " + result1538 + " <s.getMinStartIndex()>")
chamada antiga: assertEquals(0, s.getMinStartIndex())
nova chamada: assertEquals(0, s.getMinStartIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1539 + " <s.getMinStartIndex()>")
chamada antiga: assertEquals(0, s.getMinStartIndex())
nova chamada: assertEquals(0, s.getMinStartIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1540 + " <s.getMinStartIndex()>")
chamada antiga: assertEquals(2, s.getMinStartIndex())
nova chamada: assertEquals(2, s.getMinStartIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result1541 + " <s.getMinStartIndex()>")
chamada antiga: assertEquals(-1, s.getMaxStartIndex())
nova chamada: assertEquals(-1, s.getMaxStartIndex(), "Era esperado valores iguais, mas  -1 é diferente de " + result1542 + " <s.getMaxStartIndex()>")
chamada antiga: assertEquals(0, s.getMaxStartIndex())
nova chamada: assertEquals(0, s.getMaxStartIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1543 + " <s.getMaxStartIndex()>")
chamada antiga: assertEquals(1, s.getMaxStartIndex())
nova chamada: assertEquals(1, s.getMaxStartIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1544 + " <s.getMaxStartIndex()>")
chamada antiga: assertEquals(1, s.getMaxStartIndex())
nova chamada: assertEquals(1, s.getMaxStartIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1545 + " <s.getMaxStartIndex()>")
chamada antiga: assertEquals(-1, s.getMinMiddleIndex())
nova chamada: assertEquals(-1, s.getMinMiddleIndex(), "Era esperado valores iguais, mas  -1 é diferente de " + result1546 + " <s.getMinMiddleIndex()>")
chamada antiga: assertEquals(0, s.getMinMiddleIndex())
nova chamada: assertEquals(0, s.getMinMiddleIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1547 + " <s.getMinMiddleIndex()>")
chamada antiga: assertEquals(0, s.getMinMiddleIndex())
nova chamada: assertEquals(0, s.getMinMiddleIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1548 + " <s.getMinMiddleIndex()>")
chamada antiga: assertEquals(2, s.getMinMiddleIndex())
nova chamada: assertEquals(2, s.getMinMiddleIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result1549 + " <s.getMinMiddleIndex()>")
chamada antiga: assertEquals(-1, s.getMaxMiddleIndex())
nova chamada: assertEquals(-1, s.getMaxMiddleIndex(), "Era esperado valores iguais, mas  -1 é diferente de " + result1550 + " <s.getMaxMiddleIndex()>")
chamada antiga: assertEquals(0, s.getMaxMiddleIndex())
nova chamada: assertEquals(0, s.getMaxMiddleIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1551 + " <s.getMaxMiddleIndex()>")
chamada antiga: assertEquals(1, s.getMaxMiddleIndex())
nova chamada: assertEquals(1, s.getMaxMiddleIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1552 + " <s.getMaxMiddleIndex()>")
chamada antiga: assertEquals(1, s.getMaxMiddleIndex())
nova chamada: assertEquals(1, s.getMaxMiddleIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1553 + " <s.getMaxMiddleIndex()>")
chamada antiga: assertEquals(1, s.getMaxMiddleIndex())
nova chamada: assertEquals(1, s.getMaxMiddleIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1554 + " <s.getMaxMiddleIndex()>")
chamada antiga: assertEquals(-1, s.getMinEndIndex())
nova chamada: assertEquals(-1, s.getMinEndIndex(), "Era esperado valores iguais, mas  -1 é diferente de " + result1555 + " <s.getMinEndIndex()>")
chamada antiga: assertEquals(0, s.getMinEndIndex())
nova chamada: assertEquals(0, s.getMinEndIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1556 + " <s.getMinEndIndex()>")
chamada antiga: assertEquals(0, s.getMinEndIndex())
nova chamada: assertEquals(0, s.getMinEndIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1557 + " <s.getMinEndIndex()>")
chamada antiga: assertEquals(2, s.getMinEndIndex())
nova chamada: assertEquals(2, s.getMinEndIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result1558 + " <s.getMinEndIndex()>")
chamada antiga: assertEquals(-1, s.getMaxEndIndex())
nova chamada: assertEquals(-1, s.getMaxEndIndex(), "Era esperado valores iguais, mas  -1 é diferente de " + result1559 + " <s.getMaxEndIndex()>")
chamada antiga: assertEquals(0, s.getMaxEndIndex())
nova chamada: assertEquals(0, s.getMaxEndIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result1560 + " <s.getMaxEndIndex()>")
chamada antiga: assertEquals(1, s.getMaxEndIndex())
nova chamada: assertEquals(1, s.getMaxEndIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1561 + " <s.getMaxEndIndex()>")
chamada antiga: assertEquals(1, s.getMaxEndIndex())
nova chamada: assertEquals(1, s.getMaxEndIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result1562 + " <s.getMaxEndIndex()>")
chamada antiga: assertEquals(new Year(2006), item1.getPeriod())
nova chamada: assertEquals(new Year(2006), item1.getPeriod(), "Era esperado valores iguais, mas  new Year(2006) é diferente de " + result1563 + " <item1.getPeriod()>")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1564 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item2.equals(item1))
nova chamada: assertTrue(item2.equals(item1), "Era esperado verdadeiro, mas " + result1565 + " <item2.equals(item1)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result1566 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1567 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result1568 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1569 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result1570 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1571 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result1572 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1573 + " <item1.equals(item2)> é falso")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result1574 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1575 + " <item1.equals(item2)> é falso")
chamada antiga: assertTrue(item1 != item2)
nova chamada: assertTrue(item1 != item2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.getClass() == item2.getClass())
nova chamada: assertTrue(item1.getClass() == item2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item1.equals(item2))
nova chamada: assertTrue(item1.equals(item2), "Era esperado verdadeiro, mas " + result1576 + " <item1.equals(item2)> é falso")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result1577 + " <i1.equals(i2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1578 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1579 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1580 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1581 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1582 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1583 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1584 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1585 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1586 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(c1.getSeries(2).equals(s4))
nova chamada: assertTrue(c1.getSeries(2).equals(s4), "Era esperado verdadeiro, mas " + result1587 + " <c1.getSeries(2).equals(s4)> é falso")
chamada antiga: assertTrue(c1.getSeries(0).equals(s2))
nova chamada: assertTrue(c1.getSeries(0).equals(s2), "Era esperado verdadeiro, mas " + result1588 + " <c1.getSeries(0).equals(s2)> é falso")
chamada antiga: assertEquals(2, c1.getSeriesCount())
nova chamada: assertEquals(2, c1.getSeriesCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1589 + " <c1.getSeriesCount()>")
chamada antiga: assertTrue(c1.getSeries(2).equals(s4))
nova chamada: assertTrue(c1.getSeries(2).equals(s4), "Era esperado verdadeiro, mas " + result1590 + " <c1.getSeries(2).equals(s4)> é falso")
chamada antiga: assertTrue(c1.getSeries(0).equals(s2))
nova chamada: assertTrue(c1.getSeries(0).equals(s2), "Era esperado verdadeiro, mas " + result1591 + " <c1.getSeries(0).equals(s2)> é falso")
chamada antiga: assertEquals(2, c1.getSeriesCount())
nova chamada: assertEquals(2, c1.getSeriesCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1592 + " <c1.getSeriesCount()>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(0, c1.getSeriesCount())
nova chamada: assertEquals(0, c1.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1593 + " <c1.getSeriesCount()>")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1594 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1595 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1596 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1597 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result1598 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1599 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result1600 + " <s2.equals(s1)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1601 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result1602 + " <s2.equals(s1)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1603 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1604 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(0, s1.indexOf(new Year(2006)))
nova chamada: assertEquals(0, s1.indexOf(new Year(2006)), "Era esperado valores iguais, mas  0 é diferente de " + result1605 + " <s1.indexOf(new Year(2006))>")
chamada antiga: assertEquals(1, s1.indexOf(new Year(2010)))
nova chamada: assertEquals(1, s1.indexOf(new Year(2010)), "Era esperado valores iguais, mas  1 é diferente de " + result1606 + " <s1.indexOf(new Year(2010))>")
chamada antiga: assertEquals(2, s1.indexOf(new Year(2011)))
nova chamada: assertEquals(2, s1.indexOf(new Year(2011)), "Era esperado valores iguais, mas  2 é diferente de " + result1607 + " <s1.indexOf(new Year(2011))>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1608 + " <s1.getItemCount()>")
chamada antiga: assertEquals(new Year(2011), s1.getPeriod(1))
nova chamada: assertEquals(new Year(2011), s1.getPeriod(1), "Era esperado valores iguais, mas  new Year(2011) é diferente de " + result1609 + " <s1.getPeriod(1)>")
chamada antiga: assertEquals(new Year(2011), s1.getPeriod(0))
nova chamada: assertEquals(new Year(2011), s1.getPeriod(0), "Era esperado valores iguais, mas  new Year(2011) é diferente de " + result1610 + " <s1.getPeriod(0)>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1611 + " <s1.getItemCount()>")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1612 + " <s1.getItemCount()>")
chamada antiga: assertEquals(new Year(2010), s1.getPeriod(1))
nova chamada: assertEquals(new Year(2010), s1.getPeriod(1), "Era esperado valores iguais, mas  new Year(2010) é diferente de " + result1613 + " <s1.getPeriod(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result1614 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(2, s1.getMaximumItemCount())
nova chamada: assertEquals(2, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1615 + " <s1.getMaximumItemCount()>")
chamada antiga: assertEquals(new Year(2007), s1.getPeriod(0))
nova chamada: assertEquals(new Year(2007), s1.getPeriod(0), "Era esperado valores iguais, mas  new Year(2007) é diferente de " + result1616 + " <s1.getPeriod(0)>")
chamada antiga: assertEquals(new Year(2008), s1.getPeriod(1))
nova chamada: assertEquals(new Year(2008), s1.getPeriod(1), "Era esperado valores iguais, mas  new Year(2008) é diferente de " + result1617 + " <s1.getPeriod(1)>")
chamada antiga: assertEquals(new Year(2007), s1.getPeriod(0))
nova chamada: assertEquals(new Year(2007), s1.getPeriod(0), "Era esperado valores iguais, mas  new Year(2007) é diferente de " + result1618 + " <s1.getPeriod(0)>")
chamada antiga: assertEquals(new Year(2008), s1.getPeriod(1))
nova chamada: assertEquals(new Year(2008), s1.getPeriod(1), "Era esperado valores iguais, mas  new Year(2008) é diferente de " + result1619 + " <s1.getPeriod(1)>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result1620 + " <s1.isEmpty()> é falso")
chamada antiga: assertFalse(s1.isEmpty())
nova chamada: assertFalse(s1.isEmpty(), "Era esperado falso, mas " + result1621 + " <s1.isEmpty()> é verdadeiro ")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(s1.isEmpty())
nova chamada: assertTrue(s1.isEmpty(), "Era esperado verdadeiro, mas " + result1622 + " <s1.isEmpty()> é falso")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result1623 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result1624 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result1625 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result1626 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result1627 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result1628 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result1629 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result1630 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1 instanceof Cloneable)
nova chamada: assertFalse(i1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result1631 + " <i1.equals(i2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result1632 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(m instanceof Cloneable)
nova chamada: assertFalse(m instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(20L, fm.getFirstMillisecond())
nova chamada: assertEquals(20L, fm.getFirstMillisecond(), "Era esperado valores iguais, mas  20L é diferente de " + result1633 + " <fm.getFirstMillisecond()>")
chamada antiga: assertTrue(TimePeriodAnchor.START.equals(TimePeriodAnchor.START))
nova chamada: assertTrue(TimePeriodAnchor.START.equals(TimePeriodAnchor.START), "Era esperado verdadeiro, mas " + result1634 + " <TimePeriodAnchor.START.equals(TimePeriodAnchor.START)> é falso")
chamada antiga: assertTrue(TimePeriodAnchor.MIDDLE.equals(TimePeriodAnchor.MIDDLE))
nova chamada: assertTrue(TimePeriodAnchor.MIDDLE.equals(TimePeriodAnchor.MIDDLE), "Era esperado verdadeiro, mas " + result1635 + " <TimePeriodAnchor.MIDDLE.equals(TimePeriodAnchor.MIDDLE)> é falso")
chamada antiga: assertTrue(TimePeriodAnchor.END.equals(TimePeriodAnchor.END))
nova chamada: assertTrue(TimePeriodAnchor.END.equals(TimePeriodAnchor.END), "Era esperado verdadeiro, mas " + result1636 + " <TimePeriodAnchor.END.equals(TimePeriodAnchor.END)> é falso")
chamada antiga: assertTrue(a1 == a2)
nova chamada: assertTrue(a1 == a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(year.equals(year))
nova chamada: assertTrue(year.equals(year), "Era esperado verdadeiro, mas " + result1637 + " <year.equals(year)> é falso")
chamada antiga: assertTrue(year1.equals(year2))
nova chamada: assertTrue(year1.equals(year2), "Era esperado verdadeiro, mas " + result1638 + " <year1.equals(year2)> é falso")
chamada antiga: assertFalse(year1.equals(year2))
nova chamada: assertFalse(year1.equals(year2), "Era esperado falso, mas " + result1639 + " <year1.equals(year2)> é verdadeiro ")
chamada antiga: assertTrue(year1.equals(year2))
nova chamada: assertTrue(year1.equals(year2), "Era esperado verdadeiro, mas " + result1640 + " <year1.equals(year2)> é falso")
chamada antiga: assertEquals(2001, y1.getYear())
nova chamada: assertEquals(2001, y1.getYear(), "Era esperado valores iguais, mas  2001 é diferente de " + result1641 + " <y1.getYear()>")
chamada antiga: assertEquals(1009843199999L, y1.getLastMillisecond(cal))
nova chamada: assertEquals(1009843199999L, y1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1009843199999L é diferente de " + result1642 + " <y1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(2002, y2.getYear())
nova chamada: assertEquals(2002, y2.getYear(), "Era esperado valores iguais, mas  2002 é diferente de " + result1643 + " <y2.getYear()>")
chamada antiga: assertEquals(1009843200000L, y2.getFirstMillisecond(cal))
nova chamada: assertEquals(1009843200000L, y2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1009843200000L é diferente de " + result1644 + " <y2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(2001, y1.getYear())
nova chamada: assertEquals(2001, y1.getYear(), "Era esperado valores iguais, mas  2001 é diferente de " + result1645 + " <y1.getYear()>")
chamada antiga: assertEquals(1009871999999L, y1.getLastMillisecond(cal))
nova chamada: assertEquals(1009871999999L, y1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1009871999999L é diferente de " + result1646 + " <y1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(2002, y2.getYear())
nova chamada: assertEquals(2002, y2.getYear(), "Era esperado valores iguais, mas  2002 é diferente de " + result1647 + " <y2.getYear()>")
chamada antiga: assertEquals(1009872000000L, y2.getFirstMillisecond(cal))
nova chamada: assertEquals(1009872000000L, y2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1009872000000L é diferente de " + result1648 + " <y2.getFirstMillisecond(cal)>")
chamada antiga: assertNull(previous)
nova chamada: assertNull(previous, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(1901, next.getYear())
nova chamada: assertEquals(1901, next.getYear(), "Era esperado valores iguais, mas  1901 é diferente de " + result1649 + " <next.getYear()>")
chamada antiga: assertEquals(9998, previous.getYear())
nova chamada: assertEquals(9998, previous.getYear(), "Era esperado valores iguais, mas  9998 é diferente de " + result1650 + " <previous.getYear()>")
chamada antiga: assertNull(next)
nova chamada: assertNull(next, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(2000, year.getYear())
nova chamada: assertEquals(2000, year.getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1651 + " <year.getYear()>")
chamada antiga: assertEquals(2001, year.getYear())
nova chamada: assertEquals(2001, year.getYear(), "Era esperado valores iguais, mas  2001 é diferente de " + result1652 + " <year.getYear()>")
chamada antiga: assertEquals(99, year.getYear())
nova chamada: assertEquals(99, year.getYear(), "Era esperado valores iguais, mas  99 é diferente de " + result1653 + " <year.getYear()>")
chamada antiga: assertEquals(y1, y2)
nova chamada: assertEquals(y1, y2, "Era esperado valores iguais, mas  y1 é diferente de " + " y2")
chamada antiga: assertFalse(y instanceof Cloneable)
nova chamada: assertFalse(y instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(y1.equals(y2))
nova chamada: assertTrue(y1.equals(y2), "Era esperado verdadeiro, mas " + result1654 + " <y1.equals(y2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(-3600000L, y.getFirstMillisecond())
nova chamada: assertEquals(-3600000L, y.getFirstMillisecond(), "Era esperado valores iguais, mas  -3600000L é diferente de " + result1655 + " <y.getFirstMillisecond()>")
chamada antiga: assertEquals(-631123200000L, y.getFirstMillisecond(cal))
nova chamada: assertEquals(-631123200000L, y.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -631123200000L é diferente de " + result1656 + " <y.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(978307200000L, y.getFirstMillisecond(calendar))
nova chamada: assertEquals(978307200000L, y.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  978307200000L é diferente de " + result1657 + " <y.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(31532399999L, y.getLastMillisecond())
nova chamada: assertEquals(31532399999L, y.getLastMillisecond(), "Era esperado valores iguais, mas  31532399999L é diferente de " + result1658 + " <y.getLastMillisecond()>")
chamada antiga: assertEquals(-599587200001L, y.getLastMillisecond(cal))
nova chamada: assertEquals(-599587200001L, y.getLastMillisecond(cal), "Era esperado valores iguais, mas  -599587200001L é diferente de " + result1659 + " <y.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1009843199999L, y.getLastMillisecond(calendar))
nova chamada: assertEquals(1009843199999L, y.getLastMillisecond(calendar), "Era esperado valores iguais, mas  1009843199999L é diferente de " + result1660 + " <y.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2000L, y.getSerialIndex())
nova chamada: assertEquals(2000L, y.getSerialIndex(), "Era esperado valores iguais, mas  2000L é diferente de " + result1661 + " <y.getSerialIndex()>")
chamada antiga: assertEquals(2001, y.getYear())
nova chamada: assertEquals(2001, y.getYear(), "Era esperado valores iguais, mas  2001 é diferente de " + result1662 + " <y.getYear()>")
chamada antiga: assertNull(y.next())
nova chamada: assertNull(y.next(), "Era esperado nulo, mas " + result1663 + " <y.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), y.getStart())
nova chamada: assertEquals(cal.getTime(), y.getStart(), "Era esperado valores iguais, mas " + result1664 + " <cal.getTime()> é diferente de " + result1665 + " <y.getStart()>")
chamada antiga: assertEquals(cal.getTime(), y.getEnd())
nova chamada: assertEquals(cal.getTime(), y.getEnd(), "Era esperado valores iguais, mas " + result1666 + " <cal.getTime()> é diferente de " + result1667 + " <y.getEnd()>")
chamada antiga: assertTrue(b1)
nova chamada: assertTrue(b1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getSeries(2).equals(s4))
nova chamada: assertTrue(c1.getSeries(2).equals(s4), "Era esperado verdadeiro, mas " + result1668 + " <c1.getSeries(2).equals(s4)> é falso")
chamada antiga: assertTrue(c1.getSeries(0).equals(s2))
nova chamada: assertTrue(c1.getSeries(0).equals(s2), "Era esperado verdadeiro, mas " + result1669 + " <c1.getSeries(0).equals(s2)> é falso")
chamada antiga: assertEquals(2, c1.getSeriesCount())
nova chamada: assertEquals(2, c1.getSeriesCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1670 + " <c1.getSeriesCount()>")
chamada antiga: assertTrue(result[0] == -1)
nova chamada: assertTrue(result[0] == -1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == -1)
nova chamada: assertTrue(result[1] == -1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == -1)
nova chamada: assertTrue(result[0] == -1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 0)
nova chamada: assertTrue(result[1] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 0)
nova chamada: assertTrue(result[0] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 0)
nova chamada: assertTrue(result[1] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 0)
nova chamada: assertTrue(result[0] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == -1)
nova chamada: assertTrue(result[1] == -1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 0)
nova chamada: assertTrue(result[0] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 1)
nova chamada: assertTrue(result[1] == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 1)
nova chamada: assertTrue(result[0] == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 1)
nova chamada: assertTrue(result[1] == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 1)
nova chamada: assertTrue(result[0] == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == -1)
nova chamada: assertTrue(result[1] == -1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == -1)
nova chamada: assertTrue(result[0] == -1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 0)
nova chamada: assertTrue(result[1] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 0)
nova chamada: assertTrue(result[0] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 0)
nova chamada: assertTrue(result[1] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[0] == 0)
nova chamada: assertTrue(result[0] == 0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(result[1] == 1)
nova chamada: assertTrue(result[1] == 1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(-1, dataset.indexOf(s1))
nova chamada: assertEquals(-1, dataset.indexOf(s1), "Era esperado valores iguais, mas  -1 é diferente de " + result1671 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(-1, dataset.indexOf(s2))
nova chamada: assertEquals(-1, dataset.indexOf(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result1672 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(0, dataset.indexOf(s1))
nova chamada: assertEquals(0, dataset.indexOf(s1), "Era esperado valores iguais, mas  0 é diferente de " + result1673 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(-1, dataset.indexOf(s2))
nova chamada: assertEquals(-1, dataset.indexOf(s2), "Era esperado valores iguais, mas  -1 é diferente de " + result1674 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(0, dataset.indexOf(s1))
nova chamada: assertEquals(0, dataset.indexOf(s1), "Era esperado valores iguais, mas  0 é diferente de " + result1675 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(1, dataset.indexOf(s2))
nova chamada: assertEquals(1, dataset.indexOf(s2), "Era esperado valores iguais, mas  1 é diferente de " + result1676 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(-1, dataset.indexOf(s1))
nova chamada: assertEquals(-1, dataset.indexOf(s1), "Era esperado valores iguais, mas  -1 é diferente de " + result1677 + " <dataset.indexOf(s1)>")
chamada antiga: assertEquals(0, dataset.indexOf(s2))
nova chamada: assertEquals(0, dataset.indexOf(s2), "Era esperado valores iguais, mas  0 é diferente de " + result1678 + " <dataset.indexOf(s2)>")
chamada antiga: assertEquals(0, dataset.indexOf(s2b))
nova chamada: assertEquals(0, dataset.indexOf(s2b), "Era esperado valores iguais, mas  0 é diferente de " + result1679 + " <dataset.indexOf(s2b)>")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1680 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1681 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1682 + " <c1.equals(c2)> é falso")
chamada antiga: assertNull(dataset.getRangeBounds(false))
nova chamada: assertNull(dataset.getRangeBounds(false), "Era esperado nulo, mas " + result1683 + " <dataset.getRangeBounds(false)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(true))
nova chamada: assertNull(dataset.getRangeBounds(true), "Era esperado nulo, mas " + result1684 + " <dataset.getRangeBounds(true)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(false))
nova chamada: assertNull(dataset.getRangeBounds(false), "Era esperado nulo, mas " + result1685 + " <dataset.getRangeBounds(false)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(true))
nova chamada: assertNull(dataset.getRangeBounds(true), "Era esperado nulo, mas " + result1686 + " <dataset.getRangeBounds(true)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1687 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(1.0, 1.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1688 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + result1689 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + result1690 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + result1691 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + result1692 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + result1693 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.0, 1.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.0, 1.0) é diferente de " + result1694 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(-1.0, 5.0) é diferente de " + result1695 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(-1.0, 5.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(-1.0, 5.0) é diferente de " + result1696 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertNull(dataset.getRangeBounds(false))
nova chamada: assertNull(dataset.getRangeBounds(false), "Era esperado nulo, mas " + result1697 + " <dataset.getRangeBounds(false)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(true))
nova chamada: assertNull(dataset.getRangeBounds(true), "Era esperado nulo, mas " + result1698 + " <dataset.getRangeBounds(true)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(false))
nova chamada: assertNull(dataset.getRangeBounds(false), "Era esperado nulo, mas " + result1699 + " <dataset.getRangeBounds(false)> não é nulo")
chamada antiga: assertNull(dataset.getRangeBounds(true))
nova chamada: assertNull(dataset.getRangeBounds(true), "Era esperado nulo, mas " + result1700 + " <dataset.getRangeBounds(true)> não é nulo")
chamada antiga: assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false))
nova chamada: assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(false), "Era esperado valores iguais, mas  new Range(100.0, 100.0) é diferente de " + result1701 + " <dataset.getRangeBounds(false)>")
chamada antiga: assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true))
nova chamada: assertEquals(new Range(100.0, 100.0), dataset.getRangeBounds(true), "Era esperado valores iguais, mas  new Range(100.0, 100.0) é diferente de " + result1702 + " <dataset.getRangeBounds(true)>")
chamada antiga: assertNull(collection.getRangeBounds(Collections.EMPTY_LIST, range, true))
nova chamada: assertNull(collection.getRangeBounds(Collections.EMPTY_LIST, range, true), "Era esperado nulo, mas " + result1703 + " <collection.getRangeBounds(Collections.EMPTY_LIST, range, true)> não é nulo")
chamada antiga: assertEquals(new Range(10.0, 10.0), collection.getRangeBounds(Arrays.asList("S1"), range, true))
nova chamada: assertEquals(new Range(10.0, 10.0), collection.getRangeBounds(Arrays.asList("S1"), range, true), "Era esperado valores iguais, mas  new Range(10.0, 10.0) é diferente de " + result1704 + " <collection.getRangeBounds(Arrays.asList('S1'), range, true)>")
chamada antiga: assertEquals(new Range(10.0, 10.0), collection.getRangeBounds(Arrays.asList("S1"), range, true))
nova chamada: assertEquals(new Range(10.0, 10.0), collection.getRangeBounds(Arrays.asList("S1"), range, true), "Era esperado valores iguais, mas  new Range(10.0, 10.0) é diferente de " + result1705 + " <collection.getRangeBounds(Arrays.asList('S1'), range, true)>")
chamada antiga: assertNull(collection.getRangeBounds(Arrays.asList("S1"), range, true))
nova chamada: assertNull(collection.getRangeBounds(Arrays.asList("S1"), range, true), "Era esperado nulo, mas " + result1706 + " <collection.getRangeBounds(Arrays.asList('S1'), range, true)> não é nulo")
chamada antiga: assertEquals(7, maverage.getItemCount())
nova chamada: assertEquals(7, maverage.getItemCount(), "Era esperado valores iguais, mas  7 é diferente de " + result1707 + " <maverage.getItemCount()>")
chamada antiga: assertTrue(month.equals(month))
nova chamada: assertTrue(month.equals(month), "Era esperado verdadeiro, mas " + result1708 + " <month.equals(month)> é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result1709 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(MonthConstants.FEBRUARY, m1.getMonth())
nova chamada: assertEquals(MonthConstants.FEBRUARY, m1.getMonth(), "Era esperado valores iguais, mas  MonthConstants.FEBRUARY é diferente de " + result1710 + " <m1.getMonth()>")
chamada antiga: assertEquals(951868799999L, m1.getLastMillisecond(cal))
nova chamada: assertEquals(951868799999L, m1.getLastMillisecond(cal), "Era esperado valores iguais, mas  951868799999L é diferente de " + result1711 + " <m1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(MonthConstants.MARCH, m2.getMonth())
nova chamada: assertEquals(MonthConstants.MARCH, m2.getMonth(), "Era esperado valores iguais, mas  MonthConstants.MARCH é diferente de " + result1712 + " <m2.getMonth()>")
chamada antiga: assertEquals(951868800000L, m2.getFirstMillisecond(cal))
nova chamada: assertEquals(951868800000L, m2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  951868800000L é diferente de " + result1713 + " <m2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(MonthConstants.FEBRUARY, m1.getMonth())
nova chamada: assertEquals(MonthConstants.FEBRUARY, m1.getMonth(), "Era esperado valores iguais, mas  MonthConstants.FEBRUARY é diferente de " + result1714 + " <m1.getMonth()>")
chamada antiga: assertEquals(951821999999L, m1.getLastMillisecond(cal))
nova chamada: assertEquals(951821999999L, m1.getLastMillisecond(cal), "Era esperado valores iguais, mas  951821999999L é diferente de " + result1715 + " <m1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(MonthConstants.MARCH, m2.getMonth())
nova chamada: assertEquals(MonthConstants.MARCH, m2.getMonth(), "Era esperado valores iguais, mas  MonthConstants.MARCH é diferente de " + result1716 + " <m2.getMonth()>")
chamada antiga: assertEquals(951822000000L, m2.getFirstMillisecond(cal))
nova chamada: assertEquals(951822000000L, m2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  951822000000L é diferente de " + result1717 + " <m2.getFirstMillisecond(cal)>")
chamada antiga: assertNull(previous)
nova chamada: assertNull(previous, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(this.feb1900, next)
nova chamada: assertEquals(this.feb1900, next, "Era esperado valores iguais, mas  this.feb1900 é diferente de " + " next")
chamada antiga: assertEquals(this.nov9999, previous)
nova chamada: assertEquals(this.nov9999, previous, "Era esperado valores iguais, mas  this.nov9999 é diferente de " + " previous")
chamada antiga: assertNull(next)
nova chamada: assertNull(next, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(1, month.getMonth())
nova chamada: assertEquals(1, month.getMonth(), "Era esperado valores iguais, mas  1 é diferente de " + result1718 + " <month.getMonth()>")
chamada antiga: assertEquals(1990, month.getYear().getYear())
nova chamada: assertEquals(1990, month.getYear().getYear(), "Era esperado valores iguais, mas  1990 é diferente de " + result1719 + " <month.getYear().getYear()>")
chamada antiga: assertEquals(2, month.getMonth())
nova chamada: assertEquals(2, month.getMonth(), "Era esperado valores iguais, mas  2 é diferente de " + result1720 + " <month.getMonth()>")
chamada antiga: assertEquals(1991, month.getYear().getYear())
nova chamada: assertEquals(1991, month.getYear().getYear(), "Era esperado valores iguais, mas  1991 é diferente de " + result1721 + " <month.getYear().getYear()>")
chamada antiga: assertEquals(3, month.getMonth())
nova chamada: assertEquals(3, month.getMonth(), "Era esperado valores iguais, mas  3 é diferente de " + result1722 + " <month.getMonth()>")
chamada antiga: assertEquals(1993, month.getYear().getYear())
nova chamada: assertEquals(1993, month.getYear().getYear(), "Era esperado valores iguais, mas  1993 é diferente de " + result1723 + " <month.getYear().getYear()>")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result1724 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(m instanceof Cloneable)
nova chamada: assertFalse(m instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(5094000000L, m.getFirstMillisecond())
nova chamada: assertEquals(5094000000L, m.getFirstMillisecond(), "Era esperado valores iguais, mas  5094000000L é diferente de " + result1725 + " <m.getFirstMillisecond()>")
chamada antiga: assertEquals(-628444800000L, m.getFirstMillisecond(cal))
nova chamada: assertEquals(-628444800000L, m.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -628444800000L é diferente de " + result1726 + " <m.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(978307200000L, m.getFirstMillisecond(calendar))
nova chamada: assertEquals(978307200000L, m.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  978307200000L é diferente de " + result1727 + " <m.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(7772399999L, m.getLastMillisecond())
nova chamada: assertEquals(7772399999L, m.getLastMillisecond(), "Era esperado valores iguais, mas  7772399999L é diferente de " + result1728 + " <m.getLastMillisecond()>")
chamada antiga: assertEquals(-626025600001L, m.getLastMillisecond(cal))
nova chamada: assertEquals(-626025600001L, m.getLastMillisecond(cal), "Era esperado valores iguais, mas  -626025600001L é diferente de " + result1729 + " <m.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(986083199999L, m.getLastMillisecond(calendar))
nova chamada: assertEquals(986083199999L, m.getLastMillisecond(calendar), "Era esperado valores iguais, mas  986083199999L é diferente de " + result1730 + " <m.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(24001L, m.getSerialIndex())
nova chamada: assertEquals(24001L, m.getSerialIndex(), "Era esperado valores iguais, mas  24001L é diferente de " + result1731 + " <m.getSerialIndex()>")
chamada antiga: assertEquals(22801L, m.getSerialIndex())
nova chamada: assertEquals(22801L, m.getSerialIndex(), "Era esperado valores iguais, mas  22801L é diferente de " + result1732 + " <m.getSerialIndex()>")
chamada antiga: assertEquals(new Year(2001), m.getYear())
nova chamada: assertEquals(new Year(2001), m.getYear(), "Era esperado valores iguais, mas  new Year(2001) é diferente de " + result1733 + " <m.getYear()>")
chamada antiga: assertEquals(1, m.getMonth())
nova chamada: assertEquals(1, m.getMonth(), "Era esperado valores iguais, mas  1 é diferente de " + result1734 + " <m.getMonth()>")
chamada antiga: assertNull(m.next())
nova chamada: assertNull(m.next(), "Era esperado nulo, mas " + result1735 + " <m.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), m.getStart())
nova chamada: assertEquals(cal.getTime(), m.getStart(), "Era esperado valores iguais, mas " + result1736 + " <cal.getTime()> é diferente de " + result1737 + " <m.getStart()>")
chamada antiga: assertEquals(cal.getTime(), m.getEnd())
nova chamada: assertEquals(cal.getTime(), m.getEnd(), "Era esperado valores iguais, mas " + result1738 + " <cal.getTime()> é diferente de " + result1739 + " <m.getEnd()>")
chamada antiga: assertTrue(minute.equals(minute))
nova chamada: assertTrue(minute.equals(minute), "Era esperado verdadeiro, mas " + result1740 + " <minute.equals(minute)> é falso")
chamada antiga: assertTrue(minute1.equals(minute2))
nova chamada: assertTrue(minute1.equals(minute2), "Era esperado verdadeiro, mas " + result1741 + " <minute1.equals(minute2)> é falso")
chamada antiga: assertEquals(54, m1.getMinute())
nova chamada: assertEquals(54, m1.getMinute(), "Era esperado valores iguais, mas  54 é diferente de " + result1742 + " <m1.getMinute()>")
chamada antiga: assertEquals(1016729699999L, m1.getLastMillisecond(cal))
nova chamada: assertEquals(1016729699999L, m1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1016729699999L é diferente de " + result1743 + " <m1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(55, m2.getMinute())
nova chamada: assertEquals(55, m2.getMinute(), "Era esperado valores iguais, mas  55 é diferente de " + result1744 + " <m2.getMinute()>")
chamada antiga: assertEquals(1016729700000L, m2.getFirstMillisecond(cal))
nova chamada: assertEquals(1016729700000L, m2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1016729700000L é diferente de " + result1745 + " <m2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(54, m1.getMinute())
nova chamada: assertEquals(54, m1.getMinute(), "Era esperado valores iguais, mas  54 é diferente de " + result1746 + " <m1.getMinute()>")
chamada antiga: assertEquals(1016700899999L, m1.getLastMillisecond(cal))
nova chamada: assertEquals(1016700899999L, m1.getLastMillisecond(cal), "Era esperado valores iguais, mas  1016700899999L é diferente de " + result1747 + " <m1.getLastMillisecond(cal)>")
chamada antiga: assertEquals(55, m2.getMinute())
nova chamada: assertEquals(55, m2.getMinute(), "Era esperado valores iguais, mas  55 é diferente de " + result1748 + " <m2.getMinute()>")
chamada antiga: assertEquals(1016700900000L, m2.getFirstMillisecond(cal))
nova chamada: assertEquals(1016700900000L, m2.getFirstMillisecond(cal), "Era esperado valores iguais, mas  1016700900000L é diferente de " + result1749 + " <m2.getFirstMillisecond(cal)>")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result1750 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(m instanceof Cloneable)
nova chamada: assertFalse(m instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1143902580000L, m.getFirstMillisecond())
nova chamada: assertEquals(1143902580000L, m.getFirstMillisecond(), "Era esperado valores iguais, mas  1143902580000L é diferente de " + result1751 + " <m.getFirstMillisecond()>")
chamada antiga: assertEquals(-623289660000L, m.getFirstMillisecond(cal))
nova chamada: assertEquals(-623289660000L, m.getFirstMillisecond(cal), "Era esperado valores iguais, mas  -623289660000L é diferente de " + result1752 + " <m.getFirstMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(955766400000L, m.getFirstMillisecond(calendar))
nova chamada: assertEquals(955766400000L, m.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  955766400000L é diferente de " + result1753 + " <m.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(119999L, m.getLastMillisecond())
nova chamada: assertEquals(119999L, m.getLastMillisecond(), "Era esperado valores iguais, mas  119999L é diferente de " + result1754 + " <m.getLastMillisecond()>")
chamada antiga: assertEquals(-614962680001L, m.getLastMillisecond(cal))
nova chamada: assertEquals(-614962680001L, m.getLastMillisecond(cal), "Era esperado valores iguais, mas  -614962680001L é diferente de " + result1755 + " <m.getLastMillisecond(cal)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(987889559999L, m.getLastMillisecond(calendar))
nova chamada: assertEquals(987889559999L, m.getLastMillisecond(calendar), "Era esperado valores iguais, mas  987889559999L é diferente de " + result1756 + " <m.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(52597501L, m.getSerialIndex())
nova chamada: assertEquals(52597501L, m.getSerialIndex(), "Era esperado valores iguais, mas  52597501L é diferente de " + result1757 + " <m.getSerialIndex()>")
chamada antiga: assertEquals(2941L, m.getSerialIndex())
nova chamada: assertEquals(2941L, m.getSerialIndex(), "Era esperado valores iguais, mas  2941L é diferente de " + result1758 + " <m.getSerialIndex()>")
chamada antiga: assertEquals(2000, m.getHour().getYear())
nova chamada: assertEquals(2000, m.getHour().getYear(), "Era esperado valores iguais, mas  2000 é diferente de " + result1759 + " <m.getHour().getYear()>")
chamada antiga: assertEquals(12, m.getHour().getMonth())
nova chamada: assertEquals(12, m.getHour().getMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1760 + " <m.getHour().getMonth()>")
chamada antiga: assertEquals(12, m.getHour().getDayOfMonth())
nova chamada: assertEquals(12, m.getHour().getDayOfMonth(), "Era esperado valores iguais, mas  12 é diferente de " + result1761 + " <m.getHour().getDayOfMonth()>")
chamada antiga: assertEquals(1, m.getHour().getHour())
nova chamada: assertEquals(1, m.getHour().getHour(), "Era esperado valores iguais, mas  1 é diferente de " + result1762 + " <m.getHour().getHour()>")
chamada antiga: assertEquals(31, m.getMinute())
nova chamada: assertEquals(31, m.getMinute(), "Era esperado valores iguais, mas  31 é diferente de " + result1763 + " <m.getMinute()>")
chamada antiga: assertNull(m.next())
nova chamada: assertNull(m.next(), "Era esperado nulo, mas " + result1764 + " <m.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), m.getStart())
nova chamada: assertEquals(cal.getTime(), m.getStart(), "Era esperado valores iguais, mas " + result1765 + " <cal.getTime()> é diferente de " + result1766 + " <m.getStart()>")
chamada antiga: assertEquals(cal.getTime(), m.getEnd())
nova chamada: assertEquals(cal.getTime(), m.getEnd(), "Era esperado valores iguais, mas " + result1767 + " <cal.getTime()> é diferente de " + result1768 + " <m.getEnd()>")
chamada antiga: assertEquals(m2, new Minute(59, 9, 15, 4, 2000))
nova chamada: assertEquals(m2, new Minute(59, 9, 15, 4, 2000), "Era esperado valores iguais, mas  m2 é diferente de " + " new Minute(59, 9, 15, 4, 2000)")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result1769 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result1770 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result1771 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result1772 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result1773 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result1774 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1 instanceof Cloneable)
nova chamada: assertFalse(r1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(new Date(10L), r.getLowerDate())
nova chamada: assertEquals(new Date(10L), r.getLowerDate(), "Era esperado valores iguais, mas  new Date(10L) é diferente de " + result1775 + " <r.getLowerDate()>")
chamada antiga: assertEquals(new Date(20L), r.getUpperDate())
nova chamada: assertEquals(new Date(20L), r.getUpperDate(), "Era esperado valores iguais, mas  new Date(20L) é diferente de " + result1776 + " <r.getUpperDate()>")
chamada antiga: assertEquals(42, seriesValue)
nova chamada: assertEquals(42, seriesValue, "Era esperado valores iguais, mas  42 é diferente de " + " seriesValue")
chamada antiga: assertEquals(10, cloneValue)
nova chamada: assertEquals(10, cloneValue, "Era esperado valores iguais, mas  10 é diferente de " + " cloneValue")
chamada antiga: assertEquals("Test Series", series.getKey())
nova chamada: assertEquals("Test Series", series.getKey(), "Era esperado valores iguais, mas  'Test Series' é diferente de " + result1777 + " <series.getKey()>")
chamada antiga: assertEquals("Clone Series", clone.getKey())
nova chamada: assertEquals("Clone Series", clone.getKey(), "Era esperado valores iguais, mas  'Clone Series' é diferente de " + result1778 + " <clone.getKey()>")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1779 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1780 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1781 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(1, value)
nova chamada: assertEquals(1, value, "Era esperado valores iguais, mas  1 é diferente de " + " value")
chamada antiga: assertNull(value1)
nova chamada: assertNull(value1, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(102000, value2)
nova chamada: assertEquals(102000, value2, "Era esperado valores iguais, mas  102000 é diferente de " + " value2")
chamada antiga: assertEquals(5, this.seriesA.getItemCount())
nova chamada: assertEquals(5, this.seriesA.getItemCount(), "Era esperado valores iguais, mas  5 é diferente de " + result1782 + " <this.seriesA.getItemCount()>")
chamada antiga: assertNull(value)
nova chamada: assertNull(value, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(this.gotSeriesChangeEvent)
nova chamada: assertTrue(this.gotSeriesChangeEvent, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1783 + " <s1.getItemCount()>")
chamada antiga: assertEquals(null, s1.getValue(new Year(2001)))
nova chamada: assertEquals(null, s1.getValue(new Year(2001)), "Era esperado valores iguais, mas  null é diferente de " + result1784 + " <s1.getValue(new Year(2001))>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1785 + " <s1.getItemCount()>")
chamada antiga: assertEquals(new Year(2011), s1.getTimePeriod(0))
nova chamada: assertEquals(new Year(2011), s1.getTimePeriod(0), "Era esperado valores iguais, mas  new Year(2011) é diferente de " + result1786 + " <s1.getTimePeriod(0)>")
chamada antiga: assertEquals(new Year(2012), s1.getTimePeriod(1))
nova chamada: assertEquals(new Year(2012), s1.getTimePeriod(1), "Era esperado valores iguais, mas  new Year(2012) é diferente de " + result1787 + " <s1.getTimePeriod(1)>")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1788 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1789 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getItemCount() == 5)
nova chamada: assertTrue(s1.getItemCount() == 5, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getItemCount() == 3)
nova chamada: assertTrue(s1.getItemCount() == 3, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(item.getPeriod().equals(new Year(2002)))
nova chamada: assertTrue(item.getPeriod().equals(new Year(2002)), "Era esperado verdadeiro, mas " + result1790 + " <item.getPeriod().equals(new Year(2002))> é falso")
chamada antiga: assertEquals(1, s1.getItemCount())
nova chamada: assertEquals(1, s1.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1791 + " <s1.getItemCount()>")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1792 + " <s1.getItemCount()>")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1793 + " <s1.getItemCount()>")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1794 + " <s1.getItemCount()>")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1795 + " <s1.getItemCount()>")
chamada antiga: assertEquals(Year.class, s1.getTimePeriodClass())
nova chamada: assertEquals(Year.class, s1.getTimePeriodClass(), "Era esperado valores iguais, mas  Year.class é diferente de " + result1796 + " <s1.getTimePeriodClass()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(overwritten)
nova chamada: assertNull(overwritten, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(20.09, overwritten.getValue())
nova chamada: assertEquals(20.09, overwritten.getValue(), "Era esperado valores iguais, mas  20.09 é diferente de " + result1797 + " <overwritten.getValue()>")
chamada antiga: assertEquals(1.0, ts.getValue(new Year(2009)))
nova chamada: assertEquals(1.0, ts.getValue(new Year(2009)), "Era esperado valores iguais, mas  1.0 é diferente de " + result1798 + " <ts.getValue(new Year(2009))>")
chamada antiga: assertEquals(1.0, ts.getValue(new Year(2009)))
nova chamada: assertEquals(1.0, ts.getValue(new Year(2009)), "Era esperado valores iguais, mas  1.0 é diferente de " + result1799 + " <ts.getValue(new Year(2009))>")
chamada antiga: assertNull(overwritten)
nova chamada: assertNull(overwritten, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(20.10, ts.getValue(new Year(2010)))
nova chamada: assertEquals(20.10, ts.getValue(new Year(2010)), "Era esperado valores iguais, mas  20.10 é diferente de " + result1800 + " <ts.getValue(new Year(2010))>")
chamada antiga: assertEquals(20.10, ts.getValue(new Year(2010)))
nova chamada: assertEquals(20.10, ts.getValue(new Year(2010)), "Era esperado valores iguais, mas  20.10 é diferente de " + result1801 + " <ts.getValue(new Year(2010))>")
chamada antiga: assertEquals(1, ts.getItemCount())
nova chamada: assertEquals(1, ts.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1802 + " <ts.getItemCount()>")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result1803 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result1804 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertEquals(-1, series.getIndex(new Month(1, 2003)))
nova chamada: assertEquals(-1, series.getIndex(new Month(1, 2003)), "Era esperado valores iguais, mas  -1 é diferente de " + result1805 + " <series.getIndex(new Month(1, 2003))>")
chamada antiga: assertEquals(0, series.getIndex(new Month(1, 2003)))
nova chamada: assertEquals(0, series.getIndex(new Month(1, 2003)), "Era esperado valores iguais, mas  0 é diferente de " + result1806 + " <series.getIndex(new Month(1, 2003))>")
chamada antiga: assertEquals(-1, series.getIndex(new Month(12, 2002)))
nova chamada: assertEquals(-1, series.getIndex(new Month(12, 2002)), "Era esperado valores iguais, mas  -1 é diferente de " + result1807 + " <series.getIndex(new Month(12, 2002))>")
chamada antiga: assertEquals(-2, series.getIndex(new Month(2, 2003)))
nova chamada: assertEquals(-2, series.getIndex(new Month(2, 2003)), "Era esperado valores iguais, mas  -2 é diferente de " + result1808 + " <series.getIndex(new Month(2, 2003))>")
chamada antiga: assertEquals(-1, series.getIndex(new Month(12, 2002)))
nova chamada: assertEquals(-1, series.getIndex(new Month(12, 2002)), "Era esperado valores iguais, mas  -1 é diferente de " + result1809 + " <series.getIndex(new Month(12, 2002))>")
chamada antiga: assertEquals(0, series.getIndex(new Month(1, 2003)))
nova chamada: assertEquals(0, series.getIndex(new Month(1, 2003)), "Era esperado valores iguais, mas  0 é diferente de " + result1810 + " <series.getIndex(new Month(1, 2003))>")
chamada antiga: assertEquals(-2, series.getIndex(new Month(2, 2003)))
nova chamada: assertEquals(-2, series.getIndex(new Month(2, 2003)), "Era esperado valores iguais, mas  -2 é diferente de " + result1811 + " <series.getIndex(new Month(2, 2003))>")
chamada antiga: assertEquals(1, series.getIndex(new Month(3, 2003)))
nova chamada: assertEquals(1, series.getIndex(new Month(3, 2003)), "Era esperado valores iguais, mas  1 é diferente de " + result1812 + " <series.getIndex(new Month(3, 2003))>")
chamada antiga: assertEquals(-3, series.getIndex(new Month(4, 2003)))
nova chamada: assertEquals(-3, series.getIndex(new Month(4, 2003)), "Era esperado valores iguais, mas  -3 é diferente de " + result1813 + " <series.getIndex(new Month(4, 2003))>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(new Year(2006), item.getPeriod())
nova chamada: assertEquals(new Year(2006), item.getPeriod(), "Era esperado valores iguais, mas  new Year(2006) é diferente de " + result1814 + " <item.getPeriod()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(series.getDataItem(new Year(2006)))
nova chamada: assertNull(series.getDataItem(new Year(2006)), "Era esperado nulo, mas " + result1815 + " <series.getDataItem(new Year(2006))> não é nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(Long.MAX_VALUE, series.getMaximumItemAge())
nova chamada: assertEquals(Long.MAX_VALUE, series.getMaximumItemAge(), "Era esperado valores iguais, mas  Long.MAX_VALUE é diferente de " + result1816 + " <series.getMaximumItemAge()>")
chamada antiga: assertEquals(Integer.MAX_VALUE, series.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, series.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result1817 + " <series.getMaximumItemCount()>")
chamada antiga: assertEquals(0, series.getItemCount())
nova chamada: assertEquals(0, series.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1818 + " <series.getItemCount()>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1, series.getItemCount())
nova chamada: assertEquals(1, series.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1819 + " <series.getItemCount()>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1820 + " <series.getItemCount()>")
chamada antiga: assertEquals(0, series.getIndex(new Year(1999)))
nova chamada: assertEquals(0, series.getIndex(new Year(1999)), "Era esperado valores iguais, mas  0 é diferente de " + result1821 + " <series.getIndex(new Year(1999))>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1, series.getItemCount())
nova chamada: assertEquals(1, series.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1822 + " <series.getItemCount()>")
chamada antiga: assertEquals(0, series.getIndex(new Year(2001)))
nova chamada: assertEquals(0, series.getIndex(new Year(2001)), "Era esperado valores iguais, mas  0 é diferente de " + result1823 + " <series.getIndex(new Year(2001))>")
chamada antiga: assertTrue(this.gotSeriesChangeEvent)
nova chamada: assertTrue(this.gotSeriesChangeEvent, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(Long.MAX_VALUE, series.getMaximumItemAge())
nova chamada: assertEquals(Long.MAX_VALUE, series.getMaximumItemAge(), "Era esperado valores iguais, mas  Long.MAX_VALUE é diferente de " + result1824 + " <series.getMaximumItemAge()>")
chamada antiga: assertEquals(Integer.MAX_VALUE, series.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, series.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result1825 + " <series.getMaximumItemCount()>")
chamada antiga: assertEquals(0, series.getItemCount())
nova chamada: assertEquals(0, series.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1826 + " <series.getItemCount()>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1, series.getItemCount())
nova chamada: assertEquals(1, series.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1827 + " <series.getItemCount()>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(0, series.getItemCount())
nova chamada: assertEquals(0, series.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1828 + " <series.getItemCount()>")
chamada antiga: assertTrue(this.gotSeriesChangeEvent)
nova chamada: assertTrue(this.gotSeriesChangeEvent, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1829 + " <series.getItemCount()>")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1830 + " <series.getItemCount()>")
chamada antiga: assertEquals(2, series.getItemCount())
nova chamada: assertEquals(2, series.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1831 + " <series.getItemCount()>")
chamada antiga: assertFalse(this.gotSeriesChangeEvent)
nova chamada: assertFalse(this.gotSeriesChangeEvent, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1, series.getItemCount())
nova chamada: assertEquals(1, series.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1832 + " <series.getItemCount()>")
chamada antiga: assertTrue(this.gotSeriesChangeEvent)
nova chamada: assertTrue(this.gotSeriesChangeEvent, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1833 + " <s1.getItemCount()>")
chamada antiga: assertEquals(3, s1.getItemCount())
nova chamada: assertEquals(3, s1.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1834 + " <s1.getItemCount()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result1835 + " <s1.hashCode()> é diferente de " + result1836 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result1837 + " <s1.hashCode()> é diferente de " + result1838 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result1839 + " <s1.hashCode()> é diferente de " + result1840 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result1841 + " <s1.hashCode()> é diferente de " + result1842 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result1843 + " <s1.hashCode()> é diferente de " + result1844 + " <s2.hashCode()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result1845 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(ts.getMinY()))
nova chamada: assertTrue(Double.isNaN(ts.getMinY()), "Era esperado verdadeiro, mas " + result1846 + " <Double.isNaN(ts.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(ts.getMinY()))
nova chamada: assertTrue(Double.isNaN(ts.getMinY()), "Era esperado verdadeiro, mas " + result1847 + " <Double.isNaN(ts.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(ts.getMinY()))
nova chamada: assertTrue(Double.isNaN(ts.getMinY()), "Era esperado verdadeiro, mas " + result1848 + " <Double.isNaN(ts.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result1849 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertTrue(Double.isNaN(ts.getMaxY()))
nova chamada: assertTrue(Double.isNaN(ts.getMaxY()), "Era esperado verdadeiro, mas " + result1850 + " <Double.isNaN(ts.getMaxY())> é falso")
chamada antiga: assertTrue(Double.isNaN(ts.getMaxY()))
nova chamada: assertTrue(Double.isNaN(ts.getMaxY()), "Era esperado verdadeiro, mas " + result1851 + " <Double.isNaN(ts.getMaxY())> é falso")
chamada antiga: assertTrue(Double.isNaN(ts.getMaxY()))
nova chamada: assertTrue(Double.isNaN(ts.getMaxY()), "Era esperado verdadeiro, mas " + result1852 + " <Double.isNaN(ts.getMaxY())> é falso")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1853 + " <s1.getItemCount()>")
chamada antiga: assertEquals(0, s1.getItemCount())
nova chamada: assertEquals(0, s1.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1854 + " <s1.getItemCount()>")
chamada antiga: assertTrue(Double.isNaN(s1.getMinY()))
nova chamada: assertTrue(Double.isNaN(s1.getMinY()), "Era esperado verdadeiro, mas " + result1855 + " <Double.isNaN(s1.getMinY())> é falso")
chamada antiga: assertTrue(Double.isNaN(s1.getMaxY()))
nova chamada: assertTrue(Double.isNaN(s1.getMaxY()), "Era esperado verdadeiro, mas " + result1856 + " <Double.isNaN(s1.getMaxY())> é falso")
chamada antiga: assertEquals(2, s1.getItemCount())
nova chamada: assertEquals(2, s1.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result1857 + " <s1.getItemCount()>")
chamada antiga: assertTrue(item.equals(series.getDataItem(0)))
nova chamada: assertTrue(item.equals(series.getDataItem(0)), "Era esperado verdadeiro, mas " + result1858 + " <item.equals(series.getDataItem(0))> é falso")
chamada antiga: assertFalse(item.equals(series.getDataItem(0)))
nova chamada: assertFalse(item.equals(series.getDataItem(0)), "Era esperado falso, mas " + result1859 + " <item.equals(series.getDataItem(0))> é verdadeiro ")
chamada antiga: assertEquals("S1", s1.getKey())
nova chamada: assertEquals("S1", s1.getKey(), "Era esperado valores iguais, mas  'S1' é diferente de " + result1860 + " <s1.getKey()>")
chamada antiga: assertEquals("OK", s1.getKey())
nova chamada: assertEquals("OK", s1.getKey(), "Era esperado valores iguais, mas  'OK' é diferente de " + result1861 + " <s1.getKey()>")
chamada antiga: assertNull(ts.findValueRange())
nova chamada: assertNull(ts.findValueRange(), "Era esperado nulo, mas " + result1862 + " <ts.findValueRange()> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), ts.findValueRange())
nova chamada: assertEquals(new Range(1.0, 1.0), ts.findValueRange(), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1863 + " <ts.findValueRange()>")
chamada antiga: assertEquals(new Range(1.0, 2.0), ts.findValueRange())
nova chamada: assertEquals(new Range(1.0, 2.0), ts.findValueRange(), "Era esperado valores iguais, mas  new Range(1.0, 2.0) é diferente de " + result1864 + " <ts.findValueRange()>")
chamada antiga: assertEquals(new Range(1.0, 2.0), ts.findValueRange())
nova chamada: assertEquals(new Range(1.0, 2.0), ts.findValueRange(), "Era esperado valores iguais, mas  new Range(1.0, 2.0) é diferente de " + result1865 + " <ts.findValueRange()>")
chamada antiga: assertEquals(new Range(1.0, 2.0), ts.findValueRange())
nova chamada: assertEquals(new Range(1.0, 2.0), ts.findValueRange(), "Era esperado valores iguais, mas  new Range(1.0, 2.0) é diferente de " + result1866 + " <ts.findValueRange()>")
chamada antiga: assertNull(ts.findValueRange())
nova chamada: assertNull(ts.findValueRange(), "Era esperado nulo, mas " + result1867 + " <ts.findValueRange()> não é nulo")
chamada antiga: assertTrue(ts.findValueRange().isNaNRange())
nova chamada: assertTrue(ts.findValueRange().isNaNRange(), "Era esperado verdadeiro, mas " + result1868 + " <ts.findValueRange().isNaNRange()> é falso")
chamada antiga: assertNull(ts.findValueRange(range, TimePeriodAnchor.START, tzone))
nova chamada: assertNull(ts.findValueRange(range, TimePeriodAnchor.START, tzone), "Era esperado nulo, mas " + result1869 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone)> não é nulo")
chamada antiga: assertNull(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone))
nova chamada: assertNull(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone), "Era esperado nulo, mas " + result1870 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone)> não é nulo")
chamada antiga: assertNull(ts.findValueRange(range, TimePeriodAnchor.END, tzone))
nova chamada: assertNull(ts.findValueRange(range, TimePeriodAnchor.END, tzone), "Era esperado nulo, mas " + result1871 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone)> não é nulo")
chamada antiga: assertTrue(ts.findValueRange(range, TimePeriodAnchor.START, tzone).isNaNRange())
nova chamada: assertTrue(ts.findValueRange(range, TimePeriodAnchor.START, tzone).isNaNRange(), "Era esperado verdadeiro, mas " + result1872 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone).isNaNRange()> é falso")
chamada antiga: assertEquals(new Range(5.0, 5.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone))
nova chamada: assertEquals(new Range(5.0, 5.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone), "Era esperado valores iguais, mas  new Range(5.0, 5.0) é diferente de " + result1873 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone)>")
chamada antiga: assertEquals(new Range(5.0, 5.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone))
nova chamada: assertEquals(new Range(5.0, 5.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone), "Era esperado valores iguais, mas  new Range(5.0, 5.0) é diferente de " + result1874 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone)>")
chamada antiga: assertEquals(new Range(6.0, 6.0), ts.findValueRange(range, TimePeriodAnchor.START, tzone))
nova chamada: assertEquals(new Range(6.0, 6.0), ts.findValueRange(range, TimePeriodAnchor.START, tzone), "Era esperado valores iguais, mas  new Range(6.0, 6.0) é diferente de " + result1875 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone)>")
chamada antiga: assertEquals(new Range(5.0, 6.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone))
nova chamada: assertEquals(new Range(5.0, 6.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone), "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + result1876 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone)>")
chamada antiga: assertEquals(new Range(5.0, 5.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone))
nova chamada: assertEquals(new Range(5.0, 5.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone), "Era esperado valores iguais, mas  new Range(5.0, 5.0) é diferente de " + result1877 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone)>")
chamada antiga: assertTrue(ts.findValueRange(range, TimePeriodAnchor.START, tzone).isNaNRange())
nova chamada: assertTrue(ts.findValueRange(range, TimePeriodAnchor.START, tzone).isNaNRange(), "Era esperado verdadeiro, mas " + result1878 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone).isNaNRange()> é falso")
chamada antiga: assertTrue(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone).isNaNRange())
nova chamada: assertTrue(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone).isNaNRange(), "Era esperado verdadeiro, mas " + result1879 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone).isNaNRange()> é falso")
chamada antiga: assertTrue(ts.findValueRange(range, TimePeriodAnchor.END, tzone).isNaNRange())
nova chamada: assertTrue(ts.findValueRange(range, TimePeriodAnchor.END, tzone).isNaNRange(), "Era esperado verdadeiro, mas " + result1880 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone).isNaNRange()> é falso")
chamada antiga: assertNull(ts.findValueRange(range, TimePeriodAnchor.START, tzone))
nova chamada: assertNull(ts.findValueRange(range, TimePeriodAnchor.START, tzone), "Era esperado nulo, mas " + result1881 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone)> não é nulo")
chamada antiga: assertNull(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone))
nova chamada: assertNull(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone), "Era esperado nulo, mas " + result1882 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone)> não é nulo")
chamada antiga: assertNull(ts.findValueRange(range, TimePeriodAnchor.END, tzone))
nova chamada: assertNull(ts.findValueRange(range, TimePeriodAnchor.END, tzone), "Era esperado nulo, mas " + result1883 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone)> não é nulo")
chamada antiga: assertEquals(new Range(2.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.START, tzone))
nova chamada: assertEquals(new Range(2.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.START, tzone), "Era esperado valores iguais, mas  new Range(2.0, 99.0) é diferente de " + result1884 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone)>")
chamada antiga: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone))
nova chamada: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone), "Era esperado valores iguais, mas  new Range(1.0, 99.0) é diferente de " + result1885 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone)>")
chamada antiga: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone))
nova chamada: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone), "Era esperado valores iguais, mas  new Range(1.0, 99.0) é diferente de " + result1886 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone)>")
chamada antiga: assertEquals(new Range(2.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.START, tzone))
nova chamada: assertEquals(new Range(2.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.START, tzone), "Era esperado valores iguais, mas  new Range(2.0, 99.0) é diferente de " + result1887 + " <ts.findValueRange(range, TimePeriodAnchor.START, tzone)>")
chamada antiga: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone))
nova chamada: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone), "Era esperado valores iguais, mas  new Range(1.0, 99.0) é diferente de " + result1888 + " <ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone)>")
chamada antiga: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone))
nova chamada: assertEquals(new Range(1.0, 99.0), ts.findValueRange(range, TimePeriodAnchor.END, tzone), "Era esperado valores iguais, mas  new Range(1.0, 99.0) é diferente de " + result1889 + " <ts.findValueRange(range, TimePeriodAnchor.END, tzone)>")
chamada antiga: assertTrue(exception.getMessage().contains("week"))
nova chamada: assertTrue(exception.getMessage().contains("week"), "Era esperado verdadeiro, mas " + result1890 + " <exception.getMessage().contains('week')> é falso")
chamada antiga: assertTrue(exception2.getMessage().contains("week"))
nova chamada: assertTrue(exception2.getMessage().contains("week"), "Era esperado verdadeiro, mas " + result1891 + " <exception2.getMessage().contains('week')> é falso")
chamada antiga: assertTrue(exception3.getMessage().contains("week"))
nova chamada: assertTrue(exception3.getMessage().contains("week"), "Era esperado verdadeiro, mas " + result1892 + " <exception3.getMessage().contains('week')> é falso")
chamada antiga: assertTrue(exception2.getMessage().contains("week"))
nova chamada: assertTrue(exception2.getMessage().contains("week"), "Era esperado verdadeiro, mas " + result1893 + " <exception2.getMessage().contains('week')> é falso")
chamada antiga: assertTrue(w1.equals(w2))
nova chamada: assertTrue(w1.equals(w2), "Era esperado verdadeiro, mas " + result1894 + " <w1.equals(w2)> é falso")
chamada antiga: assertTrue(w2.equals(w1))
nova chamada: assertTrue(w2.equals(w1), "Era esperado verdadeiro, mas " + result1895 + " <w2.equals(w1)> é falso")
chamada antiga: assertFalse(w1.equals(w2))
nova chamada: assertFalse(w1.equals(w2), "Era esperado falso, mas " + result1896 + " <w1.equals(w2)> é verdadeiro ")
chamada antiga: assertTrue(w1.equals(w2))
nova chamada: assertTrue(w1.equals(w2), "Era esperado verdadeiro, mas " + result1897 + " <w1.equals(w2)> é falso")
chamada antiga: assertFalse(w1.equals(w2))
nova chamada: assertFalse(w1.equals(w2), "Era esperado falso, mas " + result1898 + " <w1.equals(w2)> é verdadeiro ")
chamada antiga: assertTrue(w1.equals(w2))
nova chamada: assertTrue(w1.equals(w2), "Era esperado verdadeiro, mas " + result1899 + " <w1.equals(w2)> é falso")
chamada antiga: assertNull(previous)
nova chamada: assertNull(previous, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(this.w2Y1900, next)
nova chamada: assertEquals(this.w2Y1900, next, "Era esperado valores iguais, mas  this.w2Y1900 é diferente de " + " next")
chamada antiga: assertEquals(this.w51Y9999, previous)
nova chamada: assertEquals(this.w51Y9999, previous, "Era esperado valores iguais, mas  this.w51Y9999 é diferente de " + " previous")
chamada antiga: assertNull(next)
nova chamada: assertNull(next, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(w1, w2)
nova chamada: assertEquals(w1, w2, "Era esperado valores iguais, mas  w1 é diferente de " + " w2")
chamada antiga: assertTrue(w1.equals(w2))
nova chamada: assertTrue(w1.equals(w2), "Era esperado verdadeiro, mas " + result1900 + " <w1.equals(w2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(w instanceof Cloneable)
nova chamada: assertFalse(w instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(1104710400000L, w1.getFirstMillisecond(c1))
nova chamada: assertEquals(1104710400000L, w1.getFirstMillisecond(c1), "Era esperado valores iguais, mas  1104710400000L é diferente de " + result1901 + " <w1.getFirstMillisecond(c1)>")
chamada antiga: assertEquals(1105315199999L, w1.getLastMillisecond(c1))
nova chamada: assertEquals(1105315199999L, w1.getLastMillisecond(c1), "Era esperado valores iguais, mas  1105315199999L é diferente de " + result1902 + " <w1.getLastMillisecond(c1)>")
chamada antiga: assertEquals(1104706800000L, w1.getFirstMillisecond(c2))
nova chamada: assertEquals(1104706800000L, w1.getFirstMillisecond(c2), "Era esperado valores iguais, mas  1104706800000L é diferente de " + result1903 + " <w1.getFirstMillisecond(c2)>")
chamada antiga: assertEquals(1105311599999L, w1.getLastMillisecond(c2))
nova chamada: assertEquals(1105311599999L, w1.getLastMillisecond(c2), "Era esperado valores iguais, mas  1105311599999L é diferente de " + result1904 + " <w1.getLastMillisecond(c2)>")
chamada antiga: assertEquals(1104037200000L, w1.getFirstMillisecond(c3))
nova chamada: assertEquals(1104037200000L, w1.getFirstMillisecond(c3), "Era esperado valores iguais, mas  1104037200000L é diferente de " + result1905 + " <w1.getFirstMillisecond(c3)>")
chamada antiga: assertEquals(1104641999999L, w1.getLastMillisecond(c3))
nova chamada: assertEquals(1104641999999L, w1.getLastMillisecond(c3), "Era esperado valores iguais, mas  1104641999999L é diferente de " + result1906 + " <w1.getLastMillisecond(c3)>")
chamada antiga: assertEquals(1104105600000L, w1.getFirstMillisecond(c1))
nova chamada: assertEquals(1104105600000L, w1.getFirstMillisecond(c1), "Era esperado valores iguais, mas  1104105600000L é diferente de " + result1907 + " <w1.getFirstMillisecond(c1)>")
chamada antiga: assertEquals(1104710399999L, w1.getLastMillisecond(c1))
nova chamada: assertEquals(1104710399999L, w1.getLastMillisecond(c1), "Era esperado valores iguais, mas  1104710399999L é diferente de " + result1908 + " <w1.getLastMillisecond(c1)>")
chamada antiga: assertEquals(1104102000000L, w1.getFirstMillisecond(c2))
nova chamada: assertEquals(1104102000000L, w1.getFirstMillisecond(c2), "Era esperado valores iguais, mas  1104102000000L é diferente de " + result1909 + " <w1.getFirstMillisecond(c2)>")
chamada antiga: assertEquals(1104706799999L, w1.getLastMillisecond(c2))
nova chamada: assertEquals(1104706799999L, w1.getLastMillisecond(c2), "Era esperado valores iguais, mas  1104706799999L é diferente de " + result1910 + " <w1.getLastMillisecond(c2)>")
chamada antiga: assertEquals(1135486800000L, w1.getFirstMillisecond(c3))
nova chamada: assertEquals(1135486800000L, w1.getFirstMillisecond(c3), "Era esperado valores iguais, mas  1135486800000L é diferente de " + result1911 + " <w1.getFirstMillisecond(c3)>")
chamada antiga: assertEquals(1136091599999L, w1.getLastMillisecond(c3))
nova chamada: assertEquals(1136091599999L, w1.getLastMillisecond(c3), "Era esperado valores iguais, mas  1136091599999L é diferente de " + result1912 + " <w1.getLastMillisecond(c3)>")
chamada antiga: assertEquals(946800000L, w.getFirstMillisecond())
nova chamada: assertEquals(946800000L, w.getFirstMillisecond(), "Era esperado valores iguais, mas  946800000L é diferente de " + result1913 + " <w.getFirstMillisecond()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(978307200000L, w.getFirstMillisecond(calendar))
nova chamada: assertEquals(978307200000L, w.getFirstMillisecond(calendar), "Era esperado valores iguais, mas  978307200000L é diferente de " + result1914 + " <w.getFirstMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(18485999999L, w.getLastMillisecond())
nova chamada: assertEquals(18485999999L, w.getLastMillisecond(), "Era esperado valores iguais, mas  18485999999L é diferente de " + result1915 + " <w.getLastMillisecond()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1009756799999L, w.getLastMillisecond(calendar))
nova chamada: assertEquals(1009756799999L, w.getLastMillisecond(calendar), "Era esperado valores iguais, mas  1009756799999L é diferente de " + result1916 + " <w.getLastMillisecond(calendar)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(106001L, w.getSerialIndex())
nova chamada: assertEquals(106001L, w.getSerialIndex(), "Era esperado valores iguais, mas  106001L é diferente de " + result1917 + " <w.getSerialIndex()>")
chamada antiga: assertEquals(100701L, w.getSerialIndex())
nova chamada: assertEquals(100701L, w.getSerialIndex(), "Era esperado valores iguais, mas  100701L é diferente de " + result1918 + " <w.getSerialIndex()>")
chamada antiga: assertEquals(new Year(2000), w.getYear())
nova chamada: assertEquals(new Year(2000), w.getYear(), "Era esperado valores iguais, mas  new Year(2000) é diferente de " + result1919 + " <w.getYear()>")
chamada antiga: assertEquals(13, w.getWeek())
nova chamada: assertEquals(13, w.getWeek(), "Era esperado valores iguais, mas  13 é diferente de " + result1920 + " <w.getWeek()>")
chamada antiga: assertNull(w.next())
nova chamada: assertNull(w.next(), "Era esperado nulo, mas " + result1921 + " <w.next()> não é nulo")
chamada antiga: assertEquals(cal.getTime(), w.getStart())
nova chamada: assertEquals(cal.getTime(), w.getStart(), "Era esperado valores iguais, mas " + result1922 + " <cal.getTime()> é diferente de " + result1923 + " <w.getStart()>")
chamada antiga: assertEquals(cal.getTime(), w.getEnd())
nova chamada: assertEquals(cal.getTime(), w.getEnd(), "Era esperado valores iguais, mas " + result1924 + " <cal.getTime()> é diferente de " + result1925 + " <w.getEnd()>")
chamada antiga: assertEquals(Calendar.MONDAY, cal.getFirstDayOfWeek())
nova chamada: assertEquals(Calendar.MONDAY, cal.getFirstDayOfWeek(), "Era esperado valores iguais, mas  Calendar.MONDAY é diferente de " + result1926 + " <cal.getFirstDayOfWeek()>")
chamada antiga: assertEquals(34, w.getWeek())
nova chamada: assertEquals(34, w.getWeek(), "Era esperado valores iguais, mas  34 é diferente de " + result1927 + " <w.getWeek()>")
chamada antiga: assertEquals(Calendar.SUNDAY, cal.getFirstDayOfWeek())
nova chamada: assertEquals(Calendar.SUNDAY, cal.getFirstDayOfWeek(), "Era esperado valores iguais, mas  Calendar.SUNDAY é diferente de " + result1928 + " <cal.getFirstDayOfWeek()>")
chamada antiga: assertEquals(35, w.getWeek())
nova chamada: assertEquals(35, w.getWeek(), "Era esperado valores iguais, mas  35 é diferente de " + result1929 + " <w.getWeek()>")
chamada antiga: assertEquals(34, w.getWeek())
nova chamada: assertEquals(34, w.getWeek(), "Era esperado valores iguais, mas  34 é diferente de " + result1930 + " <w.getWeek()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, dataset.getSeriesCount())
nova chamada: assertEquals(1, dataset.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1931 + " <dataset.getSeriesCount()>")
chamada antiga: assertEquals(0, dataset.getSeriesCount())
nova chamada: assertEquals(0, dataset.getSeriesCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1932 + " <dataset.getSeriesCount()>")
chamada antiga: assertEquals(1, dataset.getSeriesCount())
nova chamada: assertEquals(1, dataset.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1933 + " <dataset.getSeriesCount()>")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1934 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1935 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1936 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result1937 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result1938 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals("Series 1", c1.getSeries(0).getKey())
nova chamada: assertEquals("Series 1", c1.getSeries(0).getKey(), "Era esperado valores iguais, mas  'Series 1' é diferente de " + result1939 + " <c1.getSeries(0).getKey()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(DomainOrder.NONE, DomainOrder.NONE)
nova chamada: assertEquals(DomainOrder.NONE, DomainOrder.NONE, "Era esperado valores iguais, mas  DomainOrder.NONE é diferente de " + " DomainOrder.NONE")
chamada antiga: assertEquals(DomainOrder.ASCENDING, DomainOrder.ASCENDING)
nova chamada: assertEquals(DomainOrder.ASCENDING, DomainOrder.ASCENDING, "Era esperado valores iguais, mas  DomainOrder.ASCENDING é diferente de " + " DomainOrder.ASCENDING")
chamada antiga: assertEquals(DomainOrder.DESCENDING, DomainOrder.DESCENDING)
nova chamada: assertEquals(DomainOrder.DESCENDING, DomainOrder.DESCENDING, "Era esperado valores iguais, mas  DomainOrder.DESCENDING é diferente de " + " DomainOrder.DESCENDING")
chamada antiga: assertFalse(DomainOrder.NONE.equals(DomainOrder.ASCENDING))
nova chamada: assertFalse(DomainOrder.NONE.equals(DomainOrder.ASCENDING), "Era esperado falso, mas " + result1940 + " <DomainOrder.NONE.equals(DomainOrder.ASCENDING)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.NONE.equals(DomainOrder.DESCENDING))
nova chamada: assertFalse(DomainOrder.NONE.equals(DomainOrder.DESCENDING), "Era esperado falso, mas " + result1941 + " <DomainOrder.NONE.equals(DomainOrder.DESCENDING)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.NONE.equals(null))
nova chamada: assertFalse(DomainOrder.NONE.equals(null), "Era esperado falso, mas " + result1942 + " <DomainOrder.NONE.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.ASCENDING.equals(DomainOrder.NONE))
nova chamada: assertFalse(DomainOrder.ASCENDING.equals(DomainOrder.NONE), "Era esperado falso, mas " + result1943 + " <DomainOrder.ASCENDING.equals(DomainOrder.NONE)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.ASCENDING.equals(DomainOrder.DESCENDING))
nova chamada: assertFalse(DomainOrder.ASCENDING.equals(DomainOrder.DESCENDING), "Era esperado falso, mas " + result1944 + " <DomainOrder.ASCENDING.equals(DomainOrder.DESCENDING)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.ASCENDING.equals(null))
nova chamada: assertFalse(DomainOrder.ASCENDING.equals(null), "Era esperado falso, mas " + result1945 + " <DomainOrder.ASCENDING.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.DESCENDING.equals(DomainOrder.NONE))
nova chamada: assertFalse(DomainOrder.DESCENDING.equals(DomainOrder.NONE), "Era esperado falso, mas " + result1946 + " <DomainOrder.DESCENDING.equals(DomainOrder.NONE)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.DESCENDING.equals(DomainOrder.ASCENDING))
nova chamada: assertFalse(DomainOrder.DESCENDING.equals(DomainOrder.ASCENDING), "Era esperado falso, mas " + result1947 + " <DomainOrder.DESCENDING.equals(DomainOrder.ASCENDING)> é verdadeiro ")
chamada antiga: assertFalse(DomainOrder.DESCENDING.equals(null))
nova chamada: assertFalse(DomainOrder.DESCENDING.equals(null), "Era esperado falso, mas " + result1948 + " <DomainOrder.DESCENDING.equals(null)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result1949 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertSame(d1, d2)
nova chamada: assertSame(d1, d2, "Era esperado objetos iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(Double.isNaN(Math.min(1.0, Double.NaN)))
nova chamada: assertTrue(Double.isNaN(Math.min(1.0, Double.NaN)), "Era esperado verdadeiro, mas " + result1950 + " <Double.isNaN(Math.min(1.0, Double.NaN))> é falso")
chamada antiga: assertTrue(Double.isNaN(Math.max(1.0, Double.NaN)))
nova chamada: assertTrue(Double.isNaN(Math.max(1.0, Double.NaN)), "Era esperado verdadeiro, mas " + result1951 + " <Double.isNaN(Math.max(1.0, Double.NaN))> é falso")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(1.0, minimum)
nova chamada: assertEquals(1.0, minimum, "Era esperado valores iguais, mas  1.0 é diferente de " + " minimum")
chamada antiga: assertEquals(3.0, maximum)
nova chamada: assertEquals(3.0, maximum, "Era esperado valores iguais, mas  3.0 é diferente de " + " maximum")
chamada antiga: assertEquals(1.0, min1)
nova chamada: assertEquals(1.0, min1, "Era esperado valores iguais, mas  1.0 é diferente de " + " min1")
chamada antiga: assertEquals(100.0, min2)
nova chamada: assertEquals(100.0, min2, "Era esperado valores iguais, mas  100.0 é diferente de " + " min2")
chamada antiga: assertEquals(6.0, max1)
nova chamada: assertEquals(6.0, max1, "Era esperado valores iguais, mas  6.0 é diferente de " + " max1")
chamada antiga: assertEquals(105.0, maximum)
nova chamada: assertEquals(105.0, maximum, "Era esperado valores iguais, mas  105.0 é diferente de " + " maximum")
chamada antiga: assertTrue(min.doubleValue() < 100.1)
nova chamada: assertTrue(min.doubleValue() < 100.1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(max.doubleValue() > 101.0)
nova chamada: assertTrue(max.doubleValue() > 101.0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n.doubleValue() > 101.0)
nova chamada: assertTrue(n.doubleValue() > 101.0, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(dataset.getRowCount() == 3)
nova chamada: assertTrue(dataset.getRowCount() == 3, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(dataset.getColumnCount() == 2)
nova chamada: assertTrue(dataset.getColumnCount() == 2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(dataset == null)
nova chamada: assertTrue(dataset == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(max.equals(answer))
nova chamada: assertTrue(max.equals(answer), "Era esperado verdadeiro, mas " + result1952 + " <max.equals(answer)> é falso")
chamada antiga: assertTrue(r == null)
nova chamada: assertTrue(r == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r == null)
nova chamada: assertTrue(r == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r, new Range(0.0, 0.0))
nova chamada: assertEquals(r, new Range(0.0, 0.0), "Era esperado valores iguais, mas  r é diferente de " + " new Range(0.0, 0.0)")
chamada antiga: assertTrue(DatasetUtils.isEmptyOrNull(dataset))
nova chamada: assertTrue(DatasetUtils.isEmptyOrNull(dataset), "Era esperado verdadeiro, mas " + result1953 + " <DatasetUtils.isEmptyOrNull(dataset)> é falso")
chamada antiga: assertTrue(DatasetUtils.isEmptyOrNull(dataset))
nova chamada: assertTrue(DatasetUtils.isEmptyOrNull(dataset), "Era esperado verdadeiro, mas " + result1954 + " <DatasetUtils.isEmptyOrNull(dataset)> é falso")
chamada antiga: assertTrue(DatasetUtils.isEmptyOrNull(dataset))
nova chamada: assertTrue(DatasetUtils.isEmptyOrNull(dataset), "Era esperado verdadeiro, mas " + result1955 + " <DatasetUtils.isEmptyOrNull(dataset)> é falso")
chamada antiga: assertFalse(DatasetUtils.isEmptyOrNull(dataset))
nova chamada: assertFalse(DatasetUtils.isEmptyOrNull(dataset), "Era esperado falso, mas " + result1956 + " <DatasetUtils.isEmptyOrNull(dataset)> é verdadeiro ")
chamada antiga: assertTrue(DatasetUtils.isEmptyOrNull(dataset))
nova chamada: assertTrue(DatasetUtils.isEmptyOrNull(dataset), "Era esperado verdadeiro, mas " + result1957 + " <DatasetUtils.isEmptyOrNull(dataset)> é falso")
chamada antiga: assertEquals(0, d2.getItemCount())
nova chamada: assertEquals(0, d2.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result1958 + " <d2.getItemCount()>")
chamada antiga: assertEquals(3, d2.getItemCount())
nova chamada: assertEquals(3, d2.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1959 + " <d2.getItemCount()>")
chamada antiga: assertEquals("Item 1", d2.getKey(0))
nova chamada: assertEquals("Item 1", d2.getKey(0), "Era esperado valores iguais, mas  'Item 1' é diferente de " + result1960 + " <d2.getKey(0)>")
chamada antiga: assertEquals("Item 2", d2.getKey(1))
nova chamada: assertEquals("Item 2", d2.getKey(1), "Era esperado valores iguais, mas  'Item 2' é diferente de " + result1961 + " <d2.getKey(1)>")
chamada antiga: assertEquals("Item 3", d2.getKey(2))
nova chamada: assertEquals("Item 3", d2.getKey(2), "Era esperado valores iguais, mas  'Item 3' é diferente de " + result1962 + " <d2.getKey(2)>")
chamada antiga: assertEquals(3, d2.getItemCount())
nova chamada: assertEquals(3, d2.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result1963 + " <d2.getItemCount()>")
chamada antiga: assertEquals("Item 2", d2.getKey(0))
nova chamada: assertEquals("Item 2", d2.getKey(0), "Era esperado valores iguais, mas  'Item 2' é diferente de " + result1964 + " <d2.getKey(0)>")
chamada antiga: assertEquals("Item 3", d2.getKey(1))
nova chamada: assertEquals("Item 3", d2.getKey(1), "Era esperado valores iguais, mas  'Item 3' é diferente de " + result1965 + " <d2.getKey(1)>")
chamada antiga: assertEquals("Other", d2.getKey(2))
nova chamada: assertEquals("Other", d2.getKey(2), "Era esperado valores iguais, mas  'Other' é diferente de " + result1966 + " <d2.getKey(2)>")
chamada antiga: assertEquals(2.0, d2.getValue("Other"))
nova chamada: assertEquals(2.0, d2.getValue("Other"), "Era esperado valores iguais, mas  2.0 é diferente de " + result1967 + " <d2.getValue('Other')>")
chamada antiga: assertEquals(1, dataset.getSeriesCount())
nova chamada: assertEquals(1, dataset.getSeriesCount(), "Era esperado valores iguais, mas  1 é diferente de " + result1968 + " <dataset.getSeriesCount()>")
chamada antiga: assertEquals("S1", dataset.getSeriesKey(0))
nova chamada: assertEquals("S1", dataset.getSeriesKey(0), "Era esperado valores iguais, mas  'S1' é diferente de " + result1969 + " <dataset.getSeriesKey(0)>")
chamada antiga: assertEquals(2, dataset.getItemCount(0))
nova chamada: assertEquals(2, dataset.getItemCount(0), "Era esperado valores iguais, mas  2 é diferente de " + result1970 + " <dataset.getItemCount(0)>")
chamada antiga: assertNull(min)
nova chamada: assertNull(min, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(max)
nova chamada: assertNull(max, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(new Range(5.0, 5.0), r)
nova chamada: assertEquals(new Range(5.0, 5.0), r, "Era esperado valores iguais, mas  new Range(5.0, 5.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(5.0, 6.0), r)
nova chamada: assertEquals(new Range(5.0, 6.0), r, "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(5.0, 6.0), r)
nova chamada: assertEquals(new Range(5.0, 6.0), r, "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(5.0, 6.0), r)
nova chamada: assertEquals(new Range(5.0, 6.0), r, "Era esperado valores iguais, mas  new Range(5.0, 6.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(5.0, 15.0), r)
nova chamada: assertEquals(new Range(5.0, 15.0), r, "Era esperado valores iguais, mas  new Range(5.0, 15.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(5.0, 15.0), r)
nova chamada: assertEquals(new Range(5.0, 15.0), r, "Era esperado valores iguais, mas  new Range(5.0, 15.0) é diferente de " + " r")
chamada antiga: assertEquals(new Range(5.0, 150.0), r)
nova chamada: assertEquals(new Range(5.0, 150.0), r, "Era esperado valores iguais, mas  new Range(5.0, 150.0) é diferente de " + " r")
chamada antiga: assertNull(DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, false))
nova chamada: assertNull(DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, false), "Era esperado nulo, mas " + result1971 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, false)> não é nulo")
chamada antiga: assertEquals(new Range(5.0, 5.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, false))
nova chamada: assertEquals(new Range(5.0, 5.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, false), "Era esperado valores iguais, mas  new Range(5.0, 5.0) é diferente de " + result1972 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, false)>")
chamada antiga: assertEquals(new Range(1.0, 9.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, true))
nova chamada: assertEquals(new Range(1.0, 9.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, true), "Era esperado valores iguais, mas  new Range(1.0, 9.0) é diferente de " + result1973 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, xRange, true)>")
chamada antiga: assertNull(DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, false))
nova chamada: assertNull(DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, false), "Era esperado nulo, mas " + result1974 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, false)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, false))
nova chamada: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, false), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1975 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, false)>")
chamada antiga: assertEquals(new Range(0.5, 1.5), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true))
nova chamada: assertEquals(new Range(0.5, 1.5), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true), "Era esperado valores iguais, mas  new Range(0.5, 1.5) é diferente de " + result1976 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true)>")
chamada antiga: assertNull(DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true))
nova chamada: assertNull(DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true), "Era esperado nulo, mas " + result1977 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true))
nova chamada: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1978 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true)>")
chamada antiga: assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true))
nova chamada: assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true), "Era esperado valores iguais, mas  new Range(1.0, 3.0) é diferente de " + result1979 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true)>")
chamada antiga: assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true))
nova chamada: assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true), "Era esperado valores iguais, mas  new Range(1.0, 3.0) é diferente de " + result1980 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true)>")
chamada antiga: assertEquals(new Range(-2.0, 3.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true))
nova chamada: assertEquals(new Range(-2.0, 3.0), DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true), "Era esperado valores iguais, mas  new Range(-2.0, 3.0) é diferente de " + result1981 + " <DatasetUtils.iterateToFindRangeBounds(dataset, visibleSeriesKeys, true)>")
chamada antiga: assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(1.0, 3.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(1.0, 3.0) é diferente de " + result1982 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertEquals(new Range(2.0, 3.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(2.0, 3.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(2.0, 3.0) é diferente de " + result1983 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertEquals(new Range(2.0, 4.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(2.0, 4.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(2.0, 4.0) é diferente de " + result1984 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertEquals(new Range(2.0, 3.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(2.0, 3.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(2.0, 3.0) é diferente de " + result1985 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertNull(DatasetUtils.iterateRangeBounds(d))
nova chamada: assertNull(DatasetUtils.iterateRangeBounds(d), "Era esperado nulo, mas " + result1986 + " <DatasetUtils.iterateRangeBounds(d)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1987 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1988 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(1.0, 1.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result1989 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertEquals(new Range(2.0, 4.0), DatasetUtils.iterateRangeBounds(d))
nova chamada: assertEquals(new Range(2.0, 4.0), DatasetUtils.iterateRangeBounds(d), "Era esperado valores iguais, mas  new Range(2.0, 4.0) é diferente de " + result1990 + " <DatasetUtils.iterateRangeBounds(d)>")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)), "Era esperado verdadeiro, mas " + result1991 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)), "Era esperado verdadeiro, mas " + result1992 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)), "Era esperado verdadeiro, mas " + result1993 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)), "Era esperado verdadeiro, mas " + result1994 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)), "Era esperado verdadeiro, mas " + result1995 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)), "Era esperado verdadeiro, mas " + result1996 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)), "Era esperado verdadeiro, mas " + result1997 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)), "Era esperado verdadeiro, mas " + result1998 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, -0.5)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, -0.5)), "Era esperado verdadeiro, mas " + result1999 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, -0.5))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 5.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 5.0)), "Era esperado verdadeiro, mas " + result2000 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 5.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)), "Era esperado verdadeiro, mas " + result2001 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)), "Era esperado verdadeiro, mas " + result2002 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)), "Era esperado verdadeiro, mas " + result2003 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)), "Era esperado verdadeiro, mas " + result2004 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)), "Era esperado verdadeiro, mas " + result2005 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)), "Era esperado verdadeiro, mas " + result2006 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0))> é falso")
chamada antiga: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)))
nova chamada: assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)), "Era esperado verdadeiro, mas " + result2007 + " <Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0))> é falso")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(1, d.getItemCount())
nova chamada: assertEquals(1, d.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result2008 + " <d.getItemCount()>")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertEquals(0, d.getItemCount())
nova chamada: assertEquals(0, d.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result2009 + " <d.getItemCount()>")
chamada antiga: assertEquals("A", d.getKey(0))
nova chamada: assertEquals("A", d.getKey(0), "Era esperado valores iguais, mas  'A' é diferente de " + result2010 + " <d.getKey(0)>")
chamada antiga: assertEquals("B", d.getKey(1))
nova chamada: assertEquals("B", d.getKey(1), "Era esperado valores iguais, mas  'B' é diferente de " + result2011 + " <d.getKey(1)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, d.getIndex("A"))
nova chamada: assertEquals(0, d.getIndex("A"), "Era esperado valores iguais, mas  0 é diferente de " + result2012 + " <d.getIndex('A')>")
chamada antiga: assertEquals(1, d.getIndex("B"))
nova chamada: assertEquals(1, d.getIndex("B"), "Era esperado valores iguais, mas  1 é diferente de " + result2013 + " <d.getIndex('B')>")
chamada antiga: assertEquals(-1, d.getIndex("XX"))
nova chamada: assertEquals(-1, d.getIndex("XX"), "Era esperado valores iguais, mas  -1 é diferente de " + result2014 + " <d.getIndex('XX')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2015 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(1.0, d.getValue(0))
nova chamada: assertEquals(1.0, d.getValue(0), "Era esperado valores iguais, mas  1.0 é diferente de " + result2016 + " <d.getValue(0)>")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2017 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2018 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2019 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d2.equals(d1))
nova chamada: assertTrue(d2.equals(d1), "Era esperado verdadeiro, mas " + result2020 + " <d2.equals(d1)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2021 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2022 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2023 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2024 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2025 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2026 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals(10, d.getXSampleCount())
nova chamada: assertEquals(10, d.getXSampleCount(), "Era esperado valores iguais, mas  10 é diferente de " + result2027 + " <d.getXSampleCount()>")
chamada antiga: assertEquals(5, d.getYSampleCount())
nova chamada: assertEquals(5, d.getYSampleCount(), "Era esperado valores iguais, mas  5 é diferente de " + result2028 + " <d.getYSampleCount()>")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2029 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2030 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2031 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2032 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2033 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2034 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2035 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2036 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2037 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2038 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2039 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2040 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2041 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2042 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2043 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2044 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2045 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2046 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2047 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2048 + " <d1.equals(d2)> é falso")
chamada antiga: assertTrue(d1 != d2)
nova chamada: assertTrue(d1 != d2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.getClass() == d2.getClass())
nova chamada: assertTrue(d1.getClass() == d2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2049 + " <d1.equals(d2)> é falso")
chamada antiga: assertFalse(d1.equals(d2))
nova chamada: assertFalse(d1.equals(d2), "Era esperado falso, mas " + result2050 + " <d1.equals(d2)> é verdadeiro ")
chamada antiga: assertTrue(d1.equals(d2))
nova chamada: assertTrue(d1.equals(d2), "Era esperado verdadeiro, mas " + result2051 + " <d1.equals(d2)> é falso")
chamada antiga: assertEquals(d1, d2)
nova chamada: assertEquals(d1, d2, "Era esperado valores iguais, mas  d1 é diferente de " + " d2")
chamada antiga: assertEquals("s1", s1.getKey())
nova chamada: assertEquals("s1", s1.getKey(), "Era esperado valores iguais, mas  's1' é diferente de " + result2052 + " <s1.getKey()>")
chamada antiga: assertNull(s1.getDescription())
nova chamada: assertNull(s1.getDescription(), "Era esperado nulo, mas " + result2053 + " <s1.getDescription()> não é nulo")
chamada antiga: assertTrue(s1.getAllowDuplicateXValues())
nova chamada: assertTrue(s1.getAllowDuplicateXValues(), "Era esperado verdadeiro, mas " + result2054 + " <s1.getAllowDuplicateXValues()> é falso")
chamada antiga: assertTrue(s1.getAutoSort())
nova chamada: assertTrue(s1.getAutoSort(), "Era esperado verdadeiro, mas " + result2055 + " <s1.getAutoSort()> é falso")
chamada antiga: assertEquals(0, s1.getItemCount())
nova chamada: assertEquals(0, s1.getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result2056 + " <s1.getItemCount()>")
chamada antiga: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount())
nova chamada: assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount(), "Era esperado valores iguais, mas  Integer.MAX_VALUE é diferente de " + result2057 + " <s1.getMaximumItemCount()>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2058 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s2.equals(s1))
nova chamada: assertTrue(s2.equals(s1), "Era esperado verdadeiro, mas " + result2059 + " <s2.equals(s1)> é falso")
chamada antiga: assertNotEquals(s1, s2)
nova chamada: assertNotEquals(s1, s2, "Era esperado valores diferentes, mas  s1 é igual a " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2060 + " <s1.equals(s2)> é falso")
chamada antiga: assertNotEquals(s1, s2)
nova chamada: assertNotEquals(s1, s2, "Era esperado valores diferentes, mas  s1 é igual a " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2061 + " <s1.equals(s2)> é falso")
chamada antiga: assertNotEquals(s1, s2)
nova chamada: assertNotEquals(s1, s2, "Era esperado valores diferentes, mas  s1 é igual a " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2062 + " <s1.equals(s2)> é falso")
chamada antiga: assertNotEquals(s1, s2)
nova chamada: assertNotEquals(s1, s2, "Era esperado valores diferentes, mas  s1 é igual a " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2063 + " <s1.equals(s2)> é falso")
chamada antiga: assertNotEquals(s1, s2)
nova chamada: assertNotEquals(s1, s2, "Era esperado valores diferentes, mas  s1 é igual a " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2064 + " <s1.equals(s2)> é falso")
chamada antiga: assertNotEquals(s1, s2)
nova chamada: assertNotEquals(s1, s2, "Era esperado valores diferentes, mas  s1 é igual a " + " s2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2065 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2066 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result2067 + " <s1.hashCode()> é diferente de " + result2068 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result2069 + " <s1.hashCode()> é diferente de " + result2070 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result2071 + " <s1.hashCode()> é diferente de " + result2072 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result2073 + " <s1.hashCode()> é diferente de " + result2074 + " <s2.hashCode()>")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1.hashCode(), s2.hashCode())
nova chamada: assertEquals(s1.hashCode(), s2.hashCode(), "Era esperado valores iguais, mas " + result2075 + " <s1.hashCode()> é diferente de " + result2076 + " <s2.hashCode()>")
chamada antiga: assertEquals("G1", m1.getGroup("K1"))
nova chamada: assertEquals("G1", m1.getGroup("K1"), "Era esperado valores iguais, mas  'G1' é diferente de " + result2077 + " <m1.getGroup('K1')>")
chamada antiga: assertEquals("G2", m1.getGroup("K2"))
nova chamada: assertEquals("G2", m1.getGroup("K2"), "Era esperado valores iguais, mas  'G2' é diferente de " + result2078 + " <m1.getGroup('K2')>")
chamada antiga: assertEquals("G1", m1.getGroup("K2"))
nova chamada: assertEquals("G1", m1.getGroup("K2"), "Era esperado valores iguais, mas  'G1' é diferente de " + result2079 + " <m1.getGroup('K2')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, m1.getGroupCount())
nova chamada: assertEquals(1, m1.getGroupCount(), "Era esperado valores iguais, mas  1 é diferente de " + result2080 + " <m1.getGroupCount()>")
chamada antiga: assertEquals(2, m1.getGroupCount())
nova chamada: assertEquals(2, m1.getGroupCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2081 + " <m1.getGroupCount()>")
chamada antiga: assertEquals(2, m1.getGroupCount())
nova chamada: assertEquals(2, m1.getGroupCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2082 + " <m1.getGroupCount()>")
chamada antiga: assertEquals(3, m1.getGroupCount())
nova chamada: assertEquals(3, m1.getGroupCount(), "Era esperado valores iguais, mas  3 é diferente de " + result2083 + " <m1.getGroupCount()>")
chamada antiga: assertEquals(2, m1.getGroupCount())
nova chamada: assertEquals(2, m1.getGroupCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2084 + " <m1.getGroupCount()>")
chamada antiga: assertEquals(0, m1.getKeyCount("Default Group"))
nova chamada: assertEquals(0, m1.getKeyCount("Default Group"), "Era esperado valores iguais, mas  0 é diferente de " + result2085 + " <m1.getKeyCount('Default Group')>")
chamada antiga: assertEquals(1, m1.getKeyCount("G1"))
nova chamada: assertEquals(1, m1.getKeyCount("G1"), "Era esperado valores iguais, mas  1 é diferente de " + result2086 + " <m1.getKeyCount('G1')>")
chamada antiga: assertEquals(0, m1.getKeyCount("G1"))
nova chamada: assertEquals(0, m1.getKeyCount("G1"), "Era esperado valores iguais, mas  0 é diferente de " + result2087 + " <m1.getKeyCount('G1')>")
chamada antiga: assertEquals(1, m1.getKeyCount("Default Group"))
nova chamada: assertEquals(1, m1.getKeyCount("Default Group"), "Era esperado valores iguais, mas  1 é diferente de " + result2088 + " <m1.getKeyCount('Default Group')>")
chamada antiga: assertEquals(3, m1.getKeyCount("Default Group"))
nova chamada: assertEquals(3, m1.getKeyCount("Default Group"), "Era esperado valores iguais, mas  3 é diferente de " + result2089 + " <m1.getKeyCount('Default Group')>")
chamada antiga: assertEquals(2, m1.getKeyCount("G2"))
nova chamada: assertEquals(2, m1.getKeyCount("G2"), "Era esperado valores iguais, mas  2 é diferente de " + result2090 + " <m1.getKeyCount('G2')>")
chamada antiga: assertEquals(2, m1.getKeyCount("G1"))
nova chamada: assertEquals(2, m1.getKeyCount("G1"), "Era esperado valores iguais, mas  2 é diferente de " + result2091 + " <m1.getKeyCount('G1')>")
chamada antiga: assertEquals(0, m1.getKeyCount("G2"))
nova chamada: assertEquals(0, m1.getKeyCount("G2"), "Era esperado valores iguais, mas  0 é diferente de " + result2092 + " <m1.getKeyCount('G2')>")
chamada antiga: assertEquals(0, m1.getGroupIndex("Default Group"))
nova chamada: assertEquals(0, m1.getGroupIndex("Default Group"), "Era esperado valores iguais, mas  0 é diferente de " + result2093 + " <m1.getGroupIndex('Default Group')>")
chamada antiga: assertEquals(-1, m1.getGroupIndex("G3"))
nova chamada: assertEquals(-1, m1.getGroupIndex("G3"), "Era esperado valores iguais, mas  -1 é diferente de " + result2094 + " <m1.getGroupIndex('G3')>")
chamada antiga: assertEquals(1, m1.getGroupIndex("G3"))
nova chamada: assertEquals(1, m1.getGroupIndex("G3"), "Era esperado valores iguais, mas  1 é diferente de " + result2095 + " <m1.getGroupIndex('G3')>")
chamada antiga: assertEquals(2, m1.getGroupIndex("G1"))
nova chamada: assertEquals(2, m1.getGroupIndex("G1"), "Era esperado valores iguais, mas  2 é diferente de " + result2096 + " <m1.getGroupIndex('G1')>")
chamada antiga: assertEquals(3, m1.getGroupIndex("G2"))
nova chamada: assertEquals(3, m1.getGroupIndex("G2"), "Era esperado valores iguais, mas  3 é diferente de " + result2097 + " <m1.getGroupIndex('G2')>")
chamada antiga: assertEquals("Default Group", m1.getGroup("K1"))
nova chamada: assertEquals("Default Group", m1.getGroup("K1"), "Era esperado valores iguais, mas  'Default Group' é diferente de " + result2098 + " <m1.getGroup('K1')>")
chamada antiga: assertEquals("G1", m1.getGroup("K1"))
nova chamada: assertEquals("G1", m1.getGroup("K1"), "Era esperado valores iguais, mas  'G1' é diferente de " + result2099 + " <m1.getGroup('K1')>")
chamada antiga: assertEquals("G2", m1.getGroup("K1"))
nova chamada: assertEquals("G2", m1.getGroup("K1"), "Era esperado valores iguais, mas  'G2' é diferente de " + result2100 + " <m1.getGroup('K1')>")
chamada antiga: assertEquals("Default Group", m1.getGroup("K1"))
nova chamada: assertEquals("Default Group", m1.getGroup("K1"), "Era esperado valores iguais, mas  'Default Group' é diferente de " + result2101 + " <m1.getGroup('K1')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2102 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result2103 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2104 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2105 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1 != m2)
nova chamada: assertTrue(m1 != m2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.getClass() == m2.getClass())
nova chamada: assertTrue(m1.getClass() == m2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2106 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2107 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2108 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2109 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b1))
nova chamada: assertTrue(b2.equals(b1), "Era esperado verdadeiro, mas " + result2110 + " <b2.equals(b1)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2111 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2112 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2113 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2114 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2115 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2116 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2117 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2118 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2119 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2120 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1 instanceof Cloneable)
nova chamada: assertFalse(b1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2121 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b2))
nova chamada: assertTrue(b2.equals(b2), "Era esperado verdadeiro, mas " + result2122 + " <b2.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2123 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2124 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2125 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2126 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2127 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2128 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2129 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2130 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2131 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2132 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2133 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2134 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2135 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2136 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2137 + " <b1.equals(b2)> é falso")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2138 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b2))
nova chamada: assertTrue(b2.equals(b2), "Era esperado verdadeiro, mas " + result2139 + " <b2.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2140 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2141 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2142 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2143 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2144 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2145 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2146 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2147 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2148 + " <b1.equals(b2)> é falso")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2149 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c2.equals(c1))
nova chamada: assertTrue(c2.equals(c1), "Era esperado verdadeiro, mas " + result2150 + " <c2.equals(c1)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2151 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2152 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2153 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2154 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2155 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2156 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2157 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2158 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(f1 instanceof Cloneable)
nova chamada: assertFalse(f1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2159 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f2.equals(f1))
nova chamada: assertTrue(f2.equals(f1), "Era esperado verdadeiro, mas " + result2160 + " <f2.equals(f1)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2161 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2162 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2163 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2164 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1 instanceof Cloneable)
nova chamada: assertFalse(f1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2165 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b2))
nova chamada: assertTrue(b2.equals(b2), "Era esperado verdadeiro, mas " + result2166 + " <b2.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2167 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2168 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2169 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2170 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2171 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2172 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1 instanceof Cloneable)
nova chamada: assertFalse(b1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2173 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c2.equals(c2))
nova chamada: assertTrue(c2.equals(c2), "Era esperado verdadeiro, mas " + result2174 + " <c2.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2175 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2176 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2177 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2178 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2179 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2180 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b2))
nova chamada: assertTrue(b2.equals(b2), "Era esperado verdadeiro, mas " + result2181 + " <b2.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2182 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2183 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2184 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2185 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2186 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2187 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2188 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2189 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2190 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2191 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2192 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2193 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2194 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2195 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2196 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2197 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2198 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2199 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2200 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2201 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2202 + " <b1.equals(b2)> é falso")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2203 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b2))
nova chamada: assertTrue(b2.equals(b2), "Era esperado verdadeiro, mas " + result2204 + " <b2.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2205 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2206 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2207 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2208 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2209 + " <b1.equals(b2)> é falso")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2210 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b2.equals(b2))
nova chamada: assertTrue(b2.equals(b2), "Era esperado verdadeiro, mas " + result2211 + " <b2.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2212 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2213 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2214 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2215 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1 instanceof Cloneable)
nova chamada: assertFalse(b1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2216 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f2.equals(f1))
nova chamada: assertTrue(f2.equals(f1), "Era esperado verdadeiro, mas " + result2217 + " <f2.equals(f1)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2218 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2219 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2220 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2221 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2222 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2223 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2224 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2225 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1 instanceof Cloneable)
nova chamada: assertFalse(f1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2226 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2227 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2228 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2229 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2230 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2231 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2232 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2233 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2234 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2235 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2236 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2237 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2238 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2239 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2240 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2241 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2242 + " <n1.equals(n2)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2243 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2244 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2245 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2246 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2247 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2248 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2249 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2250 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2251 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2252 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2253 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2254 + " <n2.equals(n1)> é falso")
chamada antiga: assertFalse(n1.equals(n2))
nova chamada: assertFalse(n1.equals(n2), "Era esperado falso, mas " + result2255 + " <n1.equals(n2)> é verdadeiro ")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2256 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2257 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2258 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2259 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2260 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2261 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2262 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2263 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2264 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2265 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2266 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2267 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2268 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2269 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2270 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2271 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2272 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2273 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2274 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2275 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n2.equals(n1))
nova chamada: assertTrue(n2.equals(n1), "Era esperado verdadeiro, mas " + result2276 + " <n2.equals(n1)> é falso")
chamada antiga: assertTrue(n1 != n2)
nova chamada: assertTrue(n1 != n2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.getClass() == n2.getClass())
nova chamada: assertTrue(n1.getClass() == n2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2277 + " <n1.equals(n2)> é falso")
chamada antiga: assertTrue(n1.equals(n2))
nova chamada: assertTrue(n1.equals(n2), "Era esperado verdadeiro, mas " + result2278 + " <n1.equals(n2)> é falso")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2279 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2280 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2281 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertNotSame(i1, i2)
nova chamada: assertNotSame(i1, i2, "Era esperado objetos diferentes, mas  i1 é igual a " + " i2")
chamada antiga: assertSame(i1.getClass(), i2.getClass())
nova chamada: assertSame(i1.getClass(), i2.getClass(), "Era esperado objetos iguais, mas " + result2282 + " <i1.getClass()> é diferente de " + result2283 + " <i2.getClass()>")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2284 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2285 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertEquals(i2, i2.getPlotInfo().getOwner())
nova chamada: assertEquals(i2, i2.getPlotInfo().getOwner(), "Era esperado valores iguais, mas  i2 é diferente de " + result2286 + " <i2.getPlotInfo().getOwner()>")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertSame(tt2, tt)
nova chamada: assertSame(tt2, tt, "Era esperado objetos iguais, mas  tt2 é diferente de " + " tt")
chamada antiga: assertSame(url2, url1)
nova chamada: assertSame(url2, url1, "Era esperado objetos iguais, mas  url2 é diferente de " + " url1")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(url2 == url1)
nova chamada: assertTrue(url2 == url1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertEquals(chart2, chart1)
nova chamada: assertEquals(chart2, chart1, "Era esperado valores iguais, mas  chart2 é diferente de " + " chart1")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2287 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2288 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2289 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2290 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2291 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2292 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2293 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2294 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2295 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2296 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2297 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertEquals(chart1, chart2)
nova chamada: assertEquals(chart1, chart2, "Era esperado valores iguais, mas  chart1 é diferente de " + " chart2")
chamada antiga: assertFalse(chart1.equals(chart2))
nova chamada: assertFalse(chart1.equals(chart2), "Era esperado falso, mas " + result2298 + " <chart1.equals(chart2)> é verdadeiro ")
chamada antiga: assertFalse(chart2.equals(chart1))
nova chamada: assertFalse(chart2.equals(chart1), "Era esperado falso, mas " + result2299 + " <chart2.equals(chart1)> é verdadeiro ")
chamada antiga: assertEquals(1, count)
nova chamada: assertEquals(1, count, "Era esperado valores iguais, mas  1 é diferente de " + " count")
chamada antiga: assertTrue(t instanceof LegendTitle)
nova chamada: assertTrue(t instanceof LegendTitle, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertSame(lt2.getSources()[0], c2.getPlot())
nova chamada: assertSame(lt2.getSources()[0], c2.getPlot(), "Era esperado objetos iguais, mas  lt2.getSources()[0] é diferente de " + result2300 + " <c2.getPlot()>")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(t0, chart.getSubtitle(0))
nova chamada: assertEquals(t0, chart.getSubtitle(0), "Era esperado valores iguais, mas  t0 é diferente de " + result2301 + " <chart.getSubtitle(0)>")
chamada antiga: assertEquals(t1, chart.getSubtitle(2))
nova chamada: assertEquals(t1, chart.getSubtitle(2), "Era esperado valores iguais, mas  t1 é diferente de " + result2302 + " <chart.getSubtitle(2)>")
chamada antiga: assertEquals(1, chart.getSubtitleCount())
nova chamada: assertEquals(1, chart.getSubtitleCount(), "Era esperado valores iguais, mas  1 é diferente de " + result2303 + " <chart.getSubtitleCount()>")
chamada antiga: assertEquals(1, chart.getSubtitleCount())
nova chamada: assertEquals(1, chart.getSubtitleCount(), "Era esperado valores iguais, mas  1 é diferente de " + result2304 + " <chart.getSubtitleCount()>")
chamada antiga: assertNotNull(this.lastChartChangeEvent)
nova chamada: assertNotNull(this.lastChartChangeEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastChartChangeEvent)
nova chamada: assertNotNull(this.lastChartChangeEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastChartChangeEvent)
nova chamada: assertNotNull(this.lastChartChangeEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastChartChangeEvent)
nova chamada: assertNotNull(this.lastChartChangeEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(this.lastChartChangeEvent)
nova chamada: assertNull(this.lastChartChangeEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(title, ChartFactory.createPieChart(title, new DefaultPieDataset()).getTitle().getText())
nova chamada: assertEquals(title, ChartFactory.createPieChart(title, new DefaultPieDataset()).getTitle().getText(), "Era esperado valores iguais, mas  title é diferente de " + result2305 + " <ChartFactory.createPieChart(title, new DefaultPieDataset()).getTitle().getText()>")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2306 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result2307 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2308 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2309 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2310 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2311 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2312 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2313 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2314 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2315 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2316 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2317 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2318 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2319 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2320 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2321 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2322 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2323 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2324 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2325 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2326 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2327 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2328 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2329 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2330 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2331 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2332 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2333 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1 != m2)
nova chamada: assertTrue(m1 != m2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.getClass() == m2.getClass())
nova chamada: assertTrue(m1.getClass() == m2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2334 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2335 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(Color.RED, m.getPaint())
nova chamada: assertEquals(Color.RED, m.getPaint(), "Era esperado valores iguais, mas  Color.RED é diferente de " + result2336 + " <m.getPaint()>")
chamada antiga: assertEquals(stroke, m.getStroke())
nova chamada: assertEquals(stroke, m.getStroke(), "Era esperado valores iguais, mas  stroke é diferente de " + result2337 + " <m.getStroke()>")
chamada antiga: assertEquals(Color.BLUE, m.getOutlinePaint())
nova chamada: assertEquals(Color.BLUE, m.getOutlinePaint(), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result2338 + " <m.getOutlinePaint()>")
chamada antiga: assertEquals(outlineStroke, m.getOutlineStroke())
nova chamada: assertEquals(outlineStroke, m.getOutlineStroke(), "Era esperado valores iguais, mas  outlineStroke é diferente de " + result2339 + " <m.getOutlineStroke()>")
chamada antiga: assertEquals(2, items.getItemCount())
nova chamada: assertEquals(2, items.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2340 + " <items.getItemCount()>")
chamada antiga: assertEquals("A", item1.getLabel())
nova chamada: assertEquals("A", item1.getLabel(), "Era esperado valores iguais, mas  'A' é diferente de " + result2341 + " <item1.getLabel()>")
chamada antiga: assertEquals("B", item2.getLabel())
nova chamada: assertEquals("B", item2.getLabel(), "Era esperado valores iguais, mas  'B' é diferente de " + result2342 + " <item2.getLabel()>")
chamada antiga: assertEquals(4, items.getItemCount())
nova chamada: assertEquals(4, items.getItemCount(), "Era esperado valores iguais, mas  4 é diferente de " + result2343 + " <items.getItemCount()>")
chamada antiga: assertEquals("A", item1.getLabel())
nova chamada: assertEquals("A", item1.getLabel(), "Era esperado valores iguais, mas  'A' é diferente de " + result2344 + " <item1.getLabel()>")
chamada antiga: assertEquals("B", item2.getLabel())
nova chamada: assertEquals("B", item2.getLabel(), "Era esperado valores iguais, mas  'B' é diferente de " + result2345 + " <item2.getLabel()>")
chamada antiga: assertEquals("C", item3.getLabel())
nova chamada: assertEquals("C", item3.getLabel(), "Era esperado valores iguais, mas  'C' é diferente de " + result2346 + " <item3.getLabel()>")
chamada antiga: assertEquals("D", item4.getLabel())
nova chamada: assertEquals("D", item4.getLabel(), "Era esperado valores iguais, mas  'D' é diferente de " + result2347 + " <item4.getLabel()>")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2348 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result2349 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2350 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2351 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2352 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2353 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2354 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2355 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2356 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2357 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2358 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2359 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2360 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2361 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2362 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2363 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2364 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2365 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2366 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2367 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2368 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2369 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2370 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2371 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2372 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2373 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2374 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2375 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2376 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2377 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2378 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2379 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2380 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2381 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2382 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2383 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2384 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2385 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2386 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2387 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2388 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2389 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2390 + " <i1.equals(i2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2391 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2392 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2393 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2394 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2395 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2396 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2397 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2398 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2399 + " <i1.equals(i2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(i1 != i2)
nova chamada: assertTrue(i1 != i2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(i1.getClass() == i2.getClass())
nova chamada: assertTrue(i1.getClass() == i2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2400 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i1.hasListener(l1))
nova chamada: assertTrue(i1.hasListener(l1), "Era esperado verdadeiro, mas " + result2401 + " <i1.hasListener(l1)> é falso")
chamada antiga: assertFalse(i2.hasListener(l1))
nova chamada: assertFalse(i2.hasListener(l1), "Era esperado falso, mas " + result2402 + " <i2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2403 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2404 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2405 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2406 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1.hasListener(l1))
nova chamada: assertTrue(c1.hasListener(l1), "Era esperado verdadeiro, mas " + result2407 + " <c1.hasListener(l1)> é falso")
chamada antiga: assertFalse(c2.hasListener(l1))
nova chamada: assertFalse(c2.hasListener(l1), "Era esperado falso, mas " + result2408 + " <c2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertTrue(c1.hasListener(l1))
nova chamada: assertTrue(c1.hasListener(l1), "Era esperado verdadeiro, mas " + result2409 + " <c1.hasListener(l1)> é falso")
chamada antiga: assertFalse(c2.hasListener(l1))
nova chamada: assertFalse(c2.hasListener(l1), "Era esperado falso, mas " + result2410 + " <c2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2411 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2412 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2413 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2414 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2415 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2416 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2417 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2418 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2419 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2420 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2421 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2422 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2423 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2424 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2425 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2426 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2427 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(this.lastEvent)
nova chamada: assertNull(this.lastEvent, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2428 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2429 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2430 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2431 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2432 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2433 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2434 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2435 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2436 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2437 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2438 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2439 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(f1 != f2)
nova chamada: assertTrue(f1 != f2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.getClass() == f2.getClass())
nova chamada: assertTrue(f1.getClass() == f2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2440 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f1.hasListener(l1))
nova chamada: assertTrue(f1.hasListener(l1), "Era esperado verdadeiro, mas " + result2441 + " <f1.hasListener(l1)> é falso")
chamada antiga: assertFalse(f2.hasListener(l1))
nova chamada: assertFalse(f2.hasListener(l1), "Era esperado falso, mas " + result2442 + " <f2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2443 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result2444 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2445 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result2446 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2447 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result2448 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2449 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result2450 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2451 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result2452 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2453 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result2454 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2455 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2456 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result2457 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.hasListener(l1))
nova chamada: assertTrue(a1.hasListener(l1), "Era esperado verdadeiro, mas " + result2458 + " <a1.hasListener(l1)> é falso")
chamada antiga: assertFalse(a2.hasListener(l1))
nova chamada: assertFalse(a2.hasListener(l1), "Era esperado falso, mas " + result2459 + " <a2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2460 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2461 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2462 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2463 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2464 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2465 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2466 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2467 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result2468 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2469 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2470 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2471 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result2472 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1.hasListener(l1))
nova chamada: assertTrue(c1.hasListener(l1), "Era esperado verdadeiro, mas " + result2473 + " <c1.hasListener(l1)> é falso")
chamada antiga: assertFalse(c2.hasListener(l1))
nova chamada: assertFalse(c2.hasListener(l1), "Era esperado falso, mas " + result2474 + " <c2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2475 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2476 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2477 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2478 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2479 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2480 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2481 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2482 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2483 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2484 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2485 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2486 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2487 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2488 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2489 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2490 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2491 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2492 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2493 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2494 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2495 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2496 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2497 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2498 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2499 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2500 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2501 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2502 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2503 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2504 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2505 + " <s1.equals(s2)> é falso")
chamada antiga: assertFalse(s1.equals(s2))
nova chamada: assertFalse(s1.equals(s2), "Era esperado falso, mas " + result2506 + " <s1.equals(s2)> é verdadeiro ")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2507 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2508 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2509 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result2510 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(s1.hasListener(l1))
nova chamada: assertTrue(s1.hasListener(l1), "Era esperado verdadeiro, mas " + result2511 + " <s1.hasListener(l1)> é falso")
chamada antiga: assertFalse(s2.hasListener(l1))
nova chamada: assertFalse(s2.hasListener(l1), "Era esperado falso, mas " + result2512 + " <s2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertEquals(s1, s2)
nova chamada: assertEquals(s1, s2, "Era esperado valores iguais, mas  s1 é diferente de " + " s2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2513 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2514 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2515 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2516 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2517 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2518 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2519 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2520 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2521 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2522 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2523 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.hasListener(l1))
nova chamada: assertTrue(r1.hasListener(l1), "Era esperado verdadeiro, mas " + result2524 + " <r1.hasListener(l1)> é falso")
chamada antiga: assertFalse(r2.hasListener(l1))
nova chamada: assertFalse(r2.hasListener(l1), "Era esperado falso, mas " + result2525 + " <r2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2526 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2527 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2528 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2529 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2530 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2531 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2532 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2533 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2534 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2535 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2536 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2537 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2538 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2539 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2540 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2541 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2542 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2543 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2544 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2545 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2546 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2547 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2548 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2549 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2550 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2551 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2552 + " <i1.equals(i2)> é falso")
chamada antiga: assertFalse(i1.equals(i2))
nova chamada: assertFalse(i1.equals(i2), "Era esperado falso, mas " + result2553 + " <i1.equals(i2)> é verdadeiro ")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2554 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2555 + " <i1.equals(i2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(i1 != i2)
nova chamada: assertTrue(i1 != i2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(i1.getClass() == i2.getClass())
nova chamada: assertTrue(i1.getClass() == i2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(i1.equals(i2))
nova chamada: assertTrue(i1.equals(i2), "Era esperado verdadeiro, mas " + result2556 + " <i1.equals(i2)> é falso")
chamada antiga: assertTrue(i1.hasListener(l1))
nova chamada: assertTrue(i1.hasListener(l1), "Era esperado verdadeiro, mas " + result2557 + " <i1.hasListener(l1)> é falso")
chamada antiga: assertFalse(i2.hasListener(l1))
nova chamada: assertFalse(i2.hasListener(l1), "Era esperado falso, mas " + result2558 + " <i2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(i1, i2)
nova chamada: assertEquals(i1, i2, "Era esperado valores iguais, mas  i1 é diferente de " + " i2")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2559 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2560 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2561 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2562 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2563 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2564 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2565 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2566 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2567 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2568 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2569 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2570 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2571 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2572 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2573 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result2574 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2575 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2576 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(f1 != f2)
nova chamada: assertTrue(f1 != f2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.getClass() == f2.getClass())
nova chamada: assertTrue(f1.getClass() == f2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result2577 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f1.hasListener(l1))
nova chamada: assertTrue(f1.hasListener(l1), "Era esperado verdadeiro, mas " + result2578 + " <f1.hasListener(l1)> é falso")
chamada antiga: assertFalse(f2.hasListener(l1))
nova chamada: assertFalse(f2.hasListener(l1), "Era esperado falso, mas " + result2579 + " <f2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2580 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2581 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2582 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2583 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2584 + " <b1.equals(b2)> é falso")
chamada antiga: assertFalse(b1.equals(b2))
nova chamada: assertFalse(b1.equals(b2), "Era esperado falso, mas " + result2585 + " <b1.equals(b2)> é verdadeiro ")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2586 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2587 + " <b1.equals(b2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2588 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1 != b2)
nova chamada: assertTrue(b1 != b2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.getClass() == b2.getClass())
nova chamada: assertTrue(b1.getClass() == b2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(b1.equals(b2))
nova chamada: assertTrue(b1.equals(b2), "Era esperado verdadeiro, mas " + result2589 + " <b1.equals(b2)> é falso")
chamada antiga: assertTrue(b1.hasListener(l1))
nova chamada: assertTrue(b1.hasListener(l1), "Era esperado verdadeiro, mas " + result2590 + " <b1.hasListener(l1)> é falso")
chamada antiga: assertFalse(b2.hasListener(l1))
nova chamada: assertFalse(b2.hasListener(l1), "Era esperado falso, mas " + result2591 + " <b2.hasListener(l1)> é verdadeiro ")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertEquals(b1, b2)
nova chamada: assertEquals(b1, b2, "Era esperado valores iguais, mas  b1 é diferente de " + " b2")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2592 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2593 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2594 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2595 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2596 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2597 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2598 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2599 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2600 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2601 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2602 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2603 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2604 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2605 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(plots.get(0) == plot1)
nova chamada: assertTrue(plots.get(0) == plot1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, plots.size())
nova chamada: assertEquals(1, plots.size(), "Era esperado valores iguais, mas  1 é diferente de " + result2606 + " <plots.size()>")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2607 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot1 != plot2)
nova chamada: assertTrue(plot1 != plot2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.getClass() == plot2.getClass())
nova chamada: assertTrue(plot1.getClass() == plot2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2608 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(plot1, plot2)
nova chamada: assertEquals(plot1, plot2, "Era esperado valores iguais, mas  plot1 é diferente de " + " plot2")
chamada antiga: assertEquals(1, this.events.size())
nova chamada: assertEquals(1, this.events.size(), "Era esperado valores iguais, mas  1 é diferente de " + result2609 + " <this.events.size()>")
chamada antiga: assertTrue(this.events.isEmpty())
nova chamada: assertTrue(this.events.isEmpty(), "Era esperado verdadeiro, mas " + result2610 + " <this.events.isEmpty()> é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2611 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result2612 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2613 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2614 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2615 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2616 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2617 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2618 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2619 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2620 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2621 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2622 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2623 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2624 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2625 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2626 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2627 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2628 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2629 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2630 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2631 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2632 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2633 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2634 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2635 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(Color.GRAY, m.getPaint())
nova chamada: assertEquals(Color.GRAY, m.getPaint(), "Era esperado valores iguais, mas  Color.GRAY é diferente de " + result2636 + " <m.getPaint()>")
chamada antiga: assertEquals(Color.BLUE, m.getPaint())
nova chamada: assertEquals(Color.BLUE, m.getPaint(), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result2637 + " <m.getPaint()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2638 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(new BasicStroke(0.5f), m.getStroke())
nova chamada: assertEquals(new BasicStroke(0.5f), m.getStroke(), "Era esperado valores iguais, mas  new BasicStroke(0.5f) é diferente de " + result2639 + " <m.getStroke()>")
chamada antiga: assertEquals(new BasicStroke(1.1f), m.getStroke())
nova chamada: assertEquals(new BasicStroke(1.1f), m.getStroke(), "Era esperado valores iguais, mas  new BasicStroke(1.1f) é diferente de " + result2640 + " <m.getStroke()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2641 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(Color.GRAY, m.getOutlinePaint())
nova chamada: assertEquals(Color.GRAY, m.getOutlinePaint(), "Era esperado valores iguais, mas  Color.GRAY é diferente de " + result2642 + " <m.getOutlinePaint()>")
chamada antiga: assertEquals(Color.YELLOW, m.getOutlinePaint())
nova chamada: assertEquals(Color.YELLOW, m.getOutlinePaint(), "Era esperado valores iguais, mas  Color.YELLOW é diferente de " + result2643 + " <m.getOutlinePaint()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2644 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(null, m.getOutlinePaint())
nova chamada: assertEquals(null, m.getOutlinePaint(), "Era esperado valores iguais, mas  null é diferente de " + result2645 + " <m.getOutlinePaint()>")
chamada antiga: assertEquals(new BasicStroke(0.5f), m.getOutlineStroke())
nova chamada: assertEquals(new BasicStroke(0.5f), m.getOutlineStroke(), "Era esperado valores iguais, mas  new BasicStroke(0.5f) é diferente de " + result2646 + " <m.getOutlineStroke()>")
chamada antiga: assertEquals(new BasicStroke(1.1f), m.getOutlineStroke())
nova chamada: assertEquals(new BasicStroke(1.1f), m.getOutlineStroke(), "Era esperado valores iguais, mas  new BasicStroke(1.1f) é diferente de " + result2647 + " <m.getOutlineStroke()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2648 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(null, m.getOutlineStroke())
nova chamada: assertEquals(null, m.getOutlineStroke(), "Era esperado valores iguais, mas  null é diferente de " + result2649 + " <m.getOutlineStroke()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2650 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(null, m.getLabel())
nova chamada: assertEquals(null, m.getLabel(), "Era esperado valores iguais, mas  null é diferente de " + result2651 + " <m.getLabel()>")
chamada antiga: assertEquals("XYZ", m.getLabel())
nova chamada: assertEquals("XYZ", m.getLabel(), "Era esperado valores iguais, mas  'XYZ' é diferente de " + result2652 + " <m.getLabel()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2653 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(null, m.getLabel())
nova chamada: assertEquals(null, m.getLabel(), "Era esperado valores iguais, mas  null é diferente de " + result2654 + " <m.getLabel()>")
chamada antiga: assertEquals(new Font("SansSerif", Font.PLAIN, 9), m.getLabelFont())
nova chamada: assertEquals(new Font("SansSerif", Font.PLAIN, 9), m.getLabelFont(), "Era esperado valores iguais, mas  new Font('SansSerif', Font.PLAIN, 9) é diferente de " + result2655 + " <m.getLabelFont()>")
chamada antiga: assertEquals(new Font("SansSerif", Font.BOLD, 10), m.getLabelFont())
nova chamada: assertEquals(new Font("SansSerif", Font.BOLD, 10), m.getLabelFont(), "Era esperado valores iguais, mas  new Font('SansSerif', Font.BOLD, 10) é diferente de " + result2656 + " <m.getLabelFont()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2657 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(Color.BLACK, m.getLabelPaint())
nova chamada: assertEquals(Color.BLACK, m.getLabelPaint(), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result2658 + " <m.getLabelPaint()>")
chamada antiga: assertEquals(Color.RED, m.getLabelPaint())
nova chamada: assertEquals(Color.RED, m.getLabelPaint(), "Era esperado valores iguais, mas  Color.RED é diferente de " + result2659 + " <m.getLabelPaint()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2660 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(RectangleAnchor.TOP_LEFT, m.getLabelAnchor())
nova chamada: assertEquals(RectangleAnchor.TOP_LEFT, m.getLabelAnchor(), "Era esperado valores iguais, mas  RectangleAnchor.TOP_LEFT é diferente de " + result2661 + " <m.getLabelAnchor()>")
chamada antiga: assertEquals(RectangleAnchor.TOP, m.getLabelAnchor())
nova chamada: assertEquals(RectangleAnchor.TOP, m.getLabelAnchor(), "Era esperado valores iguais, mas  RectangleAnchor.TOP é diferente de " + result2662 + " <m.getLabelAnchor()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2663 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(new RectangleInsets(3, 3, 3, 3), m.getLabelOffset())
nova chamada: assertEquals(new RectangleInsets(3, 3, 3, 3), m.getLabelOffset(), "Era esperado valores iguais, mas  new RectangleInsets(3, 3, 3, 3) é diferente de " + result2664 + " <m.getLabelOffset()>")
chamada antiga: assertEquals(new RectangleInsets(1, 2, 3, 4), m.getLabelOffset())
nova chamada: assertEquals(new RectangleInsets(1, 2, 3, 4), m.getLabelOffset(), "Era esperado valores iguais, mas  new RectangleInsets(1, 2, 3, 4) é diferente de " + result2665 + " <m.getLabelOffset()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2666 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(LengthAdjustmentType.CONTRACT, m.getLabelOffsetType())
nova chamada: assertEquals(LengthAdjustmentType.CONTRACT, m.getLabelOffsetType(), "Era esperado valores iguais, mas  LengthAdjustmentType.CONTRACT é diferente de " + result2667 + " <m.getLabelOffsetType()>")
chamada antiga: assertEquals(LengthAdjustmentType.EXPAND, m.getLabelOffsetType())
nova chamada: assertEquals(LengthAdjustmentType.EXPAND, m.getLabelOffsetType(), "Era esperado valores iguais, mas  LengthAdjustmentType.EXPAND é diferente de " + result2668 + " <m.getLabelOffsetType()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2669 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(TextAnchor.CENTER, m.getLabelTextAnchor())
nova chamada: assertEquals(TextAnchor.CENTER, m.getLabelTextAnchor(), "Era esperado valores iguais, mas  TextAnchor.CENTER é diferente de " + result2670 + " <m.getLabelTextAnchor()>")
chamada antiga: assertEquals(TextAnchor.BASELINE_LEFT, m.getLabelTextAnchor())
nova chamada: assertEquals(TextAnchor.BASELINE_LEFT, m.getLabelTextAnchor(), "Era esperado valores iguais, mas  TextAnchor.BASELINE_LEFT é diferente de " + result2671 + " <m.getLabelTextAnchor()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2672 + " <this.lastEvent.getMarker()>")
chamada antiga: assertTrue(Arrays.asList(listeners1).contains(plot))
nova chamada: assertTrue(Arrays.asList(listeners1).contains(plot), "Era esperado verdadeiro, mas " + result2673 + " <Arrays.asList(listeners1).contains(plot)> é falso")
chamada antiga: assertTrue(Arrays.asList(listeners2).contains(plot))
nova chamada: assertTrue(Arrays.asList(listeners2).contains(plot), "Era esperado verdadeiro, mas " + result2674 + " <Arrays.asList(listeners2).contains(plot)> é falso")
chamada antiga: assertFalse(Arrays.asList(listeners1).contains(plot))
nova chamada: assertFalse(Arrays.asList(listeners1).contains(plot), "Era esperado falso, mas " + result2675 + " <Arrays.asList(listeners1).contains(plot)> é verdadeiro ")
chamada antiga: assertFalse(Arrays.asList(listeners2).contains(plot))
nova chamada: assertFalse(Arrays.asList(listeners2).contains(plot), "Era esperado falso, mas " + result2676 + " <Arrays.asList(listeners2).contains(plot)> é verdadeiro ")
chamada antiga: assertTrue(Arrays.asList(listeners1).contains(plot))
nova chamada: assertTrue(Arrays.asList(listeners1).contains(plot), "Era esperado verdadeiro, mas " + result2677 + " <Arrays.asList(listeners1).contains(plot)> é falso")
chamada antiga: assertTrue(Arrays.asList(listeners2).contains(plot))
nova chamada: assertTrue(Arrays.asList(listeners2).contains(plot), "Era esperado verdadeiro, mas " + result2678 + " <Arrays.asList(listeners2).contains(plot)> é falso")
chamada antiga: assertFalse(Arrays.asList(listeners1).contains(plot))
nova chamada: assertFalse(Arrays.asList(listeners1).contains(plot), "Era esperado falso, mas " + result2679 + " <Arrays.asList(listeners1).contains(plot)> é verdadeiro ")
chamada antiga: assertFalse(Arrays.asList(listeners2).contains(plot))
nova chamada: assertFalse(Arrays.asList(listeners2).contains(plot), "Era esperado falso, mas " + result2680 + " <Arrays.asList(listeners2).contains(plot)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2681 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2682 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2683 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2684 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2685 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2686 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2687 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2688 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2689 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2690 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2691 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2692 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2693 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2694 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2695 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2696 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2697 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2698 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2699 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2700 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2701 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2702 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2703 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2704 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2705 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2706 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2707 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2708 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2709 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2710 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2711 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2712 + " <p2.equals(p1)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2713 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2714 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2715 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2716 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result2717 + " <r2.equals(r1)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2718 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2719 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2720 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2721 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2722 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2723 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2724 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2725 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2726 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2727 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2728 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2729 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2730 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2731 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2732 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2733 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2734 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2735 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2736 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result2737 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2738 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result2739 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2740 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result2741 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2742 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2743 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2744 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2745 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result2746 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2747 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1 != m2)
nova chamada: assertTrue(m1 != m2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.getClass() == m2.getClass())
nova chamada: assertTrue(m1.getClass() == m2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result2748 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2749 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result2750 + " <this.lastEvent.getMarker()>")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2751 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result2752 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2753 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2754 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2755 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2756 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2757 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2758 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2759 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2760 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2761 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2762 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2763 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2764 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2765 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2766 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1 instanceof Cloneable)
nova chamada: assertFalse(p1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(b)
nova chamada: assertTrue(b, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2767 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result2768 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertTrue(plots.get(0) == plot1)
nova chamada: assertTrue(plots.get(0) == plot1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1 != plot2)
nova chamada: assertTrue(plot1 != plot2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.getClass() == plot2.getClass())
nova chamada: assertTrue(plot1.getClass() == plot2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2769 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(plot1, plot2)
nova chamada: assertEquals(plot1, plot2, "Era esperado valores iguais, mas  plot1 é diferente de " + " plot2")
chamada antiga: assertEquals(1, this.events.size())
nova chamada: assertEquals(1, this.events.size(), "Era esperado valores iguais, mas  1 é diferente de " + result2770 + " <this.events.size()>")
chamada antiga: assertTrue(this.events.isEmpty())
nova chamada: assertTrue(this.events.isEmpty(), "Era esperado verdadeiro, mas " + result2771 + " <this.events.isEmpty()> é falso")
chamada antiga: assertEquals(0, plot.getDatasetCount())
nova chamada: assertEquals(0, plot.getDatasetCount(), "Era esperado valores iguais, mas  0 é diferente de " + result2772 + " <plot.getDatasetCount()>")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2773 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2774 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2775 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2776 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2777 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2778 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2779 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2780 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2781 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2782 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2783 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2784 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2785 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2786 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2787 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2788 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2789 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2790 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2791 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2792 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2793 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2794 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2795 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2796 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2797 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2798 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2799 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2800 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2801 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2802 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2803 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2804 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2805 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2806 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2807 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2808 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2809 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2810 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2811 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2812 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2813 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2814 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2815 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2816 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2817 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2818 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2819 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2820 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2821 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2822 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2823 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2824 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2825 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2826 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2827 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2828 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2829 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2830 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2831 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2832 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2833 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2834 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2835 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2836 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2837 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2838 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2839 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2840 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2841 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2842 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2843 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2844 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2845 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2846 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2847 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2848 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2849 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2850 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2851 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2852 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2853 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2854 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2855 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2856 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2857 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2858 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2859 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2860 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2861 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2862 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2863 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2864 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2865 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2866 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2867 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2868 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2869 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2870 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2871 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2872 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2873 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2874 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2875 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2876 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2877 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2878 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2879 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2880 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(r2.hasListener(p2))
nova chamada: assertTrue(r2.hasListener(p2), "Era esperado verdadeiro, mas " + result2881 + " <r2.hasListener(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2882 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.getQuadrantOrigin() != p)
nova chamada: assertTrue(p2.getQuadrantOrigin() != p, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2883 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2884 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2885 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2886 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(r2.getPlot() == p2)
nova chamada: assertTrue(r2.getPlot() == p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2887 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2888 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2889 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2890 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2891 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2892 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2893 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2894 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2895 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2896 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2897 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2898 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2899 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2900 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2901 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result2902 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result2903 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(!failed)
nova chamada: assertTrue(!failed, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(chart, chart2)
nova chamada: assertEquals(chart, chart2, "Era esperado valores iguais, mas  chart é diferente de " + " chart2")
chamada antiga: assertEquals(chart, chart2)
nova chamada: assertEquals(chart, chart2, "Era esperado valores iguais, mas  chart é diferente de " + " chart2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(datasetA.hasListener(p2))
nova chamada: assertTrue(datasetA.hasListener(p2), "Era esperado verdadeiro, mas " + result2904 + " <datasetA.hasListener(p2)> é falso")
chamada antiga: assertTrue(domainAxisA.hasListener(p2))
nova chamada: assertTrue(domainAxisA.hasListener(p2), "Era esperado verdadeiro, mas " + result2905 + " <domainAxisA.hasListener(p2)> é falso")
chamada antiga: assertTrue(rangeAxisA.hasListener(p2))
nova chamada: assertTrue(rangeAxisA.hasListener(p2), "Era esperado verdadeiro, mas " + result2906 + " <rangeAxisA.hasListener(p2)> é falso")
chamada antiga: assertTrue(rendererA.hasListener(p2))
nova chamada: assertTrue(rendererA.hasListener(p2), "Era esperado verdadeiro, mas " + result2907 + " <rendererA.hasListener(p2)> é falso")
chamada antiga: assertTrue(datasetB.hasListener(p2))
nova chamada: assertTrue(datasetB.hasListener(p2), "Era esperado verdadeiro, mas " + result2908 + " <datasetB.hasListener(p2)> é falso")
chamada antiga: assertTrue(domainAxisB.hasListener(p2))
nova chamada: assertTrue(domainAxisB.hasListener(p2), "Era esperado verdadeiro, mas " + result2909 + " <domainAxisB.hasListener(p2)> é falso")
chamada antiga: assertTrue(rangeAxisB.hasListener(p2))
nova chamada: assertTrue(rangeAxisB.hasListener(p2), "Era esperado verdadeiro, mas " + result2910 + " <rangeAxisB.hasListener(p2)> é falso")
chamada antiga: assertTrue(rendererB.hasListener(p2))
nova chamada: assertTrue(rendererB.hasListener(p2), "Era esperado verdadeiro, mas " + result2911 + " <rendererB.hasListener(p2)> é falso")
chamada antiga: assertEquals(r0, plot.getRendererForDataset(d0))
nova chamada: assertEquals(r0, plot.getRendererForDataset(d0), "Era esperado valores iguais, mas  r0 é diferente de " + result2912 + " <plot.getRendererForDataset(d0)>")
chamada antiga: assertEquals(r0, plot.getRendererForDataset(d1))
nova chamada: assertEquals(r0, plot.getRendererForDataset(d1), "Era esperado valores iguais, mas  r0 é diferente de " + result2913 + " <plot.getRendererForDataset(d1)>")
chamada antiga: assertEquals(r2, plot.getRendererForDataset(d2))
nova chamada: assertEquals(r2, plot.getRendererForDataset(d2), "Era esperado valores iguais, mas  r2 é diferente de " + result2914 + " <plot.getRendererForDataset(d2)>")
chamada antiga: assertEquals(null, plot.getRendererForDataset(d3))
nova chamada: assertEquals(null, plot.getRendererForDataset(d3), "Era esperado valores iguais, mas  null é diferente de " + result2915 + " <plot.getRendererForDataset(d3)>")
chamada antiga: assertEquals(null, plot.getRendererForDataset(null))
nova chamada: assertEquals(null, plot.getRendererForDataset(null), "Era esperado valores iguais, mas  null é diferente de " + result2916 + " <plot.getRendererForDataset(null)>")
chamada antiga: assertEquals(2, items.getItemCount())
nova chamada: assertEquals(2, items.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2917 + " <items.getItemCount()>")
chamada antiga: assertTrue(listener.getEvent() != null)
nova chamada: assertTrue(listener.getEvent() != null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(x, a1)
nova chamada: assertEquals(x, a1, "Era esperado valores iguais, mas  x é diferente de " + " a1")
chamada antiga: assertTrue(a1.equals(a3))
nova chamada: assertTrue(a1.equals(a3), "Era esperado verdadeiro, mas " + result2918 + " <a1.equals(a3)> é falso")
chamada antiga: assertEquals(x, a3)
nova chamada: assertEquals(x, a3, "Era esperado valores iguais, mas  x é diferente de " + " a3")
chamada antiga: assertTrue(listeners.contains(plot))
nova chamada: assertTrue(listeners.contains(plot), "Era esperado verdadeiro, mas " + result2919 + " <listeners.contains(plot)> é falso")
chamada antiga: assertFalse(listeners.contains(plot))
nova chamada: assertFalse(listeners.contains(plot), "Era esperado falso, mas " + result2920 + " <listeners.contains(plot)> é verdadeiro ")
chamada antiga: assertTrue(listeners.contains(plot))
nova chamada: assertTrue(listeners.contains(plot), "Era esperado verdadeiro, mas " + result2921 + " <listeners.contains(plot)> é falso")
chamada antiga: assertFalse(listeners.contains(plot))
nova chamada: assertFalse(listeners.contains(plot), "Era esperado falso, mas " + result2922 + " <listeners.contains(plot)> é verdadeiro ")
chamada antiga: assertFalse(plot.removeDomainMarker(new ValueMarker(0.5)))
nova chamada: assertFalse(plot.removeDomainMarker(new ValueMarker(0.5)), "Era esperado falso, mas " + result2923 + " <plot.removeDomainMarker(new ValueMarker(0.5))> é verdadeiro ")
chamada antiga: assertFalse(plot.removeRangeMarker(new ValueMarker(0.5)))
nova chamada: assertFalse(plot.removeRangeMarker(new ValueMarker(0.5)), "Era esperado falso, mas " + result2924 + " <plot.removeRangeMarker(new ValueMarker(0.5))> é verdadeiro ")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result2925 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result2926 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis2, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result2927 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result2928 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis2, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result2929 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result2930 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result2931 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis2, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result2932 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result2933 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis2, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result2934 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(dataset, plot.getDataset(0))
nova chamada: assertEquals(dataset, plot.getDataset(0), "Era esperado valores iguais, mas  dataset é diferente de " + result2935 + " <plot.getDataset(0)>")
chamada antiga: assertEquals(2, plot.getDatasetCount())
nova chamada: assertEquals(2, plot.getDatasetCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2936 + " <plot.getDatasetCount()>")
chamada antiga: assertEquals(dataset2, plot.getDataset(99))
nova chamada: assertEquals(dataset2, plot.getDataset(99), "Era esperado valores iguais, mas  dataset2 é diferente de " + result2937 + " <plot.getDataset(99)>")
chamada antiga: assertEquals(0, plot.indexOf(dataset))
nova chamada: assertEquals(0, plot.indexOf(dataset), "Era esperado valores iguais, mas  0 é diferente de " + result2938 + " <plot.indexOf(dataset)>")
chamada antiga: assertEquals(99, plot.indexOf(dataset2))
nova chamada: assertEquals(99, plot.indexOf(dataset2), "Era esperado valores iguais, mas  99 é diferente de " + result2939 + " <plot.indexOf(dataset2)>")
chamada antiga: assertEquals(xAxis, plot.getDomainAxis(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxis(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result2940 + " <plot.getDomainAxis(0)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxis(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxis(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result2941 + " <plot.getRangeAxis(0)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxis(99))
nova chamada: assertEquals(xAxis2, plot.getDomainAxis(99), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result2942 + " <plot.getDomainAxis(99)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxis(99))
nova chamada: assertEquals(yAxis2, plot.getRangeAxis(99), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result2943 + " <plot.getRangeAxis(99)>")
chamada antiga: assertEquals(AxisLocation.BOTTOM_OR_RIGHT, plot.getDomainAxisLocation(99))
nova chamada: assertEquals(AxisLocation.BOTTOM_OR_RIGHT, plot.getDomainAxisLocation(99), "Era esperado valores iguais, mas  AxisLocation.BOTTOM_OR_RIGHT é diferente de " + result2944 + " <plot.getDomainAxisLocation(99)>")
chamada antiga: assertEquals(AxisLocation.BOTTOM_OR_LEFT, plot.getRangeAxisLocation(99))
nova chamada: assertEquals(AxisLocation.BOTTOM_OR_LEFT, plot.getRangeAxisLocation(99), "Era esperado valores iguais, mas  AxisLocation.BOTTOM_OR_LEFT é diferente de " + result2945 + " <plot.getRangeAxisLocation(99)>")
chamada antiga: assertEquals(renderer, plot.getRenderer(0))
nova chamada: assertEquals(renderer, plot.getRenderer(0), "Era esperado valores iguais, mas  renderer é diferente de " + result2946 + " <plot.getRenderer(0)>")
chamada antiga: assertEquals(2, plot.getRendererCount())
nova chamada: assertEquals(2, plot.getRendererCount(), "Era esperado valores iguais, mas  2 é diferente de " + result2947 + " <plot.getRendererCount()>")
chamada antiga: assertEquals(renderer2, plot.getRenderer(20))
nova chamada: assertEquals(renderer2, plot.getRenderer(20), "Era esperado valores iguais, mas  renderer2 é diferente de " + result2948 + " <plot.getRenderer(20)>")
chamada antiga: assertEquals(20, plot.getIndexOf(renderer2))
nova chamada: assertEquals(20, plot.getIndexOf(renderer2), "Era esperado valores iguais, mas  20 é diferente de " + result2949 + " <plot.getIndexOf(renderer2)>")
chamada antiga: assertEquals(renderer, plot.getRendererForDataset(dataset2))
nova chamada: assertEquals(renderer, plot.getRendererForDataset(dataset2), "Era esperado valores iguais, mas  renderer é diferente de " + result2950 + " <plot.getRendererForDataset(dataset2)>")
chamada antiga: assertEquals(renderer2, plot.getRendererForDataset(dataset2))
nova chamada: assertEquals(renderer2, plot.getRendererForDataset(dataset2), "Era esperado valores iguais, mas  renderer2 é diferente de " + result2951 + " <plot.getRendererForDataset(dataset2)>")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(99))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(99), "Era esperado valores iguais, mas  xAxis é diferente de " + result2952 + " <plot.getDomainAxisForDataset(99)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxisForDataset(99))
nova chamada: assertEquals(xAxis2, plot.getDomainAxisForDataset(99), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result2953 + " <plot.getDomainAxisForDataset(99)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(99))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(99), "Era esperado valores iguais, mas  yAxis é diferente de " + result2954 + " <plot.getRangeAxisForDataset(99)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxisForDataset(99))
nova chamada: assertEquals(yAxis2, plot.getRangeAxisForDataset(99), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result2955 + " <plot.getRangeAxisForDataset(99)>")
chamada antiga: assertTrue(plot.getDomainMarkers(99, Layer.FOREGROUND).contains(xMarker1))
nova chamada: assertTrue(plot.getDomainMarkers(99, Layer.FOREGROUND).contains(xMarker1), "Era esperado verdadeiro, mas " + result2956 + " <plot.getDomainMarkers(99, Layer.FOREGROUND).contains(xMarker1)> é falso")
chamada antiga: assertTrue(plot.getRangeMarkers(99, Layer.FOREGROUND).contains(yMarker1))
nova chamada: assertTrue(plot.getRangeMarkers(99, Layer.FOREGROUND).contains(yMarker1), "Era esperado verdadeiro, mas " + result2957 + " <plot.getRangeMarkers(99, Layer.FOREGROUND).contains(yMarker1)> é falso")
chamada antiga: assertEquals(null, plot.getDataRange(xAxis))
nova chamada: assertEquals(null, plot.getDataRange(xAxis), "Era esperado valores iguais, mas  null é diferente de " + result2958 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(null, plot.getDataRange(yAxis))
nova chamada: assertEquals(null, plot.getDataRange(yAxis), "Era esperado valores iguais, mas  null é diferente de " + result2959 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 1.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 1.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result2960 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 2.0) é diferente de " + result2961 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 5.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 5.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 5.0) é diferente de " + result2962 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 2.0) é diferente de " + result2963 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 6.0) é diferente de " + result2964 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 2.0) é diferente de " + result2965 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(null, plot.getDataRange(xAxis))
nova chamada: assertEquals(null, plot.getDataRange(xAxis), "Era esperado valores iguais, mas  null é diferente de " + result2966 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(null, plot.getDataRange(yAxis))
nova chamada: assertEquals(null, plot.getDataRange(yAxis), "Era esperado valores iguais, mas  null é diferente de " + result2967 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 1.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 1.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result2968 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 2.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 2.0) é diferente de " + result2969 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 5.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 5.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 5.0) é diferente de " + result2970 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 10.0) é diferente de " + result2971 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 6.0) é diferente de " + result2972 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 10.0) é diferente de " + result2973 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis))
nova chamada: assertEquals(new Range(1.0, 6.0), plot.getDataRange(xAxis), "Era esperado valores iguais, mas  new Range(1.0, 6.0) é diferente de " + result2974 + " <plot.getDataRange(xAxis)>")
chamada antiga: assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis))
nova chamada: assertEquals(new Range(2.0, 10.0), plot.getDataRange(yAxis), "Era esperado valores iguais, mas  new Range(2.0, 10.0) é diferente de " + result2975 + " <plot.getDataRange(yAxis)>")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2976 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot1 != plot2)
nova chamada: assertTrue(plot1 != plot2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.getClass() == plot2.getClass())
nova chamada: assertTrue(plot1.getClass() == plot2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2977 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(plot1, plot2)
nova chamada: assertEquals(plot1, plot2, "Era esperado valores iguais, mas  plot1 é diferente de " + " plot2")
chamada antiga: assertEquals(2, plots.size())
nova chamada: assertEquals(2, plots.size(), "Era esperado valores iguais, mas  2 é diferente de " + result2978 + " <plots.size()>")
chamada antiga: assertEquals(1, this.events.size())
nova chamada: assertEquals(1, this.events.size(), "Era esperado valores iguais, mas  1 é diferente de " + result2979 + " <this.events.size()>")
chamada antiga: assertTrue(this.events.isEmpty())
nova chamada: assertTrue(this.events.isEmpty(), "Era esperado verdadeiro, mas " + result2980 + " <this.events.isEmpty()> é falso")
chamada antiga: assertEquals(null, plot.getDomainAxis())
nova chamada: assertEquals(null, plot.getDomainAxis(), "Era esperado valores iguais, mas  null é diferente de " + result2981 + " <plot.getDomainAxis()>")
chamada antiga: assertTrue(plots.get(0) == plot1)
nova chamada: assertTrue(plots.get(0) == plot1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2982 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result2983 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertTrue(plot1 != plot2)
nova chamada: assertTrue(plot1 != plot2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.getClass() == plot2.getClass())
nova chamada: assertTrue(plot1.getClass() == plot2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2984 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(plot1, plot2)
nova chamada: assertEquals(plot1, plot2, "Era esperado valores iguais, mas  plot1 é diferente de " + " plot2")
chamada antiga: assertEquals(1, this.events.size())
nova chamada: assertEquals(1, this.events.size(), "Era esperado valores iguais, mas  1 é diferente de " + result2985 + " <this.events.size()>")
chamada antiga: assertTrue(this.events.isEmpty())
nova chamada: assertTrue(this.events.isEmpty(), "Era esperado verdadeiro, mas " + result2986 + " <this.events.isEmpty()> é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2987 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2988 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2989 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2990 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2991 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2992 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2993 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2994 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2995 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2996 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2997 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result2998 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result2999 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3000 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3001 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3002 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3003 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3004 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3005 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3006 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3007 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3008 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3009 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3010 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3011 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3012 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3013 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3014 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3015 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3016 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3017 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3018 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3019 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3020 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3021 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3022 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3023 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3024 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.getDataset() == p2.getDataset())
nova chamada: assertTrue(p1.getDataset() == p2.getDataset(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3025 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3026 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3027 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3028 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(c1.equals(c1))
nova chamada: assertTrue(c1.equals(c1), "Era esperado verdadeiro, mas " + result3029 + " <c1.equals(c1)> é falso")
chamada antiga: assertTrue(c2.equals(c1))
nova chamada: assertTrue(c2.equals(c1), "Era esperado verdadeiro, mas " + result3030 + " <c2.equals(c1)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3031 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3032 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3033 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3034 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3035 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3036 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3037 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3038 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3039 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3040 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3041 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3042 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3043 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3044 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3045 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3046 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3047 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3048 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3049 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3050 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3051 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3052 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3053 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3054 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3055 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3056 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3057 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3058 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result3059 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3060 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3061 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1.hashCode() == c2.hashCode())
nova chamada: assertTrue(c1.hashCode() == c2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result3062 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 instanceof PublicCloneable)
nova chamada: assertTrue(c1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3063 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result3064 + " <p2.equals(p1)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3065 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3066 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3067 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3068 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3069 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3070 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3071 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3072 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3073 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3074 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3075 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3076 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3077 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3078 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3079 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3080 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3081 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3082 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p1))
nova chamada: assertTrue(p1.equals(p1), "Era esperado verdadeiro, mas " + result3083 + " <p1.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3084 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3085 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3086 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3087 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3088 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3089 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3090 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3091 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3092 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result3093 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3094 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3095 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3096 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3097 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3098 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3099 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3100 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3101 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3102 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3103 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3104 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3105 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3106 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3107 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3108 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3109 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3110 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3111 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3112 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3113 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3114 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3115 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3116 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3117 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3118 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3119 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3120 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3121 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3122 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3123 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3124 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3125 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3126 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3127 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3128 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3129 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3130 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3131 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3132 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3133 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3134 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3135 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3136 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3137 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3138 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3139 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3140 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3141 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3142 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3143 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3144 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3145 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3146 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3147 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3148 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3149 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3150 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3151 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3152 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3153 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3154 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3155 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3156 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3157 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3158 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3159 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3160 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3161 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3162 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3163 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3164 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3165 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3166 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3167 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3168 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3169 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3170 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3171 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3172 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3173 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3174 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3175 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3176 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3177 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3178 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3179 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3180 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3181 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3182 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3183 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3184 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3185 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3186 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3187 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.getURLGenerator() != p2.getURLGenerator())
nova chamada: assertTrue(p1.getURLGenerator() != p2.getURLGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3188 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3189 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3190 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3191 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3192 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3193 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3194 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.getLegendLabelURLGenerator() != p2.getLegendLabelURLGenerator())
nova chamada: assertTrue(p1.getLegendLabelURLGenerator() != p2.getLegendLabelURLGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(4, items.getItemCount())
nova chamada: assertEquals(4, items.getItemCount(), "Era esperado valores iguais, mas  4 é diferente de " + result3195 + " <items.getItemCount()>")
chamada antiga: assertEquals(3, items.getItemCount())
nova chamada: assertEquals(3, items.getItemCount(), "Era esperado valores iguais, mas  3 é diferente de " + result3196 + " <items.getItemCount()>")
chamada antiga: assertEquals(2, items.getItemCount())
nova chamada: assertEquals(2, items.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result3197 + " <items.getItemCount()>")
chamada antiga: assertEquals(2, items.getItemCount())
nova chamada: assertEquals(2, items.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result3198 + " <items.getItemCount()>")
chamada antiga: assertNotNull(plot.getDefaultSectionPaint())
nova chamada: assertNotNull(plot.getDefaultSectionPaint(), "Era esperado não nulo, mas " + result3199 + " <plot.getDefaultSectionPaint()> é nulo")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(Color.RED, plot1.getSectionPaint("A"))
nova chamada: assertEquals(Color.RED, plot1.getSectionPaint("A"), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3200 + " <plot1.getSectionPaint('A')>")
chamada antiga: assertEquals(Color.GREEN, plot1.getSectionPaint("B"))
nova chamada: assertEquals(Color.GREEN, plot1.getSectionPaint("B"), "Era esperado valores iguais, mas  Color.GREEN é diferente de " + result3201 + " <plot1.getSectionPaint('B')>")
chamada antiga: assertEquals(Color.BLUE, plot2.getSectionPaint("A"))
nova chamada: assertEquals(Color.BLUE, plot2.getSectionPaint("A"), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result3202 + " <plot2.getSectionPaint('A')>")
chamada antiga: assertEquals(Color.YELLOW, plot2.getSectionPaint("B"))
nova chamada: assertEquals(Color.YELLOW, plot2.getSectionPaint("B"), "Era esperado valores iguais, mas  Color.YELLOW é diferente de " + result3203 + " <plot2.getSectionPaint('B')>")
chamada antiga: assertEquals(Color.RED, plot1.getSectionOutlinePaint("A"))
nova chamada: assertEquals(Color.RED, plot1.getSectionOutlinePaint("A"), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3204 + " <plot1.getSectionOutlinePaint('A')>")
chamada antiga: assertEquals(Color.GREEN, plot1.getSectionOutlinePaint("B"))
nova chamada: assertEquals(Color.GREEN, plot1.getSectionOutlinePaint("B"), "Era esperado valores iguais, mas  Color.GREEN é diferente de " + result3205 + " <plot1.getSectionOutlinePaint('B')>")
chamada antiga: assertEquals(Color.BLUE, plot2.getSectionOutlinePaint("A"))
nova chamada: assertEquals(Color.BLUE, plot2.getSectionOutlinePaint("A"), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result3206 + " <plot2.getSectionOutlinePaint('A')>")
chamada antiga: assertEquals(Color.YELLOW, plot2.getSectionOutlinePaint("B"))
nova chamada: assertEquals(Color.YELLOW, plot2.getSectionOutlinePaint("B"), "Era esperado valores iguais, mas  Color.YELLOW é diferente de " + result3207 + " <plot2.getSectionOutlinePaint('B')>")
chamada antiga: assertEquals(new BasicStroke(5.0f), plot1.getSectionOutlineStroke("A"))
nova chamada: assertEquals(new BasicStroke(5.0f), plot1.getSectionOutlineStroke("A"), "Era esperado valores iguais, mas  new BasicStroke(5.0f) é diferente de " + result3208 + " <plot1.getSectionOutlineStroke('A')>")
chamada antiga: assertEquals(new BasicStroke(6.0f), plot1.getSectionOutlineStroke("B"))
nova chamada: assertEquals(new BasicStroke(6.0f), plot1.getSectionOutlineStroke("B"), "Era esperado valores iguais, mas  new BasicStroke(6.0f) é diferente de " + result3209 + " <plot1.getSectionOutlineStroke('B')>")
chamada antiga: assertEquals(new BasicStroke(7.0f), plot2.getSectionOutlineStroke("A"))
nova chamada: assertEquals(new BasicStroke(7.0f), plot2.getSectionOutlineStroke("A"), "Era esperado valores iguais, mas  new BasicStroke(7.0f) é diferente de " + result3210 + " <plot2.getSectionOutlineStroke('A')>")
chamada antiga: assertEquals(new BasicStroke(8.0f), plot2.getSectionOutlineStroke("B"))
nova chamada: assertEquals(new BasicStroke(8.0f), plot2.getSectionOutlineStroke("B"), "Era esperado valores iguais, mas  new BasicStroke(8.0f) é diferente de " + result3211 + " <plot2.getSectionOutlineStroke('B')>")
chamada antiga: assertNotEquals(plot1, plot2)
nova chamada: assertNotEquals(plot1, plot2, "Era esperado valores diferentes, mas  plot1 é igual a " + " plot2")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3212 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result3213 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3214 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3215 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3216 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3217 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3218 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3219 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3220 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3221 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3222 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3223 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3224 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3225 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1 != m2)
nova chamada: assertTrue(m1 != m2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.getClass() == m2.getClass())
nova chamada: assertTrue(m1.getClass() == m2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3226 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals("X", m.getKey())
nova chamada: assertEquals("X", m.getKey(), "Era esperado valores iguais, mas  'X' é diferente de " + result3227 + " <m.getKey()>")
chamada antiga: assertEquals("Y", m.getKey())
nova chamada: assertEquals("Y", m.getKey(), "Era esperado valores iguais, mas  'Y' é diferente de " + result3228 + " <m.getKey()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result3229 + " <this.lastEvent.getMarker()>")
chamada antiga: assertEquals(false, m.getDrawAsLine())
nova chamada: assertEquals(false, m.getDrawAsLine(), "Era esperado valores iguais, mas  false é diferente de " + result3230 + " <m.getDrawAsLine()>")
chamada antiga: assertEquals(true, m.getDrawAsLine())
nova chamada: assertEquals(true, m.getDrawAsLine(), "Era esperado valores iguais, mas  true é diferente de " + result3231 + " <m.getDrawAsLine()>")
chamada antiga: assertEquals(m, this.lastEvent.getMarker())
nova chamada: assertEquals(m, this.lastEvent.getMarker(), "Era esperado valores iguais, mas  m é diferente de " + result3232 + " <this.lastEvent.getMarker()>")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3233 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m2.equals(m1))
nova chamada: assertTrue(m2.equals(m1), "Era esperado verdadeiro, mas " + result3234 + " <m2.equals(m1)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result3235 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result3236 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1 instanceof Cloneable)
nova chamada: assertFalse(m1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3237 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result3238 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3239 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3240 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3241 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3242 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3243 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3244 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3245 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3246 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3247 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3248 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3249 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3250 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3251 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3252 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3253 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3254 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3255 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3256 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3257 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result3258 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3259 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3260 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3261 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3262 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3263 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3264 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3265 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3266 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3267 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3268 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3269 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3270 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3271 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3272 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result3273 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3274 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3275 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3276 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3277 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3278 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3279 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3280 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3281 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3282 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3283 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3284 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3285 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3286 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3287 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3288 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3289 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3290 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3291 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3292 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3293 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3294 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3295 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3296 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3297 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3298 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3299 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3300 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3301 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3302 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3303 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3304 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3305 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3306 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3307 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3308 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3309 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3310 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3311 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3312 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3313 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3314 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3315 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3316 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3317 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3318 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3319 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3320 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3321 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3322 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3323 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3324 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3325 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3326 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3327 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3328 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3329 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3330 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3331 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3332 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(2, legendItems.getItemCount())
nova chamada: assertEquals(2, legendItems.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result3333 + " <legendItems.getItemCount()>")
chamada antiga: assertEquals("S1", item1.getLabel())
nova chamada: assertEquals("S1", item1.getLabel(), "Era esperado valores iguais, mas  'S1' é diferente de " + result3334 + " <item1.getLabel()>")
chamada antiga: assertEquals("S1", item1.getSeriesKey())
nova chamada: assertEquals("S1", item1.getSeriesKey(), "Era esperado valores iguais, mas  'S1' é diferente de " + result3335 + " <item1.getSeriesKey()>")
chamada antiga: assertEquals(0, item1.getSeriesIndex())
nova chamada: assertEquals(0, item1.getSeriesIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result3336 + " <item1.getSeriesIndex()>")
chamada antiga: assertEquals(dataset, item1.getDataset())
nova chamada: assertEquals(dataset, item1.getDataset(), "Era esperado valores iguais, mas  dataset é diferente de " + result3337 + " <item1.getDataset()>")
chamada antiga: assertEquals(0, item1.getDatasetIndex())
nova chamada: assertEquals(0, item1.getDatasetIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result3338 + " <item1.getDatasetIndex()>")
chamada antiga: assertEquals("S2", item2.getLabel())
nova chamada: assertEquals("S2", item2.getLabel(), "Era esperado valores iguais, mas  'S2' é diferente de " + result3339 + " <item2.getLabel()>")
chamada antiga: assertEquals("S2", item2.getSeriesKey())
nova chamada: assertEquals("S2", item2.getSeriesKey(), "Era esperado valores iguais, mas  'S2' é diferente de " + result3340 + " <item2.getSeriesKey()>")
chamada antiga: assertEquals(1, item2.getSeriesIndex())
nova chamada: assertEquals(1, item2.getSeriesIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3341 + " <item2.getSeriesIndex()>")
chamada antiga: assertEquals(dataset, item2.getDataset())
nova chamada: assertEquals(dataset, item2.getDataset(), "Era esperado valores iguais, mas  dataset é diferente de " + result3342 + " <item2.getDataset()>")
chamada antiga: assertEquals(0, item2.getDatasetIndex())
nova chamada: assertEquals(0, item2.getDatasetIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result3343 + " <item2.getDatasetIndex()>")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3344 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result3345 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3346 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3347 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3348 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3349 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3350 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3351 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3352 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3353 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3354 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3355 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3356 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3357 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3358 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3359 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3360 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3361 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3362 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3363 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3364 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3365 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3366 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3367 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3368 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3369 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3370 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3371 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3372 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result3373 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3374 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3375 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3376 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3377 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3378 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result3379 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3380 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3381 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3382 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3383 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3384 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3385 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3386 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3387 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3388 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3389 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3390 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3391 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3392 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(RectangleInsets.ZERO_INSETS, plot.getAxisOffset())
nova chamada: assertEquals(RectangleInsets.ZERO_INSETS, plot.getAxisOffset(), "Era esperado valores iguais, mas  RectangleInsets.ZERO_INSETS é diferente de " + result3393 + " <plot.getAxisOffset()>")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3394 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertTrue(plot2.equals(plot1))
nova chamada: assertTrue(plot2.equals(plot1), "Era esperado verdadeiro, mas " + result3395 + " <plot2.equals(plot1)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3396 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3397 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3398 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3399 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3400 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3401 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3402 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3403 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3404 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3405 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3406 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3407 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3408 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3409 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3410 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3411 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3412 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3413 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3414 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3415 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3416 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3417 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3418 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3419 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3420 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3421 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3422 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3423 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3424 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3425 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3426 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3427 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3428 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3429 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3430 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3431 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3432 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3433 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3434 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3435 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3436 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3437 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3438 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3439 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3440 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3441 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3442 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3443 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3444 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3445 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3446 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3447 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3448 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3449 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3450 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3451 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3452 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3453 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3454 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3455 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3456 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3457 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3458 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3459 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3460 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3461 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3462 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3463 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3464 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3465 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3466 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3467 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3468 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3469 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3470 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3471 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3472 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3473 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3474 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3475 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3476 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3477 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3478 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3479 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3480 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3481 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3482 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3483 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3484 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3485 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3486 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3487 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3488 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3489 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3490 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3491 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3492 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3493 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3494 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3495 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3496 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3497 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3498 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3499 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3500 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3501 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3502 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3503 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3504 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3505 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertFalse(plot1.equals(plot2))
nova chamada: assertFalse(plot1.equals(plot2), "Era esperado falso, mas " + result3506 + " <plot1.equals(plot2)> é verdadeiro ")
chamada antiga: assertTrue(plot1.equals(plot2))
nova chamada: assertTrue(plot1.equals(plot2), "Era esperado verdadeiro, mas " + result3507 + " <plot1.equals(plot2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNotEquals(p1, p2)
nova chamada: assertNotEquals(p1, p2, "Era esperado valores diferentes, mas  p1 é igual a " + " p2")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3508 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3509 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3510 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3511 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3512 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3513 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3514 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3515 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3516 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3517 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3518 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3519 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3520 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3521 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3522 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3523 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3524 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3525 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3526 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3527 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(r2.getPlot() == p2)
nova chamada: assertTrue(r2.getPlot() == p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3528 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(chart, chart2)
nova chamada: assertEquals(chart, chart2, "Era esperado valores iguais, mas  chart é diferente de " + " chart2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(datasetA.hasListener(p2))
nova chamada: assertTrue(datasetA.hasListener(p2), "Era esperado verdadeiro, mas " + result3529 + " <datasetA.hasListener(p2)> é falso")
chamada antiga: assertTrue(domainAxisA.hasListener(p2))
nova chamada: assertTrue(domainAxisA.hasListener(p2), "Era esperado verdadeiro, mas " + result3530 + " <domainAxisA.hasListener(p2)> é falso")
chamada antiga: assertTrue(rangeAxisA.hasListener(p2))
nova chamada: assertTrue(rangeAxisA.hasListener(p2), "Era esperado verdadeiro, mas " + result3531 + " <rangeAxisA.hasListener(p2)> é falso")
chamada antiga: assertTrue(rendererA.hasListener(p2))
nova chamada: assertTrue(rendererA.hasListener(p2), "Era esperado verdadeiro, mas " + result3532 + " <rendererA.hasListener(p2)> é falso")
chamada antiga: assertTrue(datasetB.hasListener(p2))
nova chamada: assertTrue(datasetB.hasListener(p2), "Era esperado verdadeiro, mas " + result3533 + " <datasetB.hasListener(p2)> é falso")
chamada antiga: assertTrue(domainAxisB.hasListener(p2))
nova chamada: assertTrue(domainAxisB.hasListener(p2), "Era esperado verdadeiro, mas " + result3534 + " <domainAxisB.hasListener(p2)> é falso")
chamada antiga: assertTrue(rangeAxisB.hasListener(p2))
nova chamada: assertTrue(rangeAxisB.hasListener(p2), "Era esperado verdadeiro, mas " + result3535 + " <rangeAxisB.hasListener(p2)> é falso")
chamada antiga: assertTrue(rendererB.hasListener(p2))
nova chamada: assertTrue(rendererB.hasListener(p2), "Era esperado verdadeiro, mas " + result3536 + " <rendererB.hasListener(p2)> é falso")
chamada antiga: assertTrue(listener.getEvent() != null)
nova chamada: assertTrue(listener.getEvent() != null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(true)
nova chamada: assertTrue(true, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(listeners.contains(plot))
nova chamada: assertTrue(listeners.contains(plot), "Era esperado verdadeiro, mas " + result3537 + " <listeners.contains(plot)> é falso")
chamada antiga: assertFalse(listeners.contains(plot))
nova chamada: assertFalse(listeners.contains(plot), "Era esperado falso, mas " + result3538 + " <listeners.contains(plot)> é verdadeiro ")
chamada antiga: assertTrue(listeners.contains(plot))
nova chamada: assertTrue(listeners.contains(plot), "Era esperado verdadeiro, mas " + result3539 + " <listeners.contains(plot)> é falso")
chamada antiga: assertFalse(listeners.contains(plot))
nova chamada: assertFalse(listeners.contains(plot), "Era esperado falso, mas " + result3540 + " <listeners.contains(plot)> é verdadeiro ")
chamada antiga: assertEquals(0, plot.getDomainAxisIndex(domainAxis1))
nova chamada: assertEquals(0, plot.getDomainAxisIndex(domainAxis1), "Era esperado valores iguais, mas  0 é diferente de " + result3541 + " <plot.getDomainAxisIndex(domainAxis1)>")
chamada antiga: assertEquals(-1, plot.getDomainAxisIndex(domainAxis2))
nova chamada: assertEquals(-1, plot.getDomainAxisIndex(domainAxis2), "Era esperado valores iguais, mas  -1 é diferente de " + result3542 + " <plot.getDomainAxisIndex(domainAxis2)>")
chamada antiga: assertEquals(1, plot.getDomainAxisIndex(domainAxis2))
nova chamada: assertEquals(1, plot.getDomainAxisIndex(domainAxis2), "Era esperado valores iguais, mas  1 é diferente de " + result3543 + " <plot.getDomainAxisIndex(domainAxis2)>")
chamada antiga: assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")))
nova chamada: assertEquals(-1, plot.getDomainAxisIndex(new CategoryAxis("X2")), "Era esperado valores iguais, mas  -1 é diferente de " + result3544 + " <plot.getDomainAxisIndex(new CategoryAxis('X2'))>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(0, plot.getRangeAxisIndex(rangeAxis1))
nova chamada: assertEquals(0, plot.getRangeAxisIndex(rangeAxis1), "Era esperado valores iguais, mas  0 é diferente de " + result3545 + " <plot.getRangeAxisIndex(rangeAxis1)>")
chamada antiga: assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2))
nova chamada: assertEquals(-1, plot.getRangeAxisIndex(rangeAxis2), "Era esperado valores iguais, mas  -1 é diferente de " + result3546 + " <plot.getRangeAxisIndex(rangeAxis2)>")
chamada antiga: assertEquals(1, plot.getRangeAxisIndex(rangeAxis2))
nova chamada: assertEquals(1, plot.getRangeAxisIndex(rangeAxis2), "Era esperado valores iguais, mas  1 é diferente de " + result3547 + " <plot.getRangeAxisIndex(rangeAxis2)>")
chamada antiga: assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")))
nova chamada: assertEquals(-1, plot.getRangeAxisIndex(new NumberAxis("Y2")), "Era esperado valores iguais, mas  -1 é diferente de " + result3548 + " <plot.getRangeAxisIndex(new NumberAxis('Y2'))>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertFalse(plot.removeDomainMarker(new CategoryMarker("Category 1")))
nova chamada: assertFalse(plot.removeDomainMarker(new CategoryMarker("Category 1")), "Era esperado falso, mas " + result3549 + " <plot.removeDomainMarker(new CategoryMarker('Category 1'))> é verdadeiro ")
chamada antiga: assertFalse(plot.removeRangeMarker(new ValueMarker(0.5)))
nova chamada: assertFalse(plot.removeRangeMarker(new ValueMarker(0.5)), "Era esperado falso, mas " + result3550 + " <plot.removeRangeMarker(new ValueMarker(0.5))> é verdadeiro ")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result3551 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result3552 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis2, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result3553 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result3554 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxisForDataset(0))
nova chamada: assertEquals(xAxis2, plot.getDomainAxisForDataset(0), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result3555 + " <plot.getDomainAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result3556 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result3557 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis2, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result3558 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result3559 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxisForDataset(0))
nova chamada: assertEquals(yAxis2, plot.getRangeAxisForDataset(0), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result3560 + " <plot.getRangeAxisForDataset(0)>")
chamada antiga: assertEquals(dataset, plot.getDataset(0))
nova chamada: assertEquals(dataset, plot.getDataset(0), "Era esperado valores iguais, mas  dataset é diferente de " + result3561 + " <plot.getDataset(0)>")
chamada antiga: assertEquals(2, plot.getDatasetCount())
nova chamada: assertEquals(2, plot.getDatasetCount(), "Era esperado valores iguais, mas  2 é diferente de " + result3562 + " <plot.getDatasetCount()>")
chamada antiga: assertEquals(dataset2, plot.getDataset(99))
nova chamada: assertEquals(dataset2, plot.getDataset(99), "Era esperado valores iguais, mas  dataset2 é diferente de " + result3563 + " <plot.getDataset(99)>")
chamada antiga: assertEquals(0, plot.indexOf(dataset))
nova chamada: assertEquals(0, plot.indexOf(dataset), "Era esperado valores iguais, mas  0 é diferente de " + result3564 + " <plot.indexOf(dataset)>")
chamada antiga: assertEquals(99, plot.indexOf(dataset2))
nova chamada: assertEquals(99, plot.indexOf(dataset2), "Era esperado valores iguais, mas  99 é diferente de " + result3565 + " <plot.indexOf(dataset2)>")
chamada antiga: assertEquals(xAxis, plot.getDomainAxis(0))
nova chamada: assertEquals(xAxis, plot.getDomainAxis(0), "Era esperado valores iguais, mas  xAxis é diferente de " + result3566 + " <plot.getDomainAxis(0)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxis(0))
nova chamada: assertEquals(yAxis, plot.getRangeAxis(0), "Era esperado valores iguais, mas  yAxis é diferente de " + result3567 + " <plot.getRangeAxis(0)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxis(99))
nova chamada: assertEquals(xAxis2, plot.getDomainAxis(99), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result3568 + " <plot.getDomainAxis(99)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxis(99))
nova chamada: assertEquals(yAxis2, plot.getRangeAxis(99), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result3569 + " <plot.getRangeAxis(99)>")
chamada antiga: assertEquals(AxisLocation.BOTTOM_OR_RIGHT, plot.getDomainAxisLocation(99))
nova chamada: assertEquals(AxisLocation.BOTTOM_OR_RIGHT, plot.getDomainAxisLocation(99), "Era esperado valores iguais, mas  AxisLocation.BOTTOM_OR_RIGHT é diferente de " + result3570 + " <plot.getDomainAxisLocation(99)>")
chamada antiga: assertEquals(AxisLocation.BOTTOM_OR_LEFT, plot.getRangeAxisLocation(99))
nova chamada: assertEquals(AxisLocation.BOTTOM_OR_LEFT, plot.getRangeAxisLocation(99), "Era esperado valores iguais, mas  AxisLocation.BOTTOM_OR_LEFT é diferente de " + result3571 + " <plot.getRangeAxisLocation(99)>")
chamada antiga: assertEquals(renderer, plot.getRenderer(0))
nova chamada: assertEquals(renderer, plot.getRenderer(0), "Era esperado valores iguais, mas  renderer é diferente de " + result3572 + " <plot.getRenderer(0)>")
chamada antiga: assertEquals(2, plot.getRendererCount())
nova chamada: assertEquals(2, plot.getRendererCount(), "Era esperado valores iguais, mas  2 é diferente de " + result3573 + " <plot.getRendererCount()>")
chamada antiga: assertEquals(renderer2, plot.getRenderer(20))
nova chamada: assertEquals(renderer2, plot.getRenderer(20), "Era esperado valores iguais, mas  renderer2 é diferente de " + result3574 + " <plot.getRenderer(20)>")
chamada antiga: assertEquals(20, plot.getIndexOf(renderer2))
nova chamada: assertEquals(20, plot.getIndexOf(renderer2), "Era esperado valores iguais, mas  20 é diferente de " + result3575 + " <plot.getIndexOf(renderer2)>")
chamada antiga: assertEquals(renderer, plot.getRendererForDataset(dataset2))
nova chamada: assertEquals(renderer, plot.getRendererForDataset(dataset2), "Era esperado valores iguais, mas  renderer é diferente de " + result3576 + " <plot.getRendererForDataset(dataset2)>")
chamada antiga: assertEquals(renderer2, plot.getRendererForDataset(dataset2))
nova chamada: assertEquals(renderer2, plot.getRendererForDataset(dataset2), "Era esperado valores iguais, mas  renderer2 é diferente de " + result3577 + " <plot.getRendererForDataset(dataset2)>")
chamada antiga: assertEquals(xAxis, plot.getDomainAxisForDataset(99))
nova chamada: assertEquals(xAxis, plot.getDomainAxisForDataset(99), "Era esperado valores iguais, mas  xAxis é diferente de " + result3578 + " <plot.getDomainAxisForDataset(99)>")
chamada antiga: assertEquals(xAxis2, plot.getDomainAxisForDataset(99))
nova chamada: assertEquals(xAxis2, plot.getDomainAxisForDataset(99), "Era esperado valores iguais, mas  xAxis2 é diferente de " + result3579 + " <plot.getDomainAxisForDataset(99)>")
chamada antiga: assertEquals(yAxis, plot.getRangeAxisForDataset(99))
nova chamada: assertEquals(yAxis, plot.getRangeAxisForDataset(99), "Era esperado valores iguais, mas  yAxis é diferente de " + result3580 + " <plot.getRangeAxisForDataset(99)>")
chamada antiga: assertEquals(yAxis2, plot.getRangeAxisForDataset(99))
nova chamada: assertEquals(yAxis2, plot.getRangeAxisForDataset(99), "Era esperado valores iguais, mas  yAxis2 é diferente de " + result3581 + " <plot.getRangeAxisForDataset(99)>")
chamada antiga: assertTrue(plot.getDomainMarkers(99, Layer.FOREGROUND).contains(xMarker1))
nova chamada: assertTrue(plot.getDomainMarkers(99, Layer.FOREGROUND).contains(xMarker1), "Era esperado verdadeiro, mas " + result3582 + " <plot.getDomainMarkers(99, Layer.FOREGROUND).contains(xMarker1)> é falso")
chamada antiga: assertTrue(plot.getRangeMarkers(99, Layer.FOREGROUND).contains(yMarker1))
nova chamada: assertTrue(plot.getRangeMarkers(99, Layer.FOREGROUND).contains(yMarker1), "Era esperado verdadeiro, mas " + result3583 + " <plot.getRangeMarkers(99, Layer.FOREGROUND).contains(yMarker1)> é falso")
chamada antiga: assertNull(plot.getDataset())
nova chamada: assertNull(plot.getDataset(), "Era esperado nulo, mas " + result3584 + " <plot.getDataset()> não é nulo")
chamada antiga: assertTrue(dataset.hasListener(plot))
nova chamada: assertTrue(dataset.hasListener(plot), "Era esperado verdadeiro, mas " + result3585 + " <dataset.hasListener(plot)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3586 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result3587 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3588 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3589 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3590 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3591 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3592 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3593 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3594 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3595 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3596 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3597 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3598 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3599 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1 != p2)
nova chamada: assertTrue(p1 != p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.getClass() == p2.getClass())
nova chamada: assertTrue(p1.getClass() == p2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3600 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3601 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(2, legendItems.getItemCount())
nova chamada: assertEquals(2, legendItems.getItemCount(), "Era esperado valores iguais, mas  2 é diferente de " + result3602 + " <legendItems.getItemCount()>")
chamada antiga: assertEquals("S1", item1.getLabel())
nova chamada: assertEquals("S1", item1.getLabel(), "Era esperado valores iguais, mas  'S1' é diferente de " + result3603 + " <item1.getLabel()>")
chamada antiga: assertEquals("S1", item1.getSeriesKey())
nova chamada: assertEquals("S1", item1.getSeriesKey(), "Era esperado valores iguais, mas  'S1' é diferente de " + result3604 + " <item1.getSeriesKey()>")
chamada antiga: assertEquals(0, item1.getSeriesIndex())
nova chamada: assertEquals(0, item1.getSeriesIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result3605 + " <item1.getSeriesIndex()>")
chamada antiga: assertEquals(dataset, item1.getDataset())
nova chamada: assertEquals(dataset, item1.getDataset(), "Era esperado valores iguais, mas  dataset é diferente de " + result3606 + " <item1.getDataset()>")
chamada antiga: assertEquals(0, item1.getDatasetIndex())
nova chamada: assertEquals(0, item1.getDatasetIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result3607 + " <item1.getDatasetIndex()>")
chamada antiga: assertEquals("S2", item2.getLabel())
nova chamada: assertEquals("S2", item2.getLabel(), "Era esperado valores iguais, mas  'S2' é diferente de " + result3608 + " <item2.getLabel()>")
chamada antiga: assertEquals("S2", item2.getSeriesKey())
nova chamada: assertEquals("S2", item2.getSeriesKey(), "Era esperado valores iguais, mas  'S2' é diferente de " + result3609 + " <item2.getSeriesKey()>")
chamada antiga: assertEquals(1, item2.getSeriesIndex())
nova chamada: assertEquals(1, item2.getSeriesIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3610 + " <item2.getSeriesIndex()>")
chamada antiga: assertEquals(dataset, item2.getDataset())
nova chamada: assertEquals(dataset, item2.getDataset(), "Era esperado valores iguais, mas  dataset é diferente de " + result3611 + " <item2.getDataset()>")
chamada antiga: assertEquals(0, item2.getDatasetIndex())
nova chamada: assertEquals(0, item2.getDatasetIndex(), "Era esperado valores iguais, mas  0 é diferente de " + result3612 + " <item2.getDatasetIndex()>")
chamada antiga: assertEquals(PlotOrientation.HORIZONTAL, PlotOrientation.HORIZONTAL)
nova chamada: assertEquals(PlotOrientation.HORIZONTAL, PlotOrientation.HORIZONTAL, "Era esperado valores iguais, mas  PlotOrientation.HORIZONTAL é diferente de " + " PlotOrientation.HORIZONTAL")
chamada antiga: assertEquals(PlotOrientation.VERTICAL, PlotOrientation.VERTICAL)
nova chamada: assertEquals(PlotOrientation.VERTICAL, PlotOrientation.VERTICAL, "Era esperado valores iguais, mas  PlotOrientation.VERTICAL é diferente de " + " PlotOrientation.VERTICAL")
chamada antiga: assertFalse(PlotOrientation.HORIZONTAL.equals(PlotOrientation.VERTICAL))
nova chamada: assertFalse(PlotOrientation.HORIZONTAL.equals(PlotOrientation.VERTICAL), "Era esperado falso, mas " + result3613 + " <PlotOrientation.HORIZONTAL.equals(PlotOrientation.VERTICAL)> é verdadeiro ")
chamada antiga: assertFalse(PlotOrientation.VERTICAL.equals(PlotOrientation.HORIZONTAL))
nova chamada: assertFalse(PlotOrientation.VERTICAL.equals(PlotOrientation.HORIZONTAL), "Era esperado falso, mas " + result3614 + " <PlotOrientation.VERTICAL.equals(PlotOrientation.HORIZONTAL)> é verdadeiro ")
chamada antiga: assertEquals(orientation1, orientation2)
nova chamada: assertEquals(orientation1, orientation2, "Era esperado valores iguais, mas  orientation1 é diferente de " + " orientation2")
chamada antiga: assertEquals(true, same)
nova chamada: assertEquals(true, same, "Era esperado valores iguais, mas  true é diferente de " + " same")
chamada antiga: assertEquals(o1, o2)
nova chamada: assertEquals(o1, o2, "Era esperado valores iguais, mas  o1 é diferente de " + " o2")
chamada antiga: assertEquals(o1, o2)
nova chamada: assertEquals(o1, o2, "Era esperado valores iguais, mas  o1 é diferente de " + " o2")
chamada antiga: assertTrue(o1 != o2)
nova chamada: assertTrue(o1 != o2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(o1.getClass() == o2.getClass())
nova chamada: assertTrue(o1.getClass() == o2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(o1.equals(o2))
nova chamada: assertTrue(o1.equals(o2), "Era esperado verdadeiro, mas " + result3615 + " <o1.equals(o2)> é falso")
chamada antiga: assertFalse(o1.equals(o2))
nova chamada: assertFalse(o1.equals(o2), "Era esperado falso, mas " + result3616 + " <o1.equals(o2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3617 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3618 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3619 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3620 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3621 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3622 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3623 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3624 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3625 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3626 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3627 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3628 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3629 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3630 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3631 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3632 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3633 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3634 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3635 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3636 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3637 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3638 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3639 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3640 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3641 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3642 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3643 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3644 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3645 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3646 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3647 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3648 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3649 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3650 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3651 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3652 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3653 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3654 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3655 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3656 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3657 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3658 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3659 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3660 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3661 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3662 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3663 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3664 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3665 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3666 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3667 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3668 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3669 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3670 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3671 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result3672 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3673 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3674 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result3675 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(" href=\"abc\"", g.generateURLFragment("abc"))
nova chamada: assertEquals(" href=\"abc\"", g.generateURLFragment("abc"), "Era esperado valores iguais, mas  ' href=\'abc\'' é diferente de " + result3676 + " <g.generateURLFragment('abc')>")
chamada antiga: assertEquals(" href=\"images/abc.png\"", g.generateURLFragment("images/abc.png"))
nova chamada: assertEquals(" href=\"images/abc.png\"", g.generateURLFragment("images/abc.png"), "Era esperado valores iguais, mas  ' href=\'images/abc.png\'' é diferente de " + result3677 + " <g.generateURLFragment('images/abc.png')>")
chamada antiga: assertEquals(" href=\"http://www.jfree.org/images/abc.png\"", g.generateURLFragment("http://www.jfree.org/images/abc.png"))
nova chamada: assertEquals(" href=\"http://www.jfree.org/images/abc.png\"", g.generateURLFragment("http://www.jfree.org/images/abc.png"), "Era esperado valores iguais, mas  ' href=\'http://www.jfree.org/images/abc.png\'' é diferente de " + result3678 + " <g.generateURLFragment('http://www.jfree.org/images/abc.png')>")
chamada antiga: assertEquals(" onMouseOver=\"return overlib('abc');\"" + " onMouseOut=\"return nd();\"", g.generateToolTipFragment("abc"))
nova chamada: assertEquals(" onMouseOver=\"return overlib('abc');\"" + " onMouseOut=\"return nd();\"", g.generateToolTipFragment("abc"), "Era esperado valores iguais, mas  ' onMouseOver=\'return overlib('abc');\'' + ' onMouseOut=\'return nd();\'' é diferente de " + result3679 + " <g.generateToolTipFragment('abc')>")
chamada antiga: assertEquals(" onMouseOver=\"return overlib(" + "'It\\'s \\\"A\\\", 100.0');\" onMouseOut=\"return nd();\"", g.generateToolTipFragment("It\'s \"A\", 100.0"))
nova chamada: assertEquals(" onMouseOver=\"return overlib(" + "'It\\'s \\\"A\\\", 100.0');\" onMouseOut=\"return nd();\"", g.generateToolTipFragment("It\'s \"A\", 100.0"), "Era esperado valores iguais, mas  ' onMouseOver=\'return overlib(' + ''It\\'s \\\'A\\\', 100.0');\' onMouseOut=\'return nd();\'' é diferente de " + result3680 + " <g.generateToolTipFragment('It\'s \'A\', 100.0')>")
chamada antiga: assertEquals("", ImageMapUtils.htmlEscape(""))
nova chamada: assertEquals("", ImageMapUtils.htmlEscape(""), "Era esperado valores iguais, mas  '' é diferente de " + result3681 + " <ImageMapUtils.htmlEscape('')>")
chamada antiga: assertEquals("abc", ImageMapUtils.htmlEscape("abc"))
nova chamada: assertEquals("abc", ImageMapUtils.htmlEscape("abc"), "Era esperado valores iguais, mas  'abc' é diferente de " + result3682 + " <ImageMapUtils.htmlEscape('abc')>")
chamada antiga: assertEquals("&amp;", ImageMapUtils.htmlEscape("&"))
nova chamada: assertEquals("&amp;", ImageMapUtils.htmlEscape("&"), "Era esperado valores iguais, mas  '&amp;' é diferente de " + result3683 + " <ImageMapUtils.htmlEscape('&')>")
chamada antiga: assertEquals("&quot;", ImageMapUtils.htmlEscape("\""))
nova chamada: assertEquals("&quot;", ImageMapUtils.htmlEscape("\""), "Era esperado valores iguais, mas  '&quot;' é diferente de " + result3684 + " <ImageMapUtils.htmlEscape('\'')>")
chamada antiga: assertEquals("&lt;", ImageMapUtils.htmlEscape("<"))
nova chamada: assertEquals("&lt;", ImageMapUtils.htmlEscape("<"), "Era esperado valores iguais, mas  '&lt;' é diferente de " + result3685 + " <ImageMapUtils.htmlEscape('<')>")
chamada antiga: assertEquals("&gt;", ImageMapUtils.htmlEscape(">"))
nova chamada: assertEquals("&gt;", ImageMapUtils.htmlEscape(">"), "Era esperado valores iguais, mas  '&gt;' é diferente de " + result3686 + " <ImageMapUtils.htmlEscape('>')>")
chamada antiga: assertEquals("&#39;", ImageMapUtils.htmlEscape("\'"))
nova chamada: assertEquals("&#39;", ImageMapUtils.htmlEscape("\'"), "Era esperado valores iguais, mas  '&#39;' é diferente de " + result3687 + " <ImageMapUtils.htmlEscape('\'')>")
chamada antiga: assertEquals("&#092;abc", ImageMapUtils.htmlEscape("\\abc"))
nova chamada: assertEquals("&#092;abc", ImageMapUtils.htmlEscape("\\abc"), "Era esperado valores iguais, mas  '&#092;abc' é diferente de " + result3688 + " <ImageMapUtils.htmlEscape('\\abc')>")
chamada antiga: assertEquals("abc\n", ImageMapUtils.htmlEscape("abc\n"))
nova chamada: assertEquals("abc\n", ImageMapUtils.htmlEscape("abc\n"), "Era esperado valores iguais, mas  'abc\n' é diferente de " + result3689 + " <ImageMapUtils.htmlEscape('abc\n')>")
chamada antiga: assertEquals("", ImageMapUtils.javascriptEscape(""))
nova chamada: assertEquals("", ImageMapUtils.javascriptEscape(""), "Era esperado valores iguais, mas  '' é diferente de " + result3690 + " <ImageMapUtils.javascriptEscape('')>")
chamada antiga: assertEquals("abc", ImageMapUtils.javascriptEscape("abc"))
nova chamada: assertEquals("abc", ImageMapUtils.javascriptEscape("abc"), "Era esperado valores iguais, mas  'abc' é diferente de " + result3691 + " <ImageMapUtils.javascriptEscape('abc')>")
chamada antiga: assertEquals("\\\'", ImageMapUtils.javascriptEscape("\'"))
nova chamada: assertEquals("\\\'", ImageMapUtils.javascriptEscape("\'"), "Era esperado valores iguais, mas  '\\\'' é diferente de " + result3692 + " <ImageMapUtils.javascriptEscape('\'')>")
chamada antiga: assertEquals("\\\"", ImageMapUtils.javascriptEscape("\""))
nova chamada: assertEquals("\\\"", ImageMapUtils.javascriptEscape("\""), "Era esperado valores iguais, mas  '\\\'' é diferente de " + result3693 + " <ImageMapUtils.javascriptEscape('\'')>")
chamada antiga: assertEquals("\\\\", ImageMapUtils.javascriptEscape("\\"))
nova chamada: assertEquals("\\\\", ImageMapUtils.javascriptEscape("\\"), "Era esperado valores iguais, mas  '\\\\' é diferente de " + result3694 + " <ImageMapUtils.javascriptEscape('\\')>")
chamada antiga: assertEquals(" onMouseOver=\"return overlib('abc');\"" + " onMouseOut=\"return nd();\"", g.generateToolTipFragment("abc"))
nova chamada: assertEquals(" onMouseOver=\"return overlib('abc');\"" + " onMouseOut=\"return nd();\"", g.generateToolTipFragment("abc"), "Era esperado valores iguais, mas  ' onMouseOver=\'return overlib('abc');\'' + ' onMouseOut=\'return nd();\'' é diferente de " + result3695 + " <g.generateToolTipFragment('abc')>")
chamada antiga: assertEquals(" onMouseOver=\"return overlib(" + "'It\\'s \\\"A\\\", 100.0');\" onMouseOut=\"return nd();\"", g.generateToolTipFragment("It\'s \"A\", 100.0"))
nova chamada: assertEquals(" onMouseOver=\"return overlib(" + "'It\\'s \\\"A\\\", 100.0');\" onMouseOut=\"return nd();\"", g.generateToolTipFragment("It\'s \"A\", 100.0"), "Era esperado valores iguais, mas  ' onMouseOver=\'return overlib(' + ''It\\'s \\\'A\\\', 100.0');\' onMouseOut=\'return nd();\'' é diferente de " + result3696 + " <g.generateToolTipFragment('It\'s \'A\', 100.0')>")
chamada antiga: assertEquals(" title=\"abc\" alt=\"\"", g.generateToolTipFragment("abc"))
nova chamada: assertEquals(" title=\"abc\" alt=\"\"", g.generateToolTipFragment("abc"), "Era esperado valores iguais, mas  ' title=\'abc\' alt=\'\'' é diferente de " + result3697 + " <g.generateToolTipFragment('abc')>")
chamada antiga: assertEquals(" title=\"Series &quot;A&quot;, 100.0\" alt=\"\"", g.generateToolTipFragment("Series \"A\", 100.0"))
nova chamada: assertEquals(" title=\"Series &quot;A&quot;, 100.0\" alt=\"\"", g.generateToolTipFragment("Series \"A\", 100.0"), "Era esperado valores iguais, mas  ' title=\'Series &quot;A&quot;, 100.0\' alt=\'\'' é diferente de " + result3698 + " <g.generateToolTipFragment('Series \'A\', 100.0')>")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result3699 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result3700 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result3701 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result3702 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result3703 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result3704 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result3705 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result3706 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result3707 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result3708 + " <g1.equals(g2)> é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(Color.RED, s.getDefaultPaint())
nova chamada: assertEquals(Color.RED, s.getDefaultPaint(), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3709 + " <s.getDefaultPaint()>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(-1.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(-1.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3710 + " <s.getPaint(-1.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(0.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(0.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3711 + " <s.getPaint(0.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(50.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(50.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3712 + " <s.getPaint(50.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(100.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(100.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3713 + " <s.getPaint(100.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(101.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(101.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3714 + " <s.getPaint(101.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(-1.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(-1.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3715 + " <s.getPaint(-1.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(0.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(0.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3716 + " <s.getPaint(0.0)>")
chamada antiga: assertEquals(Color.BLUE, s.getPaint(50.0))
nova chamada: assertEquals(Color.BLUE, s.getPaint(50.0), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result3717 + " <s.getPaint(50.0)>")
chamada antiga: assertEquals(Color.BLUE, s.getPaint(100.0))
nova chamada: assertEquals(Color.BLUE, s.getPaint(100.0), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result3718 + " <s.getPaint(100.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(101.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(101.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3719 + " <s.getPaint(101.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(-1.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(-1.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3720 + " <s.getPaint(-1.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(0.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(0.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3721 + " <s.getPaint(0.0)>")
chamada antiga: assertEquals(Color.RED, s.getPaint(50.0))
nova chamada: assertEquals(Color.RED, s.getPaint(50.0), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3722 + " <s.getPaint(50.0)>")
chamada antiga: assertEquals(Color.RED, s.getPaint(100.0))
nova chamada: assertEquals(Color.RED, s.getPaint(100.0), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3723 + " <s.getPaint(100.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(101.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(101.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3724 + " <s.getPaint(101.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(-1.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(-1.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3725 + " <s.getPaint(-1.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(0.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(0.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3726 + " <s.getPaint(0.0)>")
chamada antiga: assertEquals(Color.GREEN, s.getPaint(25.0))
nova chamada: assertEquals(Color.GREEN, s.getPaint(25.0), "Era esperado valores iguais, mas  Color.GREEN é diferente de " + result3727 + " <s.getPaint(25.0)>")
chamada antiga: assertEquals(Color.RED, s.getPaint(50.0))
nova chamada: assertEquals(Color.RED, s.getPaint(50.0), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3728 + " <s.getPaint(50.0)>")
chamada antiga: assertEquals(Color.RED, s.getPaint(100.0))
nova chamada: assertEquals(Color.RED, s.getPaint(100.0), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3729 + " <s.getPaint(100.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(101.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(101.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3730 + " <s.getPaint(101.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(-1.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(-1.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3731 + " <s.getPaint(-1.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(0.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(0.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3732 + " <s.getPaint(0.0)>")
chamada antiga: assertEquals(Color.GREEN, s.getPaint(25.0))
nova chamada: assertEquals(Color.GREEN, s.getPaint(25.0), "Era esperado valores iguais, mas  Color.GREEN é diferente de " + result3733 + " <s.getPaint(25.0)>")
chamada antiga: assertEquals(Color.RED, s.getPaint(50.0))
nova chamada: assertEquals(Color.RED, s.getPaint(50.0), "Era esperado valores iguais, mas  Color.RED é diferente de " + result3734 + " <s.getPaint(50.0)>")
chamada antiga: assertEquals(Color.YELLOW, s.getPaint(75.0))
nova chamada: assertEquals(Color.YELLOW, s.getPaint(75.0), "Era esperado valores iguais, mas  Color.YELLOW é diferente de " + result3735 + " <s.getPaint(75.0)>")
chamada antiga: assertEquals(Color.YELLOW, s.getPaint(100.0))
nova chamada: assertEquals(Color.YELLOW, s.getPaint(100.0), "Era esperado valores iguais, mas  Color.YELLOW é diferente de " + result3736 + " <s.getPaint(100.0)>")
chamada antiga: assertEquals(Color.BLACK, s.getPaint(101.0))
nova chamada: assertEquals(Color.BLACK, s.getPaint(101.0), "Era esperado valores iguais, mas  Color.BLACK é diferente de " + result3737 + " <s.getPaint(101.0)>")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3738 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result3739 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3740 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3741 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3742 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3743 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3744 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3745 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3746 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3747 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3748 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3749 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3750 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3751 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3752 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3753 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3754 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3755 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3756 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3757 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3758 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3759 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3760 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3761 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3762 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3763 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3764 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3765 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3766 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3767 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result3768 + " <detector.getNotified()> é falso")
chamada antiga: assertNotNull(li)
nova chamada: assertNotNull(li, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(li)
nova chamada: assertNull(li, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals("R5", li.getLabel())
nova chamada: assertEquals("R5", li.getLabel(), "Era esperado valores iguais, mas  'R5' é diferente de " + result3769 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3770 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result3771 + " <li.getSeriesIndex()>")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3772 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3773 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 1.0) é diferente de " + result3774 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result3775 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3776 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3777 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-6.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-6.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-6.0, 1.0) é diferente de " + result3778 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3779 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3780 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result3781 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3782 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3783 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3784 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3785 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3786 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3787 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(checkIndependence(r1, r2))
nova chamada: assertTrue(checkIndependence(r1, r2), "Era esperado verdadeiro, mas " + result3788 + " <checkIndependence(r1, r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("R5", li.getLabel())
nova chamada: assertEquals("R5", li.getLabel(), "Era esperado valores iguais, mas  'R5' é diferente de " + result3789 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3790 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result3791 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3792 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3793 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3794 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3795 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3796 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3797 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3798 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3799 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3800 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3801 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3802 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3803 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3804 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3805 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(checkIndependence(r1, r2))
nova chamada: assertTrue(checkIndependence(r1, r2), "Era esperado verdadeiro, mas " + result3806 + " <checkIndependence(r1, r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3807 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3808 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result3809 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(1.0, 2.2), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(1.0, 2.2), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(1.0, 2.2) é diferente de " + result3810 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-3.2, 2.2), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-3.2, 2.2), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-3.2, 2.2) é diferente de " + result3811 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-3.2, 6.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-3.2, 6.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-3.2, 6.0) é diferente de " + result3812 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-3.2, 2.2), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-3.2, 2.2), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-3.2, 2.2) é diferente de " + result3813 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3814 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3815 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3816 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3817 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3818 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3819 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3820 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3821 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3822 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3823 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3824 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3825 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3826 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3827 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3828 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3829 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3830 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3831 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3832 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3833 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3834 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3835 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3836 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3837 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3838 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNotNull(li)
nova chamada: assertNotNull(li, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(li)
nova chamada: assertNull(li, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals("R5", li.getLabel())
nova chamada: assertEquals("R5", li.getLabel(), "Era esperado valores iguais, mas  'R5' é diferente de " + result3839 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3840 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result3841 + " <li.getSeriesIndex()>")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3842 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result3843 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3844 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3845 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3846 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3847 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3848 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 1.0) é diferente de " + result3849 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3850 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3851 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3852 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 5.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 5.0) é diferente de " + result3853 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3854 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3855 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3856 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3857 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3858 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3859 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3860 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3861 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3862 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3863 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3864 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3865 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3866 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3867 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3868 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3869 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("R5", li.getLabel())
nova chamada: assertEquals("R5", li.getLabel(), "Era esperado valores iguais, mas  'R5' é diferente de " + result3870 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3871 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result3872 + " <li.getSeriesIndex()>")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3873 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result3874 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3875 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3876 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3877 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3878 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3879 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3880 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 1.0) é diferente de " + result3881 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3882 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3883 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 3.0) é diferente de " + result3884 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 3.0) é diferente de " + result3885 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3886 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3887 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3888 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3889 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3890 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3891 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3892 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3893 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3894 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3895 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3896 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3897 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3898 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3899 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3900 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3901 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3902 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3903 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3904 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3905 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3906 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3907 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3908 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3909 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3910 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3911 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3912 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3913 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(checkIndependence(r1, r2))
nova chamada: assertTrue(checkIndependence(r1, r2), "Era esperado verdadeiro, mas " + result3914 + " <checkIndependence(r1, r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("R5", li.getLabel())
nova chamada: assertEquals("R5", li.getLabel(), "Era esperado valores iguais, mas  'R5' é diferente de " + result3915 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3916 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result3917 + " <li.getSeriesIndex()>")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3918 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3919 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result3920 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3921 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3922 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-6.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-6.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-6.0, 1.0) é diferente de " + result3923 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3924 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3925 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result3926 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3927 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result3928 + " <r2.equals(r1)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3929 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3930 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3931 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3932 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.0, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 1.5) é diferente de " + result3933 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(0.5, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.5, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.5, 1.5) é diferente de " + result3934 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 1.5) é diferente de " + result3935 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 1.5) é diferente de " + result3936 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 6.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 6.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 6.0) é diferente de " + result3937 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 1.5) é diferente de " + result3938 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3939 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3940 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3941 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3942 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result3943 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3944 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3945 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(p1 instanceof Cloneable)
nova chamada: assertFalse(p1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertFalse(p1 instanceof PublicCloneable)
nova chamada: assertFalse(p1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3946 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3947 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3948 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3949 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("R5", li.getLabel())
nova chamada: assertEquals("R5", li.getLabel(), "Era esperado valores iguais, mas  'R5' é diferente de " + result3950 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result3951 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result3952 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3953 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3954 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3955 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3956 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3957 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3958 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3959 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3960 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3961 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3962 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3963 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3964 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3965 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3966 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3967 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3968 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result3969 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3970 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3971 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3972 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3973 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3974 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3975 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3976 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3977 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.getLegendItemLabelGenerator() != r2.getLegendItemLabelGenerator())
nova chamada: assertTrue(r1.getLegendItemLabelGenerator() != r2.getLegendItemLabelGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3978 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.getLegendItemToolTipGenerator() != r2.getLegendItemToolTipGenerator())
nova chamada: assertTrue(r1.getLegendItemToolTipGenerator() != r2.getLegendItemToolTipGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3979 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.getLegendItemURLGenerator() != r2.getLegendItemURLGenerator())
nova chamada: assertTrue(r1.getLegendItemURLGenerator() != r2.getLegendItemURLGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3980 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3981 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(1.0, 1.0) é diferente de " + result3982 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3983 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3984 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertNotNull(r.getLegendItems())
nova chamada: assertNotNull(r.getLegendItems(), "Era esperado não nulo, mas " + result3985 + " <r.getLegendItems()> é nulo")
chamada antiga: assertEquals(0, r.getLegendItems().getItemCount())
nova chamada: assertEquals(0, r.getLegendItems().getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result3986 + " <r.getLegendItems().getItemCount()>")
chamada antiga: assertEquals(0, r.getLegendItems().getItemCount())
nova chamada: assertEquals(0, r.getLegendItems().getItemCount(), "Era esperado valores iguais, mas  0 é diferente de " + result3987 + " <r.getLegendItems().getItemCount()>")
chamada antiga: assertEquals(1, lic.getItemCount())
nova chamada: assertEquals(1, lic.getItemCount(), "Era esperado valores iguais, mas  1 é diferente de " + result3988 + " <lic.getItemCount()>")
chamada antiga: assertEquals("S1", lic.get(0).getLabel())
nova chamada: assertEquals("S1", lic.get(0).getLabel(), "Era esperado valores iguais, mas  'S1' é diferente de " + result3989 + " <lic.get(0).getLabel()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3990 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result3991 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result3992 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(p1 instanceof Cloneable)
nova chamada: assertFalse(p1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertFalse(p1 instanceof PublicCloneable)
nova chamada: assertFalse(p1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result3993 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result3994 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 1.0) é diferente de " + result3995 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3996 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 1.0) é diferente de " + result3997 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 3.0) é diferente de " + result3998 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.0, 3.0) é diferente de " + result3999 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4000 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4001 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4002 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4003 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4004 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4005 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4006 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4007 + " <r2.equals(r1)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4008 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4009 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r.getDefaultLinesVisible())
nova chamada: assertTrue(r.getDefaultLinesVisible(), "Era esperado verdadeiro, mas " + result4010 + " <r.getDefaultLinesVisible()> é falso")
chamada antiga: assertFalse(r.getDefaultShapesVisible())
nova chamada: assertFalse(r.getDefaultShapesVisible(), "Era esperado falso, mas " + result4011 + " <r.getDefaultShapesVisible()> é verdadeiro ")
chamada antiga: assertFalse(r.getDefaultLinesVisible())
nova chamada: assertFalse(r.getDefaultLinesVisible(), "Era esperado falso, mas " + result4012 + " <r.getDefaultLinesVisible()> é verdadeiro ")
chamada antiga: assertTrue(r.getDefaultShapesVisible())
nova chamada: assertTrue(r.getDefaultShapesVisible(), "Era esperado verdadeiro, mas " + result4013 + " <r.getDefaultShapesVisible()> é falso")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result4014 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result4015 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.5, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.5, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.5, 1.5) é diferente de " + result4016 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 1.5) é diferente de " + result4017 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 1.5) é diferente de " + result4018 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 6.0), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 6.0), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 6.0) é diferente de " + result4019 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(-2.2, 1.5) é diferente de " + result4020 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(br))
nova chamada: assertFalse(r1.equals(br), "Era esperado falso, mas " + result4021 + " <r1.equals(br)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4022 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4023 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result4024 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(dataset))
nova chamada: assertNull(r.findRangeBounds(dataset), "Era esperado nulo, mas " + result4025 + " <r.findRangeBounds(dataset)> não é nulo")
chamada antiga: assertEquals(new Range(0.0, 0.9), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 0.9), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 0.9) é diferente de " + result4026 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(0.1, 0.9), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.1, 0.9), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.1, 0.9) é diferente de " + result4027 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(new Range(0.0, 0.7), r.findRangeBounds(dataset))
nova chamada: assertEquals(new Range(0.0, 0.7), r.findRangeBounds(dataset), "Era esperado valores iguais, mas  new Range(0.0, 0.7) é diferente de " + result4028 + " <r.findRangeBounds(dataset)>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4029 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4030 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(AreaRendererEndType.LEVEL, AreaRendererEndType.LEVEL)
nova chamada: assertEquals(AreaRendererEndType.LEVEL, AreaRendererEndType.LEVEL, "Era esperado valores iguais, mas  AreaRendererEndType.LEVEL é diferente de " + " AreaRendererEndType.LEVEL")
chamada antiga: assertEquals(AreaRendererEndType.TAPER, AreaRendererEndType.TAPER)
nova chamada: assertEquals(AreaRendererEndType.TAPER, AreaRendererEndType.TAPER, "Era esperado valores iguais, mas  AreaRendererEndType.TAPER é diferente de " + " AreaRendererEndType.TAPER")
chamada antiga: assertEquals(AreaRendererEndType.TRUNCATE, AreaRendererEndType.TRUNCATE)
nova chamada: assertEquals(AreaRendererEndType.TRUNCATE, AreaRendererEndType.TRUNCATE, "Era esperado valores iguais, mas  AreaRendererEndType.TRUNCATE é diferente de " + " AreaRendererEndType.TRUNCATE")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(true, same)
nova chamada: assertEquals(true, same, "Era esperado valores iguais, mas  true é diferente de " + " same")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4031 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4032 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4033 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4034 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4035 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4036 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4037 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4038 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4039 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4040 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4041 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4042 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4043 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4044 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4045 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4046 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4047 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4048 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4049 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4050 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4051 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4052 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4053 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4054 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4055 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4056 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4057 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4058 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4059 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4060 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4061 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4062 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4063 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4064 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4065 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4066 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4067 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4068 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4069 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4070 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4071 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4072 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4073 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4074 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4075 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4076 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4077 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4078 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4079 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4080 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4081 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4082 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4083 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4084 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4085 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4086 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4087 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4088 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4089 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4090 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4091 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4092 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4093 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4094 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4095 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4096 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4097 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4098 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4099 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(bounds.contains(0.3))
nova chamada: assertFalse(bounds.contains(0.3), "Era esperado falso, mas " + result4100 + " <bounds.contains(0.3)> é verdadeiro ")
chamada antiga: assertTrue(bounds.contains(0.5))
nova chamada: assertTrue(bounds.contains(0.5), "Era esperado verdadeiro, mas " + result4101 + " <bounds.contains(0.5)> é falso")
chamada antiga: assertTrue(bounds.contains(2.5))
nova chamada: assertTrue(bounds.contains(2.5), "Era esperado verdadeiro, mas " + result4102 + " <bounds.contains(2.5)> é falso")
chamada antiga: assertFalse(bounds.contains(2.8))
nova chamada: assertFalse(bounds.contains(2.8), "Era esperado falso, mas " + result4103 + " <bounds.contains(2.8)> é verdadeiro ")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4104 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4105 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4106 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4107 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4108 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4109 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4110 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4111 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4112 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(renderer.findDomainBounds(null) == null)
nova chamada: assertTrue(renderer.findDomainBounds(null) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4113 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4114 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4115 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4116 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4117 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4118 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4119 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4120 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4121 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4122 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4123 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4124 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4125 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4126 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4127 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4128 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4129 + " <li.getSeriesIndex()>")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4130 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4131 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4132 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4133 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4134 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4135 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(Color.GREEN, r1.getUpPaint())
nova chamada: assertEquals(Color.GREEN, r1.getUpPaint(), "Era esperado valores iguais, mas  Color.GREEN é diferente de " + result4136 + " <r1.getUpPaint()>")
chamada antiga: assertEquals(Color.RED, r1.getDownPaint())
nova chamada: assertEquals(Color.RED, r1.getDownPaint(), "Era esperado valores iguais, mas  Color.RED é diferente de " + result4137 + " <r1.getDownPaint()>")
chamada antiga: assertFalse(r1.getUseOutlinePaint())
nova chamada: assertFalse(r1.getUseOutlinePaint(), "Era esperado falso, mas " + result4138 + " <r1.getUseOutlinePaint()> é verdadeiro ")
chamada antiga: assertTrue(r1.getDrawVolume())
nova chamada: assertTrue(r1.getDrawVolume(), "Era esperado verdadeiro, mas " + result4139 + " <r1.getDrawVolume()> é falso")
chamada antiga: assertEquals(Color.GRAY, r1.getVolumePaint())
nova chamada: assertEquals(Color.GRAY, r1.getVolumePaint(), "Era esperado valores iguais, mas  Color.GRAY é diferente de " + result4140 + " <r1.getVolumePaint()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4141 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4142 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4143 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4144 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4145 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4146 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4147 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4148 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4149 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4150 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4151 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4152 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4153 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4154 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4155 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4156 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4157 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4158 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4159 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4160 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4161 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4162 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(new Range(1.0, 4.0), range)
nova chamada: assertEquals(new Range(1.0, 4.0), range, "Era esperado valores iguais, mas  new Range(1.0, 4.0) é diferente de " + " range")
chamada antiga: assertEquals(new Range(-1.0, 4.0), range)
nova chamada: assertEquals(new Range(-1.0, 4.0), range, "Era esperado valores iguais, mas  new Range(-1.0, 4.0) é diferente de " + " range")
chamada antiga: assertNull(range)
nova chamada: assertNull(range, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(range)
nova chamada: assertNull(range, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4163 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4164 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4165 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4166 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4167 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4168 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4169 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4170 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4171 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4172 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4173 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4174 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4175 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4176 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4177 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4178 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4179 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4180 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4181 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(renderer.findDomainBounds(null) == null)
nova chamada: assertTrue(renderer.findDomainBounds(null) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(renderer.findRangeBounds(null) == null)
nova chamada: assertTrue(renderer.findRangeBounds(null) == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4182 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.getLegendItemLabelGenerator() != r2.getLegendItemLabelGenerator())
nova chamada: assertTrue(r1.getLegendItemLabelGenerator() != r2.getLegendItemLabelGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4183 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.getLegendItemToolTipGenerator() != r2.getLegendItemToolTipGenerator())
nova chamada: assertTrue(r1.getLegendItemToolTipGenerator() != r2.getLegendItemToolTipGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4184 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.getLegendItemURLGenerator() != r2.getLegendItemURLGenerator())
nova chamada: assertTrue(r1.getLegendItemURLGenerator() != r2.getLegendItemURLGenerator(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4185 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4186 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4187 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4188 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4189 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4190 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4191 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4192 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4193 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4194 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4195 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4196 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4197 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4198 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4199 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4200 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4201 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4202 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4203 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4204 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4205 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4206 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4207 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4208 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4209 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4210 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4211 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4212 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4213 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4214 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4215 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4216 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4217 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4218 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4219 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4220 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4221 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4222 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4223 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4224 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4225 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4226 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4227 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4228 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4229 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4230 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4231 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4232 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4233 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4234 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4235 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4236 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4237 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4238 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4239 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4240 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(bounds.contains(0.9))
nova chamada: assertFalse(bounds.contains(0.9), "Era esperado falso, mas " + result4241 + " <bounds.contains(0.9)> é verdadeiro ")
chamada antiga: assertTrue(bounds.contains(1.0))
nova chamada: assertTrue(bounds.contains(1.0), "Era esperado verdadeiro, mas " + result4242 + " <bounds.contains(1.0)> é falso")
chamada antiga: assertTrue(bounds.contains(2.0))
nova chamada: assertTrue(bounds.contains(2.0), "Era esperado verdadeiro, mas " + result4243 + " <bounds.contains(2.0)> é falso")
chamada antiga: assertFalse(bounds.contains(2.10))
nova chamada: assertFalse(bounds.contains(2.10), "Era esperado falso, mas " + result4244 + " <bounds.contains(2.10)> é verdadeiro ")
chamada antiga: assertFalse(bounds.contains(1.0))
nova chamada: assertFalse(bounds.contains(1.0), "Era esperado falso, mas " + result4245 + " <bounds.contains(1.0)> é verdadeiro ")
chamada antiga: assertTrue(bounds.contains(2.0))
nova chamada: assertTrue(bounds.contains(2.0), "Era esperado verdadeiro, mas " + result4246 + " <bounds.contains(2.0)> é falso")
chamada antiga: assertTrue(bounds.contains(5.0))
nova chamada: assertTrue(bounds.contains(5.0), "Era esperado verdadeiro, mas " + result4247 + " <bounds.contains(5.0)> é falso")
chamada antiga: assertFalse(bounds.contains(6.0))
nova chamada: assertFalse(bounds.contains(6.0), "Era esperado falso, mas " + result4248 + " <bounds.contains(6.0)> é verdadeiro ")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4249 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4250 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4251 + " <li.getSeriesIndex()>")
chamada antiga: assertTrue(success)
nova chamada: assertTrue(success, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4252 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4253 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4254 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4255 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(bounds.contains(6.0))
nova chamada: assertTrue(bounds.contains(6.0), "Era esperado verdadeiro, mas " + result4256 + " <bounds.contains(6.0)> é falso")
chamada antiga: assertTrue(bounds.contains(8.0))
nova chamada: assertTrue(bounds.contains(8.0), "Era esperado verdadeiro, mas " + result4257 + " <bounds.contains(8.0)> é falso")
chamada antiga: assertNull(renderer.findRangeBounds(null))
nova chamada: assertNull(renderer.findRangeBounds(null), "Era esperado nulo, mas " + result4258 + " <renderer.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(renderer.findRangeBounds(new DefaultTableXYDataset()))
nova chamada: assertNull(renderer.findRangeBounds(new DefaultTableXYDataset()), "Era esperado nulo, mas " + result4259 + " <renderer.findRangeBounds(new DefaultTableXYDataset())> não é nulo")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4260 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4261 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4262 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4263 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4264 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4265 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4266 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4267 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4268 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4269 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4270 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4271 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4272 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4273 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4274 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findZBounds(null))
nova chamada: assertNull(r.findZBounds(null), "Era esperado nulo, mas " + result4275 + " <r.findZBounds(null)> não é nulo")
chamada antiga: assertNotNull(range)
nova chamada: assertNotNull(range, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(range)
nova chamada: assertNotNull(range, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(range)
nova chamada: assertNotNull(range, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNull(renderer.findRangeBounds(null))
nova chamada: assertNull(renderer.findRangeBounds(null), "Era esperado nulo, mas " + result4276 + " <renderer.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4277 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4278 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4279 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4280 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4281 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4282 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4283 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4284 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4285 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4286 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4287 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4288 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4289 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4290 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4291 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4292 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4293 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4294 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4295 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(r1.hashCode() == r2.hashCode())
nova chamada: assertFalse(r1.hashCode() == r2.hashCode(), "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4296 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4297 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4298 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4299 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4300 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4301 + " <li.getSeriesIndex()>")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4302 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4303 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4304 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4305 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4306 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(h1 == h2)
nova chamada: assertFalse(h1 == h2, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4307 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(bounds.contains(0.3))
nova chamada: assertFalse(bounds.contains(0.3), "Era esperado falso, mas " + result4308 + " <bounds.contains(0.3)> é verdadeiro ")
chamada antiga: assertTrue(bounds.contains(0.5))
nova chamada: assertTrue(bounds.contains(0.5), "Era esperado verdadeiro, mas " + result4309 + " <bounds.contains(0.5)> é falso")
chamada antiga: assertTrue(bounds.contains(2.5))
nova chamada: assertTrue(bounds.contains(2.5), "Era esperado verdadeiro, mas " + result4310 + " <bounds.contains(2.5)> é falso")
chamada antiga: assertFalse(bounds.contains(2.8))
nova chamada: assertFalse(bounds.contains(2.8), "Era esperado falso, mas " + result4311 + " <bounds.contains(2.8)> é verdadeiro ")
chamada antiga: assertTrue(bounds.contains(6.0))
nova chamada: assertTrue(bounds.contains(6.0), "Era esperado verdadeiro, mas " + result4312 + " <bounds.contains(6.0)> é falso")
chamada antiga: assertTrue(bounds.contains(8.0))
nova chamada: assertTrue(bounds.contains(8.0), "Era esperado verdadeiro, mas " + result4313 + " <bounds.contains(8.0)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4314 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4315 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4316 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4317 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4318 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4319 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4320 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4321 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4322 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4323 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4324 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4325 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4326 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNull(r.findDomainBounds(null))
nova chamada: assertNull(r.findDomainBounds(null), "Era esperado nulo, mas " + result4327 + " <r.findDomainBounds(null)> não é nulo")
chamada antiga: assertNull(r.findRangeBounds(null))
nova chamada: assertNull(r.findRangeBounds(null), "Era esperado nulo, mas " + result4328 + " <r.findRangeBounds(null)> não é nulo")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4329 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4330 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4331 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4332 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4333 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4334 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4335 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4336 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4337 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4338 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4339 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4340 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(range == null)
nova chamada: assertTrue(range == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(range == null)
nova chamada: assertTrue(range == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(range == null)
nova chamada: assertTrue(range == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(range == null)
nova chamada: assertTrue(range == null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertNull(renderer.findRangeBounds(null))
nova chamada: assertNull(renderer.findRangeBounds(null), "Era esperado nulo, mas " + result4341 + " <renderer.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(renderer.findRangeBounds(null))
nova chamada: assertNull(renderer.findRangeBounds(null), "Era esperado nulo, mas " + result4342 + " <renderer.findRangeBounds(null)> não é nulo")
chamada antiga: assertNull(r)
nova chamada: assertNull(r, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4343 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4344 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4345 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4346 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4347 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4348 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4349 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4350 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4351 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4352 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(null))
nova chamada: assertFalse(r1.equals(null), "Era esperado falso, mas " + result4353 + " <r1.equals(null)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4354 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4355 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4356 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4357 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4358 + " <li.getSeriesIndex()>")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4359 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4360 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4361 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4362 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4363 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4364 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4365 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4366 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4367 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4368 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4369 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4370 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4371 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4372 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result4373 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4374 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result4375 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4376 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result4377 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4378 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4379 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(p1 instanceof Cloneable)
nova chamada: assertFalse(p1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertFalse(p1 instanceof PublicCloneable)
nova chamada: assertFalse(p1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4380 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4381 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4382 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4383 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4384 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4385 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4386 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4387 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4388 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4389 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4390 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4391 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4392 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4393 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4394 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4395 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4396 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4397 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4398 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4399 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4400 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4401 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4402 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4403 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4404 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4405 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4406 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4407 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4408 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4409 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4410 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4411 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals("S5", li.getLabel())
nova chamada: assertEquals("S5", li.getLabel(), "Era esperado valores iguais, mas  'S5' é diferente de " + result4412 + " <li.getLabel()>")
chamada antiga: assertEquals(1, li.getDatasetIndex())
nova chamada: assertEquals(1, li.getDatasetIndex(), "Era esperado valores iguais, mas  1 é diferente de " + result4413 + " <li.getDatasetIndex()>")
chamada antiga: assertEquals(2, li.getSeriesIndex())
nova chamada: assertEquals(2, li.getSeriesIndex(), "Era esperado valores iguais, mas  2 é diferente de " + result4414 + " <li.getSeriesIndex()>")
chamada antiga: assertFalse(TestUtils.containsInstanceOf(ec.getEntities(), XYItemEntity.class))
nova chamada: assertFalse(TestUtils.containsInstanceOf(ec.getEntities(), XYItemEntity.class), "Era esperado falso, mas " + result4415 + " <TestUtils.containsInstanceOf(ec.getEntities(), XYItemEntity.class)> é verdadeiro ")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4416 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(p1 instanceof Cloneable)
nova chamada: assertFalse(p1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertFalse(p1 instanceof PublicCloneable)
nova chamada: assertFalse(p1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4417 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4418 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4419 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4420 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4421 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4422 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4423 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4424 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4425 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4426 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4427 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4428 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(new Range(1.0, 4.0), range)
nova chamada: assertEquals(new Range(1.0, 4.0), range, "Era esperado valores iguais, mas  new Range(1.0, 4.0) é diferente de " + " range")
chamada antiga: assertEquals(new Range(-1.0, 4.0), range)
nova chamada: assertEquals(new Range(-1.0, 4.0), range, "Era esperado valores iguais, mas  new Range(-1.0, 4.0) é diferente de " + " range")
chamada antiga: assertNull(range)
nova chamada: assertNull(range, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertNull(range)
nova chamada: assertNull(range, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(r2, r1)
nova chamada: assertEquals(r2, r1, "Era esperado valores iguais, mas  r2 é diferente de " + " r1")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4429 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4430 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4431 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4432 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4433 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4434 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 instanceof PublicCloneable)
nova chamada: assertTrue(r1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(bounds.contains(6.0))
nova chamada: assertTrue(bounds.contains(6.0), "Era esperado verdadeiro, mas " + result4435 + " <bounds.contains(6.0)> é falso")
chamada antiga: assertTrue(bounds.contains(8.0))
nova chamada: assertTrue(bounds.contains(8.0), "Era esperado verdadeiro, mas " + result4436 + " <bounds.contains(8.0)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4437 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r2.equals(r1))
nova chamada: assertTrue(r2.equals(r1), "Era esperado verdadeiro, mas " + result4438 + " <r2.equals(r1)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4439 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4440 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4441 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4442 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4443 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4444 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4445 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4446 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4447 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4448 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4449 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4450 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4451 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4452 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4453 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4454 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4455 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4456 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4457 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4458 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4459 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4460 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4461 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4462 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4463 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4464 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4465 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4466 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4467 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4468 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4469 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4470 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4471 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4472 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4473 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4474 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4475 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4476 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4477 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4478 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4479 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4480 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4481 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4482 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4483 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4484 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4485 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4486 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4487 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4488 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4489 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4490 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4491 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4492 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4493 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4494 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4495 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4496 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4497 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4498 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4499 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4500 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4501 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4502 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4503 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4504 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4505 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4506 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4507 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4508 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertNotEquals(r1, r2)
nova chamada: assertNotEquals(r1, r2, "Era esperado valores diferentes, mas  r1 é igual a " + " r2")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4509 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4510 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4511 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4512 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4513 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4514 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4515 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4516 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4517 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4518 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4519 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4520 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4521 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4522 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4523 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4524 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4525 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4526 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4527 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4528 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4529 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4530 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4531 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4532 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4533 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4534 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4535 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4536 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4537 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4538 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4539 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4540 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4541 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4542 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4543 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4544 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4545 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4546 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4547 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4548 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4549 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4550 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4551 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4552 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4553 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(listener.lastEvent.getRenderer() == r2)
nova chamada: assertTrue(listener.lastEvent.getRenderer() == r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertFalse(r1.hasListener(listener))
nova chamada: assertFalse(r1.hasListener(listener), "Era esperado falso, mas " + result4554 + " <r1.hasListener(listener)> é verdadeiro ")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4555 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4556 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4557 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4558 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4559 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4560 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4561 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4562 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4563 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4564 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4565 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4566 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4567 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4568 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4569 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4570 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4571 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4572 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4573 + " <detector.getNotified()> é falso")
chamada antiga: assertTrue(detector.getNotified())
nova chamada: assertTrue(detector.getNotified(), "Era esperado verdadeiro, mas " + result4574 + " <detector.getNotified()> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertEquals(true, r.getAutoPopulateSeriesPaint())
nova chamada: assertEquals(true, r.getAutoPopulateSeriesPaint(), "Era esperado valores iguais, mas  true é diferente de " + result4575 + " <r.getAutoPopulateSeriesPaint()>")
chamada antiga: assertEquals(false, r.getAutoPopulateSeriesFillPaint())
nova chamada: assertEquals(false, r.getAutoPopulateSeriesFillPaint(), "Era esperado valores iguais, mas  false é diferente de " + result4576 + " <r.getAutoPopulateSeriesFillPaint()>")
chamada antiga: assertEquals(false, r.getAutoPopulateSeriesOutlinePaint())
nova chamada: assertEquals(false, r.getAutoPopulateSeriesOutlinePaint(), "Era esperado valores iguais, mas  false é diferente de " + result4577 + " <r.getAutoPopulateSeriesOutlinePaint()>")
chamada antiga: assertEquals(true, r.getAutoPopulateSeriesStroke())
nova chamada: assertEquals(true, r.getAutoPopulateSeriesStroke(), "Era esperado valores iguais, mas  true é diferente de " + result4578 + " <r.getAutoPopulateSeriesStroke()>")
chamada antiga: assertEquals(false, r.getAutoPopulateSeriesOutlineStroke())
nova chamada: assertEquals(false, r.getAutoPopulateSeriesOutlineStroke(), "Era esperado valores iguais, mas  false é diferente de " + result4579 + " <r.getAutoPopulateSeriesOutlineStroke()>")
chamada antiga: assertEquals(true, r.getAutoPopulateSeriesShape())
nova chamada: assertEquals(true, r.getAutoPopulateSeriesShape(), "Era esperado valores iguais, mas  true é diferente de " + result4580 + " <r.getAutoPopulateSeriesShape()>")
chamada antiga: assertEquals(Color.BLUE, r.getDefaultPaint())
nova chamada: assertEquals(Color.BLUE, r.getDefaultPaint(), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result4581 + " <r.getDefaultPaint()>")
chamada antiga: assertEquals(Color.BLUE, r.lookupSeriesPaint(0))
nova chamada: assertEquals(Color.BLUE, r.lookupSeriesPaint(0), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result4582 + " <r.lookupSeriesPaint(0)>")
chamada antiga: assertNull(r.getSeriesPaint(0))
nova chamada: assertNull(r.getSeriesPaint(0), "Era esperado nulo, mas " + result4583 + " <r.getSeriesPaint(0)> não é nulo")
chamada antiga: assertEquals(DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[0], r.lookupSeriesPaint(0))
nova chamada: assertEquals(DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[0], r.lookupSeriesPaint(0), "Era esperado valores iguais, mas  DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE[0] é diferente de " + result4584 + " <r.lookupSeriesPaint(0)>")
chamada antiga: assertNotNull(r.getSeriesPaint(0))
nova chamada: assertNotNull(r.getSeriesPaint(0), "Era esperado não nulo, mas " + result4585 + " <r.getSeriesPaint(0)> é nulo")
chamada antiga: assertEquals(Color.WHITE, r.getDefaultFillPaint())
nova chamada: assertEquals(Color.WHITE, r.getDefaultFillPaint(), "Era esperado valores iguais, mas  Color.WHITE é diferente de " + result4586 + " <r.getDefaultFillPaint()>")
chamada antiga: assertEquals(Color.WHITE, r.lookupSeriesFillPaint(0))
nova chamada: assertEquals(Color.WHITE, r.lookupSeriesFillPaint(0), "Era esperado valores iguais, mas  Color.WHITE é diferente de " + result4587 + " <r.lookupSeriesFillPaint(0)>")
chamada antiga: assertNull(r.getSeriesFillPaint(0))
nova chamada: assertNull(r.getSeriesFillPaint(0), "Era esperado nulo, mas " + result4588 + " <r.getSeriesFillPaint(0)> não é nulo")
chamada antiga: assertEquals(DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[0], r.lookupSeriesFillPaint(0))
nova chamada: assertEquals(DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[0], r.lookupSeriesFillPaint(0), "Era esperado valores iguais, mas  DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE[0] é diferente de " + result4589 + " <r.lookupSeriesFillPaint(0)>")
chamada antiga: assertNotNull(r.getSeriesFillPaint(0))
nova chamada: assertNotNull(r.getSeriesFillPaint(0), "Era esperado não nulo, mas " + result4590 + " <r.getSeriesFillPaint(0)> é nulo")
chamada antiga: assertEquals(Color.GRAY, r.getDefaultOutlinePaint())
nova chamada: assertEquals(Color.GRAY, r.getDefaultOutlinePaint(), "Era esperado valores iguais, mas  Color.GRAY é diferente de " + result4591 + " <r.getDefaultOutlinePaint()>")
chamada antiga: assertEquals(Color.GRAY, r.lookupSeriesOutlinePaint(0))
nova chamada: assertEquals(Color.GRAY, r.lookupSeriesOutlinePaint(0), "Era esperado valores iguais, mas  Color.GRAY é diferente de " + result4592 + " <r.lookupSeriesOutlinePaint(0)>")
chamada antiga: assertNull(r.getSeriesOutlinePaint(0))
nova chamada: assertNull(r.getSeriesOutlinePaint(0), "Era esperado nulo, mas " + result4593 + " <r.getSeriesOutlinePaint(0)> não é nulo")
chamada antiga: assertEquals(DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[0], r.lookupSeriesOutlinePaint(0))
nova chamada: assertEquals(DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[0], r.lookupSeriesOutlinePaint(0), "Era esperado valores iguais, mas  DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE[0] é diferente de " + result4594 + " <r.lookupSeriesOutlinePaint(0)>")
chamada antiga: assertNotNull(r.getSeriesOutlinePaint(0))
nova chamada: assertNotNull(r.getSeriesOutlinePaint(0), "Era esperado não nulo, mas " + result4595 + " <r.getSeriesOutlinePaint(0)> é nulo")
chamada antiga: assertEquals(255, gps.getAlpha())
nova chamada: assertEquals(255, gps.getAlpha(), "Era esperado valores iguais, mas  255 é diferente de " + result4596 + " <gps.getAlpha()>")
chamada antiga: assertTrue(c.equals(Color.BLACK))
nova chamada: assertTrue(c.equals(Color.BLACK), "Era esperado verdadeiro, mas " + result4597 + " <c.equals(Color.BLACK)> é falso")
chamada antiga: assertTrue(c.equals(Color.WHITE))
nova chamada: assertTrue(c.equals(Color.WHITE), "Era esperado verdadeiro, mas " + result4598 + " <c.equals(Color.WHITE)> é falso")
chamada antiga: assertTrue(c.equals(Color.BLACK))
nova chamada: assertTrue(c.equals(Color.BLACK), "Era esperado verdadeiro, mas " + result4599 + " <c.equals(Color.BLACK)> é falso")
chamada antiga: assertTrue(c.equals(Color.WHITE))
nova chamada: assertTrue(c.equals(Color.WHITE), "Era esperado verdadeiro, mas " + result4600 + " <c.equals(Color.WHITE)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result4601 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result4602 + " <g2.equals(g1)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result4603 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result4604 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result4605 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result4606 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result4607 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result4608 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result4609 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result4610 + " <g1.equals(g2)> é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0), "Era esperado valores iguais, mas  0 é diferente de " + result4611 + " <RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4612 + " <RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 3.3))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 3.3), "Era esperado valores iguais, mas  0 é diferente de " + result4613 + " <RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 3.3)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4614 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2), "Era esperado valores iguais, mas  1 é diferente de " + result4615 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4616 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4), "Era esperado valores iguais, mas  1 é diferente de " + result4617 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4618 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4619 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4620 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4), "Era esperado valores iguais, mas  2 é diferente de " + result4621 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4622 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4623 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4624 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4), "Era esperado valores iguais, mas  3 é diferente de " + result4625 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5), "Era esperado valores iguais, mas  3 é diferente de " + result4626 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.1), "Era esperado valores iguais, mas  0 é diferente de " + result4627 + " <RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4628 + " <RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4629 + " <RendererUtils.findLiveItemsLowerBound(d, 1, 2.0, 2.2)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4630 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4631 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4632 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4), "Era esperado valores iguais, mas  1 é diferente de " + result4633 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4634 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4635 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4636 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4), "Era esperado valores iguais, mas  2 é diferente de " + result4637 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4638 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4639 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4640 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4), "Era esperado valores iguais, mas  2 é diferente de " + result4641 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5), "Era esperado valores iguais, mas  3 é diferente de " + result4642 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4643 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 4.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4644 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 4.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 4.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 4.0), "Era esperado valores iguais, mas  1 é diferente de " + result4645 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 4.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.0))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.0), "Era esperado valores iguais, mas  4 é diferente de " + result4646 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0), "Era esperado valores iguais, mas  0 é diferente de " + result4647 + " <RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.0), "Era esperado valores iguais, mas  0 é diferente de " + result4648 + " <RendererUtils.findLiveItemsLowerBound(d, 1, 0.0, 1.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 1.1, 2.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 1, 1.1, 2.0), "Era esperado valores iguais, mas  0 é diferente de " + result4649 + " <RendererUtils.findLiveItemsLowerBound(d, 1, 1.1, 2.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 0.1, 0.5))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 0.1, 0.5), "Era esperado valores iguais, mas  1 é diferente de " + result4650 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 0.1, 0.5)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 0.1, 1.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 0.1, 1.0), "Era esperado valores iguais, mas  1 é diferente de " + result4651 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 0.1, 1.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.1, 2.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 1.1, 2.0), "Era esperado valores iguais, mas  0 é diferente de " + result4652 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 1.1, 2.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 2.2, 3.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 2.2, 3.0), "Era esperado valores iguais, mas  0 é diferente de " + result4653 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 2.2, 3.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 3.3, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 2, 3.3, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4654 + " <RendererUtils.findLiveItemsLowerBound(d, 2, 3.3, 4.0)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.0))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.0), "Era esperado valores iguais, mas  2 é diferente de " + result4655 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.0), "Era esperado valores iguais, mas  1 é diferente de " + result4656 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.0), "Era esperado valores iguais, mas  0 é diferente de " + result4657 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4658 + " <RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.0)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 0.5))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 0.5), "Era esperado valores iguais, mas  3 é diferente de " + result4659 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 0.5)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 1.0))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 1.0), "Era esperado valores iguais, mas  3 é diferente de " + result4660 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 1.0)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 1.1, 2.0))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 4, 1.1, 2.0), "Era esperado valores iguais, mas  2 é diferente de " + result4661 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 1.1, 2.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.2, 3.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.2, 3.0), "Era esperado valores iguais, mas  1 é diferente de " + result4662 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 2.2, 3.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 3.3, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 3.3, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4663 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 3.3, 4.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 4.4, 5.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 4.4, 5.0), "Era esperado valores iguais, mas  0 é diferente de " + result4664 + " <RendererUtils.findLiveItemsLowerBound(d, 4, 4.4, 5.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 3.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 3.0), "Era esperado valores iguais, mas  0 é diferente de " + result4665 + " <RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 3.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 2.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 2.0), "Era esperado valores iguais, mas  1 é diferente de " + result4666 + " <RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 2.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 1.0))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 1.0), "Era esperado valores iguais, mas  4 é diferente de " + result4667 + " <RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 1.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 0.5))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 0.5), "Era esperado valores iguais, mas  4 é diferente de " + result4668 + " <RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 0.5)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0), "Era esperado valores iguais, mas  0 é diferente de " + result4669 + " <RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4670 + " <RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 3.3))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 3.3), "Era esperado valores iguais, mas  0 é diferente de " + result4671 + " <RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 3.3)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4672 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.1)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2), "Era esperado valores iguais, mas  1 é diferente de " + result4673 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4674 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4), "Era esperado valores iguais, mas  1 é diferente de " + result4675 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4676 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.1)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2), "Era esperado valores iguais, mas  2 é diferente de " + result4677 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3), "Era esperado valores iguais, mas  2 é diferente de " + result4678 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4), "Era esperado valores iguais, mas  2 é diferente de " + result4679 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4680 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.1)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 1.0, 2.2))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 1.0, 2.2), "Era esperado valores iguais, mas  3 é diferente de " + result4681 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 1.0, 2.2)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 2.0, 3.3))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 2.0, 3.3), "Era esperado valores iguais, mas  3 é diferente de " + result4682 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 2.0, 3.3)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 3.0, 4.4))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 3.0, 4.4), "Era esperado valores iguais, mas  3 é diferente de " + result4683 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 3.0, 4.4)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 4.0, 5.5))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 4.0, 5.5), "Era esperado valores iguais, mas  3 é diferente de " + result4684 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 4.0, 5.5)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.1), "Era esperado valores iguais, mas  0 é diferente de " + result4685 + " <RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4686 + " <RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 2.2))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 2.2), "Era esperado valores iguais, mas  0 é diferente de " + result4687 + " <RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 2.2)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.0), "Era esperado valores iguais, mas  0 é diferente de " + result4688 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2), "Era esperado valores iguais, mas  1 é diferente de " + result4689 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3), "Era esperado valores iguais, mas  1 é diferente de " + result4690 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4), "Era esperado valores iguais, mas  1 é diferente de " + result4691 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4692 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.1)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2), "Era esperado valores iguais, mas  1 é diferente de " + result4693 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3), "Era esperado valores iguais, mas  2 é diferente de " + result4694 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4), "Era esperado valores iguais, mas  2 é diferente de " + result4695 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.1))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.1), "Era esperado valores iguais, mas  0 é diferente de " + result4696 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.1)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 1.0, 2.2))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 1.0, 2.2), "Era esperado valores iguais, mas  1 é diferente de " + result4697 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 1.0, 2.2)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 2.0, 3.3))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 2.0, 3.3), "Era esperado valores iguais, mas  2 é diferente de " + result4698 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 2.0, 3.3)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 3.0, 4.4))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 3.0, 4.4), "Era esperado valores iguais, mas  3 é diferente de " + result4699 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 3.0, 4.4)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 4.0, 5.5))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 4.0, 5.5), "Era esperado valores iguais, mas  3 é diferente de " + result4700 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 4.0, 5.5)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.0), "Era esperado valores iguais, mas  0 é diferente de " + result4701 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 1.0)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 2.0))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 2.0), "Era esperado valores iguais, mas  3 é diferente de " + result4702 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 2.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 3.0))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 3.0), "Era esperado valores iguais, mas  4 é diferente de " + result4703 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 3.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 4.0))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 4.0), "Era esperado valores iguais, mas  4 é diferente de " + result4704 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.0, 4.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0), "Era esperado valores iguais, mas  0 é diferente de " + result4705 + " <RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.0), "Era esperado valores iguais, mas  0 é diferente de " + result4706 + " <RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 1.1, 2.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 1.1, 2.0), "Era esperado valores iguais, mas  0 é diferente de " + result4707 + " <RendererUtils.findLiveItemsUpperBound(d, 1, 1.1, 2.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 0.5))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 0.5), "Era esperado valores iguais, mas  1 é diferente de " + result4708 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 0.5)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 1.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 1.0), "Era esperado valores iguais, mas  1 é diferente de " + result4709 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 0.1, 1.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 1.1, 2.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 1.1, 2.0), "Era esperado valores iguais, mas  0 é diferente de " + result4710 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 1.1, 2.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 2.2, 3.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 2.2, 3.0), "Era esperado valores iguais, mas  0 é diferente de " + result4711 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 2.2, 3.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 3.3, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 3.3, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4712 + " <RendererUtils.findLiveItemsUpperBound(d, 2, 3.3, 4.0)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.0))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.0), "Era esperado valores iguais, mas  2 é diferente de " + result4713 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 0.0, 1.0)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.0))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.0), "Era esperado valores iguais, mas  2 é diferente de " + result4714 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.0), "Era esperado valores iguais, mas  1 é diferente de " + result4715 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4716 + " <RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.0)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 0.5))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 0.5), "Era esperado valores iguais, mas  3 é diferente de " + result4717 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 0.5)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 1.0))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 1.0), "Era esperado valores iguais, mas  3 é diferente de " + result4718 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 0.1, 1.0)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 1.1, 2.0))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 4, 1.1, 2.0), "Era esperado valores iguais, mas  2 é diferente de " + result4719 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 1.1, 2.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 2.2, 3.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 4, 2.2, 3.0), "Era esperado valores iguais, mas  1 é diferente de " + result4720 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 2.2, 3.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 3.3, 4.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 3.3, 4.0), "Era esperado valores iguais, mas  0 é diferente de " + result4721 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 3.3, 4.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 4.4, 5.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 4, 4.4, 5.0), "Era esperado valores iguais, mas  0 é diferente de " + result4722 + " <RendererUtils.findLiveItemsUpperBound(d, 4, 4.4, 5.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 0.0, 5.0))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 0.0, 5.0), "Era esperado valores iguais, mas  4 é diferente de " + result4723 + " <RendererUtils.findLiveItemsUpperBound(d, 5, 0.0, 5.0)>")
chamada antiga: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 1.0, 5.0))
nova chamada: assertEquals(4, RendererUtils.findLiveItemsUpperBound(d, 5, 1.0, 5.0), "Era esperado valores iguais, mas  4 é diferente de " + result4724 + " <RendererUtils.findLiveItemsUpperBound(d, 5, 1.0, 5.0)>")
chamada antiga: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 5, 2.0, 5.0))
nova chamada: assertEquals(3, RendererUtils.findLiveItemsUpperBound(d, 5, 2.0, 5.0), "Era esperado valores iguais, mas  3 é diferente de " + result4725 + " <RendererUtils.findLiveItemsUpperBound(d, 5, 2.0, 5.0)>")
chamada antiga: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 5, 3.0, 5.0))
nova chamada: assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 5, 3.0, 5.0), "Era esperado valores iguais, mas  0 é diferente de " + result4726 + " <RendererUtils.findLiveItemsUpperBound(d, 5, 3.0, 5.0)>")
chamada antiga: assertEquals(1, RendererUtils.findLiveItemsLowerBound(dataset, 0, 10.0, 20.0))
nova chamada: assertEquals(1, RendererUtils.findLiveItemsLowerBound(dataset, 0, 10.0, 20.0), "Era esperado valores iguais, mas  1 é diferente de " + result4727 + " <RendererUtils.findLiveItemsLowerBound(dataset, 0, 10.0, 20.0)>")
chamada antiga: assertEquals(2, RendererUtils.findLiveItemsUpperBound(dataset, 0, 10.0, 20.0))
nova chamada: assertEquals(2, RendererUtils.findLiveItemsUpperBound(dataset, 0, 10.0, 20.0), "Era esperado valores iguais, mas  2 é diferente de " + result4728 + " <RendererUtils.findLiveItemsUpperBound(dataset, 0, 10.0, 20.0)>")
chamada antiga: assertEquals(1, bounds[0])
nova chamada: assertEquals(1, bounds[0], "Era esperado valores iguais, mas  1 é diferente de " + " bounds[0]")
chamada antiga: assertEquals(2, bounds[1])
nova chamada: assertEquals(2, bounds[1], "Era esperado valores iguais, mas  2 é diferente de " + " bounds[1]")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4729 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4730 + " <r1.equals(r2)> é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4731 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(r1 != r2)
nova chamada: assertTrue(r1 != r2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.getClass() == r2.getClass())
nova chamada: assertTrue(r1.getClass() == r2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4732 + " <r1.equals(r2)> é falso")
chamada antiga: assertFalse(r1.equals(r2))
nova chamada: assertFalse(r1.equals(r2), "Era esperado falso, mas " + result4733 + " <r1.equals(r2)> é verdadeiro ")
chamada antiga: assertTrue(r1.equals(r2))
nova chamada: assertTrue(r1.equals(r2), "Era esperado verdadeiro, mas " + result4734 + " <r1.equals(r2)> é falso")
chamada antiga: assertEquals(r1, r2)
nova chamada: assertEquals(r1, r2, "Era esperado valores iguais, mas  r1 é diferente de " + " r2")
chamada antiga: assertTrue(out1.equals(out2))
nova chamada: assertTrue(out1.equals(out2), "Era esperado verdadeiro, mas " + result4735 + " <out1.equals(out2)> é falso")
chamada antiga: assertTrue(out2.equals(out1))
nova chamada: assertTrue(out2.equals(out1), "Era esperado verdadeiro, mas " + result4736 + " <out2.equals(out1)> é falso")
chamada antiga: assertFalse(out1.equals(out2))
nova chamada: assertFalse(out1.equals(out2), "Era esperado falso, mas " + result4737 + " <out1.equals(out2)> é verdadeiro ")
chamada antiga: assertTrue(out1.equals(out2))
nova chamada: assertTrue(out1.equals(out2), "Era esperado verdadeiro, mas " + result4738 + " <out1.equals(out2)> é falso")
chamada antiga: assertFalse(out1.equals(out2))
nova chamada: assertFalse(out1.equals(out2), "Era esperado falso, mas " + result4739 + " <out1.equals(out2)> é verdadeiro ")
chamada antiga: assertTrue(out1.equals(out2))
nova chamada: assertTrue(out1.equals(out2), "Era esperado verdadeiro, mas " + result4740 + " <out1.equals(out2)> é falso")
chamada antiga: assertFalse(out1.equals(out2))
nova chamada: assertFalse(out1.equals(out2), "Era esperado falso, mas " + result4741 + " <out1.equals(out2)> é verdadeiro ")
chamada antiga: assertTrue(out1.equals(out2))
nova chamada: assertTrue(out1.equals(out2), "Era esperado verdadeiro, mas " + result4742 + " <out1.equals(out2)> é falso")
chamada antiga: assertFalse(out1 instanceof Cloneable)
nova chamada: assertFalse(out1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertFalse(out1 instanceof Serializable)
nova chamada: assertFalse(out1 instanceof Serializable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(null, m1.getStroke("A"))
nova chamada: assertEquals(null, m1.getStroke("A"), "Era esperado valores iguais, mas  null é diferente de " + result4743 + " <m1.getStroke('A')>")
chamada antiga: assertEquals(new BasicStroke(1.1f), m1.getStroke("A"))
nova chamada: assertEquals(new BasicStroke(1.1f), m1.getStroke("A"), "Era esperado valores iguais, mas  new BasicStroke(1.1f) é diferente de " + result4744 + " <m1.getStroke('A')>")
chamada antiga: assertEquals(null, m1.getStroke("A"))
nova chamada: assertEquals(null, m1.getStroke("A"), "Era esperado valores iguais, mas  null é diferente de " + result4745 + " <m1.getStroke('A')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(new BasicStroke(1.1f), m1.getStroke("A"))
nova chamada: assertEquals(new BasicStroke(1.1f), m1.getStroke("A"), "Era esperado valores iguais, mas  new BasicStroke(1.1f) é diferente de " + result4746 + " <m1.getStroke('A')>")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(m1.equals(m1))
nova chamada: assertTrue(m1.equals(m1), "Era esperado verdadeiro, mas " + result4747 + " <m1.equals(m1)> é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result4748 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(null))
nova chamada: assertFalse(m1.equals(null), "Era esperado falso, mas " + result4749 + " <m1.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(m1.equals("ABC"))
nova chamada: assertFalse(m1.equals("ABC"), "Era esperado falso, mas " + result4750 + " <m1.equals('ABC')> é verdadeiro ")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result4751 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result4752 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result4753 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result4754 + " <m1.equals(m2)> é falso")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result4755 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result4756 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result4757 + " <m1.equals(m2)> é falso")
chamada antiga: assertTrue(m1.equals(m2))
nova chamada: assertTrue(m1.equals(m2), "Era esperado verdadeiro, mas " + result4758 + " <m1.equals(m2)> é falso")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertSame(tt2, tt)
nova chamada: assertSame(tt2, tt, "Era esperado objetos iguais, mas  tt2 é diferente de " + " tt")
chamada antiga: assertSame(url2, url1)
nova chamada: assertSame(url2, url1, "Era esperado objetos iguais, mas  url2 é diferente de " + " url1")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4759 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4760 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4761 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4762 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4763 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4764 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4765 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4766 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4767 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4768 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result4769 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4770 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4771 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4772 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4773 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4774 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4775 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4776 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4777 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4778 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4779 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4780 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4781 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4782 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4783 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4784 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4785 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4786 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4787 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4788 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4789 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4790 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4791 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4792 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4793 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4794 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4795 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4796 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4797 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4798 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4799 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4800 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4801 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4802 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4803 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4804 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4805 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4806 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4807 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4808 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4809 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4810 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4811 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4812 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4813 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4814 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result4815 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4816 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4817 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4818 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4819 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4820 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4821 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4822 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4823 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4824 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4825 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4826 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4827 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4828 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4829 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4830 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4831 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4832 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4833 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4834 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4835 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4836 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4837 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4838 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4839 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4840 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4841 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4842 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4843 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4844 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4845 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4846 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4847 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4848 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4849 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4850 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4851 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4852 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4853 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4854 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4855 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4856 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4857 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4858 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4859 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4860 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4861 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4862 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4863 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4864 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4865 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4866 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4867 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4868 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4869 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4870 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4871 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4872 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4873 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4874 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4875 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4876 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4877 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4878 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4879 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4880 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4881 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4882 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4883 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4884 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4885 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4886 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4887 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4888 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4889 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4890 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4891 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4892 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4893 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4894 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4895 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result4896 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4897 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4898 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4899 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4900 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4901 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4902 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4903 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4904 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4905 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4906 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4907 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4908 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4909 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4910 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4911 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4912 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4913 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4914 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4915 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4916 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4917 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4918 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4919 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4920 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4921 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4922 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4923 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4924 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertNotNull(this.lastEvent)
nova chamada: assertNotNull(this.lastEvent, "Era esperado não nulo, mas  o valor obtido foi nulo")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4925 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result4926 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4927 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4928 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4929 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4930 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4931 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4932 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4933 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4934 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4935 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4936 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4937 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result4938 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4939 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4940 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4941 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4942 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4943 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4944 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result4945 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4946 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4947 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result4948 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 instanceof PublicCloneable)
nova chamada: assertTrue(a1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(!p1.equals(p2))
nova chamada: assertTrue(!p1.equals(p2), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4949 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(!p1.equals(p2))
nova chamada: assertTrue(!p1.equals(p2), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4950 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(!p1.equals(p2))
nova chamada: assertTrue(!p1.equals(p2), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4951 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(!p1.equals(p2))
nova chamada: assertTrue(!p1.equals(p2), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4952 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result4953 + " <p1.equals(p2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4954 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4955 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4956 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4957 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4958 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4959 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4960 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4961 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4962 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4963 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4964 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4965 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4966 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4967 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4968 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4969 + " <info1.equals(info2)> é falso")
chamada antiga: assertTrue(info2.equals(info1))
nova chamada: assertTrue(info2.equals(info1), "Era esperado verdadeiro, mas " + result4970 + " <info2.equals(info1)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4971 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4972 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4973 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4974 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4975 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4976 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4977 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4978 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4979 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4980 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4981 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4982 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4983 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4984 + " <info1.equals(info2)> é falso")
chamada antiga: assertFalse(info1.equals(info2))
nova chamada: assertFalse(info1.equals(info2), "Era esperado falso, mas " + result4985 + " <info1.equals(info2)> é verdadeiro ")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4986 + " <info1.equals(info2)> é falso")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4987 + " <info1.equals(info2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(info1 != info2)
nova chamada: assertTrue(info1 != info2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(info1.getClass() == info2.getClass())
nova chamada: assertTrue(info1.getClass() == info2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(info1.equals(info2))
nova chamada: assertTrue(info1.equals(info2), "Era esperado verdadeiro, mas " + result4988 + " <info1.equals(info2)> é falso")
chamada antiga: assertEquals(info1, info2)
nova chamada: assertEquals(info1, info2, "Era esperado valores iguais, mas  info1 é diferente de " + " info2")
chamada antiga: assertEquals(new Day(1, 1, 1970), d)
nova chamada: assertEquals(new Day(1, 1, 1970), d, "Era esperado valores iguais, mas  new Day(1, 1, 1970) é diferente de " + " d")
chamada antiga: assertEquals(new Year(1970), y)
nova chamada: assertEquals(new Year(1970), y, "Era esperado valores iguais, mas  new Year(1970) é diferente de " + " y")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4989 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4990 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4991 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4992 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4993 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4994 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4995 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4996 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4997 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result4998 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result4999 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5000 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5001 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5002 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5003 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5004 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5005 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5006 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5007 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5008 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5009 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5010 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(axis.isTickMarksVisible())
nova chamada: assertTrue(axis.isTickMarksVisible(), "Era esperado verdadeiro, mas " + result5011 + " <axis.isTickMarksVisible()> é falso")
chamada antiga: assertEquals(AxisLocation.TOP_OR_RIGHT, AxisLocation.TOP_OR_RIGHT)
nova chamada: assertEquals(AxisLocation.TOP_OR_RIGHT, AxisLocation.TOP_OR_RIGHT, "Era esperado valores iguais, mas  AxisLocation.TOP_OR_RIGHT é diferente de " + " AxisLocation.TOP_OR_RIGHT")
chamada antiga: assertEquals(AxisLocation.BOTTOM_OR_RIGHT, AxisLocation.BOTTOM_OR_RIGHT)
nova chamada: assertEquals(AxisLocation.BOTTOM_OR_RIGHT, AxisLocation.BOTTOM_OR_RIGHT, "Era esperado valores iguais, mas  AxisLocation.BOTTOM_OR_RIGHT é diferente de " + " AxisLocation.BOTTOM_OR_RIGHT")
chamada antiga: assertEquals(AxisLocation.TOP_OR_LEFT, AxisLocation.TOP_OR_LEFT)
nova chamada: assertEquals(AxisLocation.TOP_OR_LEFT, AxisLocation.TOP_OR_LEFT, "Era esperado valores iguais, mas  AxisLocation.TOP_OR_LEFT é diferente de " + " AxisLocation.TOP_OR_LEFT")
chamada antiga: assertEquals(AxisLocation.BOTTOM_OR_LEFT, AxisLocation.BOTTOM_OR_LEFT)
nova chamada: assertEquals(AxisLocation.BOTTOM_OR_LEFT, AxisLocation.BOTTOM_OR_LEFT, "Era esperado valores iguais, mas  AxisLocation.BOTTOM_OR_LEFT é diferente de " + " AxisLocation.BOTTOM_OR_LEFT")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5012 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(location1, location2)
nova chamada: assertEquals(location1, location2, "Era esperado valores iguais, mas  location1 é diferente de " + " location2")
chamada antiga: assertEquals(true, same)
nova chamada: assertEquals(true, same, "Era esperado valores iguais, mas  true é diferente de " + " same")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5013 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertTrue(qf1.equals(qf2))
nova chamada: assertTrue(qf1.equals(qf2), "Era esperado verdadeiro, mas " + result5014 + " <qf1.equals(qf2)> é falso")
chamada antiga: assertTrue(qf2.equals(qf1))
nova chamada: assertTrue(qf2.equals(qf1), "Era esperado verdadeiro, mas " + result5015 + " <qf2.equals(qf1)> é falso")
chamada antiga: assertFalse(qf1.equals(qf2))
nova chamada: assertFalse(qf1.equals(qf2), "Era esperado falso, mas " + result5016 + " <qf1.equals(qf2)> é verdadeiro ")
chamada antiga: assertTrue(qf1.equals(qf2))
nova chamada: assertTrue(qf1.equals(qf2), "Era esperado verdadeiro, mas " + result5017 + " <qf1.equals(qf2)> é falso")
chamada antiga: assertFalse(qf1.equals(qf2))
nova chamada: assertFalse(qf1.equals(qf2), "Era esperado falso, mas " + result5018 + " <qf1.equals(qf2)> é verdadeiro ")
chamada antiga: assertTrue(qf1.equals(qf2))
nova chamada: assertTrue(qf1.equals(qf2), "Era esperado verdadeiro, mas " + result5019 + " <qf1.equals(qf2)> é falso")
chamada antiga: assertFalse(qf1.equals(qf2))
nova chamada: assertFalse(qf1.equals(qf2), "Era esperado falso, mas " + result5020 + " <qf1.equals(qf2)> é verdadeiro ")
chamada antiga: assertTrue(qf1.equals(qf2))
nova chamada: assertTrue(qf1.equals(qf2), "Era esperado verdadeiro, mas " + result5021 + " <qf1.equals(qf2)> é falso")
chamada antiga: assertTrue(qf1.equals(qf2))
nova chamada: assertTrue(qf1.equals(qf2), "Era esperado verdadeiro, mas " + result5022 + " <qf1.equals(qf2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(qf1 != qf2)
nova chamada: assertTrue(qf1 != qf2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(qf1.getClass() == qf2.getClass())
nova chamada: assertTrue(qf1.getClass() == qf2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(qf1.equals(qf2))
nova chamada: assertTrue(qf1.equals(qf2), "Era esperado verdadeiro, mas " + result5023 + " <qf1.equals(qf2)> é falso")
chamada antiga: assertEquals(qf1, qf2)
nova chamada: assertEquals(qf1, qf2, "Era esperado valores iguais, mas  qf1 é diferente de " + " qf2")
chamada antiga: assertNotSame(a1, a2)
nova chamada: assertNotSame(a1, a2, "Era esperado objetos diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertSame(a1.getClass(), a2.getClass())
nova chamada: assertSame(a1.getClass(), a2.getClass(), "Era esperado objetos iguais, mas " + result5024 + " <a1.getClass()> é diferente de " + result5025 + " <a2.getClass()>")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertNotEquals(a1, a2)
nova chamada: assertNotEquals(a1, a2, "Era esperado valores diferentes, mas  a1 é igual a " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(CategoryLabelWidthType.CATEGORY, CategoryLabelWidthType.CATEGORY)
nova chamada: assertEquals(CategoryLabelWidthType.CATEGORY, CategoryLabelWidthType.CATEGORY, "Era esperado valores iguais, mas  CategoryLabelWidthType.CATEGORY é diferente de " + " CategoryLabelWidthType.CATEGORY")
chamada antiga: assertEquals(CategoryLabelWidthType.RANGE, CategoryLabelWidthType.RANGE)
nova chamada: assertEquals(CategoryLabelWidthType.RANGE, CategoryLabelWidthType.RANGE, "Era esperado valores iguais, mas  CategoryLabelWidthType.RANGE é diferente de " + " CategoryLabelWidthType.RANGE")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5026 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(w1, w2)
nova chamada: assertEquals(w1, w2, "Era esperado valores iguais, mas  w1 é diferente de " + " w2")
chamada antiga: assertTrue(w1 == w2)
nova chamada: assertTrue(w1 == w2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5027 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5028 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result5029 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5030 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5031 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5032 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5033 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5034 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5035 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5036 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5037 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5038 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5039 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5040 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5041 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5042 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5043 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5044 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5045 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(p2.equals(p1))
nova chamada: assertTrue(p2.equals(p1), "Era esperado verdadeiro, mas " + result5046 + " <p2.equals(p1)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result5047 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5048 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result5049 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5050 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result5051 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5052 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result5053 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5054 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result5055 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5056 + " <p1.equals(p2)> é falso")
chamada antiga: assertFalse(p1.equals(p2))
nova chamada: assertFalse(p1.equals(p2), "Era esperado falso, mas " + result5057 + " <p1.equals(p2)> é verdadeiro ")
chamada antiga: assertTrue(p1.equals(p2))
nova chamada: assertTrue(p1.equals(p2), "Era esperado verdadeiro, mas " + result5058 + " <p1.equals(p2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5059 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5060 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5061 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5062 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertTrue(mf2.equals(mf1))
nova chamada: assertTrue(mf2.equals(mf1), "Era esperado verdadeiro, mas " + result5063 + " <mf2.equals(mf1)> é falso")
chamada antiga: assertFalse(mf1.equals(mf2))
nova chamada: assertFalse(mf1.equals(mf2), "Era esperado falso, mas " + result5064 + " <mf1.equals(mf2)> é verdadeiro ")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5065 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertFalse(mf1.equals(mf2))
nova chamada: assertFalse(mf1.equals(mf2), "Era esperado falso, mas " + result5066 + " <mf1.equals(mf2)> é verdadeiro ")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5067 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertFalse(mf1.equals(mf2))
nova chamada: assertFalse(mf1.equals(mf2), "Era esperado falso, mas " + result5068 + " <mf1.equals(mf2)> é verdadeiro ")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5069 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertFalse(mf1.equals(mf2))
nova chamada: assertFalse(mf1.equals(mf2), "Era esperado falso, mas " + result5070 + " <mf1.equals(mf2)> é verdadeiro ")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5071 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertFalse(mf1.equals(mf2))
nova chamada: assertFalse(mf1.equals(mf2), "Era esperado falso, mas " + result5072 + " <mf1.equals(mf2)> é verdadeiro ")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5073 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5074 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(mf1 != mf2)
nova chamada: assertTrue(mf1 != mf2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(mf1.getClass() == mf2.getClass())
nova chamada: assertTrue(mf1.getClass() == mf2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5075 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertTrue(mf1.equals(mf2))
nova chamada: assertTrue(mf1.equals(mf2), "Era esperado verdadeiro, mas " + result5076 + " <mf1.equals(mf2)> é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5077 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5078 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5079 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5080 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5081 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5082 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5083 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5084 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result5085 + " <s1.equals(s2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(s1 != s2)
nova chamada: assertTrue(s1 != s2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.getClass() == s2.getClass())
nova chamada: assertTrue(s1.getClass() == s2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(s1.equals(s2))
nova chamada: assertTrue(s1.equals(s2), "Era esperado verdadeiro, mas " + result5086 + " <s1.equals(s2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5087 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t2.equals(t1))
nova chamada: assertTrue(t2.equals(t1), "Era esperado verdadeiro, mas " + result5088 + " <t2.equals(t1)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5089 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5090 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5091 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5092 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(t1 instanceof Cloneable)
nova chamada: assertFalse(t1 instanceof Cloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5093 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5094 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5095 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5096 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5097 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5098 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5099 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5100 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5101 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5102 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5103 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5104 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5105 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5106 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5107 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(CategoryAnchor.START, CategoryAnchor.START)
nova chamada: assertEquals(CategoryAnchor.START, CategoryAnchor.START, "Era esperado valores iguais, mas  CategoryAnchor.START é diferente de " + " CategoryAnchor.START")
chamada antiga: assertEquals(CategoryAnchor.MIDDLE, CategoryAnchor.MIDDLE)
nova chamada: assertEquals(CategoryAnchor.MIDDLE, CategoryAnchor.MIDDLE, "Era esperado valores iguais, mas  CategoryAnchor.MIDDLE é diferente de " + " CategoryAnchor.MIDDLE")
chamada antiga: assertEquals(CategoryAnchor.END, CategoryAnchor.END)
nova chamada: assertEquals(CategoryAnchor.END, CategoryAnchor.END, "Era esperado valores iguais, mas  CategoryAnchor.END é diferente de " + " CategoryAnchor.END")
chamada antiga: assertFalse(CategoryAnchor.START.equals(CategoryAnchor.END))
nova chamada: assertFalse(CategoryAnchor.START.equals(CategoryAnchor.END), "Era esperado falso, mas " + result5108 + " <CategoryAnchor.START.equals(CategoryAnchor.END)> é verdadeiro ")
chamada antiga: assertFalse(CategoryAnchor.MIDDLE.equals(CategoryAnchor.END))
nova chamada: assertFalse(CategoryAnchor.MIDDLE.equals(CategoryAnchor.END), "Era esperado falso, mas " + result5109 + " <CategoryAnchor.MIDDLE.equals(CategoryAnchor.END)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5110 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1 == a2)
nova chamada: assertTrue(a1 == a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5111 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5112 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5113 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5114 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5115 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5116 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5117 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5118 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5119 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5120 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5121 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5122 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5123 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5124 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5125 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5126 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5127 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5128 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5129 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5130 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5131 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5132 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5133 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5134 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5135 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5136 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5137 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5138 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5139 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5140 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5141 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5142 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5143 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result5144 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5145 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5146 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5147 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5148 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5149 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5150 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5151 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5152 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5153 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5154 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5155 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5156 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5157 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5158 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5159 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5160 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5161 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5162 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5163 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5164 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5165 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result5166 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5167 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5168 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5169 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5170 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5171 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5172 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5173 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5174 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5175 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5176 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5177 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5178 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5179 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5180 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5181 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5182 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(b)
nova chamada: assertTrue(b, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(this.lastEvent != null)
nova chamada: assertTrue(this.lastEvent != null, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5183 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5184 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5185 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5186 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5187 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5188 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5189 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5190 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5191 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5192 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5193 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5194 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5195 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t2.equals(t1))
nova chamada: assertTrue(t2.equals(t1), "Era esperado verdadeiro, mas " + result5196 + " <t2.equals(t1)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5197 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5198 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5199 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5200 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5201 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5202 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5203 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5204 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5205 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5206 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5207 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5208 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5209 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5210 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5211 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5212 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5213 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5214 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5215 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(null))
nova chamada: assertFalse(a1.equals(null), "Era esperado falso, mas " + result5216 + " <a1.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(a1.equals("Some non-DateAxis object"))
nova chamada: assertFalse(a1.equals("Some non-DateAxis object"), "Era esperado falso, mas " + result5217 + " <a1.equals('Some non-DateAxis object')> é verdadeiro ")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5218 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5219 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5220 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5221 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5222 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5223 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5224 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5225 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5226 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5227 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5228 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5229 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5230 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5231 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5232 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(d1, range.getLowerDate())
nova chamada: assertEquals(d1, range.getLowerDate(), "Era esperado valores iguais, mas  d1 é diferente de " + result5233 + " <range.getLowerDate()>")
chamada antiga: assertEquals(d2, range.getUpperDate())
nova chamada: assertEquals(d2, range.getUpperDate(), "Era esperado valores iguais, mas  d2 é diferente de " + result5234 + " <range.getUpperDate()>")
chamada antiga: assertEquals(date, axis.getMaximumDate())
nova chamada: assertEquals(date, axis.getMaximumDate(), "Era esperado valores iguais, mas  date é diferente de " + result5235 + " <axis.getMaximumDate()>")
chamada antiga: assertEquals(d0, axis.getMinimumDate())
nova chamada: assertEquals(d0, axis.getMinimumDate(), "Era esperado valores iguais, mas  d0 é diferente de " + result5236 + " <axis.getMinimumDate()>")
chamada antiga: assertEquals(d1, axis.getMinimumDate())
nova chamada: assertEquals(d1, axis.getMinimumDate(), "Era esperado valores iguais, mas  d1 é diferente de " + result5237 + " <axis.getMinimumDate()>")
chamada antiga: assertEquals(d3, axis.getMaximumDate())
nova chamada: assertEquals(d3, axis.getMaximumDate(), "Era esperado valores iguais, mas  d3 é diferente de " + result5238 + " <axis.getMaximumDate()>")
chamada antiga: assertTrue(same(y1, 95.8333333, 1.0))
nova chamada: assertTrue(same(y1, 95.8333333, 1.0), "Era esperado verdadeiro, mas " + result5239 + " <same(y1, 95.8333333, 1.0)> é falso")
chamada antiga: assertTrue(same(y2, 95.8333333, 1.0))
nova chamada: assertTrue(same(y2, 95.8333333, 1.0), "Era esperado verdadeiro, mas " + result5240 + " <same(y2, 95.8333333, 1.0)> é falso")
chamada antiga: assertTrue(same(x1, 58.125, 1.0))
nova chamada: assertTrue(same(x1, 58.125, 1.0), "Era esperado verdadeiro, mas " + result5241 + " <same(x1, 58.125, 1.0)> é falso")
chamada antiga: assertTrue(same(x2, 58.125, 1.0))
nova chamada: assertTrue(same(x2, 58.125, 1.0), "Era esperado verdadeiro, mas " + result5242 + " <same(x2, 58.125, 1.0)> é falso")
chamada antiga: assertTrue(same(y3, 54.1666667, 1.0))
nova chamada: assertTrue(same(y3, 54.1666667, 1.0), "Era esperado verdadeiro, mas " + result5243 + " <same(y3, 54.1666667, 1.0)> é falso")
chamada antiga: assertTrue(same(y4, 54.1666667, 1.0))
nova chamada: assertTrue(same(y4, 54.1666667, 1.0), "Era esperado verdadeiro, mas " + result5244 + " <same(y4, 54.1666667, 1.0)> é falso")
chamada antiga: assertTrue(same(x3, 91.875, 1.0))
nova chamada: assertTrue(same(x3, 91.875, 1.0), "Era esperado verdadeiro, mas " + result5245 + " <same(x3, 91.875, 1.0)> é falso")
chamada antiga: assertTrue(same(x4, 91.875, 1.0))
nova chamada: assertTrue(same(x4, 91.875, 1.0), "Era esperado verdadeiro, mas " + result5246 + " <same(x4, 91.875, 1.0)> é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d1.getTime())
nova chamada: assertTrue(psd.getTime() < d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d1.getTime())
nova chamada: assertTrue(nsd.getTime() >= d1.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d2.getTime())
nova chamada: assertTrue(psd.getTime() < d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d2.getTime())
nova chamada: assertTrue(nsd.getTime() >= d2.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d3.getTime())
nova chamada: assertTrue(psd.getTime() < d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d3.getTime())
nova chamada: assertTrue(nsd.getTime() >= d3.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d4.getTime())
nova chamada: assertTrue(psd.getTime() < d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d4.getTime())
nova chamada: assertTrue(nsd.getTime() >= d4.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(psd.getTime() < d0.getTime())
nova chamada: assertTrue(psd.getTime() < d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(nsd.getTime() >= d0.getTime())
nova chamada: assertTrue(nsd.getTime() >= d0.getTime(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(3, ticks.size())
nova chamada: assertEquals(3, ticks.size(), "Era esperado valores iguais, mas  3 é diferente de " + result5247 + " <ticks.size()>")
chamada antiga: assertEquals("31-Mar-2008", t1.getText())
nova chamada: assertEquals("31-Mar-2008", t1.getText(), "Era esperado valores iguais, mas  '31-Mar-2008' é diferente de " + result5248 + " <t1.getText()>")
chamada antiga: assertEquals("30-Apr-2008", t2.getText())
nova chamada: assertEquals("30-Apr-2008", t2.getText(), "Era esperado valores iguais, mas  '30-Apr-2008' é diferente de " + result5249 + " <t2.getText()>")
chamada antiga: assertEquals("31-May-2008", t3.getText())
nova chamada: assertEquals("31-May-2008", t3.getText(), "Era esperado valores iguais, mas  '31-May-2008' é diferente de " + result5250 + " <t3.getText()>")
chamada antiga: assertEquals(3, ticks.size())
nova chamada: assertEquals(3, ticks.size(), "Era esperado valores iguais, mas  3 é diferente de " + result5251 + " <ticks.size()>")
chamada antiga: assertEquals("31-Mar-2008", t1.getText())
nova chamada: assertEquals("31-Mar-2008", t1.getText(), "Era esperado valores iguais, mas  '31-Mar-2008' é diferente de " + result5252 + " <t1.getText()>")
chamada antiga: assertEquals("30-Apr-2008", t2.getText())
nova chamada: assertEquals("30-Apr-2008", t2.getText(), "Era esperado valores iguais, mas  '30-Apr-2008' é diferente de " + result5253 + " <t2.getText()>")
chamada antiga: assertEquals("31-May-2008", t3.getText())
nova chamada: assertEquals("31-May-2008", t3.getText(), "Era esperado valores iguais, mas  '31-May-2008' é diferente de " + result5254 + " <t3.getText()>")
chamada antiga: assertEquals(new Year(2010).getFirstMillisecond(cal), yprev.getTime())
nova chamada: assertEquals(new Year(2010).getFirstMillisecond(cal), yprev.getTime(), "Era esperado valores iguais, mas " + result5255 + " <new Year(2010).getFirstMillisecond(cal)> é diferente de " + result5256 + " <yprev.getTime()>")
chamada antiga: assertEquals(new Month(9, 2016).getFirstMillisecond(cal), mprev.getTime())
nova chamada: assertEquals(new Month(9, 2016).getFirstMillisecond(cal), mprev.getTime(), "Era esperado valores iguais, mas " + result5257 + " <new Month(9, 2016).getFirstMillisecond(cal)> é diferente de " + result5258 + " <mprev.getTime()>")
chamada antiga: assertEquals(new Day(7, 1, 2016).getFirstMillisecond(cal), dprev.getTime())
nova chamada: assertEquals(new Day(7, 1, 2016).getFirstMillisecond(cal), dprev.getTime(), "Era esperado valores iguais, mas " + result5259 + " <new Day(7, 1, 2016).getFirstMillisecond(cal)> é diferente de " + result5260 + " <dprev.getTime()>")
chamada antiga: assertEquals(new Hour(12, 24, 8, 2016).getFirstMillisecond(cal), hprev.getTime())
nova chamada: assertEquals(new Hour(12, 24, 8, 2016).getFirstMillisecond(cal), hprev.getTime(), "Era esperado valores iguais, mas " + result5261 + " <new Hour(12, 24, 8, 2016).getFirstMillisecond(cal)> é diferente de " + result5262 + " <hprev.getTime()>")
chamada antiga: assertEquals(1472040600000L - 5 * 60 * 1000L, minprev.getTime())
nova chamada: assertEquals(1472040600000L - 5 * 60 * 1000L, minprev.getTime(), "Era esperado valores iguais, mas  1472040600000L - 5 * 60 * 1000L é diferente de " + result5263 + " <minprev.getTime()>")
chamada antiga: assertEquals(new Second(40, 30, 18, 24, 8, 2016).getFirstMillisecond(cal), sprev.getTime())
nova chamada: assertEquals(new Second(40, 30, 18, 24, 8, 2016).getFirstMillisecond(cal), sprev.getTime(), "Era esperado valores iguais, mas " + result5264 + " <new Second(40, 30, 18, 24, 8, 2016).getFirstMillisecond(cal)> é diferente de " + result5265 + " <sprev.getTime()>")
chamada antiga: assertEquals(new Millisecond(490, 50, 30, 18, 24, 8, 2016).getFirstMillisecond(cal), msprev.getTime())
nova chamada: assertEquals(new Millisecond(490, 50, 30, 18, 24, 8, 2016).getFirstMillisecond(cal), msprev.getTime(), "Era esperado valores iguais, mas " + result5266 + " <new Millisecond(490, 50, 30, 18, 24, 8, 2016).getFirstMillisecond(cal)> é diferente de " + result5267 + " <msprev.getTime()>")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5268 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a2.equals(a1))
nova chamada: assertTrue(a2.equals(a1), "Era esperado verdadeiro, mas " + result5269 + " <a2.equals(a1)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5270 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5271 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5272 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5273 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5274 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5275 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5276 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5277 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5278 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5279 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5280 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5281 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5282 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5283 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5284 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5285 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5286 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5287 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5288 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5289 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5290 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5291 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5292 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5293 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5294 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5295 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5296 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5297 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5298 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5299 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5300 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5301 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5302 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5303 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5304 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5305 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5306 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5307 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5308 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5309 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5310 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5311 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(DateTickMarkPosition.START, DateTickMarkPosition.START)
nova chamada: assertEquals(DateTickMarkPosition.START, DateTickMarkPosition.START, "Era esperado valores iguais, mas  DateTickMarkPosition.START é diferente de " + " DateTickMarkPosition.START")
chamada antiga: assertEquals(DateTickMarkPosition.MIDDLE, DateTickMarkPosition.MIDDLE)
nova chamada: assertEquals(DateTickMarkPosition.MIDDLE, DateTickMarkPosition.MIDDLE, "Era esperado valores iguais, mas  DateTickMarkPosition.MIDDLE é diferente de " + " DateTickMarkPosition.MIDDLE")
chamada antiga: assertEquals(DateTickMarkPosition.END, DateTickMarkPosition.END)
nova chamada: assertEquals(DateTickMarkPosition.END, DateTickMarkPosition.END, "Era esperado valores iguais, mas  DateTickMarkPosition.END é diferente de " + " DateTickMarkPosition.END")
chamada antiga: assertFalse(DateTickMarkPosition.START.equals(null))
nova chamada: assertFalse(DateTickMarkPosition.START.equals(null), "Era esperado falso, mas " + result5312 + " <DateTickMarkPosition.START.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(DateTickMarkPosition.START.equals(DateTickMarkPosition.END))
nova chamada: assertFalse(DateTickMarkPosition.START.equals(DateTickMarkPosition.END), "Era esperado falso, mas " + result5313 + " <DateTickMarkPosition.START.equals(DateTickMarkPosition.END)> é verdadeiro ")
chamada antiga: assertFalse(DateTickMarkPosition.MIDDLE.equals(DateTickMarkPosition.END))
nova chamada: assertFalse(DateTickMarkPosition.MIDDLE.equals(DateTickMarkPosition.END), "Era esperado falso, mas " + result5314 + " <DateTickMarkPosition.MIDDLE.equals(DateTickMarkPosition.END)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5315 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(p1 == p2)
nova chamada: assertTrue(p1 == p2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1 != a2)
nova chamada: assertTrue(a1 != a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.getClass() == a2.getClass())
nova chamada: assertTrue(a1.getClass() == a2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5316 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5317 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5318 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5319 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5320 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5321 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5322 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5323 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5324 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5325 + " <a1.equals(a2)> é falso")
chamada antiga: assertFalse(a1.equals(a2))
nova chamada: assertFalse(a1.equals(a2), "Era esperado falso, mas " + result5326 + " <a1.equals(a2)> é verdadeiro ")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5327 + " <a1.equals(a2)> é falso")
chamada antiga: assertTrue(a1.equals(a2))
nova chamada: assertTrue(a1.equals(a2), "Era esperado verdadeiro, mas " + result5328 + " <a1.equals(a2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(a1, a2)
nova chamada: assertEquals(a1, a2, "Era esperado valores iguais, mas  a1 é diferente de " + " a2")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5329 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5330 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5331 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5332 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5333 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5334 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5335 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5336 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5337 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5338 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5339 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5340 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5341 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5342 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5343 + " <e1.equals(e2)> é falso")
chamada antiga: assertTrue(e1 != e2)
nova chamada: assertTrue(e1 != e2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.getClass() == e2.getClass())
nova chamada: assertTrue(e1.getClass() == e2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5344 + " <e1.equals(e2)> é falso")
chamada antiga: assertEquals(e1, e2)
nova chamada: assertEquals(e1, e2, "Era esperado valores iguais, mas  e1 é diferente de " + " e2")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5345 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5346 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5347 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5348 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5349 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5350 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5351 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5352 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5353 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5354 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5355 + " <e1.equals(e2)> é falso")
chamada antiga: assertTrue(e1 != e2)
nova chamada: assertTrue(e1 != e2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.getClass() == e2.getClass())
nova chamada: assertTrue(e1.getClass() == e2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5356 + " <e1.equals(e2)> é falso")
chamada antiga: assertEquals(e1, e2)
nova chamada: assertEquals(e1, e2, "Era esperado valores iguais, mas  e1 é diferente de " + " e2")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5357 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5358 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5359 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5360 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5361 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5362 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5363 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5364 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5365 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5366 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5367 + " <e1.equals(e2)> é falso")
chamada antiga: assertTrue(e1 != e2)
nova chamada: assertTrue(e1 != e2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.getClass() == e2.getClass())
nova chamada: assertTrue(e1.getClass() == e2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5368 + " <e1.equals(e2)> é falso")
chamada antiga: assertEquals(e1, e2)
nova chamada: assertEquals(e1, e2, "Era esperado valores iguais, mas  e1 é diferente de " + " e2")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5369 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f2.equals(f1))
nova chamada: assertTrue(f2.equals(f1), "Era esperado verdadeiro, mas " + result5370 + " <f2.equals(f1)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5371 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5372 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5373 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5374 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5375 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5376 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5377 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5378 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f1 != f2)
nova chamada: assertTrue(f1 != f2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.getClass() == f2.getClass())
nova chamada: assertTrue(f1.getClass() == f2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5379 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5380 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5381 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5382 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5383 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5384 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5385 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5386 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5387 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5388 + " <e1.equals(e2)> é falso")
chamada antiga: assertTrue(e1 != e2)
nova chamada: assertTrue(e1 != e2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.getClass() == e2.getClass())
nova chamada: assertTrue(e1.getClass() == e2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5389 + " <e1.equals(e2)> é falso")
chamada antiga: assertEquals(e1, e2)
nova chamada: assertEquals(e1, e2, "Era esperado valores iguais, mas  e1 é diferente de " + " e2")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result5390 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result5391 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result5392 + " <c1.equals(c2)> é falso")
chamada antiga: assertTrue(c1 != c2)
nova chamada: assertTrue(c1 != c2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.getClass() == c2.getClass())
nova chamada: assertTrue(c1.getClass() == c2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result5393 + " <c1.equals(c2)> é falso")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result5394 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(c1.equals(c2))
nova chamada: assertTrue(c1.equals(c2), "Era esperado verdadeiro, mas " + result5395 + " <c1.equals(c2)> é falso")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5396 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5397 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5398 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5399 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5400 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5401 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5402 + " <e1.equals(e2)> é falso")
chamada antiga: assertTrue(e1 != e2)
nova chamada: assertTrue(e1 != e2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.getClass() == e2.getClass())
nova chamada: assertTrue(e1.getClass() == e2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5403 + " <e1.equals(e2)> é falso")
chamada antiga: assertEquals(e1, e2)
nova chamada: assertEquals(e1, e2, "Era esperado valores iguais, mas  e1 é diferente de " + " e2")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5404 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5405 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5406 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5407 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5408 + " <e1.equals(e2)> é falso")
chamada antiga: assertFalse(e1.equals(e2))
nova chamada: assertFalse(e1.equals(e2), "Era esperado falso, mas " + result5409 + " <e1.equals(e2)> é verdadeiro ")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5410 + " <e1.equals(e2)> é falso")
chamada antiga: assertTrue(e1 != e2)
nova chamada: assertTrue(e1 != e2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.getClass() == e2.getClass())
nova chamada: assertTrue(e1.getClass() == e2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(e1.equals(e2))
nova chamada: assertTrue(e1.equals(e2), "Era esperado verdadeiro, mas " + result5411 + " <e1.equals(e2)> é falso")
chamada antiga: assertEquals(e1, e2)
nova chamada: assertEquals(e1, e2, "Era esperado valores iguais, mas  e1 é diferente de " + " e2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5412 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5413 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5414 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5415 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5416 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5417 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5418 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5419 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5420 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5421 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5422 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5423 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5424 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5425 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5426 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5427 + " <g2.equals(g1)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5428 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5429 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5430 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5431 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5432 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5433 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5434 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5435 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5436 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5437 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5438 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(s.startsWith("1"))
nova chamada: assertTrue(s.startsWith("1"), "Era esperado verdadeiro, mas " + result5439 + " <s.startsWith('1')> é falso")
chamada antiga: assertTrue(s.endsWith("000"))
nova chamada: assertTrue(s.endsWith("000"), "Era esperado verdadeiro, mas " + result5440 + " <s.endsWith('000')> é falso")
chamada antiga: assertEquals("-", s)
nova chamada: assertEquals("-", s, "Era esperado valores iguais, mas  '-' é diferente de " + " s")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5441 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5442 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5443 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5444 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5445 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5446 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5447 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5448 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5449 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5450 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5451 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertEquals("Series 1", g.generateLabel(dataset, 0))
nova chamada: assertEquals("Series 1", g.generateLabel(dataset, 0), "Era esperado valores iguais, mas  'Series 1' é diferente de " + result5452 + " <g.generateLabel(dataset, 0)>")
chamada antiga: assertEquals("Series 2", g.generateLabel(dataset, 1))
nova chamada: assertEquals("Series 2", g.generateLabel(dataset, 1), "Era esperado valores iguais, mas  'Series 2' é diferente de " + result5453 + " <g.generateLabel(dataset, 1)>")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5454 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5455 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5456 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5457 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5458 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5459 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5460 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5461 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5462 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5463 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5464 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5465 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5466 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5467 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5468 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5469 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5470 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5471 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5472 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5473 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5474 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5475 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5476 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5477 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5478 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5479 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5480 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5481 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5482 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5483 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5484 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5485 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals("R0", s)
nova chamada: assertEquals("R0", s, "Era esperado valores iguais, mas  'R0' é diferente de " + " s")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5486 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5487 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5488 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5489 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5490 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5491 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertEquals(p1, p2)
nova chamada: assertEquals(p1, p2, "Era esperado valores iguais, mas  p1 é diferente de " + " p2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5492 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5493 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5494 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5495 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5496 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5497 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5498 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5499 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5500 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5501 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5502 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5503 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5504 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5505 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5506 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5507 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5508 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5509 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5510 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5511 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5512 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5513 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5514 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5515 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5516 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5517 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5518 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5519 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5520 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5521 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals("{3}", g.generateLabel(dataset, 0, 0))
nova chamada: assertEquals("{3}", g.generateLabel(dataset, 0, 0), "Era esperado valores iguais, mas  '{3}' é diferente de " + result5522 + " <g.generateLabel(dataset, 0, 0)>")
chamada antiga: assertEquals("{3}", g.generateLabel(dataset, 0, 1))
nova chamada: assertEquals("{3}", g.generateLabel(dataset, 0, 1), "Era esperado valores iguais, mas  '{3}' é diferente de " + result5523 + " <g.generateLabel(dataset, 0, 1)>")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5524 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5525 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5526 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5527 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5528 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5529 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5530 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5531 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5532 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5533 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5534 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5535 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5536 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5537 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5538 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5539 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5540 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5541 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5542 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5543 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5544 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5545 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5546 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5547 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5548 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5549 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5550 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5551 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5552 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5553 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5554 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5555 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5556 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5557 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5558 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(ItemLabelAnchor.INSIDE1.equals(ItemLabelAnchor.INSIDE1))
nova chamada: assertTrue(ItemLabelAnchor.INSIDE1.equals(ItemLabelAnchor.INSIDE1), "Era esperado verdadeiro, mas " + result5559 + " <ItemLabelAnchor.INSIDE1.equals(ItemLabelAnchor.INSIDE1)> é falso")
chamada antiga: assertFalse(ItemLabelAnchor.INSIDE1.equals(ItemLabelAnchor.INSIDE2))
nova chamada: assertFalse(ItemLabelAnchor.INSIDE1.equals(ItemLabelAnchor.INSIDE2), "Era esperado falso, mas " + result5560 + " <ItemLabelAnchor.INSIDE1.equals(ItemLabelAnchor.INSIDE2)> é verdadeiro ")
chamada antiga: assertTrue(a1 == a2)
nova chamada: assertTrue(a1 == a2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5561 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5562 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5563 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5564 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5565 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5566 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5567 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5568 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5569 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5570 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5571 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5572 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5573 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5574 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5575 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5576 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5577 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5578 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5579 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5580 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5581 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5582 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5583 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5584 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5585 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5586 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5587 + " <g2.equals(g1)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5588 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5589 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5590 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5591 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5592 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5593 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5594 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5595 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5596 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5597 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.getNumberFormat() != g2.getNumberFormat())
nova chamada: assertTrue(g1.getNumberFormat() != g2.getNumberFormat(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getPercentFormat() != g2.getPercentFormat())
nova chamada: assertTrue(g1.getPercentFormat() != g2.getPercentFormat(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5598 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5599 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5600 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5601 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5602 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5603 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5604 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5605 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5606 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5607 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5608 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5609 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5610 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5611 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5612 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5613 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5614 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.hashCode() == g2.hashCode())
nova chamada: assertTrue(g1.hashCode() == g2.hashCode(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5615 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5616 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g2.equals(g1))
nova chamada: assertTrue(g2.equals(g1), "Era esperado verdadeiro, mas " + result5617 + " <g2.equals(g1)> é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(c2, c1)
nova chamada: assertEquals(c2, c1, "Era esperado valores iguais, mas  c2 é diferente de " + " c1")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result5618 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertNotSame(c1, c2)
nova chamada: assertNotSame(c1, c2, "Era esperado objetos diferentes, mas  c1 é igual a " + " c2")
chamada antiga: assertSame(c1.getClass(), c2.getClass())
nova chamada: assertSame(c1.getClass(), c2.getClass(), "Era esperado objetos iguais, mas " + result5619 + " <c1.getClass()> é diferente de " + result5620 + " <c2.getClass()>")
chamada antiga: assertEquals(c1, c2)
nova chamada: assertEquals(c1, c2, "Era esperado valores iguais, mas  c1 é diferente de " + " c2")
chamada antiga: assertFalse(c1.equals(c2))
nova chamada: assertFalse(c1.equals(c2), "Era esperado falso, mas " + result5621 + " <c1.equals(c2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5622 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5623 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5624 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5625 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5626 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5627 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(1, g1.getListCount())
nova chamada: assertEquals(1, g1.getListCount(), "Era esperado valores iguais, mas  1 é diferente de " + result5628 + " <g1.getListCount()>")
chamada antiga: assertEquals(0, g1.getURLCount(0))
nova chamada: assertEquals(0, g1.getURLCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result5629 + " <g1.getURLCount(0)>")
chamada antiga: assertEquals(2, g1.getListCount())
nova chamada: assertEquals(2, g1.getListCount(), "Era esperado valores iguais, mas  2 é diferente de " + result5630 + " <g1.getListCount()>")
chamada antiga: assertEquals(0, g1.getURLCount(0))
nova chamada: assertEquals(0, g1.getURLCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result5631 + " <g1.getURLCount(0)>")
chamada antiga: assertEquals(1, g1.getURLCount(1))
nova chamada: assertEquals(1, g1.getURLCount(1), "Era esperado valores iguais, mas  1 é diferente de " + result5632 + " <g1.getURLCount(1)>")
chamada antiga: assertEquals("URL1", g1.getURL(1, 0))
nova chamada: assertEquals("URL1", g1.getURL(1, 0), "Era esperado valores iguais, mas  'URL1' é diferente de " + result5633 + " <g1.getURL(1, 0)>")
chamada antiga: assertEquals("URL1", g1.getURL(1, 0))
nova chamada: assertEquals("URL1", g1.getURL(1, 0), "Era esperado valores iguais, mas  'URL1' é diferente de " + result5634 + " <g1.getURL(1, 0)>")
chamada antiga: assertEquals("index.html?series=R1&amp;category=C1", g1.generateURL(dataset, 0, 0))
nova chamada: assertEquals("index.html?series=R1&amp;category=C1", g1.generateURL(dataset, 0, 0), "Era esperado valores iguais, mas  'index.html?series=R1&amp;category=C1' é diferente de " + result5635 + " <g1.generateURL(dataset, 0, 0)>")
chamada antiga: assertEquals("index.html?series=R1&amp;category=C2", g1.generateURL(dataset, 0, 1))
nova chamada: assertEquals("index.html?series=R1&amp;category=C2", g1.generateURL(dataset, 0, 1), "Era esperado valores iguais, mas  'index.html?series=R1&amp;category=C2' é diferente de " + result5636 + " <g1.generateURL(dataset, 0, 1)>")
chamada antiga: assertEquals("index.html?series=R2&amp;category=C2", g1.generateURL(dataset, 1, 1))
nova chamada: assertEquals("index.html?series=R2&amp;category=C2", g1.generateURL(dataset, 1, 1), "Era esperado valores iguais, mas  'index.html?series=R2&amp;category=C2' é diferente de " + result5637 + " <g1.generateURL(dataset, 1, 1)>")
chamada antiga: assertEquals("index.html?series=R%26&amp;category=C%26", g1.generateURL(dataset, 2, 2))
nova chamada: assertEquals("index.html?series=R%26&amp;category=C%26", g1.generateURL(dataset, 2, 2), "Era esperado valores iguais, mas  'index.html?series=R%26&amp;category=C%26' é diferente de " + result5638 + " <g1.generateURL(dataset, 2, 2)>")
chamada antiga: assertFalse(g1 instanceof PublicCloneable)
nova chamada: assertFalse(g1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5639 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5640 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5641 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5642 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5643 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5644 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5645 + " <g1.equals(g2)> é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5646 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5647 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5648 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5649 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5650 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5651 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5652 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5653 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5654 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5655 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5656 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1 instanceof PublicCloneable)
nova chamada: assertFalse(g1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals("chart.jsp?category=Beta&amp;pieIndex=0", url)
nova chamada: assertEquals("chart.jsp?category=Beta&amp;pieIndex=0", url, "Era esperado valores iguais, mas  'chart.jsp?category=Beta&amp;pieIndex=0' é diferente de " + " url")
chamada antiga: assertEquals("chart.jsp?category=Alpha+%271%27&amp;pieIndex=0", url)
nova chamada: assertEquals("chart.jsp?category=Alpha+%271%27&amp;pieIndex=0", url, "Era esperado valores iguais, mas  'chart.jsp?category=Alpha+%271%27&amp;pieIndex=0' é diferente de " + " url")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertFalse(g1 instanceof PublicCloneable)
nova chamada: assertFalse(g1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5657 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5658 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5659 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5660 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5661 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5662 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5663 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5664 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5665 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5666 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5667 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1 instanceof PublicCloneable)
nova chamada: assertTrue(g1 instanceof PublicCloneable, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(1, g1.getListCount())
nova chamada: assertEquals(1, g1.getListCount(), "Era esperado valores iguais, mas  1 é diferente de " + result5668 + " <g1.getListCount()>")
chamada antiga: assertEquals(0, g1.getURLCount(0))
nova chamada: assertEquals(0, g1.getURLCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result5669 + " <g1.getURLCount(0)>")
chamada antiga: assertEquals(2, g1.getListCount())
nova chamada: assertEquals(2, g1.getListCount(), "Era esperado valores iguais, mas  2 é diferente de " + result5670 + " <g1.getListCount()>")
chamada antiga: assertEquals(0, g1.getURLCount(0))
nova chamada: assertEquals(0, g1.getURLCount(0), "Era esperado valores iguais, mas  0 é diferente de " + result5671 + " <g1.getURLCount(0)>")
chamada antiga: assertEquals(1, g1.getURLCount(1))
nova chamada: assertEquals(1, g1.getURLCount(1), "Era esperado valores iguais, mas  1 é diferente de " + result5672 + " <g1.getURLCount(1)>")
chamada antiga: assertEquals("URL1", g1.getURL(1, 0))
nova chamada: assertEquals("URL1", g1.getURL(1, 0), "Era esperado valores iguais, mas  'URL1' é diferente de " + result5673 + " <g1.getURL(1, 0)>")
chamada antiga: assertEquals("URL1", g1.getURL(1, 0))
nova chamada: assertEquals("URL1", g1.getURL(1, 0), "Era esperado valores iguais, mas  'URL1' é diferente de " + result5674 + " <g1.getURL(1, 0)>")
chamada antiga: assertTrue(s.startsWith("index.html?series=Series+%271%27&amp;item="))
nova chamada: assertTrue(s.startsWith("index.html?series=Series+%271%27&amp;item="), "Era esperado verdadeiro, mas " + result5675 + " <s.startsWith('index.html?series=Series+%271%27&amp;item=')> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5676 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5677 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5678 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5679 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5680 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5681 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5682 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5683 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5684 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5685 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5686 + " <g1.equals(g2)> é falso")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertFalse(g1 instanceof PublicCloneable)
nova chamada: assertFalse(g1 instanceof PublicCloneable, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(url2 == url1)
nova chamada: assertTrue(url2 == url1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(null, m1.getPaint("A"))
nova chamada: assertEquals(null, m1.getPaint("A"), "Era esperado valores iguais, mas  null é diferente de " + result5687 + " <m1.getPaint('A')>")
chamada antiga: assertEquals(Color.RED, m1.getPaint("A"))
nova chamada: assertEquals(Color.RED, m1.getPaint("A"), "Era esperado valores iguais, mas  Color.RED é diferente de " + result5688 + " <m1.getPaint('A')>")
chamada antiga: assertEquals(null, m1.getPaint("A"))
nova chamada: assertEquals(null, m1.getPaint("A"), "Era esperado valores iguais, mas  null é diferente de " + result5689 + " <m1.getPaint('A')>")
chamada antiga: assertEquals(Color.RED, m1.getPaint("A"))
nova chamada: assertEquals(Color.RED, m1.getPaint("A"), "Era esperado valores iguais, mas  Color.RED é diferente de " + result5690 + " <m1.getPaint('A')>")
chamada antiga: assertEquals(m1, m1)
nova chamada: assertEquals(m1, m1, "Era esperado valores iguais, mas  m1 é diferente de " + " m1")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertFalse(m1.equals(null))
nova chamada: assertFalse(m1.equals(null), "Era esperado falso, mas " + result5691 + " <m1.equals(null)> é verdadeiro ")
chamada antiga: assertFalse(m1.equals("ABC"))
nova chamada: assertFalse(m1.equals("ABC"), "Era esperado falso, mas " + result5692 + " <m1.equals('ABC')> é verdadeiro ")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result5693 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result5694 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertFalse(m1.equals(m2))
nova chamada: assertFalse(m1.equals(m2), "Era esperado falso, mas " + result5695 + " <m1.equals(m2)> é verdadeiro ")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(m1, m2)
nova chamada: assertEquals(m1, m2, "Era esperado valores iguais, mas  m1 é diferente de " + " m2")
chamada antiga: assertEquals(Color.BLUE, m.getPaint(99))
nova chamada: assertEquals(Color.BLUE, m.getPaint(99), "Era esperado valores iguais, mas  Color.BLUE é diferente de " + result5696 + " <m.getPaint(99)>")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertNull(plot.getDataset())
nova chamada: assertNull(plot.getDataset(), "Era esperado nulo, mas " + result5697 + " <plot.getDataset()> não é nulo")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(url2 == url1)
nova chamada: assertTrue(url2 == url1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5698 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5699 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5700 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5701 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5702 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5703 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5704 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5705 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5706 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5707 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5708 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5709 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5710 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5711 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5712 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5713 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5714 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5715 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5716 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5717 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5718 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5719 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5720 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5721 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5722 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5723 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5724 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5725 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5726 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5727 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5728 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5729 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5730 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5731 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5732 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5733 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5734 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5735 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5736 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5737 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5738 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5739 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5740 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5741 + " <l1.equals(l2)> é falso")
chamada antiga: assertTrue(l2.equals(l1))
nova chamada: assertTrue(l2.equals(l1), "Era esperado verdadeiro, mas " + result5742 + " <l2.equals(l1)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5743 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5744 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5745 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5746 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5747 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5748 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5749 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5750 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5751 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5752 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5753 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5754 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5755 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5756 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5757 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5758 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5759 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5760 + " <l1.equals(l2)> é falso")
chamada antiga: assertFalse(l1.equals(l2))
nova chamada: assertFalse(l1.equals(l2), "Era esperado falso, mas " + result5761 + " <l1.equals(l2)> é verdadeiro ")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5762 + " <l1.equals(l2)> é falso")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5763 + " <l1.equals(l2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(l1 != l2)
nova chamada: assertTrue(l1 != l2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(l1.getClass() == l2.getClass())
nova chamada: assertTrue(l1.getClass() == l2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(l1.equals(l2))
nova chamada: assertTrue(l1.equals(l2), "Era esperado verdadeiro, mas " + result5764 + " <l1.equals(l2)> é falso")
chamada antiga: assertEquals(l1, l2)
nova chamada: assertEquals(l1, l2, "Era esperado valores iguais, mas  l1 é diferente de " + " l2")
chamada antiga: assertNull(t.getBackgroundPaint())
nova chamada: assertNull(t.getBackgroundPaint(), "Era esperado nulo, mas " + result5765 + " <t.getBackgroundPaint()> não é nulo")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(t2, t1)
nova chamada: assertEquals(t2, t1, "Era esperado valores iguais, mas  t2 é diferente de " + " t1")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5766 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5767 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5768 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5769 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5770 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5771 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5772 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5773 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5774 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5775 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5776 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5777 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertEquals(g1, g2)
nova chamada: assertEquals(g1, g2, "Era esperado valores iguais, mas  g1 é diferente de " + " g2")
chamada antiga: assertEquals(g2, g1)
nova chamada: assertEquals(g2, g1, "Era esperado valores iguais, mas  g2 é diferente de " + " g1")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5778 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5779 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5780 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5781 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5782 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5783 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5784 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5785 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5786 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5787 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5788 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5789 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5790 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5791 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5792 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5793 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5794 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5795 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5796 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5797 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5798 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5799 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5800 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5801 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5802 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5803 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5804 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5805 + " <g1.equals(g2)> é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5806 + " <g1.equals(g2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5807 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5808 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1 != g2)
nova chamada: assertTrue(g1 != g2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.getClass() == g2.getClass())
nova chamada: assertTrue(g1.getClass() == g2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5809 + " <g1.equals(g2)> é falso")
chamada antiga: assertFalse(g1.equals(g2))
nova chamada: assertFalse(g1.equals(g2), "Era esperado falso, mas " + result5810 + " <g1.equals(g2)> é verdadeiro ")
chamada antiga: assertTrue(g1.equals(g2))
nova chamada: assertTrue(g1.equals(g2), "Era esperado verdadeiro, mas " + result5811 + " <g1.equals(g2)> é falso")
chamada antiga: assertEquals(t1, t2)
nova chamada: assertEquals(t1, t2, "Era esperado valores iguais, mas  t1 é diferente de " + " t2")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5812 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5813 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5814 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5815 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5816 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5817 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5818 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5819 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5820 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5821 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5822 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5823 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5824 + " <t1.equals(t2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(t1 != t2)
nova chamada: assertTrue(t1 != t2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.getClass() == t2.getClass())
nova chamada: assertTrue(t1.getClass() == t2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5825 + " <t1.equals(t2)> é falso")
chamada antiga: assertFalse(t1.equals(t2))
nova chamada: assertFalse(t1.equals(t2), "Era esperado falso, mas " + result5826 + " <t1.equals(t2)> é verdadeiro ")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5827 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t1.equals(t2))
nova chamada: assertTrue(t1.equals(t2), "Era esperado verdadeiro, mas " + result5828 + " <t1.equals(t2)> é falso")
chamada antiga: assertTrue(t2.getSources()[0].equals(plot))
nova chamada: assertTrue(t2.getSources()[0].equals(plot), "Era esperado verdadeiro, mas " + result5829 + " <t2.getSources()[0].equals(plot)> é falso")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertEquals(item2, item1)
nova chamada: assertEquals(item2, item1, "Era esperado valores iguais, mas  item2 é diferente de " + " item1")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5830 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5831 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5832 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5833 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5834 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5835 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5836 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5837 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5838 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5839 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5840 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5841 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5842 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5843 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5844 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5845 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5846 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5847 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertFalse(item1.equals(item2))
nova chamada: assertFalse(item1.equals(item2), "Era esperado falso, mas " + result5848 + " <item1.equals(item2)> é verdadeiro ")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertNotSame(item1, item2)
nova chamada: assertNotSame(item1, item2, "Era esperado objetos diferentes, mas  item1 é igual a " + " item2")
chamada antiga: assertSame(item1.getClass(), item2.getClass())
nova chamada: assertSame(item1.getClass(), item2.getClass(), "Era esperado objetos iguais, mas " + result5849 + " <item1.getClass()> é diferente de " + result5850 + " <item2.getClass()>")
chamada antiga: assertEquals(item1, item2)
nova chamada: assertEquals(item1, item2, "Era esperado valores iguais, mas  item1 é diferente de " + " item2")
chamada antiga: assertSame(item1.getDataset(), item2.getDataset())
nova chamada: assertSame(item1.getDataset(), item2.getDataset(), "Era esperado objetos iguais, mas " + result5851 + " <item1.getDataset()> é diferente de " + result5852 + " <item2.getDataset()>")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertFalse(h1 == h3)
nova chamada: assertFalse(h1 == h3, "Era esperado falso, mas o valor é verdadeiro")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(url2 == url1)
nova chamada: assertTrue(url2 == url1, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertTrue(tt2 == tt)
nova chamada: assertTrue(tt2 == tt, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertSame(tt2, tt)
nova chamada: assertSame(tt2, tt, "Era esperado objetos iguais, mas  tt2 é diferente de " + " tt")
chamada antiga: assertSame(url2, url1)
nova chamada: assertSame(url2, url1, "Era esperado objetos iguais, mas  url2 é diferente de " + " url1")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertEquals(null, panel.getChart())
nova chamada: assertEquals(null, panel.getChart(), "Era esperado valores iguais, mas  null é diferente de " + result5853 + " <panel.getChart()>")
chamada antiga: assertEquals(null, panel.getChart())
nova chamada: assertEquals(null, panel.getChart(), "Era esperado valores iguais, mas  null é diferente de " + result5854 + " <panel.getChart()>")
chamada antiga: assertEquals(1, listeners.length)
nova chamada: assertEquals(1, listeners.length, "Era esperado valores iguais, mas  1 é diferente de " + " listeners.length")
chamada antiga: assertEquals(this, listeners[0])
nova chamada: assertEquals(this, listeners[0], "Era esperado valores iguais, mas  this é diferente de " + " listeners[0]")
chamada antiga: assertEquals(0, listeners.length)
nova chamada: assertEquals(0, listeners.length, "Era esperado valores iguais, mas  0 é diferente de " + " listeners.length")
chamada antiga: assertEquals(0, listeners.length)
nova chamada: assertEquals(0, listeners.length, "Era esperado valores iguais, mas  0 é diferente de " + " listeners.length")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(pass)
nova chamada: assertTrue(pass, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5855 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5856 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5857 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5858 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5859 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5860 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5861 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5862 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5863 + " <this.chartChangeEvents.size()>")
chamada antiga: assertEquals(1, this.chartChangeEvents.size())
nova chamada: assertEquals(1, this.chartChangeEvents.size(), "Era esperado valores iguais, mas  1 é diferente de " + result5864 + " <this.chartChangeEvents.size()>")
chamada antiga: assertTrue(panel.isMouseWheelEnabled())
nova chamada: assertTrue(panel.isMouseWheelEnabled(), "Era esperado verdadeiro, mas " + result5865 + " <panel.isMouseWheelEnabled()> é falso")
chamada antiga: assertTrue(panel.isMouseWheelEnabled())
nova chamada: assertTrue(panel.isMouseWheelEnabled(), "Era esperado verdadeiro, mas " + result5866 + " <panel.isMouseWheelEnabled()> é falso")
chamada antiga: assertFalse(panel.isMouseWheelEnabled())
nova chamada: assertFalse(panel.isMouseWheelEnabled(), "Era esperado falso, mas " + result5867 + " <panel.isMouseWheelEnabled()> é verdadeiro ")
chamada antiga: assertFalse(LineUtils.clipLine(line, rect))
nova chamada: assertFalse(LineUtils.clipLine(line, rect), "Era esperado falso, mas " + result5868 + " <LineUtils.clipLine(line, rect)> é verdadeiro ")
chamada antiga: assertTrue(lineEquals(line, 0.0, 0.0, 0.0, 0.0))
nova chamada: assertTrue(lineEquals(line, 0.0, 0.0, 0.0, 0.0), "Era esperado verdadeiro, mas " + result5869 + " <lineEquals(line, 0.0, 0.0, 0.0, 0.0)> é falso")
chamada antiga: assertFalse(LineUtils.clipLine(line, rect))
nova chamada: assertFalse(LineUtils.clipLine(line, rect), "Era esperado falso, mas " + result5870 + " <LineUtils.clipLine(line, rect)> é verdadeiro ")
chamada antiga: assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 0.6))
nova chamada: assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 0.6), "Era esperado verdadeiro, mas " + result5871 + " <lineEquals(line, 0.5, 0.5, 0.6, 0.6)> é falso")
chamada antiga: assertFalse(LineUtils.clipLine(line, rect))
nova chamada: assertFalse(LineUtils.clipLine(line, rect), "Era esperado falso, mas " + result5872 + " <LineUtils.clipLine(line, rect)> é verdadeiro ")
chamada antiga: assertTrue(lineEquals(line, 0.5, 0.5, 1.6, 0.6))
nova chamada: assertTrue(lineEquals(line, 0.5, 0.5, 1.6, 0.6), "Era esperado verdadeiro, mas " + result5873 + " <lineEquals(line, 0.5, 0.5, 1.6, 0.6)> é falso")
chamada antiga: assertFalse(LineUtils.clipLine(line, rect))
nova chamada: assertFalse(LineUtils.clipLine(line, rect), "Era esperado falso, mas " + result5874 + " <LineUtils.clipLine(line, rect)> é verdadeiro ")
chamada antiga: assertTrue(lineEquals(line, 0.5, 0.5, 2.6, 0.6))
nova chamada: assertTrue(lineEquals(line, 0.5, 0.5, 2.6, 0.6), "Era esperado verdadeiro, mas " + result5875 + " <lineEquals(line, 0.5, 0.5, 2.6, 0.6)> é falso")
chamada antiga: assertFalse(LineUtils.clipLine(line, rect))
nova chamada: assertFalse(LineUtils.clipLine(line, rect), "Era esperado falso, mas " + result5876 + " <LineUtils.clipLine(line, rect)> é verdadeiro ")
chamada antiga: assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 1.6))
nova chamada: assertTrue(lineEquals(line, 0.5, 0.5, 0.6, 1.6), "Era esperado verdadeiro, mas " + result5877 + " <lineEquals(line, 0.5, 0.5, 0.6, 1.6)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5878 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 1.0, 1.0, 1.6, 1.6))
nova chamada: assertTrue(lineEquals(line, 1.0, 1.0, 1.6, 1.6), "Era esperado verdadeiro, mas " + result5879 + " <lineEquals(line, 1.0, 1.0, 1.6, 1.6)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5880 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 1.4545454545454546, 1.0, 2.0, 1.2857142857142858))
nova chamada: assertTrue(lineEquals(line, 1.4545454545454546, 1.0, 2.0, 1.2857142857142858), "Era esperado verdadeiro, mas " + result5881 + " <lineEquals(line, 1.4545454545454546, 1.0, 2.0, 1.2857142857142858)> é falso")
chamada antiga: assertFalse(LineUtils.clipLine(line, rect))
nova chamada: assertFalse(LineUtils.clipLine(line, rect), "Era esperado falso, mas " + result5882 + " <LineUtils.clipLine(line, rect)> é verdadeiro ")
chamada antiga: assertTrue(lineEquals(line, 0.5, 0.5, 0.5, 2.6))
nova chamada: assertTrue(lineEquals(line, 0.5, 0.5, 0.5, 2.6), "Era esperado verdadeiro, mas " + result5883 + " <lineEquals(line, 0.5, 0.5, 0.5, 2.6)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5884 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 1.0, 1.55, 1.2142857142857142, 2.0))
nova chamada: assertTrue(lineEquals(line, 1.0, 1.55, 1.2142857142857142, 2.0), "Era esperado verdadeiro, mas " + result5885 + " <lineEquals(line, 1.0, 1.55, 1.2142857142857142, 2.0)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5886 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 1.0, 1.025, 1.9285714285714284, 2.0))
nova chamada: assertTrue(lineEquals(line, 1.0, 1.025, 1.9285714285714284, 2.0), "Era esperado verdadeiro, mas " + result5887 + " <lineEquals(line, 1.0, 1.025, 1.9285714285714284, 2.0)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5888 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 1.0, 1.0, 1.5, 1.5))
nova chamada: assertTrue(lineEquals(line, 1.0, 1.0, 1.5, 1.5), "Era esperado verdadeiro, mas " + result5889 + " <lineEquals(line, 1.0, 1.0, 1.5, 1.5)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5890 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 2.0, 1.25, 1.5, 1.5))
nova chamada: assertTrue(lineEquals(line, 2.0, 1.25, 1.5, 1.5), "Era esperado verdadeiro, mas " + result5891 + " <lineEquals(line, 2.0, 1.25, 1.5, 1.5)> é falso")
chamada antiga: assertTrue(LineUtils.clipLine(line, rect))
nova chamada: assertTrue(LineUtils.clipLine(line, rect), "Era esperado verdadeiro, mas " + result5892 + " <LineUtils.clipLine(line, rect)> é falso")
chamada antiga: assertTrue(lineEquals(line, 1.5, 1.5, 2.0, 1.25))
nova chamada: assertTrue(lineEquals(line, 1.5, 1.5, 2.0, 1.25), "Era esperado verdadeiro, mas " + result5893 + " <lineEquals(line, 1.5, 1.5, 2.0, 1.25)> é falso")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5894 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5895 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5896 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5897 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5898 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5899 + " <f1.equals(f2)> é falso")
chamada antiga: assertFalse(f1.equals(f2))
nova chamada: assertFalse(f1.equals(f2), "Era esperado falso, mas " + result5900 + " <f1.equals(f2)> é verdadeiro ")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5901 + " <f1.equals(f2)> é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5902 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(f1 != f2)
nova chamada: assertTrue(f1 != f2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.getClass() == f2.getClass())
nova chamada: assertTrue(f1.getClass() == f2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(f1.equals(f2))
nova chamada: assertTrue(f1.equals(f2), "Era esperado verdadeiro, mas " + result5903 + " <f1.equals(f2)> é falso")
chamada antiga: assertEquals(f1, f2)
nova chamada: assertEquals(f1, f2, "Era esperado valores iguais, mas  f1 é diferente de " + " f2")
chamada antiga: assertEquals("2h2m2.500s", s)
nova chamada: assertEquals("2h2m2.500s", s, "Era esperado valores iguais, mas  '2h2m2.500s' é diferente de " + " s")
chamada antiga: assertEquals("02:02:02", s)
nova chamada: assertEquals("02:02:02", s, "Era esperado valores iguais, mas  '02:02:02' é diferente de " + " s")
chamada antiga: assertEquals(df1, df2)
nova chamada: assertEquals(df1, df2, "Era esperado valores iguais, mas  df1 é diferente de " + " df2")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5904 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5905 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5906 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5907 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5908 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5909 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5910 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5911 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5912 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5913 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5914 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5915 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5916 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5917 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5918 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5919 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5920 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5921 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5922 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5923 + " <df1.equals(df2)> é falso")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5924 + " <df1.equals(df2)> é falso")
chamada antiga: assertEquals(h1, h2)
nova chamada: assertEquals(h1, h2, "Era esperado valores iguais, mas  h1 é diferente de " + " h2")
chamada antiga: assertTrue(df1 != df2)
nova chamada: assertTrue(df1 != df2, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(df1.getClass() == df2.getClass())
nova chamada: assertTrue(df1.getClass() == df2.getClass(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(df1.equals(df2))
nova chamada: assertTrue(df1.equals(df2), "Era esperado verdadeiro, mas " + result5925 + " <df1.equals(df2)> é falso")
chamada antiga: assertFalse(df1.equals(df2))
nova chamada: assertFalse(df1.equals(df2), "Era esperado falso, mas " + result5926 + " <df1.equals(df2)> é verdadeiro ")
chamada antiga: assertEquals("-0h0m1s", df1.format(new Date(-1000L)))
nova chamada: assertEquals("-0h0m1s", df1.format(new Date(-1000L)), "Era esperado valores iguais, mas  '-0h0m1s' é diferente de " + result5927 + " <df1.format(new Date(-1000L))>")
chamada antiga: assertEquals("00:00:00", formatter.format(0))
nova chamada: assertEquals("00:00:00", formatter.format(0), "Era esperado valores iguais, mas  '00:00:00' é diferente de " + result5928 + " <formatter.format(0)>")
chamada antiga: assertEquals("00:00:59", formatter.format(59))
nova chamada: assertEquals("00:00:59", formatter.format(59), "Era esperado valores iguais, mas  '00:00:59' é diferente de " + result5929 + " <formatter.format(59)>")
chamada antiga: assertEquals("00:01:01", formatter.format(61))
nova chamada: assertEquals("00:01:01", formatter.format(61), "Era esperado valores iguais, mas  '00:01:01' é diferente de " + result5930 + " <formatter.format(61)>")
chamada antiga: assertEquals("00:59:59", formatter.format(3599))
nova chamada: assertEquals("00:59:59", formatter.format(3599), "Era esperado valores iguais, mas  '00:59:59' é diferente de " + result5931 + " <formatter.format(3599)>")
chamada antiga: assertEquals("01:00:00", formatter.format(3600))
nova chamada: assertEquals("01:00:00", formatter.format(3600), "Era esperado valores iguais, mas  '01:00:00' é diferente de " + result5932 + " <formatter.format(3600)>")
chamada antiga: assertEquals("01:00:01", formatter.format(3601))
nova chamada: assertEquals("01:00:01", formatter.format(3601), "Era esperado valores iguais, mas  '01:00:01' é diferente de " + result5933 + " <formatter.format(3601)>")
chamada antiga: assertEquals(true, l.flag)
nova chamada: assertEquals(true, l.flag, "Era esperado valores iguais, mas  true é diferente de " + " l.flag")
chamada antiga: assertNull(plot.getDataset())
nova chamada: assertNull(plot.getDataset(), "Era esperado nulo, mas " + result5934 + " <plot.getDataset()> não é nulo")
Total asserts: 9471
Asserts sem descrição: 8328
Asserts com descrição: 1143
Assertion Roulette: 7616
