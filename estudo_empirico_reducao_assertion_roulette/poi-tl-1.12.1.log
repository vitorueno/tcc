
Projeto: /home/vitor-otto/opensource/poi-tl-1.12.1

Antes do refactor: 
chamada antiga: assertEquals(typeArguments[0], TextRenderData.class)
nova chamada: assertEquals(typeArguments[0], TextRenderData.class, "Era esperado valores iguais, mas  typeArguments[0] é diferente de " + " TextRenderData.class")
chamada antiga: assertEquals(typeArguments[0], TextRenderData.class)
nova chamada: assertEquals(typeArguments[0], TextRenderData.class, "Era esperado valores iguais, mas  typeArguments[0] é diferente de " + " TextRenderData.class")
chamada antiga: assertEquals(result.getText(), data.getText())
nova chamada: assertEquals(result.getText(), data.getText(), "Era esperado valores iguais, mas " + result0 + " <result.getText()> é diferente de " + result1 + " <data.getText()>")
chamada antiga: assertEquals(((HyperlinkTextRenderData) result).getUrl(), ((HyperlinkTextRenderData) data).getUrl())
nova chamada: assertEquals(((HyperlinkTextRenderData) result).getUrl(), ((HyperlinkTextRenderData) data).getUrl(), "Era esperado valores iguais, mas " + result2 + " <((HyperlinkTextRenderData) result).getUrl()> é diferente de " + result3 + " <((HyperlinkTextRenderData) data).getUrl()>")
chamada antiga: assertEquals(result.getStyle().getColor(), data.getStyle().getColor())
nova chamada: assertEquals(result.getStyle().getColor(), data.getStyle().getColor(), "Era esperado valores iguais, mas " + result4 + " <result.getStyle().getColor()> é diferente de " + result5 + " <data.getStyle().getColor()>")
chamada antiga: assertEquals(result.getStyle().getUnderlinePatterns(), data.getStyle().getUnderlinePatterns())
nova chamada: assertEquals(result.getStyle().getUnderlinePatterns(), data.getStyle().getUnderlinePatterns(), "Era esperado valores iguais, mas " + result6 + " <result.getStyle().getUnderlinePatterns()> é diferente de " + result7 + " <data.getStyle().getUnderlinePatterns()>")
chamada antiga: assertEquals(result.getPictureStyle().getWidth(), data.getPictureStyle().getWidth())
nova chamada: assertEquals(result.getPictureStyle().getWidth(), data.getPictureStyle().getWidth(), "Era esperado valores iguais, mas " + result8 + " <result.getPictureStyle().getWidth()> é diferente de " + result9 + " <data.getPictureStyle().getWidth()>")
chamada antiga: assertEquals(result.getPictureStyle().getHeight(), data.getPictureStyle().getHeight())
nova chamada: assertEquals(result.getPictureStyle().getHeight(), data.getPictureStyle().getHeight(), "Era esperado valores iguais, mas " + result10 + " <result.getPictureStyle().getHeight()> é diferente de " + result11 + " <data.getPictureStyle().getHeight()>")
chamada antiga: assertEquals(result.getPictureType(), data.getPictureType())
nova chamada: assertEquals(result.getPictureType(), data.getPictureType(), "Era esperado valores iguais, mas " + result12 + " <result.getPictureType()> é diferente de " + result13 + " <data.getPictureType()>")
chamada antiga: assertEquals(result.getAltMeta(), data.getAltMeta())
nova chamada: assertEquals(result.getAltMeta(), data.getAltMeta(), "Era esperado valores iguais, mas " + result14 + " <result.getAltMeta()> é diferente de " + result15 + " <data.getAltMeta()>")
chamada antiga: assertEquals(result.getChartTitle(), data.getChartTitle())
nova chamada: assertEquals(result.getChartTitle(), data.getChartTitle(), "Era esperado valores iguais, mas " + result16 + " <result.getChartTitle()> é diferente de " + result17 + " <data.getChartTitle()>")
chamada antiga: assertArrayEquals(result.getCategories(), data.getCategories())
nova chamada: assertArrayEquals(result.getCategories(), data.getCategories(), "Era esperado arrays iguais, mas " + result18 + " <result.getCategories()> é diferente de " + result19 + " <data.getCategories()>")
chamada antiga: assertEquals(result.getSeriesDatas().get(0).getName(), data.getSeriesDatas().get(0).getName())
nova chamada: assertEquals(result.getSeriesDatas().get(0).getName(), data.getSeriesDatas().get(0).getName(), "Era esperado valores iguais, mas " + result20 + " <result.getSeriesDatas().get(0).getName()> é diferente de " + result21 + " <data.getSeriesDatas().get(0).getName()>")
chamada antiga: assertEquals(result.getSeriesDatas().get(0).getComboType(), data.getSeriesDatas().get(0).getComboType())
nova chamada: assertEquals(result.getSeriesDatas().get(0).getComboType(), data.getSeriesDatas().get(0).getComboType(), "Era esperado valores iguais, mas " + result22 + " <result.getSeriesDatas().get(0).getComboType()> é diferente de " + result23 + " <data.getSeriesDatas().get(0).getComboType()>")
chamada antiga: assertArrayEquals(result.getMergedDoc(), data.getMergedDoc())
nova chamada: assertArrayEquals(result.getMergedDoc(), data.getMergedDoc(), "Era esperado arrays iguais, mas " + result24 + " <result.getMergedDoc()> é diferente de " + result25 + " <data.getMergedDoc()>")
chamada antiga: assertEquals(result.getTableStyle().getWidth(), data.getTableStyle().getWidth())
nova chamada: assertEquals(result.getTableStyle().getWidth(), data.getTableStyle().getWidth(), "Era esperado valores iguais, mas " + result26 + " <result.getTableStyle().getWidth()> é diferente de " + result27 + " <data.getTableStyle().getWidth()>")
chamada antiga: assertEquals(result.getTableStyle().getAlign(), data.getTableStyle().getAlign())
nova chamada: assertEquals(result.getTableStyle().getAlign(), data.getTableStyle().getAlign(), "Era esperado valores iguais, mas " + result28 + " <result.getTableStyle().getAlign()> é diferente de " + result29 + " <data.getTableStyle().getAlign()>")
chamada antiga: assertEquals(contents2.size(), contents.size())
nova chamada: assertEquals(contents2.size(), contents.size(), "Era esperado valores iguais, mas " + result30 + " <contents2.size()> é diferente de " + result31 + " <contents.size()>")
chamada antiga: assertArrayEquals(result.getFormats().toArray(), data.getFormats().toArray())
nova chamada: assertArrayEquals(result.getFormats().toArray(), data.getFormats().toArray(), "Era esperado arrays iguais, mas " + result32 + " <result.getFormats().toArray()> é diferente de " + result33 + " <data.getFormats().toArray()>")
chamada antiga: assertEquals(result.getItems().get(1).getItem().getParagraphStyle().getGlyphStyle().getColor(), data.getItems().get(1).getItem().getParagraphStyle().getGlyphStyle().getColor())
nova chamada: assertEquals(result.getItems().get(1).getItem().getParagraphStyle().getGlyphStyle().getColor(), data.getItems().get(1).getItem().getParagraphStyle().getGlyphStyle().getColor(), "Era esperado valores iguais, mas " + result34 + " <result.getItems().get(1).getItem().getParagraphStyle().getGlyphStyle().getColor()> é diferente de " + result35 + " <data.getItems().get(1).getItem().getParagraphStyle().getGlyphStyle().getColor()>")
chamada antiga: assertEquals(PictureType.SVG, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.svg"))))
nova chamada: assertEquals(PictureType.SVG, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.svg"))), "Era esperado valores iguais, mas  PictureType.SVG é diferente de " + result36 + " <PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File('src/test/resources/picture/p.svg')))>")
chamada antiga: assertEquals(PictureType.GIF, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.gif"))))
nova chamada: assertEquals(PictureType.GIF, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.gif"))), "Era esperado valores iguais, mas  PictureType.GIF é diferente de " + result37 + " <PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File('src/test/resources/picture/p.gif')))>")
chamada antiga: assertEquals(PictureType.PNG, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.png"))))
nova chamada: assertEquals(PictureType.PNG, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.png"))), "Era esperado valores iguais, mas  PictureType.PNG é diferente de " + result38 + " <PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File('src/test/resources/picture/p.png')))>")
chamada antiga: assertEquals(PictureType.JPEG, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.jpg"))))
nova chamada: assertEquals(PictureType.JPEG, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.jpg"))), "Era esperado valores iguais, mas  PictureType.JPEG é diferente de " + result39 + " <PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File('src/test/resources/picture/p.jpg')))>")
chamada antiga: assertEquals(PictureType.BMP, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.bmp"))))
nova chamada: assertEquals(PictureType.BMP, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.bmp"))), "Era esperado valores iguais, mas  PictureType.BMP é diferente de " + result40 + " <PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File('src/test/resources/picture/p.bmp')))>")
chamada antiga: assertEquals(PictureType.TIFF, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.tif"))))
nova chamada: assertEquals(PictureType.TIFF, PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File("src/test/resources/picture/p.tif"))), "Era esperado valores iguais, mas  PictureType.TIFF é diferente de " + result41 + " <PictureType.suggestFileType(ByteUtils.getLocalByteArray(new File('src/test/resources/picture/p.tif')))>")
chamada antiga: assertEquals(PictureType.PNG, PictureType.suggestFileType(ByteUtils.getUrlByteArray("http://deepoove.com/images/icecream.png")))
nova chamada: assertEquals(PictureType.PNG, PictureType.suggestFileType(ByteUtils.getUrlByteArray("http://deepoove.com/images/icecream.png")), "Era esperado valores iguais, mas  PictureType.PNG é diferente de " + result42 + " <PictureType.suggestFileType(ByteUtils.getUrlByteArray('http://deepoove.com/images/icecream.png'))>")
chamada antiga: assertEquals(PictureType.SVG, PictureType.suggestFileType(ByteUtils.getUrlByteArray("http://deepoove.com/images/%E8%8C%84%E5%AD%90.svg")))
nova chamada: assertEquals(PictureType.SVG, PictureType.suggestFileType(ByteUtils.getUrlByteArray("http://deepoove.com/images/%E8%8C%84%E5%AD%90.svg")), "Era esperado valores iguais, mas  PictureType.SVG é diferente de " + result43 + " <PictureType.suggestFileType(ByteUtils.getUrlByteArray('http://deepoove.com/images/%E8%8C%84%E5%AD%90.svg'))>")
chamada antiga: assertEquals(renew.getElementTemplates().size(), 0)
nova chamada: assertEquals(renew.getElementTemplates().size(), 0, "Era esperado valores iguais, mas " + result44 + " <renew.getElementTemplates().size()> é diferente de " + " 0")
chamada antiga: assertEquals(renew.getElementTemplates().size(), 4)
nova chamada: assertEquals(renew.getElementTemplates().size(), 4, "Era esperado valores iguais, mas " + result45 + " <renew.getElementTemplates().size()> é diferente de " + " 4")
chamada antiga: assertThrows(RenderException.class, () -> XWPFTemplate.compile(resource, builder.build()).render(new HashMap<String, Object>()))
nova chamada: assertThrows(RenderException.class, () -> XWPFTemplate.compile(resource, builder.build()).render(new HashMap<String, Object>()), "Era esperado que a exceção  RenderException.class fosse lançada, mas não foi")
chamada antiga: assertEquals(template.getElementTemplates().size(), 3)
nova chamada: assertEquals(template.getElementTemplates().size(), 3, "Era esperado valores iguais, mas " + result46 + " <template.getElementTemplates().size()> é diferente de " + " 3")
chamada antiga: assertEquals(template.getElementTemplates().size(), 5)
nova chamada: assertEquals(template.getElementTemplates().size(), 5, "Era esperado valores iguais, mas " + result47 + " <template.getElementTemplates().size()> é diferente de " + " 5")
chamada antiga: assertEquals(renew.getElementTemplates().size(), 0)
nova chamada: assertEquals(renew.getElementTemplates().size(), 0, "Era esperado valores iguais, mas " + result48 + " <renew.getElementTemplates().size()> é diferente de " + " 0")
chamada antiga: assertEquals(Arrays.toString(text.split(regexLine, -1)), "[hello, poi-tl]")
nova chamada: assertEquals(Arrays.toString(text.split(regexLine, -1)), "[hello, poi-tl]", "Era esperado valores iguais, mas " + result49 + " <Arrays.toString(text.split(regexLine, -1))> é diferente de " + " '[hello, poi-tl]'")
chamada antiga: assertEquals(Arrays.toString(text1.split(regexLine, -1)), "[hello, , poi-tl]")
nova chamada: assertEquals(Arrays.toString(text1.split(regexLine, -1)), "[hello, , poi-tl]", "Era esperado valores iguais, mas " + result50 + " <Arrays.toString(text1.split(regexLine, -1))> é diferente de " + " '[hello, , poi-tl]'")
chamada antiga: assertEquals(Arrays.toString(text2.split(regexLine, -1)), "[hello, , ]")
nova chamada: assertEquals(Arrays.toString(text2.split(regexLine, -1)), "[hello, , ]", "Era esperado valores iguais, mas " + result51 + " <Arrays.toString(text2.split(regexLine, -1))> é diferente de " + " '[hello, , ]'")
chamada antiga: assertEquals(Arrays.toString(text3.split(regexLine, -1)), "[, , poi-tl]")
nova chamada: assertEquals(Arrays.toString(text3.split(regexLine, -1)), "[, , poi-tl]", "Era esperado valores iguais, mas " + result52 + " <Arrays.toString(text3.split(regexLine, -1))> é diferente de " + " '[, , poi-tl]'")
chamada antiga: assertEquals(Arrays.toString(text4.split(regexLine, -1)), "[, , , , ]")
nova chamada: assertEquals(Arrays.toString(text4.split(regexLine, -1)), "[, , , , ]", "Era esperado valores iguais, mas " + result53 + " <Arrays.toString(text4.split(regexLine, -1))> é diferente de " + " '[, , , , ]'")
chamada antiga: assertEquals(Arrays.toString(text5.split(regexLine, -1)), "[hi, , , , what, is, , , this]")
nova chamada: assertEquals(Arrays.toString(text5.split(regexLine, -1)), "[hi, , , , what, is, , , this]", "Era esperado valores iguais, mas " + result54 + " <Arrays.toString(text5.split(regexLine, -1))> é diferente de " + " '[hi, , , , what, is, , , this]'")
chamada antiga: assertEquals(Arrays.toString(text7.split(regexLine, -1)), "[hi, , , , what, is, , this]")
nova chamada: assertEquals(Arrays.toString(text7.split(regexLine, -1)), "[hi, , , , what, is, , this]", "Era esperado valores iguais, mas " + result55 + " <Arrays.toString(text7.split(regexLine, -1))> é diferente de " + " '[hi, , , , what, is, , this]'")
chamada antiga: assertEquals("123", document.getParagraphArray(0).getText())
nova chamada: assertEquals("123", document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  '123' é diferente de " + result56 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals(paragraph.getText(), "Sayi")
nova chamada: assertEquals(paragraph.getText(), "Sayi", "Era esperado valores iguais, mas " + result57 + " <paragraph.getText()> é diferente de " + " 'Sayi'")
chamada antiga: assertEquals(paragraph.getText(), "卅一")
nova chamada: assertEquals(paragraph.getText(), "卅一", "Era esperado valores iguais, mas " + result58 + " <paragraph.getText()> é diferente de " + " '卅一'")
chamada antiga: assertNull(paragraph)
nova chamada: assertNull(paragraph, "Era esperado nulo, mas o valor obtido não é nulo")
chamada antiga: assertEquals(document.getAllPictures().size(), 1)
nova chamada: assertEquals(document.getAllPictures().size(), 1, "Era esperado valores iguais, mas " + result59 + " <document.getAllPictures().size()> é diferente de " + " 1")
chamada antiga: assertEquals(document.getTables().size(), 1)
nova chamada: assertEquals(document.getTables().size(), 1, "Era esperado valores iguais, mas " + result60 + " <document.getTables().size()> é diferente de " + " 1")
chamada antiga: assertTrue(exception.getCause() instanceof ExpressionEvalException)
nova chamada: assertTrue(exception.getCause() instanceof ExpressionEvalException, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(paragraph.getText(), "Sayi")
nova chamada: assertEquals(paragraph.getText(), "Sayi", "Era esperado valores iguais, mas " + result61 + " <paragraph.getText()> é diferente de " + " 'Sayi'")
chamada antiga: assertEquals(paragraph.getText(), "卅一")
nova chamada: assertEquals(paragraph.getText(), "卅一", "Era esperado valores iguais, mas " + result62 + " <paragraph.getText()> é diferente de " + " '卅一'")
chamada antiga: assertEquals(paragraph.getText(), "2018-10-01")
nova chamada: assertEquals(paragraph.getText(), "2018-10-01", "Era esperado valores iguais, mas " + result63 + " <paragraph.getText()> é diferente de " + " '2018-10-01'")
chamada antiga: assertEquals(paragraph.getText(), "http://www.deepoove.com")
nova chamada: assertEquals(paragraph.getText(), "http://www.deepoove.com", "Era esperado valores iguais, mas " + result64 + " <paragraph.getText()> é diferente de " + " 'http://www.deepoove.com'")
chamada antiga: assertEquals(document.getAllPictures().size(), 1)
nova chamada: assertEquals(document.getAllPictures().size(), 1, "Era esperado valores iguais, mas " + result65 + " <document.getAllPictures().size()> é diferente de " + " 1")
chamada antiga: assertEquals(document.getTables().size(), 1)
nova chamada: assertEquals(document.getTables().size(), 1, "Era esperado valores iguais, mas " + result66 + " <document.getTables().size()> é diferente de " + " 1")
chamada antiga: assertEquals(args.get("sea"), document.getParagraphArray(0).getText())
nova chamada: assertEquals(args.get("sea"), document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas " + result67 + " <args.get('sea')> é diferente de " + result68 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals(1, document.getAllPictures().size())
nova chamada: assertEquals(1, document.getAllPictures().size(), "Era esperado valores iguais, mas  1 é diferente de " + result69 + " <document.getAllPictures().size()>")
chamada antiga: assertEquals("面朝大海春暖花开", document.getParagraphArray(2).getText())
nova chamada: assertEquals("面朝大海春暖花开", document.getParagraphArray(2).getText(), "Era esperado valores iguais, mas  '面朝大海春暖花开' é diferente de " + result70 + " <document.getParagraphArray(2).getText()>")
chamada antiga: assertTrue(null != document.getParagraphArray(2).getNumID())
nova chamada: assertTrue(null != document.getParagraphArray(2).getNumID(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("今朝有酒今朝醉", document.getParagraphArray(3).getText())
nova chamada: assertEquals("今朝有酒今朝醉", document.getParagraphArray(3).getText(), "Era esperado valores iguais, mas  '今朝有酒今朝醉' é diferente de " + result71 + " <document.getParagraphArray(3).getText()>")
chamada antiga: assertTrue(null != document.getParagraphArray(3).getNumID())
nova chamada: assertTrue(null != document.getParagraphArray(3).getNumID(), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(document.getParagraphArray(2).getNumID(), document.getParagraphArray(3).getNumID())
nova chamada: assertEquals(document.getParagraphArray(2).getNumID(), document.getParagraphArray(3).getNumID(), "Era esperado valores iguais, mas " + result72 + " <document.getParagraphArray(2).getNumID()> é diferente de " + result73 + " <document.getParagraphArray(3).getNumID()>")
chamada antiga: assertEquals("日落：日落山花红四海", document.getTables().get(0).getRow(1).getCell(1).getText())
nova chamada: assertEquals("日落：日落山花红四海", document.getTables().get(0).getRow(1).getCell(1).getText(), "Era esperado valores iguais, mas  '日落：日落山花红四海' é diferente de " + result74 + " <document.getTables().get(0).getRow(1).getCell(1).getText()>")
chamada antiga: assertEquals("123", document.getParagraphArray(0).getText())
nova chamada: assertEquals("123", document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  '123' é diferente de " + result75 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals(spelForMap.compute("['name']"), "Sayi")
nova chamada: assertEquals(spelForMap.compute("['name']"), "Sayi", "Era esperado valores iguais, mas " + result76 + " <spelForMap.compute('['name']')> é diferente de " + " 'Sayi'")
chamada antiga: assertEquals(spelForMap.compute("['data']['hello']"), "poi-tl")
nova chamada: assertEquals(spelForMap.compute("['data']['hello']"), "poi-tl", "Era esperado valores iguais, mas " + result77 + " <spelForMap.compute('['data']['hello']')> é diferente de " + " 'poi-tl'")
chamada antiga: assertEquals(spelForMap.compute("name"), "Sayi")
nova chamada: assertEquals(spelForMap.compute("name"), "Sayi", "Era esperado valores iguais, mas " + result78 + " <spelForMap.compute('name')> é diferente de " + " 'Sayi'")
chamada antiga: assertEquals(spelForMap.compute("data.hello"), "poi-tl")
nova chamada: assertEquals(spelForMap.compute("data.hello"), "poi-tl", "Era esperado valores iguais, mas " + result79 + " <spelForMap.compute('data.hello')> é diferente de " + " 'poi-tl'")
chamada antiga: assertEquals(spelForMap.compute("localDate.format(T(java.time.format.DateTimeFormatter).ofPattern('yyyy年MM月dd日'))"), "2021年03月08日")
nova chamada: assertEquals(spelForMap.compute("localDate.format(T(java.time.format.DateTimeFormatter).ofPattern('yyyy年MM月dd日'))"), "2021年03月08日", "Era esperado valores iguais, mas " + result80 + " <spelForMap.compute('localDate.format(T(java.time.format.DateTimeFormatter).ofPattern('yyyy年MM月dd日'))')> é diferente de " + " '2021年03月08日'")
chamada antiga: assertEquals(spelForBean.compute("name"), "poi-tl")
nova chamada: assertEquals(spelForBean.compute("name"), "poi-tl", "Era esperado valores iguais, mas " + result81 + " <spelForBean.compute('name')> é diferente de " + " 'poi-tl'")
chamada antiga: assertEquals(spelForBean.compute("name == 'poi-tl'"), true)
nova chamada: assertEquals(spelForBean.compute("name == 'poi-tl'"), true, "Era esperado valores iguais, mas " + result82 + " <spelForBean.compute('name == 'poi-tl'')> é diferente de " + " true")
chamada antiga: assertEquals(spelForBean.compute("name.toUpperCase()"), "POI-TL")
nova chamada: assertEquals(spelForBean.compute("name.toUpperCase()"), "POI-TL", "Era esperado valores iguais, mas " + result83 + " <spelForBean.compute('name.toUpperCase()')> é diferente de " + " 'POI-TL'")
chamada antiga: assertEquals(spelForBean.compute("empty?:'这个字段为空'"), "这个字段为空")
nova chamada: assertEquals(spelForBean.compute("empty?:'这个字段为空'"), "这个字段为空", "Era esperado valores iguais, mas " + result84 + " <spelForBean.compute('empty?:'这个字段为空'')> é diferente de " + " '这个字段为空'")
chamada antiga: assertEquals(spelForBean.compute("sex ? '男' : '女'"), "男")
nova chamada: assertEquals(spelForBean.compute("sex ? '男' : '女'"), "男", "Era esperado valores iguais, mas " + result85 + " <spelForBean.compute('sex ? '男' : '女'')> é diferente de " + " '男'")
chamada antiga: assertEquals(spelForBean.compute("new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(time)"), "2019-05-20 22:14:10")
nova chamada: assertEquals(spelForBean.compute("new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(time)"), "2019-05-20 22:14:10", "Era esperado valores iguais, mas " + result86 + " <spelForBean.compute('new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(time)')> é diferente de " + " '2019-05-20 22:14:10'")
chamada antiga: assertEquals(spelForBean.compute("new java.text.SimpleDateFormat('yyyy-MM-dd hh:mm').format(time)"), "2019-05-20 10:14")
nova chamada: assertEquals(spelForBean.compute("new java.text.SimpleDateFormat('yyyy-MM-dd hh:mm').format(time)"), "2019-05-20 10:14", "Era esperado valores iguais, mas " + result87 + " <spelForBean.compute('new java.text.SimpleDateFormat('yyyy-MM-dd hh:mm').format(time)')> é diferente de " + " '2019-05-20 10:14'")
chamada antiga: assertEquals(spelForBean.compute("price"), 88880000L)
nova chamada: assertEquals(spelForBean.compute("price"), 88880000L, "Era esperado valores iguais, mas " + result88 + " <spelForBean.compute('price')> é diferente de " + " 88880000L")
chamada antiga: assertEquals(spelForBean.compute("price + '元'"), "88880000元")
nova chamada: assertEquals(spelForBean.compute("price + '元'"), "88880000元", "Era esperado valores iguais, mas " + result89 + " <spelForBean.compute('price + '元'')> é diferente de " + " '88880000元'")
chamada antiga: assertEquals(spelForBean.compute("price + '元' == '88880000元'"), true)
nova chamada: assertEquals(spelForBean.compute("price + '元' == '88880000元'"), true, "Era esperado valores iguais, mas " + result90 + " <spelForBean.compute('price + '元' == '88880000元'')> é diferente de " + " true")
chamada antiga: assertEquals(spelForBean.compute("price/1000 + '千元'"), "88880千元")
nova chamada: assertEquals(spelForBean.compute("price/1000 + '千元'"), "88880千元", "Era esperado valores iguais, mas " + result91 + " <spelForBean.compute('price/1000 + '千元'')> é diferente de " + " '88880千元'")
chamada antiga: assertEquals(spelForBean.compute("price/10000 + '万元'"), "8888万元")
nova chamada: assertEquals(spelForBean.compute("price/10000 + '万元'"), "8888万元", "Era esperado valores iguais, mas " + result92 + " <spelForBean.compute('price/10000 + '万元'')> é diferente de " + " '8888万元'")
chamada antiga: assertEquals(spelForBean.compute("dogs[0].name"), "阿黄")
nova chamada: assertEquals(spelForBean.compute("dogs[0].name"), "阿黄", "Era esperado valores iguais, mas " + result93 + " <spelForBean.compute('dogs[0].name')> é diferente de " + " '阿黄'")
chamada antiga: assertEquals(spelForBean.compute("dogs[1].age"), 6)
nova chamada: assertEquals(spelForBean.compute("dogs[1].age"), 6, "Era esperado valores iguais, mas " + result94 + " <spelForBean.compute('dogs[1].age')> é diferente de " + " 6")
chamada antiga: assertEquals(spelForBean.compute("dogs[2].name"), "阿蓝")
nova chamada: assertEquals(spelForBean.compute("dogs[2].name"), "阿蓝", "Era esperado valores iguais, mas " + result95 + " <spelForBean.compute('dogs[2].name')> é diferente de " + " '阿蓝'")
chamada antiga: assertEquals(spelForBean.compute("dogsArr[2].name"), "阿蓝")
nova chamada: assertEquals(spelForBean.compute("dogsArr[2].name"), "阿蓝", "Era esperado valores iguais, mas " + result96 + " <spelForBean.compute('dogsArr[2].name')> é diferente de " + " '阿蓝'")
chamada antiga: assertEquals(spelForBean.compute("data['hello']"), "poi-tl")
nova chamada: assertEquals(spelForBean.compute("data['hello']"), "poi-tl", "Era esperado valores iguais, mas " + result97 + " <spelForBean.compute('data['hello']')> é diferente de " + " 'poi-tl'")
chamada antiga: assertEquals(spelForFunction.compute("#substringStaticMethod('spElFunction', 2)"), "ElFunction")
nova chamada: assertEquals(spelForFunction.compute("#substringStaticMethod('spElFunction', 2)"), "ElFunction", "Era esperado valores iguais, mas " + result98 + " <spelForFunction.compute('#substringStaticMethod('spElFunction', 2)')> é diferente de " + " 'ElFunction'")
chamada antiga: assertEquals(paragraph.getText(), "poi-tl")
nova chamada: assertEquals(paragraph.getText(), "poi-tl", "Era esperado valores iguais, mas " + result99 + " <paragraph.getText()> é diferente de " + " 'poi-tl'")
chamada antiga: assertEquals(paragraph.getText(), "lowCase:poi-tlUpcase:POI-TL")
nova chamada: assertEquals(paragraph.getText(), "lowCase:poi-tlUpcase:POI-TL", "Era esperado valores iguais, mas " + result100 + " <paragraph.getText()> é diferente de " + " 'lowCase:poi-tlUpcase:POI-TL'")
chamada antiga: assertEquals(paragraph.getText(), "这个字段为空")
nova chamada: assertEquals(paragraph.getText(), "这个字段为空", "Era esperado valores iguais, mas " + result101 + " <paragraph.getText()> é diferente de " + " '这个字段为空'")
chamada antiga: assertEquals(paragraph.getText(), "男")
nova chamada: assertEquals(paragraph.getText(), "男", "Era esperado valores iguais, mas " + result102 + " <paragraph.getText()> é diferente de " + " '男'")
chamada antiga: assertEquals(paragraph.getText(), "2019-05-20 22:14:10")
nova chamada: assertEquals(paragraph.getText(), "2019-05-20 22:14:10", "Era esperado valores iguais, mas " + result103 + " <paragraph.getText()> é diferente de " + " '2019-05-20 22:14:10'")
chamada antiga: assertEquals(paragraph.getText(), "2019-05-20 10:14")
nova chamada: assertEquals(paragraph.getText(), "2019-05-20 10:14", "Era esperado valores iguais, mas " + result104 + " <paragraph.getText()> é diferente de " + " '2019-05-20 10:14'")
chamada antiga: assertEquals(paragraph.getText(), "88880000")
nova chamada: assertEquals(paragraph.getText(), "88880000", "Era esperado valores iguais, mas " + result105 + " <paragraph.getText()> é diferente de " + " '88880000'")
chamada antiga: assertEquals(paragraph.getText(), "8888万元")
nova chamada: assertEquals(paragraph.getText(), "8888万元", "Era esperado valores iguais, mas " + result106 + " <paragraph.getText()> é diferente de " + " '8888万元'")
chamada antiga: assertEquals(paragraph.getText(), "阿黄")
nova chamada: assertEquals(paragraph.getText(), "阿黄", "Era esperado valores iguais, mas " + result107 + " <paragraph.getText()> é diferente de " + " '阿黄'")
chamada antiga: assertEquals(paragraph.getText(), "6")
nova chamada: assertEquals(paragraph.getText(), "6", "Era esperado valores iguais, mas " + result108 + " <paragraph.getText()> é diferente de " + " '6'")
chamada antiga: assertEquals(paragraph.getText(), "阿蓝")
nova chamada: assertEquals(paragraph.getText(), "阿蓝", "Era esperado valores iguais, mas " + result109 + " <paragraph.getText()> é diferente de " + " '阿蓝'")
chamada antiga: assertEquals(paragraph.getText(), "ElFunction")
nova chamada: assertEquals(paragraph.getText(), "ElFunction", "Era esperado valores iguais, mas " + result110 + " <paragraph.getText()> é diferente de " + " 'ElFunction'")
chamada antiga: assertEquals(Configure.DEFAULT_GRAMER_REGEX, config.getGrammerRegex())
nova chamada: assertEquals(Configure.DEFAULT_GRAMER_REGEX, config.getGrammerRegex(), "Era esperado valores iguais, mas  Configure.DEFAULT_GRAMER_REGEX é diferente de " + result111 + " <config.getGrammerRegex()>")
chamada antiga: assertNotEquals(Configure.DEFAULT_GRAMER_REGEX, config.getGrammerRegex())
nova chamada: assertNotEquals(Configure.DEFAULT_GRAMER_REGEX, config.getGrammerRegex(), "Era esperado valores diferentes, mas  Configure.DEFAULT_GRAMER_REGEX é igual a " + result112 + " <config.getGrammerRegex()>")
chamada antiga: assertFalse(pattern.matcher("abc-123").matches())
nova chamada: assertFalse(pattern.matcher("abc-123").matches(), "Era esperado falso, mas " + result113 + " <pattern.matcher('abc-123').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher("##this").matches())
nova chamada: assertFalse(pattern.matcher("##this").matches(), "Era esperado falso, mas " + result114 + " <pattern.matcher('##this').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher("#.").matches())
nova chamada: assertFalse(pattern.matcher("#.").matches(), "Era esperado falso, mas " + result115 + " <pattern.matcher('#.').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher("#.a").matches())
nova chamada: assertFalse(pattern.matcher("#.a").matches(), "Era esperado falso, mas " + result116 + " <pattern.matcher('#.a').matches()> é verdadeiro ")
chamada antiga: assertTrue(pattern.matcher("#23.a").matches())
nova chamada: assertTrue(pattern.matcher("#23.a").matches(), "Era esperado verdadeiro, mas " + result117 + " <pattern.matcher('#23.a').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("123").matches())
nova chamada: assertTrue(pattern.matcher("123").matches(), "Era esperado verdadeiro, mas " + result118 + " <pattern.matcher('123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("ABC").matches())
nova chamada: assertTrue(pattern.matcher("ABC").matches(), "Era esperado verdadeiro, mas " + result119 + " <pattern.matcher('ABC').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc123").matches())
nova chamada: assertTrue(pattern.matcher("abc123").matches(), "Era esperado verdadeiro, mas " + result120 + " <pattern.matcher('abc123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("_123abc").matches())
nova chamada: assertTrue(pattern.matcher("_123abc").matches(), "Era esperado verdadeiro, mas " + result121 + " <pattern.matcher('_123abc').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc_123").matches())
nova chamada: assertTrue(pattern.matcher("abc_123").matches(), "Era esperado verdadeiro, mas " + result122 + " <pattern.matcher('abc_123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("好123").matches())
nova chamada: assertTrue(pattern.matcher("好123").matches(), "Era esperado verdadeiro, mas " + result123 + " <pattern.matcher('好123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("你好").matches())
nova chamada: assertTrue(pattern.matcher("你好").matches(), "Era esperado verdadeiro, mas " + result124 + " <pattern.matcher('你好').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("123好_好abc").matches())
nova chamada: assertTrue(pattern.matcher("123好_好abc").matches(), "Era esperado verdadeiro, mas " + result125 + " <pattern.matcher('123好_好abc').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc.123").matches())
nova chamada: assertTrue(pattern.matcher("abc.123").matches(), "Era esperado verdadeiro, mas " + result126 + " <pattern.matcher('abc.123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("").matches())
nova chamada: assertTrue(pattern.matcher("").matches(), "Era esperado verdadeiro, mas " + result127 + " <pattern.matcher('').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc.123").matches())
nova chamada: assertTrue(pattern.matcher("abc.123").matches(), "Era esperado verdadeiro, mas " + result128 + " <pattern.matcher('abc.123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc.123.123").matches())
nova chamada: assertTrue(pattern.matcher("abc.123.123").matches(), "Era esperado verdadeiro, mas " + result129 + " <pattern.matcher('abc.123.123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc.好.123").matches())
nova chamada: assertTrue(pattern.matcher("abc.好.123").matches(), "Era esperado verdadeiro, mas " + result130 + " <pattern.matcher('abc.好.123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("abc.好123").matches())
nova chamada: assertTrue(pattern.matcher("abc.好123").matches(), "Era esperado verdadeiro, mas " + result131 + " <pattern.matcher('abc.好123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("好.123").matches())
nova chamada: assertTrue(pattern.matcher("好.123").matches(), "Era esperado verdadeiro, mas " + result132 + " <pattern.matcher('好.123').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("好.123.好").matches())
nova chamada: assertTrue(pattern.matcher("好.123.好").matches(), "Era esperado verdadeiro, mas " + result133 + " <pattern.matcher('好.123.好').matches()> é falso")
chamada antiga: assertTrue(pattern.matcher("#this").matches())
nova chamada: assertTrue(pattern.matcher("#this").matches(), "Era esperado verdadeiro, mas " + result134 + " <pattern.matcher('#this').matches()> é falso")
chamada antiga: assertFalse(pattern.matcher("好..123").matches())
nova chamada: assertFalse(pattern.matcher("好..123").matches(), "Era esperado falso, mas " + result135 + " <pattern.matcher('好..123').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher("abc..123").matches())
nova chamada: assertFalse(pattern.matcher("abc..123").matches(), "Era esperado falso, mas " + result136 + " <pattern.matcher('abc..123').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher("abc23.").matches())
nova chamada: assertFalse(pattern.matcher("abc23.").matches(), "Era esperado falso, mas " + result137 + " <pattern.matcher('abc23.').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher("好123.").matches())
nova chamada: assertFalse(pattern.matcher("好123.").matches(), "Era esperado falso, mas " + result138 + " <pattern.matcher('好123.').matches()> é verdadeiro ")
chamada antiga: assertFalse(pattern.matcher(".好123").matches())
nova chamada: assertFalse(pattern.matcher(".好123").matches(), "Era esperado falso, mas " + result139 + " <pattern.matcher('.好123').matches()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:".length(), "Era esperado valores iguais, mas " + result140 + " <matcher.start()> é diferente de " + result141 + " <'lowCase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "{{name}}")
nova chamada: assertEquals(matcher.group(), "{{name}}", "Era esperado valores iguais, mas " + result142 + " <matcher.group()> é diferente de " + " '{{name}}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:{{name}}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:{{name}}".length(), "Era esperado valores iguais, mas " + result143 + " <matcher.end()> é diferente de " + result144 + " <'lowCase:{{name}}'.length()>")
chamada antiga: assertEquals(matcher.start(), "lowCase:{{name}}Upcase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:{{name}}Upcase:".length(), "Era esperado valores iguais, mas " + result145 + " <matcher.start()> é diferente de " + result146 + " <'lowCase:{{name}}Upcase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "{{name.toUpperCase()}}")
nova chamada: assertEquals(matcher.group(), "{{name.toUpperCase()}}", "Era esperado valores iguais, mas " + result147 + " <matcher.group()> é diferente de " + " '{{name.toUpperCase()}}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:{{name}}Upcase:{{name.toUpperCase()}}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:{{name}}Upcase:{{name.toUpperCase()}}".length(), "Era esperado valores iguais, mas " + result148 + " <matcher.end()> é diferente de " + result149 + " <'lowCase:{{name}}Upcase:{{name.toUpperCase()}}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result150 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:{{nameUpcase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:{{nameUpcase:".length(), "Era esperado valores iguais, mas " + result151 + " <matcher.start()> é diferente de " + result152 + " <'lowCase:{{nameUpcase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "{{name.toUpperCase()}}")
nova chamada: assertEquals(matcher.group(), "{{name.toUpperCase()}}", "Era esperado valores iguais, mas " + result153 + " <matcher.group()> é diferente de " + " '{{name.toUpperCase()}}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:{{nameUpcase:{{name.toUpperCase()}}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:{{nameUpcase:{{name.toUpperCase()}}".length(), "Era esperado valores iguais, mas " + result154 + " <matcher.end()> é diferente de " + result155 + " <'lowCase:{{nameUpcase:{{name.toUpperCase()}}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result156 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:".length(), "Era esperado valores iguais, mas " + result157 + " <matcher.start()> é diferente de " + result158 + " <'lowCase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "{{name}}")
nova chamada: assertEquals(matcher.group(), "{{name}}", "Era esperado valores iguais, mas " + result159 + " <matcher.group()> é diferente de " + " '{{name}}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:{{name}}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:{{name}}".length(), "Era esperado valores iguais, mas " + result160 + " <matcher.end()> é diferente de " + result161 + " <'lowCase:{{name}}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result162 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:".length(), "Era esperado valores iguais, mas " + result163 + " <matcher.start()> é diferente de " + result164 + " <'lowCase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "{{/}}")
nova chamada: assertEquals(matcher.group(), "{{/}}", "Era esperado valores iguais, mas " + result165 + " <matcher.group()> é diferente de " + " '{{/}}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:{{/}}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:{{/}}".length(), "Era esperado valores iguais, mas " + result166 + " <matcher.end()> é diferente de " + result167 + " <'lowCase:{{/}}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result168 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:".length(), "Era esperado valores iguais, mas " + result169 + " <matcher.start()> é diferente de " + result170 + " <'lowCase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "${name}")
nova chamada: assertEquals(matcher.group(), "${name}", "Era esperado valores iguais, mas " + result171 + " <matcher.group()> é diferente de " + " '${name}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:${name}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:${name}".length(), "Era esperado valores iguais, mas " + result172 + " <matcher.end()> é diferente de " + result173 + " <'lowCase:${name}'.length()>")
chamada antiga: assertEquals(matcher.start(), "lowCase:${name}Upcase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:${name}Upcase:".length(), "Era esperado valores iguais, mas " + result174 + " <matcher.start()> é diferente de " + result175 + " <'lowCase:${name}Upcase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "${name.toUpperCase()}")
nova chamada: assertEquals(matcher.group(), "${name.toUpperCase()}", "Era esperado valores iguais, mas " + result176 + " <matcher.group()> é diferente de " + " '${name.toUpperCase()}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:${name}Upcase:${name.toUpperCase()}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:${name}Upcase:${name.toUpperCase()}".length(), "Era esperado valores iguais, mas " + result177 + " <matcher.end()> é diferente de " + result178 + " <'lowCase:${name}Upcase:${name.toUpperCase()}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result179 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:${nameUpcase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:${nameUpcase:".length(), "Era esperado valores iguais, mas " + result180 + " <matcher.start()> é diferente de " + result181 + " <'lowCase:${nameUpcase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "${name.toUpperCase()}")
nova chamada: assertEquals(matcher.group(), "${name.toUpperCase()}", "Era esperado valores iguais, mas " + result182 + " <matcher.group()> é diferente de " + " '${name.toUpperCase()}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:${nameUpcase:${name.toUpperCase()}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:${nameUpcase:${name.toUpperCase()}".length(), "Era esperado valores iguais, mas " + result183 + " <matcher.end()> é diferente de " + result184 + " <'lowCase:${nameUpcase:${name.toUpperCase()}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result185 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(matcher.start(), "lowCase:".length())
nova chamada: assertEquals(matcher.start(), "lowCase:".length(), "Era esperado valores iguais, mas " + result186 + " <matcher.start()> é diferente de " + result187 + " <'lowCase:'.length()>")
chamada antiga: assertEquals(matcher.group(), "${name}")
nova chamada: assertEquals(matcher.group(), "${name}", "Era esperado valores iguais, mas " + result188 + " <matcher.group()> é diferente de " + " '${name}'")
chamada antiga: assertEquals(matcher.end(), "lowCase:${name}".length())
nova chamada: assertEquals(matcher.end(), "lowCase:${name}".length(), "Era esperado valores iguais, mas " + result189 + " <matcher.end()> é diferente de " + result190 + " <'lowCase:${name}'.length()>")
chamada antiga: assertFalse(matcher.find())
nova chamada: assertFalse(matcher.find(), "Era esperado falso, mas " + result191 + " <matcher.find()> é verdadeiro ")
chamada antiga: assertEquals(tag, "/")
nova chamada: assertEquals(tag, "/", "Era esperado valores iguais, mas  tag é diferente de " + " '/'")
chamada antiga: assertEquals(template.toString(), text)
nova chamada: assertEquals(template.toString(), text, "Era esperado valores iguais, mas " + result192 + " <template.toString()> é diferente de " + " text")
chamada antiga: assertEquals(template.getTagName(), "")
nova chamada: assertEquals(template.getTagName(), "", "Era esperado valores iguais, mas " + result193 + " <template.getTagName()> é diferente de " + " ''")
chamada antiga: assertEquals(tag, "")
nova chamada: assertEquals(tag, "", "Era esperado valores iguais, mas  tag é diferente de " + " ''")
chamada antiga: assertEquals(template.toString(), text)
nova chamada: assertEquals(template.toString(), text, "Era esperado valores iguais, mas " + result194 + " <template.toString()> é diferente de " + " text")
chamada antiga: assertEquals(template.getTagName(), "")
nova chamada: assertEquals(template.getTagName(), "", "Era esperado valores iguais, mas " + result195 + " <template.getTagName()> é diferente de " + " ''")
chamada antiga: assertEquals(tag, "name")
nova chamada: assertEquals(tag, "name", "Era esperado valores iguais, mas  tag é diferente de " + " 'name'")
chamada antiga: assertEquals(template.toString(), text)
nova chamada: assertEquals(template.toString(), text, "Era esperado valores iguais, mas " + result196 + " <template.toString()> é diferente de " + " text")
chamada antiga: assertEquals(template.getTagName(), "name")
nova chamada: assertEquals(template.getTagName(), "name", "Era esperado valores iguais, mas " + result197 + " <template.getTagName()> é diferente de " + " 'name'")
chamada antiga: assertEquals(tag, "?name")
nova chamada: assertEquals(tag, "?name", "Era esperado valores iguais, mas  tag é diferente de " + " '?name'")
chamada antiga: assertEquals(template.toString(), text)
nova chamada: assertEquals(template.toString(), text, "Era esperado valores iguais, mas " + result198 + " <template.toString()> é diferente de " + " text")
chamada antiga: assertEquals(template.getTagName(), "name")
nova chamada: assertEquals(template.getTagName(), "name", "Era esperado valores iguais, mas " + result199 + " <template.getTagName()> é diferente de " + " 'name'")
chamada antiga: assertTrue(elementTemplates.get(0) instanceof InlineIterableTemplate)
nova chamada: assertTrue(elementTemplates.get(0) instanceof InlineIterableTemplate, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(elementTemplates.get(0).variable(), "{{?isShowTitle}}")
nova chamada: assertEquals(elementTemplates.get(0).variable(), "{{?isShowTitle}}", "Era esperado valores iguais, mas " + result200 + " <elementTemplates.get(0).variable()> é diferente de " + " '{{?isShowTitle}}'")
chamada antiga: assertEquals(((IterableTemplate) elementTemplates.get(0)).getTemplates().get(0).variable(), "{{title}}")
nova chamada: assertEquals(((IterableTemplate) elementTemplates.get(0)).getTemplates().get(0).variable(), "{{title}}", "Era esperado valores iguais, mas " + result201 + " <((IterableTemplate) elementTemplates.get(0)).getTemplates().get(0).variable()> é diferente de " + " '{{title}}'")
chamada antiga: assertTrue(elementTemplates.get(1) instanceof IterableTemplate)
nova chamada: assertTrue(elementTemplates.get(1) instanceof IterableTemplate, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(iterable.variable(), "{{?showUser}}")
nova chamada: assertEquals(iterable.variable(), "{{?showUser}}", "Era esperado valores iguais, mas " + result202 + " <iterable.variable()> é diferente de " + " '{{?showUser}}'")
chamada antiga: assertTrue(iterableTemplates.get(0) instanceof RunTemplate)
nova chamada: assertTrue(iterableTemplates.get(0) instanceof RunTemplate, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(iterableTemplates.get(0).variable(), "{{user}}")
nova chamada: assertEquals(iterableTemplates.get(0).variable(), "{{user}}", "Era esperado valores iguais, mas " + result203 + " <iterableTemplates.get(0).variable()> é diferente de " + " '{{user}}'")
chamada antiga: assertTrue(iterableTemplates.get(1) instanceof InlineIterableTemplate)
nova chamada: assertTrue(iterableTemplates.get(1) instanceof InlineIterableTemplate, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(iterableTemplates.get(1).variable(), "{{?showDate}}")
nova chamada: assertEquals(iterableTemplates.get(1).variable(), "{{?showDate}}", "Era esperado valores iguais, mas " + result204 + " <iterableTemplates.get(1).variable()> é diferente de " + " '{{?showDate}}'")
chamada antiga: assertEquals(((IterableTemplate) iterableTemplates.get(1)).getTemplates().get(0).variable(), "{{date}}")
nova chamada: assertEquals(((IterableTemplate) iterableTemplates.get(1)).getTemplates().get(0).variable(), "{{date}}", "Era esperado valores iguais, mas " + result205 + " <((IterableTemplate) iterableTemplates.get(1)).getTemplates().get(0).variable()> é diferente de " + " '{{date}}'")
chamada antiga: assertTrue(iterableTemplates.get(2) instanceof IterableTemplate)
nova chamada: assertTrue(iterableTemplates.get(2) instanceof IterableTemplate, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(iterableTemplates.get(2).variable(), "{{?showDate}}")
nova chamada: assertEquals(iterableTemplates.get(2).variable(), "{{?showDate}}", "Era esperado valores iguais, mas " + result206 + " <iterableTemplates.get(2).variable()> é diferente de " + " '{{?showDate}}'")
chamada antiga: assertEquals(((IterableTemplate) iterableTemplates.get(2)).getTemplates().get(0).variable(), "{{date}}")
nova chamada: assertEquals(((IterableTemplate) iterableTemplates.get(2)).getTemplates().get(0).variable(), "{{date}}", "Era esperado valores iguais, mas " + result207 + " <((IterableTemplate) iterableTemplates.get(2)).getTemplates().get(0).variable()> é diferente de " + " '{{date}}'")
chamada antiga: assertTrue(iterableTemplates.get(3) instanceof InlineIterableTemplate)
nova chamada: assertTrue(iterableTemplates.get(3) instanceof InlineIterableTemplate, "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals(iterableTemplates.get(3).variable(), "{{?showDate}}")
nova chamada: assertEquals(iterableTemplates.get(3).variable(), "{{?showDate}}", "Era esperado valores iguais, mas " + result208 + " <iterableTemplates.get(3).variable()> é diferente de " + " '{{?showDate}}'")
chamada antiga: assertEquals(((IterableTemplate) iterableTemplates.get(3)).getTemplates().get(0).variable(), "{{date}}")
nova chamada: assertEquals(((IterableTemplate) iterableTemplates.get(3)).getTemplates().get(0).variable(), "{{date}}", "Era esperado valores iguais, mas " + result209 + " <((IterableTemplate) iterableTemplates.get(3)).getTemplates().get(0).variable()> é diferente de " + " '{{date}}'")
chamada antiga: assertEquals(elementTemplates.size(), 22)
nova chamada: assertEquals(elementTemplates.size(), 22, "Era esperado valores iguais, mas " + result210 + " <elementTemplates.size()> é diferente de " + " 22")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{@icon}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{@icon}}", "Era esperado valores iguais, mas " + result211 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{@icon}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{author}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{author}}", "Era esperado valores iguais, mas " + result212 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{author}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{date}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{date}}", "Era esperado valores iguais, mas " + result213 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{date}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{dfa}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{dfa}}", "Era esperado valores iguais, mas " + result214 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{dfa}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{fafd}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{fafd}}", "Era esperado valores iguais, mas " + result215 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{fafd}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{author}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{author}}", "Era esperado valores iguais, mas " + result216 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{author}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{madan}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{madan}}", "Era esperado valores iguais, mas " + result217 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{madan}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{aad}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{aad}}", "Era esperado valores iguais, mas " + result218 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{aad}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{date}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{date}}", "Era esperado valores iguais, mas " + result219 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{date}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{ada}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{ada}}", "Era esperado valores iguais, mas " + result220 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{ada}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{faf}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{faf}}", "Era esperado valores iguais, mas " + result221 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{faf}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{dfa}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{dfa}}", "Era esperado valores iguais, mas " + result222 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{dfa}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{dfdf}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{dfdf}}", "Era esperado valores iguais, mas " + result223 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{dfdf}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{fafd}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{fafd}}", "Era esperado valores iguais, mas " + result224 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{fafd}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{adaf}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{adaf}}", "Era esperado valores iguais, mas " + result225 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{adaf}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{ada}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{ada}}", "Era esperado valores iguais, mas " + result226 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{ada}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{yi}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{yi}}", "Era esperado valores iguais, mas " + result227 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{yi}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{dafd}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{dafd}}", "Era esperado valores iguais, mas " + result228 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{dafd}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{dfas}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{dfas}}", "Era esperado valores iguais, mas " + result229 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{dfas}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{@af}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{@af}}", "Era esperado valores iguais, mas " + result230 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{@af}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{table0}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{table0}}", "Era esperado valores iguais, mas " + result231 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{table0}}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "{{table}}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "{{table}}", "Era esperado valores iguais, mas " + result232 + " <elementTemplates.get(i++).variable()> é diferente de " + " '{{table}}'")
chamada antiga: assertEquals(elementTemplates.size(), 22)
nova chamada: assertEquals(elementTemplates.size(), 22, "Era esperado valores iguais, mas " + result233 + " <elementTemplates.size()> é diferente de " + " 22")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${@icon}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${@icon}", "Era esperado valores iguais, mas " + result234 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${@icon}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${author}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${author}", "Era esperado valores iguais, mas " + result235 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${author}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${date}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${date}", "Era esperado valores iguais, mas " + result236 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${date}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${dfa}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${dfa}", "Era esperado valores iguais, mas " + result237 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${dfa}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${fafd}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${fafd}", "Era esperado valores iguais, mas " + result238 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${fafd}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${author}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${author}", "Era esperado valores iguais, mas " + result239 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${author}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${madan}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${madan}", "Era esperado valores iguais, mas " + result240 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${madan}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${aad}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${aad}", "Era esperado valores iguais, mas " + result241 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${aad}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${date}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${date}", "Era esperado valores iguais, mas " + result242 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${date}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${ada}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${ada}", "Era esperado valores iguais, mas " + result243 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${ada}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${faf}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${faf}", "Era esperado valores iguais, mas " + result244 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${faf}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${dfa}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${dfa}", "Era esperado valores iguais, mas " + result245 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${dfa}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${dfdf}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${dfdf}", "Era esperado valores iguais, mas " + result246 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${dfdf}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${fafd}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${fafd}", "Era esperado valores iguais, mas " + result247 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${fafd}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${adaf}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${adaf}", "Era esperado valores iguais, mas " + result248 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${adaf}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${ada}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${ada}", "Era esperado valores iguais, mas " + result249 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${ada}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${yi}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${yi}", "Era esperado valores iguais, mas " + result250 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${yi}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${dafd}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${dafd}", "Era esperado valores iguais, mas " + result251 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${dafd}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${dfas}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${dfas}", "Era esperado valores iguais, mas " + result252 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${dfas}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${@af}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${@af}", "Era esperado valores iguais, mas " + result253 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${@af}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${table0}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${table0}", "Era esperado valores iguais, mas " + result254 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${table0}'")
chamada antiga: assertEquals(elementTemplates.get(i++).variable(), "${table}")
nova chamada: assertEquals(elementTemplates.get(i++).variable(), "${table}", "Era esperado valores iguais, mas " + result255 + " <elementTemplates.get(i++).variable()> é diferente de " + " '${table}'")
chamada antiga: assertEquals(1, paragraph.getRuns().size())
nova chamada: assertEquals(1, paragraph.getRuns().size(), "Era esperado valores iguais, mas  1 é diferente de " + result256 + " <paragraph.getRuns().size()>")
chamada antiga: assertEquals(text, paragraph.getParagraphText())
nova chamada: assertEquals(text, paragraph.getParagraphText(), "Era esperado valores iguais, mas  text é diferente de " + result257 + " <paragraph.getParagraphText()>")
chamada antiga: assertEquals(5, paragraph.getRuns().size())
nova chamada: assertEquals(5, paragraph.getRuns().size(), "Era esperado valores iguais, mas  5 é diferente de " + result258 + " <paragraph.getRuns().size()>")
chamada antiga: assertEquals("{{Hi}}", paragraph.getRuns().get(0).getText(0))
nova chamada: assertEquals("{{Hi}}", paragraph.getRuns().get(0).getText(0), "Era esperado valores iguais, mas  '{{Hi}}' é diferente de " + result259 + " <paragraph.getRuns().get(0).getText(0)>")
chamada antiga: assertEquals("\n", paragraph.getRuns().get(1).toString())
nova chamada: assertEquals("\n", paragraph.getRuns().get(1).toString(), "Era esperado valores iguais, mas  '\n' é diferente de " + result260 + " <paragraph.getRuns().get(1).toString()>")
chamada antiga: assertEquals("\n", paragraph.getRuns().get(2).toString())
nova chamada: assertEquals("\n", paragraph.getRuns().get(2).toString(), "Era esperado valores iguais, mas  '\n' é diferente de " + result261 + " <paragraph.getRuns().get(2).toString()>")
chamada antiga: assertEquals("{{world}}", paragraph.getRuns().get(3).getText(0))
nova chamada: assertEquals("{{world}}", paragraph.getRuns().get(3).getText(0), "Era esperado valores iguais, mas  '{{world}}' é diferente de " + result262 + " <paragraph.getRuns().get(3).getText(0)>")
chamada antiga: assertEquals("2", paragraph.getRuns().get(4).getText(0))
nova chamada: assertEquals("2", paragraph.getRuns().get(4).getText(0), "Era esperado valores iguais, mas  '2' é diferente de " + result263 + " <paragraph.getRuns().get(4).getText(0)>")
chamada antiga: assertEquals(2, paragraph.getRuns().size())
nova chamada: assertEquals(2, paragraph.getRuns().size(), "Era esperado valores iguais, mas  2 é diferente de " + result264 + " <paragraph.getRuns().size()>")
chamada antiga: assertEquals(3, paragraph.getRuns().size())
nova chamada: assertEquals(3, paragraph.getRuns().size(), "Era esperado valores iguais, mas  3 é diferente de " + result265 + " <paragraph.getRuns().size()>")
chamada antiga: assertEquals("{{Hi}}", paragraph.getRuns().get(0).getText(0))
nova chamada: assertEquals("{{Hi}}", paragraph.getRuns().get(0).getText(0), "Era esperado valores iguais, mas  '{{Hi}}' é diferente de " + result266 + " <paragraph.getRuns().get(0).getText(0)>")
chamada antiga: assertEquals("AA", paragraph.getRuns().get(1).toString())
nova chamada: assertEquals("AA", paragraph.getRuns().get(1).toString(), "Era esperado valores iguais, mas  'AA' é diferente de " + result267 + " <paragraph.getRuns().get(1).toString()>")
chamada antiga: assertEquals("http://deepoove.com", paragraph.getRuns().get(2).toString())
nova chamada: assertEquals("http://deepoove.com", paragraph.getRuns().get(2).toString(), "Era esperado valores iguais, mas  'http://deepoove.com' é diferente de " + result268 + " <paragraph.getRuns().get(2).toString()>")
chamada antiga: assertEquals(3, xwpfParagraph.getRuns().size())
nova chamada: assertEquals(3, xwpfParagraph.getRuns().size(), "Era esperado valores iguais, mas  3 é diferente de " + result269 + " <xwpfParagraph.getRuns().size()>")
chamada antiga: assertEquals("{{Hi}}", xwpfParagraph.getRuns().get(0).getText(0))
nova chamada: assertEquals("{{Hi}}", xwpfParagraph.getRuns().get(0).getText(0), "Era esperado valores iguais, mas  '{{Hi}}' é diferente de " + result270 + " <xwpfParagraph.getRuns().get(0).getText(0)>")
chamada antiga: assertEquals("AA", xwpfParagraph.getRuns().get(1).toString())
nova chamada: assertEquals("AA", xwpfParagraph.getRuns().get(1).toString(), "Era esperado valores iguais, mas  'AA' é diferente de " + result271 + " <xwpfParagraph.getRuns().get(1).toString()>")
chamada antiga: assertEquals("http://deepoove.com", xwpfParagraph.getRuns().get(2).toString())
nova chamada: assertEquals("http://deepoove.com", xwpfParagraph.getRuns().get(2).toString(), "Era esperado valores iguais, mas  'http://deepoove.com' é diferente de " + result272 + " <xwpfParagraph.getRuns().get(2).toString()>")
chamada antiga: assertEquals(person.getAliasName(), elObject.eval("aliasName"))
nova chamada: assertEquals(person.getAliasName(), elObject.eval("aliasName"), "Era esperado valores iguais, mas " + result273 + " <person.getAliasName()> é diferente de " + result274 + " <elObject.eval('aliasName')>")
chamada antiga: assertEquals(person.getAliasName(), elObject.eval("alias_name"))
nova chamada: assertEquals(person.getAliasName(), elObject.eval("alias_name"), "Era esperado valores iguais, mas " + result275 + " <person.getAliasName()> é diferente de " + result276 + " <elObject.eval('alias_name')>")
chamada antiga: assertEquals(person.getWork(), elObject.eval("work"))
nova chamada: assertEquals(person.getWork(), elObject.eval("work"), "Era esperado valores iguais, mas " + result277 + " <person.getWork()> é diferente de " + result278 + " <elObject.eval('work')>")
chamada antiga: assertEquals(person, elObject.eval("#this"))
nova chamada: assertEquals(person, elObject.eval("#this"), "Era esperado valores iguais, mas  person é diferente de " + result279 + " <elObject.eval('#this')>")
chamada antiga: assertEquals(user, elObject.eval("user"))
nova chamada: assertEquals(user, elObject.eval("user"), "Era esperado valores iguais, mas  user é diferente de " + result280 + " <elObject.eval('user')>")
chamada antiga: assertEquals(18, elObject.eval("user.age"))
nova chamada: assertEquals(18, elObject.eval("user.age"), "Era esperado valores iguais, mas  18 é diferente de " + result281 + " <elObject.eval('user.age')>")
chamada antiga: assertEquals(user.getName(), elObject.eval("user.name"))
nova chamada: assertEquals(user.getName(), elObject.eval("user.name"), "Era esperado valores iguais, mas " + result282 + " <user.getName()> é diferente de " + result283 + " <elObject.eval('user.name')>")
chamada antiga: assertEquals(user.getPlace(), elObject.eval("user.place"))
nova chamada: assertEquals(user.getPlace(), elObject.eval("user.place"), "Era esperado valores iguais, mas " + result284 + " <user.getPlace()> é diferente de " + result285 + " <elObject.eval('user.place')>")
chamada antiga: assertEquals(user.isEnable(), elObject.eval("user.enable"))
nova chamada: assertEquals(user.isEnable(), elObject.eval("user.enable"), "Era esperado valores iguais, mas " + result286 + " <user.isEnable()> é diferente de " + result287 + " <elObject.eval('user.enable')>")
chamada antiga: assertEquals(asList, elObject.eval("user.alias"))
nova chamada: assertEquals(asList, elObject.eval("user.alias"), "Era esperado valores iguais, mas  asList é diferente de " + result288 + " <elObject.eval('user.alias')>")
chamada antiga: assertEquals("page1", paragraph.getParagraphText())
nova chamada: assertEquals("page1", paragraph.getParagraphText(), "Era esperado valores iguais, mas  'page1' é diferente de " + result289 + " <paragraph.getParagraphText()>")
chamada antiga: assertEquals("\n", paragraph1.getRuns().get(0).text())
nova chamada: assertEquals("\n", paragraph1.getRuns().get(0).text(), "Era esperado valores iguais, mas  '\n' é diferente de " + result290 + " <paragraph1.getRuns().get(0).text()>")
chamada antiga: assertEquals("page2", paragraph2.getParagraphText())
nova chamada: assertEquals("page2", paragraph2.getParagraphText(), "Era esperado valores iguais, mas  'page2' é diferente de " + result291 + " <paragraph2.getParagraphText()>")
chamada antiga: assertEquals(paragraph.getRuns().size(), 6)
nova chamada: assertEquals(paragraph.getRuns().size(), 6, "Era esperado valores iguais, mas " + result292 + " <paragraph.getRuns().size()> é diferente de " + " 6")
chamada antiga: assertEquals(paragraph.getRuns().size(), 0)
nova chamada: assertEquals(paragraph.getRuns().size(), 0, "Era esperado valores iguais, mas " + result293 + " <paragraph.getRuns().size()> é diferente de " + " 0")
chamada antiga: assertEquals(container.getPosOfParagraphCTP(paragraph.getCTP()), 2)
nova chamada: assertEquals(container.getPosOfParagraphCTP(paragraph.getCTP()), 2, "Era esperado valores iguais, mas " + result294 + " <container.getPosOfParagraphCTP(paragraph.getCTP())> é diferente de " + " 2")
chamada antiga: assertEquals(header.getTables().size(), 2)
nova chamada: assertEquals(header.getTables().size(), 2, "Era esperado valores iguais, mas " + result295 + " <header.getTables().size()> é diferente de " + " 2")
chamada antiga: assertEquals(header.getParagraphs().size(), 2)
nova chamada: assertEquals(header.getParagraphs().size(), 2, "Era esperado valores iguais, mas " + result296 + " <header.getParagraphs().size()> é diferente de " + " 2")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 2)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 2, "Era esperado valores iguais, mas " + result297 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 2")
chamada antiga: assertEquals(bodyElements.size(), 6)
nova chamada: assertEquals(bodyElements.size(), 6, "Era esperado valores iguais, mas " + result298 + " <bodyElements.size()> é diferente de " + " 6")
chamada antiga: assertEquals(header.getParagraphs().size(), 4)
nova chamada: assertEquals(header.getParagraphs().size(), 4, "Era esperado valores iguais, mas " + result299 + " <header.getParagraphs().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result300 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(header.getParagraphs().size(), 4)
nova chamada: assertEquals(header.getParagraphs().size(), 4, "Era esperado valores iguais, mas " + result301 + " <header.getParagraphs().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result302 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(container.getParaPos(paragraph), 1)
nova chamada: assertEquals(container.getParaPos(paragraph), 1, "Era esperado valores iguais, mas " + result303 + " <container.getParaPos(paragraph)> é diferente de " + " 1")
chamada antiga: assertEquals(header.getTables().size(), 4)
nova chamada: assertEquals(header.getTables().size(), 4, "Era esperado valores iguais, mas " + result304 + " <header.getTables().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result305 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(container.getTablePos(table), 1)
nova chamada: assertEquals(container.getTablePos(table), 1, "Era esperado valores iguais, mas " + result306 + " <container.getTablePos(table)> é diferente de " + " 1")
chamada antiga: assertEquals(header.getTables().size(), 4)
nova chamada: assertEquals(header.getTables().size(), 4, "Era esperado valores iguais, mas " + result307 + " <header.getTables().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result308 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(header.getParagraphs().size(), 2)
nova chamada: assertEquals(header.getParagraphs().size(), 2, "Era esperado valores iguais, mas " + result309 + " <header.getParagraphs().size()> é diferente de " + " 2")
chamada antiga: assertEquals(header.getParagraphs().size(), 3)
nova chamada: assertEquals(header.getParagraphs().size(), 3, "Era esperado valores iguais, mas " + result310 + " <header.getParagraphs().size()> é diferente de " + " 3")
chamada antiga: assertEquals(sourceSize + targetSize, resultSize)
nova chamada: assertEquals(sourceSize + targetSize, resultSize, "Era esperado valores iguais, mas  sourceSize + targetSize é diferente de " + " resultSize")
chamada antiga: assertEquals(sourceSize - 1 + targetSize1 + targetSize2, resultSize)
nova chamada: assertEquals(sourceSize - 1 + targetSize1 + targetSize2, resultSize, "Era esperado valores iguais, mas  sourceSize - 1 + targetSize1 + targetSize2 é diferente de " + " resultSize")
chamada antiga: assertEquals(-1, source.getXWPFDocument().getDocument().toString().indexOf(":wps="))
nova chamada: assertEquals(-1, source.getXWPFDocument().getDocument().toString().indexOf(":wps="), "Era esperado valores iguais, mas  -1 é diferente de " + result311 + " <source.getXWPFDocument().getDocument().toString().indexOf(':wps=')>")
chamada antiga: assertNotEquals(-1, target.getXWPFDocument().getDocument().toString().indexOf(":wps="))
nova chamada: assertNotEquals(-1, target.getXWPFDocument().getDocument().toString().indexOf(":wps="), "Era esperado valores diferentes, mas  -1 é igual a " + result312 + " <target.getXWPFDocument().getDocument().toString().indexOf(':wps=')>")
chamada antiga: assertEquals(result.getParagraphs().size(), 1)
nova chamada: assertEquals(result.getParagraphs().size(), 1, "Era esperado valores iguais, mas " + result313 + " <result.getParagraphs().size()> é diferente de " + " 1")
chamada antiga: assertEquals(result.getParagraphArray(0).getText(), "")
nova chamada: assertEquals(result.getParagraphArray(0).getText(), "", "Era esperado valores iguais, mas " + result314 + " <result.getParagraphArray(0).getText()> é diferente de " + " ''")
chamada antiga: assertNotEquals(-1, target.getXWPFDocument().getDocument().toString().indexOf(":wps="))
nova chamada: assertNotEquals(-1, target.getXWPFDocument().getDocument().toString().indexOf(":wps="), "Era esperado valores diferentes, mas  -1 é igual a " + result315 + " <target.getXWPFDocument().getDocument().toString().indexOf(':wps=')>")
chamada antiga: assertEquals(container.getPosOfParagraphCTP(paragraph.getCTP()), 2)
nova chamada: assertEquals(container.getPosOfParagraphCTP(paragraph.getCTP()), 2, "Era esperado valores iguais, mas " + result316 + " <container.getPosOfParagraphCTP(paragraph.getCTP())> é diferente de " + " 2")
chamada antiga: assertEquals(doc.getTables().size(), 2)
nova chamada: assertEquals(doc.getTables().size(), 2, "Era esperado valores iguais, mas " + result317 + " <doc.getTables().size()> é diferente de " + " 2")
chamada antiga: assertEquals(doc.getParagraphs().size(), 2)
nova chamada: assertEquals(doc.getParagraphs().size(), 2, "Era esperado valores iguais, mas " + result318 + " <doc.getParagraphs().size()> é diferente de " + " 2")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 2)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 2, "Era esperado valores iguais, mas " + result319 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 2")
chamada antiga: assertEquals(bodyElements.size(), 6)
nova chamada: assertEquals(bodyElements.size(), 6, "Era esperado valores iguais, mas " + result320 + " <bodyElements.size()> é diferente de " + " 6")
chamada antiga: assertEquals(doc.getParagraphs().size(), 4)
nova chamada: assertEquals(doc.getParagraphs().size(), 4, "Era esperado valores iguais, mas " + result321 + " <doc.getParagraphs().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result322 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(doc.getParagraphs().size(), 4)
nova chamada: assertEquals(doc.getParagraphs().size(), 4, "Era esperado valores iguais, mas " + result323 + " <doc.getParagraphs().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result324 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(container.getParaPos(paragraph), 1)
nova chamada: assertEquals(container.getParaPos(paragraph), 1, "Era esperado valores iguais, mas " + result325 + " <container.getParaPos(paragraph)> é diferente de " + " 1")
chamada antiga: assertEquals(doc.getTables().size(), 4)
nova chamada: assertEquals(doc.getTables().size(), 4, "Era esperado valores iguais, mas " + result326 + " <doc.getTables().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result327 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(container.getTablePos(table), 1)
nova chamada: assertEquals(container.getTablePos(table), 1, "Era esperado valores iguais, mas " + result328 + " <container.getTablePos(table)> é diferente de " + " 1")
chamada antiga: assertEquals(doc.getTables().size(), 4)
nova chamada: assertEquals(doc.getTables().size(), 4, "Era esperado valores iguais, mas " + result329 + " <doc.getTables().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result330 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(doc.getParagraphs().size(), 2)
nova chamada: assertEquals(doc.getParagraphs().size(), 2, "Era esperado valores iguais, mas " + result331 + " <doc.getParagraphs().size()> é diferente de " + " 2")
chamada antiga: assertEquals(doc.getParagraphs().size(), 3)
nova chamada: assertEquals(doc.getParagraphs().size(), 3, "Era esperado valores iguais, mas " + result332 + " <doc.getParagraphs().size()> é diferente de " + " 3")
chamada antiga: assertEquals(container.getPosOfParagraphCTP(paragraph.getCTP()), 2)
nova chamada: assertEquals(container.getPosOfParagraphCTP(paragraph.getCTP()), 2, "Era esperado valores iguais, mas " + result333 + " <container.getPosOfParagraphCTP(paragraph.getCTP())> é diferente de " + " 2")
chamada antiga: assertEquals(cell.getTables().size(), 2)
nova chamada: assertEquals(cell.getTables().size(), 2, "Era esperado valores iguais, mas " + result334 + " <cell.getTables().size()> é diferente de " + " 2")
chamada antiga: assertEquals(cell.getParagraphs().size(), 2)
nova chamada: assertEquals(cell.getParagraphs().size(), 2, "Era esperado valores iguais, mas " + result335 + " <cell.getParagraphs().size()> é diferente de " + " 2")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 2)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 2, "Era esperado valores iguais, mas " + result336 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 2")
chamada antiga: assertEquals(bodyElements.size(), 6)
nova chamada: assertEquals(bodyElements.size(), 6, "Era esperado valores iguais, mas " + result337 + " <bodyElements.size()> é diferente de " + " 6")
chamada antiga: assertEquals(cell.getParagraphs().size(), 4)
nova chamada: assertEquals(cell.getParagraphs().size(), 4, "Era esperado valores iguais, mas " + result338 + " <cell.getParagraphs().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result339 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(cell.getParagraphs().size(), 4)
nova chamada: assertEquals(cell.getParagraphs().size(), 4, "Era esperado valores iguais, mas " + result340 + " <cell.getParagraphs().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result341 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(container.getParaPos(paragraph), 1)
nova chamada: assertEquals(container.getParaPos(paragraph), 1, "Era esperado valores iguais, mas " + result342 + " <container.getParaPos(paragraph)> é diferente de " + " 1")
chamada antiga: assertEquals(cell.getTables().size(), 4)
nova chamada: assertEquals(cell.getTables().size(), 4, "Era esperado valores iguais, mas " + result343 + " <cell.getTables().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result344 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(container.getTablePos(table), 1)
nova chamada: assertEquals(container.getTablePos(table), 1, "Era esperado valores iguais, mas " + result345 + " <container.getTablePos(table)> é diferente de " + " 1")
chamada antiga: assertEquals(cell.getTables().size(), 4)
nova chamada: assertEquals(cell.getTables().size(), 4, "Era esperado valores iguais, mas " + result346 + " <cell.getTables().size()> é diferente de " + " 4")
chamada antiga: assertEquals(container.getPosOfParagraph(paragraph), 3)
nova chamada: assertEquals(container.getPosOfParagraph(paragraph), 3, "Era esperado valores iguais, mas " + result347 + " <container.getPosOfParagraph(paragraph)> é diferente de " + " 3")
chamada antiga: assertEquals(cell.getParagraphs().size(), 2)
nova chamada: assertEquals(cell.getParagraphs().size(), 2, "Era esperado valores iguais, mas " + result348 + " <cell.getParagraphs().size()> é diferente de " + " 2")
chamada antiga: assertEquals(cell.getParagraphs().size(), 3)
nova chamada: assertEquals(cell.getParagraphs().size(), 3, "Era esperado valores iguais, mas " + result349 + " <cell.getParagraphs().size()> é diferente de " + " 3")
chamada antiga: assertEquals(" Chinathis is endnote", xwpfEndnote.getParagraphArray(0).getText())
nova chamada: assertEquals(" Chinathis is endnote", xwpfEndnote.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  ' Chinathis is endnote' é diferente de " + result350 + " <xwpfEndnote.getParagraphArray(0).getText()>")
chamada antiga: assertEquals("世界地图this is footernote", xwpfFootnote.getParagraphArray(0).getText())
nova chamada: assertEquals("世界地图this is footernote", xwpfFootnote.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  '世界地图this is footernote' é diferente de " + result351 + " <xwpfFootnote.getParagraphArray(0).getText()>")
chamada antiga: assertNull(paragraph.getRuns().get(0).getFontFamily())
nova chamada: assertNull(paragraph.getRuns().get(0).getFontFamily(), "Era esperado nulo, mas " + result352 + " <paragraph.getRuns().get(0).getFontFamily()> não é nulo")
chamada antiga: assertEquals(text, paragraph.getText())
nova chamada: assertEquals(text, paragraph.getText(), "Era esperado valores iguais, mas  text é diferente de " + result353 + " <paragraph.getText()>")
chamada antiga: assertEquals("微软雅黑", paragraph.getRuns().get(0).getFontFamily())
nova chamada: assertEquals("微软雅黑", paragraph.getRuns().get(0).getFontFamily(), "Era esperado valores iguais, mas  '微软雅黑' é diferente de " + result354 + " <paragraph.getRuns().get(0).getFontFamily()>")
chamada antiga: assertEquals(text, paragraph.getText())
nova chamada: assertEquals(text, paragraph.getText(), "Era esperado valores iguais, mas  text é diferente de " + result355 + " <paragraph.getText()>")
chamada antiga: assertEquals("index:1_is_first:true_is_last:false_has_next:true_is_even_item:false_is_odd_item:trueindex:2_is_first:false_is_last:false_has_next:true_is_even_item:true_is_odd_item:falseindex:3_is_first:false_is_last:false_has_next:true_is_even_item:false_is_odd_item:trueindex:4_is_first:false_is_last:true_has_next:false_is_even_item:true_is_odd_item:false", text)
nova chamada: assertEquals("index:1_is_first:true_is_last:false_has_next:true_is_even_item:false_is_odd_item:trueindex:2_is_first:false_is_last:false_has_next:true_is_even_item:true_is_odd_item:falseindex:3_is_first:false_is_last:false_has_next:true_is_even_item:false_is_odd_item:trueindex:4_is_first:false_is_last:true_has_next:false_is_even_item:true_is_odd_item:false", text, "Era esperado valores iguais, mas  'index:1_is_first:true_is_last:false_has_next:true_is_even_item:false_is_odd_item:trueindex:2_is_first:false_is_last:false_has_next:true_is_even_item:true_is_odd_item:falseindex:3_is_first:false_is_last:false_has_next:true_is_even_item:false_is_odd_item:trueindex:4_is_first:false_is_last:true_has_next:false_is_even_item:true_is_odd_item:false' é diferente de " + " text")
chamada antiga: assertEquals("[" + obj.getName() + "]", document.getParagraphArray(1).getText())
nova chamada: assertEquals("[" + obj.getName() + "]", document.getParagraphArray(1).getText(), "Era esperado valores iguais, mas  '[' + obj.getName() + ']' é diferente de " + result356 + " <document.getParagraphArray(1).getText()>")
chamada antiga: assertEquals("[" + obj.getWord() + "]", document.getParagraphArray(2).getText())
nova chamada: assertEquals("[" + obj.getWord() + "]", document.getParagraphArray(2).getText(), "Era esperado valores iguais, mas  '[' + obj.getWord() + ']' é diferente de " + result357 + " <document.getParagraphArray(2).getText()>")
chamada antiga: assertEquals("[" + obj.getTime() + "]", document.getParagraphArray(3).getText())
nova chamada: assertEquals("[" + obj.getTime() + "]", document.getParagraphArray(3).getText(), "Era esperado valores iguais, mas  '[' + obj.getTime() + ']' é diferente de " + result358 + " <document.getParagraphArray(3).getText()>")
chamada antiga: assertEquals("00", document.getTables().get(0).getRow(0).getCell(0).getText())
nova chamada: assertEquals("00", document.getTables().get(0).getRow(0).getCell(0).getText(), "Era esperado valores iguais, mas  '00' é diferente de " + result359 + " <document.getTables().get(0).getRow(0).getCell(0).getText()>")
chamada antiga: assertEquals(1, document.getAllPictures().size())
nova chamada: assertEquals(1, document.getAllPictures().size(), "Era esperado valores iguais, mas  1 é diferente de " + result360 + " <document.getAllPictures().size()>")
chamada antiga: assertEquals(1, document.getHyperlinks().length)
nova chamada: assertEquals(1, document.getHyperlinks().length, "Era esperado valores iguais, mas  1 é diferente de " + " document.getHyperlinks().length")
chamada antiga: assertEquals(paragraph.getText(), "Hi, poi-tl")
nova chamada: assertEquals(paragraph.getText(), "Hi, poi-tl", "Era esperado valores iguais, mas " + result361 + " <paragraph.getText()> é diferente de " + " 'Hi, poi-tl'")
chamada antiga: assertEquals(cell.getText(), "Hi, poi-tl")
nova chamada: assertEquals(cell.getText(), "Hi, poi-tl", "Era esperado valores iguais, mas " + result362 + " <cell.getText()> é diferente de " + " 'Hi, poi-tl'")
chamada antiga: assertEquals(paragraph.getText(), "Hi, poi-tl")
nova chamada: assertEquals(paragraph.getText(), "Hi, poi-tl", "Era esperado valores iguais, mas " + result363 + " <paragraph.getText()> é diferente de " + " 'Hi, poi-tl'")
chamada antiga: assertEquals(paragraph.getText(), "Hi, poi-tl")
nova chamada: assertEquals(paragraph.getText(), "Hi, poi-tl", "Era esperado valores iguais, mas " + result364 + " <paragraph.getText()> é diferente de " + " 'Hi, poi-tl'")
chamada antiga: assertEquals(paragraph.getText(), "Hello, My perfect.")
nova chamada: assertEquals(paragraph.getText(), "Hello, My perfect.", "Era esperado valores iguais, mas " + result365 + " <paragraph.getText()> é diferente de " + " 'Hello, My perfect.'")
chamada antiga: assertEquals(paragraph.getText(), "UserName: Sayi")
nova chamada: assertEquals(paragraph.getText(), "UserName: Sayi", "Era esperado valores iguais, mas " + result366 + " <paragraph.getText()> é diferente de " + " 'UserName: Sayi'")
chamada antiga: assertEquals(paragraph.getText(), "Date: 2020-02-10")
nova chamada: assertEquals(paragraph.getText(), "Date: 2020-02-10", "Era esperado valores iguais, mas " + result367 + " <paragraph.getText()> é diferente de " + " 'Date: 2020-02-10'")
chamada antiga: assertEquals(paragraph.getText(), "Date: 2020-02-10")
nova chamada: assertEquals(paragraph.getText(), "Date: 2020-02-10", "Era esperado valores iguais, mas " + result368 + " <paragraph.getText()> é diferente de " + " 'Date: 2020-02-10'")
chamada antiga: assertEquals(paragraph.getText(), "I love this Game Date: 2020-02-10 and good game.")
nova chamada: assertEquals(paragraph.getText(), "I love this Game Date: 2020-02-10 and good game.", "Era esperado valores iguais, mas " + result369 + " <paragraph.getText()> é diferente de " + " 'I love this Game Date: 2020-02-10 and good game.'")
chamada antiga: assertEquals("Hi, poi-tl", document.getParagraphArray(0).getText())
nova chamada: assertEquals("Hi, poi-tl", document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  'Hi, poi-tl' é diferente de " + result370 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals("My perfect Sayi.My perfect Deepoove.", document.getParagraphArray(1).getText())
nova chamada: assertEquals("My perfect Sayi.My perfect Deepoove.", document.getParagraphArray(1).getText(), "Era esperado valores iguais, mas  'My perfect Sayi.My perfect Deepoove.' é diferente de " + result371 + " <document.getParagraphArray(1).getText()>")
chamada antiga: assertEquals("Please My perfect Sayi.My perfect Deepoove.", document.getParagraphArray(2).getText())
nova chamada: assertEquals("Please My perfect Sayi.My perfect Deepoove.", document.getParagraphArray(2).getText(), "Era esperado valores iguais, mas  'Please My perfect Sayi.My perfect Deepoove.' é diferente de " + result372 + " <document.getParagraphArray(2).getText()>")
chamada antiga: assertEquals("Good My perfect Sayi.My perfect Deepoove. Game.", document.getParagraphArray(3).getText())
nova chamada: assertEquals("Good My perfect Sayi.My perfect Deepoove. Game.", document.getParagraphArray(3).getText(), "Era esperado valores iguais, mas  'Good My perfect Sayi.My perfect Deepoove. Game.' é diferente de " + result373 + " <document.getParagraphArray(3).getText()>")
chamada antiga: assertEquals("Hello, My perfect Sayi.", document.getParagraphArray(5).getText())
nova chamada: assertEquals("Hello, My perfect Sayi.", document.getParagraphArray(5).getText(), "Era esperado valores iguais, mas  'Hello, My perfect Sayi.' é diferente de " + result374 + " <document.getParagraphArray(5).getText()>")
chamada antiga: assertEquals("Sayi", table0.getRow(1).getCell(2).getText())
nova chamada: assertEquals("Sayi", table0.getRow(1).getCell(2).getText(), "Era esperado valores iguais, mas  'Sayi' é diferente de " + result375 + " <table0.getRow(1).getCell(2).getText()>")
chamada antiga: assertEquals("addr: Hangzhou,China.", table0.getRow(2).getCell(1).getParagraphArray(0).getText())
nova chamada: assertEquals("addr: Hangzhou,China.", table0.getRow(2).getCell(1).getParagraphArray(0).getText(), "Era esperado valores iguais, mas  'addr: Hangzhou,China.' é diferente de " + result376 + " <table0.getRow(2).getCell(1).getParagraphArray(0).getText()>")
chamada antiga: assertEquals("addr: Shanghai,China.", table0.getRow(2).getCell(1).getParagraphArray(1).getText())
nova chamada: assertEquals("addr: Shanghai,China.", table0.getRow(2).getCell(1).getParagraphArray(1).getText(), "Era esperado valores iguais, mas  'addr: Shanghai,China.' é diferente de " + result377 + " <table0.getRow(2).getCell(1).getParagraphArray(1).getText()>")
chamada antiga: assertEquals("Deepoove", table1.getRow(1).getCell(2).getText())
nova chamada: assertEquals("Deepoove", table1.getRow(1).getCell(2).getText(), "Era esperado valores iguais, mas  'Deepoove' é diferente de " + result378 + " <table1.getRow(1).getCell(2).getText()>")
chamada antiga: assertEquals("", table1.getRow(2).getCell(1).getText())
nova chamada: assertEquals("", table1.getRow(2).getCell(1).getText(), "Era esperado valores iguais, mas  '' é diferente de " + result379 + " <table1.getRow(2).getCell(1).getText()>")
chamada antiga: assertEquals("开始，", document.getParagraphArray(0).getText())
nova chamada: assertEquals("开始，", document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  '开始，' é diferente de " + result380 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals("结束。", document.getParagraphArray(1).getText())
nova chamada: assertEquals("结束。", document.getParagraphArray(1).getText(), "Era esperado valores iguais, mas  '结束。' é diferente de " + result381 + " <document.getParagraphArray(1).getText()>")
chamada antiga: assertEquals("开始，结束。", document.getParagraphArray(3).getText())
nova chamada: assertEquals("开始，结束。", document.getParagraphArray(3).getText(), "Era esperado valores iguais, mas  '开始，结束。' é diferente de " + result382 + " <document.getParagraphArray(3).getText()>")
chamada antiga: assertEquals("Hello, My perfect, http://deepoove.com,Sayi." + "addr:http://deepoove.comHangzhou,China.addr:http://deepoove.comShanghai,China." + "Hello, My perfect, http://deepoove.com,Deepoove website..", document.getParagraphArray(6).getText())
nova chamada: assertEquals("Hello, My perfect, http://deepoove.com,Sayi." + "addr:http://deepoove.comHangzhou,China.addr:http://deepoove.comShanghai,China." + "Hello, My perfect, http://deepoove.com,Deepoove website..", document.getParagraphArray(6).getText(), "Era esperado valores iguais, mas  'Hello, My perfect, http://deepoove.com,Sayi.' + 'addr:http://deepoove.comHangzhou,China.addr:http://deepoove.comShanghai,China.' + 'Hello, My perfect, http://deepoove.com,Deepoove website..' é diferente de " + result383 + " <document.getParagraphArray(6).getText()>")
chamada antiga: assertEquals(paragraph.getText(), "testTitle")
nova chamada: assertEquals(paragraph.getText(), "testTitle", "Era esperado valores iguais, mas " + result384 + " <paragraph.getText()> é diferente de " + " 'testTitle'")
chamada antiga: assertEquals(paragraph.getText(), "老师：t1\n" + "年龄：18")
nova chamada: assertEquals(paragraph.getText(), "老师：t1\n" + "年龄：18", "Era esperado valores iguais, mas " + result385 + " <paragraph.getText()> é diferente de " + " '老师：t1\n' + '年龄：18'")
chamada antiga: assertEquals(paragraph.getText(), "老师：t2\n" + "年龄：36")
nova chamada: assertEquals(paragraph.getText(), "老师：t2\n" + "年龄：36", "Era esperado valores iguais, mas " + result386 + " <paragraph.getText()> é diferente de " + " '老师：t2\n' + '年龄：36'")
chamada antiga: assertEquals(paragraph.getText(), "{{title}}")
nova chamada: assertEquals(paragraph.getText(), "{{title}}", "Era esperado valores iguais, mas " + result387 + " <paragraph.getText()> é diferente de " + " '{{title}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{+students}}")
nova chamada: assertEquals(paragraph.getText(), "{{+students}}", "Era esperado valores iguais, mas " + result388 + " <paragraph.getText()> é diferente de " + " '{{+students}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{+teachers}}")
nova chamada: assertEquals(paragraph.getText(), "{{+teachers}}", "Era esperado valores iguais, mas " + result389 + " <paragraph.getText()> é diferente de " + " '{{+teachers}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{title}}")
nova chamada: assertEquals(paragraph.getText(), "{{title}}", "Era esperado valores iguais, mas " + result390 + " <paragraph.getText()> é diferente de " + " '{{title}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{+students}}")
nova chamada: assertEquals(paragraph.getText(), "{{+students}}", "Era esperado valores iguais, mas " + result391 + " <paragraph.getText()> é diferente de " + " '{{+students}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{+teachers}}")
nova chamada: assertEquals(paragraph.getText(), "{{+teachers}}", "Era esperado valores iguais, mas " + result392 + " <paragraph.getText()> é diferente de " + " '{{+teachers}}'")
chamada antiga: assertEquals(paragraph.getText(), "")
nova chamada: assertEquals(paragraph.getText(), "", "Era esperado valores iguais, mas " + result393 + " <paragraph.getText()> é diferente de " + " ''")
chamada antiga: assertEquals(paragraph.getText(), "{{title}}")
nova chamada: assertEquals(paragraph.getText(), "{{title}}", "Era esperado valores iguais, mas " + result394 + " <paragraph.getText()> é diferente de " + " '{{title}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{+students}}")
nova chamada: assertEquals(paragraph.getText(), "{{+students}}", "Era esperado valores iguais, mas " + result395 + " <paragraph.getText()> é diferente de " + " '{{+students}}'")
chamada antiga: assertEquals(paragraph.getText(), "{{+teachers}}")
nova chamada: assertEquals(paragraph.getText(), "{{+teachers}}", "Era esperado valores iguais, mas " + result396 + " <paragraph.getText()> é diferente de " + " '{{+teachers}}'")
chamada antiga: assertEquals(result.getParagraphs().size(), 1)
nova chamada: assertEquals(result.getParagraphs().size(), 1, "Era esperado valores iguais, mas " + result397 + " <result.getParagraphs().size()> é diferente de " + " 1")
chamada antiga: assertEquals(result.getParagraphArray(0).getText(), "")
nova chamada: assertEquals(result.getParagraphArray(0).getText(), "", "Era esperado valores iguais, mas " + result398 + " <result.getParagraphArray(0).getText()> é diferente de " + " ''")
chamada antiga: assertEquals(result.getParagraphs().size(), 1)
nova chamada: assertEquals(result.getParagraphs().size(), 1, "Era esperado valores iguais, mas " + result399 + " <result.getParagraphs().size()> é diferente de " + " 1")
chamada antiga: assertEquals(result.getParagraphArray(0).getText(), "")
nova chamada: assertEquals(result.getParagraphArray(0).getText(), "", "Era esperado valores iguais, mas " + result400 + " <result.getParagraphArray(0).getText()> é diferente de " + " ''")
chamada antiga: assertEquals(result.getParagraphs().size(), 1)
nova chamada: assertEquals(result.getParagraphs().size(), 1, "Era esperado valores iguais, mas " + result401 + " <result.getParagraphs().size()> é diferente de " + " 1")
chamada antiga: assertEquals(result.getParagraphArray(0).getText(), "")
nova chamada: assertEquals(result.getParagraphArray(0).getText(), "", "Era esperado valores iguais, mas " + result402 + " <result.getParagraphArray(0).getText()> é diferente de " + " ''")
chamada antiga: assertEquals(template.getElementTemplates().get(0).variable(), "{{orderInfo.Self}}")
nova chamada: assertEquals(template.getElementTemplates().get(0).variable(), "{{orderInfo.Self}}", "Era esperado valores iguais, mas " + result403 + " <template.getElementTemplates().get(0).variable()> é diferente de " + " '{{orderInfo.Self}}'")
chamada antiga: assertEquals(template.getElementTemplates().get(1).variable(), "{{orderInfo.Remoter}}")
nova chamada: assertEquals(template.getElementTemplates().get(1).variable(), "{{orderInfo.Remoter}}", "Era esperado valores iguais, mas " + result404 + " <template.getElementTemplates().get(1).variable()> é diferente de " + " '{{orderInfo.Remoter}}'")
chamada antiga: assertEquals(result.getBodyElements().size(), size + target.getBodyElements().size())
nova chamada: assertEquals(result.getBodyElements().size(), size + target.getBodyElements().size(), "Era esperado valores iguais, mas " + result405 + " <result.getBodyElements().size()> é diferente de " + " size + target.getBodyElements().size()")
chamada antiga: Assertions.assertEquals(paragraph.getText(), "data1\tdata1\tdata1")
nova chamada: assertEquals(paragraph.getText(), "data1\tdata1\tdata1", "Era esperado valores iguais, mas " + result406 + " <paragraph.getText()> é diferente de " + " 'data1\tdata1\tdata1'")
chamada antiga: assertEquals(tables.size(), 2)
nova chamada: assertEquals(tables.size(), 2, "Era esperado valores iguais, mas " + result407 + " <tables.size()> é diferente de " + " 2")
chamada antiga: assertEquals(tables.get(0).getRows().size(), 3)
nova chamada: assertEquals(tables.get(0).getRows().size(), 3, "Era esperado valores iguais, mas " + result408 + " <tables.get(0).getRows().size()> é diferente de " + " 3")
chamada antiga: assertEquals(tables.get(1).getRows().size(), 2)
nova chamada: assertEquals(tables.get(1).getRows().size(), 2, "Era esperado valores iguais, mas " + result409 + " <tables.get(1).getRows().size()> é diferente de " + " 2")
chamada antiga: assertEquals(paragraph.getText(), "姓名测试姓名0，年龄：测试年龄0。\n" + "姓名测试姓名1，年龄：测试年龄1。\n" + "姓名测试姓名2，年龄：测试年龄2。\n" + "姓名测试姓名3，年龄：测试年龄3。\n" + "姓名测试姓名4，年龄：测试年龄4。\n" + "姓名测试姓名0，年龄：测试年龄0。\n" + "姓名测试姓名1，年龄：测试年龄1。\n" + "姓名测试姓名2，年龄：测试年龄2。\n" + "姓名测试姓名3，年龄：测试年龄3。\n" + "姓名测试姓名4，年龄：测试年龄4。\n")
nova chamada: assertEquals(paragraph.getText(), "姓名测试姓名0，年龄：测试年龄0。\n" + "姓名测试姓名1，年龄：测试年龄1。\n" + "姓名测试姓名2，年龄：测试年龄2。\n" + "姓名测试姓名3，年龄：测试年龄3。\n" + "姓名测试姓名4，年龄：测试年龄4。\n" + "姓名测试姓名0，年龄：测试年龄0。\n" + "姓名测试姓名1，年龄：测试年龄1。\n" + "姓名测试姓名2，年龄：测试年龄2。\n" + "姓名测试姓名3，年龄：测试年龄3。\n" + "姓名测试姓名4，年龄：测试年龄4。\n", "Era esperado valores iguais, mas " + result410 + " <paragraph.getText()> é diferente de " + " '姓名测试姓名0，年龄：测试年龄0。\n' + '姓名测试姓名1，年龄：测试年龄1。\n' + '姓名测试姓名2，年龄：测试年龄2。\n' + '姓名测试姓名3，年龄：测试年龄3。\n' + '姓名测试姓名4，年龄：测试年龄4。\n' + '姓名测试姓名0，年龄：测试年龄0。\n' + '姓名测试姓名1，年龄：测试年龄1。\n' + '姓名测试姓名2，年龄：测试年龄2。\n' + '姓名测试姓名3，年龄：测试年龄3。\n' + '姓名测试姓名4，年龄：测试年龄4。\n'")
chamada antiga: assertEquals(dataMap.get("projectName"), xwpfTable.getRow(1).getCell(1).getText())
nova chamada: assertEquals(dataMap.get("projectName"), xwpfTable.getRow(1).getCell(1).getText(), "Era esperado valores iguais, mas " + result411 + " <dataMap.get('projectName')> é diferente de " + result412 + " <xwpfTable.getRow(1).getCell(1).getText()>")
chamada antiga: assertEquals(dataMap.get("designDeptName"), xwpfTable.getRow(2).getCell(1).getText())
nova chamada: assertEquals(dataMap.get("designDeptName"), xwpfTable.getRow(2).getCell(1).getText(), "Era esperado valores iguais, mas " + result413 + " <dataMap.get('designDeptName')> é diferente de " + result414 + " <xwpfTable.getRow(2).getCell(1).getText()>")
chamada antiga: assertEquals(dataMap.get("applyUnitName"), xwpfTable.getRow(2).getCell(3).getText())
nova chamada: assertEquals(dataMap.get("applyUnitName"), xwpfTable.getRow(2).getCell(3).getText(), "Era esperado valores iguais, mas " + result415 + " <dataMap.get('applyUnitName')> é diferente de " + result416 + " <xwpfTable.getRow(2).getCell(3).getText()>")
chamada antiga: assertTrue(-1 != text.indexOf(dataMap.get("ownerDeptName")))
nova chamada: assertTrue(-1 != text.indexOf(dataMap.get("ownerDeptName")), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(-1 != text.indexOf(dataMap.get("optimizeReason")))
nova chamada: assertTrue(-1 != text.indexOf(dataMap.get("optimizeReason")), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(-1 != text.indexOf(dataMap.get("optimizeChangeName")))
nova chamada: assertTrue(-1 != text.indexOf(dataMap.get("optimizeChangeName")), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(-1 != text.indexOf(dataMap.get("changeType")))
nova chamada: assertTrue(-1 != text.indexOf(dataMap.get("changeType")), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertTrue(-1 != text.indexOf(dataMap.get("moneyChange")))
nova chamada: assertTrue(-1 != text.indexOf(dataMap.get("moneyChange")), "Era esperado verdadeiro, mas o valor obtido é falso")
chamada antiga: assertEquals("QA4时20分2020/3/2 16:20Deepoove website. and 发邮件给作者", document.getParagraphArray(0).getText())
nova chamada: assertEquals("QA4时20分2020/3/2 16:20Deepoove website. and 发邮件给作者", document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  'QA4时20分2020/3/2 16:20Deepoove website. and 发邮件给作者' é diferente de " + result417 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals("HiAAhttp://baidu.comhttp:deepoove.com", document.getParagraphArray(0).getText())
nova chamada: assertEquals("HiAAhttp://baidu.comhttp:deepoove.com", document.getParagraphArray(0).getText(), "Era esperado valores iguais, mas  'HiAAhttp://baidu.comhttp:deepoove.com' é diferente de " + result418 + " <document.getParagraphArray(0).getText()>")
chamada antiga: assertEquals(1, newDocument.getParagraphs().size())
nova chamada: assertEquals(1, newDocument.getParagraphs().size(), "Era esperado valores iguais, mas  1 é diferente de " + result419 + " <newDocument.getParagraphs().size()>")
chamada antiga: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.15-beta1", "3.16", func))
nova chamada: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.15-beta1", "3.16", func), "Era esperado que a exceção  IllegalStateException.class fosse lançada, mas não foi")
chamada antiga: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.15-beta1", "4.0.0", func))
nova chamada: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.15-beta1", "4.0.0", func), "Era esperado que a exceção  IllegalStateException.class fosse lançada, mas não foi")
chamada antiga: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.8", "4.0.0", func))
nova chamada: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.8", "4.0.0", func), "Era esperado que a exceção  IllegalStateException.class fosse lançada, mas não foi")
chamada antiga: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.8-beta1", "4.0.0", func))
nova chamada: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.8-beta1", "4.0.0", func), "Era esperado que a exceção  IllegalStateException.class fosse lançada, mas não foi")
chamada antiga: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.0.2-FINAL", "4.0.0", func))
nova chamada: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.0.2-FINAL", "4.0.0", func), "Era esperado que a exceção  IllegalStateException.class fosse lançada, mas não foi")
chamada antiga: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.16", "4.0.0", func))
nova chamada: assertThrows(IllegalStateException.class, () -> Preconditions.checkMinimumVersion("3.16", "4.0.0", func), "Era esperado que a exceção  IllegalStateException.class fosse lançada, mas não foi")
chamada antiga: assertEquals("11ff22", StyleUtils.toRgb("#1f2"))
nova chamada: assertEquals("11ff22", StyleUtils.toRgb("#1f2"), "Era esperado valores iguais, mas  '11ff22' é diferente de " + result420 + " <StyleUtils.toRgb('#1f2')>")
chamada antiga: assertEquals("01645a", StyleUtils.toRgb("rgb(1,100,90)"))
nova chamada: assertEquals("01645a", StyleUtils.toRgb("rgb(1,100,90)"), "Era esperado valores iguais, mas  '01645a' é diferente de " + result421 + " <StyleUtils.toRgb('rgb(1,100,90)')>")
chamada antiga: assertEquals("000000", StyleUtils.toRgb("black"))
nova chamada: assertEquals("000000", StyleUtils.toRgb("black"), "Era esperado valores iguais, mas  '000000' é diferente de " + result422 + " <StyleUtils.toRgb('black')>")
chamada antiga: assertFalse(allCssStyles.isEmpty())
nova chamada: assertFalse(allCssStyles.isEmpty(), "Era esperado falso, mas " + result423 + " <allCssStyles.isEmpty()> é verdadeiro ")
Total asserts: 424
Asserts sem descrição: 424
Asserts com descrição: 0
Assertion Roulette: 380

Após do refactor: 
Total asserts: 424
Asserts sem descrição: 16
Asserts com descrição: 408
Assertion Roulette: 14
