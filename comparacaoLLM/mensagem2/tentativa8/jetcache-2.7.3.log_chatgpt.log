eram esperados arrays iguais, mas buildKey("123") é diferente de buildKey(new String("123"))
eram esperados arrays iguais, mas buildKey(new byte[] { 1, 2, 3 }) é diferente de buildKey(new byte[] { 1, 2, 3 })
eram esperados arrays iguais, mas buildKey(123) é diferente de buildKey(123)
eram esperados arrays iguais, mas buildKey(123L) é diferente de buildKey(123L)
eram esperados arrays iguais, mas buildKey(true) é diferente de buildKey(true)
eram esperados arrays iguais, mas buildKey(new Date(123)) é diferente de buildKey(new Date(123))
eram esperados arrays iguais, mas buildKey(c1) é diferente de buildKey(c2)
eram esperados arrays iguais, mas byteKey é diferente de c.buildKey(byteKey)
eram esperados arrays iguais, mas strKey.getBytes() é diferente de c.buildKey(strKey)
eram esperados arrays iguais, mas byteKey é diferente de c.buildKey(byteKey)
eram esperados arrays iguais, mas strKey.getBytes() é diferente de c.buildKey(strKey)
eram esperados arrays iguais, mas convertedKey.getBytes() é diferente de c.buildKey(byteKey)
eram esperados arrays iguais, mas convertedKey.getBytes() é diferente de c.buildKey(strKey)
eram esperados arrays iguais, mas convertedKey.getBytes() é diferente de c.buildKey("long long long str")
eram esperados arrays iguais, mas convertedKey.getBytes() é diferente de c.buildKey(1)
eram esperados arrays iguais, mas strKey.getBytes() é diferente de c.buildKey(strKey.getBytes())
eram esperados arrays iguais, mas strKey.getBytes() é diferente de c.buildKey(strKey.getBytes())
eram esperados arrays iguais, mas strKey.getBytes() é diferente de c.buildKey(strKey.getBytes())
eram esperados values iguais, mas target.count() é diferente de target.count()
eram esperados values diferentes, mas service.notCachedCount() é igual a service.notCachedCount()
eram esperados values iguais, mas service.countWithAnnoOnClass() é diferente de service.countWithAnnoOnClass()
eram esperados values iguais, mas service.countWithAnnoOnInterface() é diferente de service.countWithAnnoOnInterface()
eram esperados values diferentes, mas service.enableCacheWithNoCacheCount(bean) é igual a service.enableCacheWithNoCacheCount(bean)
eram esperados values iguais, mas service.enableCacheWithAnnoOnClass(bean) é diferente de service.enableCacheWithAnnoOnClass(bean)
eram esperados values iguais, mas service.enableCacheWithAnnoOnInterface(bean) é diferente de service.enableCacheWithAnnoOnInterface(bean)
eram esperados values iguais, mas v1 é diferente de service.count("K1")
eram esperados values diferentes, mas v1 é igual a v2
eram esperados values iguais, mas v2 é diferente de service.count("K1")
eram esperados values iguais, mas 200 é diferente de service.count("K1")
eram esperados values iguais, mas 200 é diferente de service.count("K1")
eram esperados values iguais, mas service.count("K1") é diferente de service.count("K1")
eram esperados values diferentes, mas service.count("K1") é igual a service.count("K2")
eram esperados values diferentes, mas bean.noCacheCount() é igual a bean.noCacheCount()
eram esperados values iguais, mas bean.staticCount() é diferente de bean.staticCount()
eram esperados values iguais, mas bean.count() é diferente de bean.count()
eram esperados values iguais, mas bean.countWithLocalCache() é diferente de bean.countWithLocalCache()
eram esperados values iguais, mas bean.countWithBoth() é diferente de bean.countWithBoth()
eram esperados values diferentes, mas bean.countWithDisabledCache() é igual a bean.countWithDisabledCache()
eram esperados values iguais, mas x é diferente de bean.countWithExpire50()
eram esperados values diferentes, mas x é igual a bean.countWithExpire50()
eram esperados values diferentes, mas x1 é igual a x2
eram esperados values iguais, mas x1 é diferente de x3
eram esperados values diferentes, mas x1 é igual a x2
eram esperados values iguais, mas x1 é diferente de x3
eram esperados values diferentes, mas x1 é igual a x2
eram esperados values iguais, mas x1 é diferente de x3
eram esperados values diferentes, mas x1 é igual a x2
eram esperados values iguais, mas x1 é diferente de x3
eram esperados values diferentes, mas bean.countEnabledWithConfigBean() é igual a bean.countEnabledWithConfigBean()
eram esperados values diferentes, mas bean.countDisabledWithConfigBean() é igual a bean.countDisabledWithConfigBean()
eram esperados values diferentes, mas bean.countWithWrongCondition() é igual a bean.countWithWrongCondition()
eram esperados values iguais, mas bean.count(true) é diferente de bean.count(true)
eram esperados values diferentes, mas bean.count(false) é igual a bean.count(false)
eram esperados values diferentes, mas bean.count() é igual a bean.count1()
eram esperados values iguais, mas bean.namedCount1_WithNameN1() é diferente de bean.namedCount1_WithNameN1()
eram esperados values iguais, mas bean.namedCount1_WithNameN1() é diferente de bean.namedCount2_WithNameN1()
eram esperados values diferentes, mas bean.namedCount1_WithNameN1() é igual a bean.namedCount_WithNameN2()
eram esperados values iguais, mas bean.namedCount_WithNameN2() é diferente de bean.namedCount_WithNameN2()
eram esperados values iguais, mas v1 é diferente de bean.count("K1")
eram esperados values diferentes, mas v1 é igual a v2
eram esperados values iguais, mas v2 é diferente de bean.count("K1")
eram esperados values iguais, mas 200 é diferente de bean.count("K1")
eram esperados values iguais, mas 200 é diferente de bean.count("K1")
eram esperados values iguais, mas bean.count("K1") é diferente de bean.count("K1")
eram esperados values diferentes, mas bean.count("K1") é igual a bean.count("K2")
eram esperados o mesmo objeto, mas c é diferente de c2
eram esperados valores iguais, mas CacheResultCode.NOT_EXISTS é diferente de cache.GET("BASE_K1").getResultCode()
eram esperados valores iguais, mas CacheResultCode.SUCCESS é diferente de cache.PUT("BASE_K1", "V1", 10, TimeUnit.SECONDS).getResultCode()
eram esperados valores iguais, mas CacheResultCode.SUCCESS é diferente de cache.GET("BASE_K1").getResultCode()
eram esperados valores iguais, mas "V1" é diferente de cache.GET("BASE_K1").getValue()
eram esperados valores iguais, mas CacheResultCode.SUCCESS é diferente de cache.PUT("BASE_K1", "V2", 10, TimeUnit.SECONDS).getResultCode()
eram esperados valores iguais, mas "V2" é diferente de cache.GET("BASE_K1").getValue()
eram esperados valores iguais, mas CacheResultCode.SUCCESS é diferente de cache.REMOVE("BASE_K1").getResultCode()
eram esperados valores iguais, mas CacheResultCode.NOT_EXISTS é diferente de cache.GET("BASE_K1").getResultCode()
o resultado deveria ser sucesso
o valor deveria ser nulo
o resultado deveria ser nulo
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o valor deveria ser nulo
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
a mensagem deveria ser CacheResult.MSG_ILLEGAL_ARGUMENT
o resultado deveria ser falha
o valor deveria ser nulo
o resultado deveria ser sucesso
o tamanho deveria ser 3
o resultado deveria ser sucesso
o valor de k1 deveria ser sucesso
o valor deveria ser "V1"