eram esperados valores iguais, mas o resultado de trade.getIsin() é diferente de rs.getString(1)
eram esperados valores iguais, mas o resultado de trade.getQuantity() é diferente de rs.getLong(2)
eram esperados valores iguais, mas o resultado de trade.getPrice() é diferente de rs.getBigDecimal(3)
eram esperados valores iguais, mas o resultado de trade.getCustomer() é diferente de rs.getString(4)
eram esperados valores iguais, mas activeRow é diferente de trades.size()
eram esperados valores iguais, mas customers.size() é diferente de activeRow
eram esperados valores iguais, mas o resultado de customer.getName() é diferente de rs.getString(1)
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de execution.getStatus()
eram esperados valores iguais, mas a diferença entre after e before é diferente de execution.getStepExecutions().iterator().next().getReadCount()
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de jobExecution.getStatus()
eram esperados valores iguais, mas "yes" é diferente de jobExecution.getExecutionContext().getString("done")
eram esperados valores iguais, mas "foo" é diferente de value
eram esperados valores iguais, mas "foo2" é diferente de strValue
eram esperados valores iguais, mas 3 é diferente de integerValue.intValue()
eram esperados valores iguais, mas a soma de before e 5 é diferente de after
eram esperados valores iguais, mas o resultado de trade.getIsin() é diferente de rs.getString(1)
eram esperados valores iguais, mas o resultado de trade.getQuantity() é diferente de rs.getLong(2)
eram esperados valores iguais, mas o resultado de trade.getPrice() é diferente de rs.getBigDecimal(3)
eram esperados valores iguais, mas o resultado de trade.getCustomer() é diferente de rs.getString(4)
eram esperados valores iguais, mas EXPECTED_OUTPUT_FILE é diferente de output
eram esperados valores iguais, mas a soma de itemGenerator.getLimit() e 2 é diferente de itemProcessor.getCounter()
eram esperados valores iguais, mas a soma de itemGenerator.getLimit() e 2 é diferente de itemProcessor.getCounter()
eram esperados valores iguais, mas o resultado de customer.getName() é diferente de rs.getString(1)
eram esperados valores iguais, mas "4" é diferente de step1Execution.get("READ_COUNT").toString()
eram esperados valores iguais, mas "1" é diferente de step1Execution.get("FILTER_COUNT").toString()
eram esperados valores iguais, mas "3" é diferente de step1Execution.get("WRITE_COUNT").toString()
eram esperados valores iguais, mas ExitStatus.COMPLETED.getExitCode() é diferente de jobExecution.getExitStatus().getExitCode()
eram esperados valores iguais, mas 4 é diferente de jobExecution.getStepExecutions().size()
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de jobExecution.getStatus()
eram esperados valores iguais, mas o tamanho de inputs é diferente do tamanho de outputs
itemCount deveria ser maior que 0
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de jobExecution.getStatus()
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de jobExecution.getStatus()
eram esperados valores iguais, mas expected é diferente de count
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de jobExecution.getStatus()
eram esperados valores iguais, mas first é diferente de jobExecution.getStepExecutions().iterator().next().getWriteCount()
eram esperados valores iguais, mas BatchStatus.COMPLETED é diferente de jobExecution.getStatus()
eram esperados valores iguais, mas second é diferente de jobExecution.getStepExecutions().iterator().next().getWriteCount()
o número de retornos de personService deveria ser maior que 0
o número de retornos de personService é diferente do número de recebimentos
eram esperados valores iguais, mas rs.getString("PLAYER_ID") é diferente de "AKFJDL00"
eram esperados valores iguais, mas rs.getString("LAST_NAME") é diferente de "Doe"
eram esperados valores iguais, mas rs.getString("FIRST_NAME") é diferente de "John"
eram esperados valores iguais, mas rs.getString("POS") é diferente de "QB"
eram esperados valores iguais, mas rs.getInt("YEAR_OF_BIRTH") é diferente de 1975
eram esperados valores iguais, mas rs.getInt("YEAR_DRAFTED") é diferente de 1998
eram esperados valores iguais, mas tempGame é diferente de game
eram esperados valores iguais, mas summary é diferente de testSummary
eram esperados valores iguais, mas customerFieldSet é diferente de fs
eram esperados valores iguais, mas customerAddLine é diferente de customerTokenizer.getTokenizedLine()
eram esperados valores iguais, mas customerFieldSet é diferente de fs
eram esperados valores iguais, mas customerAddLine é diferente de customerTokenizer.getTokenizedLine()
eram esperados valores iguais, mas customerFieldSet é diferente de fs
eram esperados valores iguais, mas customerAddLine é diferente de customerTokenizer.getTokenizedLine()
eram esperados valores iguais, mas customerUpdate é diferente de processor.process(customerUpdate)
eram esperados valores iguais, mas customerUpdate é diferente de processor.process(customerUpdate)
eram esperados valores iguais, mas 95 é diferente de rs.getLong("credit")
eram esperados valores iguais, mas "testCustomer" é diferente de rs.getString("CUSTOMER")
eram esperados valores iguais, mas o BigDecimal associado a 99.69 é diferente de rs.getBigDecimal("PRICE")
eram esperados valores iguais, mas 5 é diferente de rs.getLong("QUANTITY")
eram esperados valores iguais, mas a soma de oldCredit e CustomerCreditIncreaseProcessor.FIXED_AMOUNT é diferente do resultado de tested.process(customerCredit).getCredit()
eram esperados valores iguais, mas "testCustomerName" é diferente de customerDebit.getName()
eram esperados valores iguais, mas o BigDecimal associado a 123.0 é diferente de customerDebit.getDebit()
o resultado de reader.read() deveria ser nulo
limit deveria ser igual a counter
counter deveria ser igual a reader.getCounter()
trade1 deveria ser igual a trade1Clone
trade1 não deveria ser igual a trade2
o tamanho das linhas deveria ser 3
o resultado de provider.read() deveria ser nulo
As linhas do arquivo de entrada deveriam coincidir com as linhas do arquivo de saída
As linhas do arquivo de entrada deveriam coincidir com as linhas do arquivo de saída
AggregateItem.getFooter() deveria ser um footer
AggregateItem.getHeader() deveria ser um header
O mapeamento de um campo BEGIN deveria ser um header
O mapeamento de um campo FOO deveria ser um header
O mapeamento de um campo END deveria ser um footer
O mapeamento de um campo FOO deveria ser um footer
"foo" deveria ser o item associado ao mapeamento de um campo FOO
o resultado não deveria ser nulo
o objeto order deveria ser igual a o
o Customer associado a order deveria ser igual a customer
o BillingAddress associado a order deveria ser igual a billing
o ShippingAddress associado a order deveria ser igual a shipping
o Billing associado a order deveria ser igual a billingInfo
o Shipping associado a order deveria ser igual a shippingInfo
o número de LineItems associado a order deveria ser 3
o resultado de provider.read() deveria ser nulo
o orderValidator deveria suportar a classe Order
o número de erros deveria ser 1
o código do erro associado a "orderId" deveria ser "error.order.id"
o código do erro associado a "orderDate" deveria ser "error.order.date.future"
o código do erro associado a "totalLines" deveria ser "error.order.lines.badcount"
o número de erros deveria ser 2
o código do erro associado a "orderId" deveria ser "error.order.id"
o código do erro associado a "totalLines" deveria ser "error.order.lines.badcount"
o número de erros deveria ser 0