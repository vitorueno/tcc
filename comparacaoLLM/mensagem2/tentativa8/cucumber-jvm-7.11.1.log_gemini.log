O número de cucas na barriga era esperado como n, mas o valor obtido foi belly.getCukes()
Era esperado que a execução de factory::stop não lançasse exceção.
Era esperado que a execução de factory::start não lançasse exceção.
Era esperado que a execução de factory::stop não lançasse exceção.
A classe de bean era esperada como diferente de ApplicationScopedBean.class, mas a classe obtida foi bean.getClass(), e a superclasse de bean era esperada como ApplicationScopedBean.class, mas a superclasse obtida foi bean.getClass().getSuperclass().
Era esperado que as linhas fossem idênticas e na mesma ordem, mas a comparação de hasTheSameRowsAs(table).inOrder().matches(identical) retornou falso.
Era esperado que as linhas não fossem idênticas e na mesma ordem, mas a comparação de hasTheSameRowsAs(table).inOrder().matches(shuffled) retornou verdadeiro.
Era esperado que as linhas não fossem idênticas e na mesma ordem, mas a comparação de hasTheSameRowsAs(table).inOrder().matches(different) retornou verdadeiro.
Era esperado que as linhas fossem idênticas, mas a comparação de hasTheSameRowsAs(table).matches(identical) retornou falso.
Era esperado que as linhas fossem idênticas, mas a comparação de hasTheSameRowsAs(table).matches(shuffled) retornou falso.
Era esperado que as linhas não fossem idênticas, mas a comparação de hasTheSameRowsAs(table).matches(different) retornou verdadeiro.
Era esperado o valor Optional.of(asList(outline, examplesA, example1)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(outline, examplesA, example2)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(outline, examplesB, example3)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(outline, examplesB, example4)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(outline, examplesA)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(emptyOutline, emptyExamplesA)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(outline, examplesB)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(emptyOutline, emptyExamplesB)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(outline)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(emptyOutline)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.empty(), mas o valor obtido foi pathTo.
Era esperado o valor Optional.empty(), mas o valor obtido foi pathTo.
Era esperado o valor Optional.of(asList(example1)), mas o valor obtido foi pathTo.
Era esperado o valor Optional.empty(), mas o valor obtido foi pathTo.
Era esperado um valor diferente de null para events.get(0).getUndefinedParameterType(), mas o valor obtido foi null.
Era esperado que o tamanho de parameterInfos fosse igual ao tamanho de args, mas o tamanho de parameterInfos foi parameterInfos.size() e o tamanho de args foi args.length.
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/path/to", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema fosse "/path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema fosse "/path/to", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema terminasse com "path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema terminasse com "path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema terminasse com "path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema fosse "/C:/path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema terminasse com "path/to the/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "file" e a parte específica do esquema fosse "/C:/path/to/file.feature", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "com/example/app", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/com/example/app", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/com/example/app", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/com/example/app", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que o esquema de uri fosse "classpath" e a parte específica do esquema fosse "/com/example/app", mas o esquema obtido foi uri.getScheme() e a parte específica do esquema foi uri.getSchemeSpecificPart().
Era esperado que a URI de featureWithLines fosse URI.create("classpath:example.feature") e que as linhas estivessem vazias, mas a URI obtida foi featureWithLines.uri() e as linhas obtidas foram featureWithLines.lines().
Era esperado que a URI de featureWithLines fosse URI.create("classpath:example.feature") e que as linhas contivessem 999, mas a URI obtida foi featureWithLines.uri() e as linhas obtidas foram featureWithLines.lines().
Era esperado que a URI de featureWithLines fosse URI.create("classpath:example.feature") e que as linhas contivessem 999 e 2000, mas a URI obtida foi featureWithLines.uri() e as linhas obtidas foram featureWithLines.lines().
Era esperado um valor diferente de null para optionsBuilder, mas o valor obtido foi null.
Era esperado um valor diferente de null para options, mas o valor obtido foi null.
Era esperado que options.getFeaturePaths() contivesse new File("somewhere_else.feature").toURI() e que options.getLineFilters() contivesse a entrada new File("somewhere_else.feature").toURI(), singleton(3), mas options.getFeaturePaths() foi options.getFeaturePaths() e options.getLineFilters() foi options.getLineFilters().
Era esperado que a mensagem do logRecordListener.getLogRecords().get(0).getMessage() fosse "Use '--no-summary' instead of '-p/--plugin null_summary'. '-p/--plugin null_summary' will be removed in a future release." e que plugins.getPlugins() não contivesse plugin("io.cucumber.core.plugin.DefaultSummaryPrinter"), mas a mensagem obtida foi logRecordListener.getLogRecords().get(0).getMessage() e os plugins obtidos foram plugins.getPlugins().
Era esperado que plugins.getPlugins() não contivesse plugin("io.cucumber.core.plugin.DefaultSummaryPrinter"), mas os plugins obtidos foram plugins.getPlugins().
Era esperado que actual contivesse "@should_not_be_clobbered" e que options.getLineFilters() contivesse a entrada new File("this/should/be/rerun.feature").toURI(), singleton(12), mas actual foi actual e options.getLineFilters() foi options.getLineFilters().
Era esperado que todos os testes deste grupo passassem, mas pelo menos um falhou, pois plugins.getPlugins() não contém plugin("io.cucumber.core.plugin.DefaultSummaryPrinter").
Era esperado que options.getFeaturePaths() contivesse URI.create("classpath:com/example.feature") e que tagExpressions contivesse "@example", mas options.getFeaturePaths() foi options.getFeaturePaths() e tagExpressions foi tagExpressions.
Era esperado que options.getFeaturePaths() contivesse URI.create("classpath:path/to.feature") e que options.getTagExpressions() não contivesse "@example", mas options.getFeaturePaths() foi options.getFeaturePaths() e options.getTagExpressions() foi options.getTagExpressions().
Era esperado que runtimeOptions.getFeaturePaths() tivesse tamanho 0 e que runtimeOptions.getLineFilters() fosse igual a emptyMap(), mas o tamanho de runtimeOptions.getFeaturePaths() foi runtimeOptions.getFeaturePaths().size() e runtimeOptions.getLineFilters() foi runtimeOptions.getLineFilters().
Era esperado que runtimeOptions.getFeaturePaths() tivesse tamanho 0 e que runtimeOptions.getLineFilters() fosse igual a emptyMap(), mas o tamanho de runtimeOptions.getFeaturePaths() foi runtimeOptions.getFeaturePaths().size() e runtimeOptions.getLineFilters() foi runtimeOptions.getLineFilters().
Era esperado que runtimeOptions.getFeaturePaths() tivesse tamanho 0 e que runtimeOptions.getLineFilters() fosse igual a emptyMap(), mas o tamanho de runtimeOptions.getFeaturePaths() foi runtimeOptions.getFeaturePaths().size() e runtimeOptions.getLineFilters() foi runtimeOptions.getLineFilters().
Era esperado que runtimeOptions.getFeaturePaths() tivesse tamanho 0 e que runtimeOptions.getLineFilters() fosse igual a emptyMap(), mas o tamanho de runtimeOptions.getFeaturePaths() foi runtimeOptions.getFeaturePaths().size() e runtimeOptions.getLineFilters() foi runtimeOptions.getLineFilters().
Era esperado que runtimeOptions.getFeaturePaths() contivesse URI.create("file:/home/users/mp/My%20Documents/tests/bar.feature") e que runtimeOptions.getLineFilters() contivesse a entrada URI.create("file:/home/users/mp/My%20Documents/tests/bar.feature"), singleton(2), mas runtimeOptions.getFeaturePaths() foi runtimeOptions.getFeaturePaths() e runtimeOptions.getLineFilters() foi runtimeOptions.getLineFilters().
Era esperado que options.getFeaturePaths() contivesse new File("path/bar.feature").toURI() e que options.getLineFilters() contivesse a entrada new File("path/bar.feature").toURI(), singleton(2), mas options.getFeaturePaths() foi options.getFeaturePaths() e options.getLineFilters() foi options.getLineFilters().
Era esperado que prettyPluginA fosse igual a prettyPluginB, mas prettyPluginA foi prettyPluginA e prettyPluginB foi prettyPluginB.
Era esperado que o hashCode de prettyPluginA fosse igual ao hashCode de prettyPluginB, mas o hashCode de prettyPluginA foi prettyPluginA.hashCode() e o hashCode de prettyPluginB foi prettyPluginB.hashCode().
Era esperado que htmlPluginA fosse igual a htmlPluginB, mas htmlPluginA foi htmlPluginA e htmlPluginB foi htmlPluginB.
Era esperado que o hashCode de htmlPluginA fosse igual ao hashCode de htmlPluginB, mas o hashCode de htmlPluginA foi htmlPluginA.hashCode() e o hashCode de htmlPluginB foi htmlPluginB.hashCode().
Era esperado que prettyPluginA fosse diferente de htmlPluginA, mas prettyPluginA foi prettyPluginA e htmlPluginA foi htmlPluginA.
Era esperado que o hashCode de prettyPluginA fosse diferente do hashCode de htmlPluginA, mas o hashCode de prettyPluginA foi prettyPluginA.hashCode() e o hashCode de htmlPluginA foi htmlPluginA.hashCode().
Era esperado que plugins.getPlugins() estivesse vazio, mas os plugins obtidos foram plugins.getPlugins().
Era esperado que getRegexpPattern(iterator.next()) retornasse "name1" e getRegexpPattern(iterator.next()) retornasse "name2", mas getRegexpPattern(iterator.next()) retornou getRegexpPattern(iterator.next()) e getRegexpPattern(iterator.next()) retornou getRegexpPattern(iterator.next()).
Era esperado que a mensagem de actual fosse "Invalid tag expression at 'io.cucumber.core.options.CucumberOptionsAnnotationParserTest$ClassWithInvalidTagExpression'" e que a causa fosse uma TagExpressionException, mas a mensagem obtida foi actual.getMessage() e a causa foi actual.getCause().
Era esperado que a mensagem de actual fosse "Invalid tag expression at 'io.cucumber.core.options.CucumberOptionsAnnotationParserTest$ClassWithInvalidTagExpression'" e que a causa fosse uma TagExpressionException, mas a mensagem obtida foi actual.getMessage() e a causa foi actual.getCause().
Era esperado que pluginList contivesse plugins do tipo HtmlFormatter e PrettyFormatter, mas pluginList foi pluginList.
Era esperado que runtimeOptions.isMonochrome() fosse verdadeiro, mas runtimeOptions.isMonochrome() retornou falso.
Era esperado que todos os testes deste grupo passassem, mas pelo menos um falhou, pois plugins.getPlugins() está vazio.
Era esperado que snakeCase.generate(sentence) retornasse expectedSnakeCase e camelCase.generate(sentence) retornasse expectedCamelCase, mas snakeCase.generate(sentence) retornou snakeCase.generate(sentence) e camelCase.generate(sentence) retornou camelCase.generate(sentence).
Era esperado que JarUriFileSystemService.supports(URI.create("jar:file:/example.jar!com/example/app")) retornasse verdadeiro, mas retornou falso.
Era esperado que JarUriFileSystemService.supports(URI.create("file:/example.jar")) retornasse verdadeiro, mas retornou falso.
Era esperado que fileSystem1.isOpen() retornasse verdadeiro, mas retornou falso.
Era esperado que fileSystem2.isOpen() retornasse verdadeiro, mas retornou falso.
Era esperado que fileSystem1.isOpen() retornasse falso, mas retornou verdadeiro.
Era esperado que fileSystem2.isOpen() retornasse falso, mas retornou verdadeiro.
Era esperado que packageName fosse "com.example", mas o valor obtido foi packageName.
Era esperado que packageName fosse "com.example", mas o valor obtido foi packageName.
Era esperado que packageName fosse "com.example.app", mas o valor obtido foi packageName.
Era esperado que packageName fosse "com.example.app", mas o valor obtido foi packageName.
Era esperado que packageName fosse "com.example.app", mas o valor obtido foi packageName.
Era esperado que fqn fosse "com.example.app.App", mas o valor obtido foi fqn.
Era esperado que fqn fosse "com.example.app.App", mas o valor obtido foi fqn.
Era esperado que fqn fosse "com.example.app.App", mas o valor obtido foi fqn.
Era esperado que fqn fosse URI.create("classpath:com/example/app/app.feature"), mas o valor obtido foi fqn.
Era esperado que fqn fosse URI.create("classpath:com/example/app/app.feature"), mas o valor obtido foi fqn.
Era esperado que fqn fosse URI.create("classpath:com/example/app/app.feature"), mas o valor obtido foi fqn.
Era esperado que runners[0] fosse diferente de runners[1] e runners[1] fosse diferente de runners[0], mas runners[0] foi runners[0] e runners[1] foi runners[1].
Era esperado que eventBus fosse diferente de runnerBus e runnerBus fosse diferente de eventBus, mas eventBus foi eventBus e runnerBus foi runnerBus.
Era esperado que predicate.test(pickle) retornasse verdadeiro, mas retornou falso.