Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey("123"), buildKey(new String("123")))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(new byte[] { 1, 2, 3 }), buildKey(new byte[] { 1, 2, 3 }))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(123), buildKey(123))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(123L), buildKey(123L))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(true), buildKey(true))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(new Date(123)), buildKey(new Date(123)))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(new Date(123)), buildKey(new Date(123)))
Arrays esperados e retornados são diferentes: Assert.assertArrayEquals(buildKey(c1), buildKey(c2))
Arrays esperados e retornados são diferentes: assertArrayEquals(byteKey, c.buildKey(byteKey))
Arrays esperados e retornados são diferentes: assertArrayEquals(strKey.getBytes(), c.buildKey(strKey))
Arrays esperados e retornados são diferentes: assertArrayEquals(byteKey, c.buildKey(byteKey))
Arrays esperados e retornados são diferentes: assertArrayEquals(strKey.getBytes(), c.buildKey(strKey))
Arrays esperados e retornados são diferentes: assertArrayEquals(convertedKey.getBytes(), c.buildKey(byteKey))
Arrays esperados e retornados são diferentes: assertArrayEquals(convertedKey.getBytes(), c.buildKey(strKey))
Arrays esperados e retornados são diferentes: assertArrayEquals(convertedKey.getBytes(), c.buildKey("long long long str"))
Arrays esperados e retornados são diferentes: assertArrayEquals(convertedKey.getBytes(), c.buildKey(1))
Arrays esperados e retornados são diferentes: assertArrayEquals(strKey.getBytes(), c.buildKey(strKey.getBytes()))
Arrays esperados e retornados são diferentes: assertArrayEquals(strKey.getBytes(), c.buildKey(strKey.getBytes()))
Arrays esperados e retornados são diferentes: assertArrayEquals(strKey.getBytes(), c.buildKey(strKey.getBytes()))
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(target.count(), target.count())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(service.notCachedCount(), service.notCachedCount())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(service.countWithAnnoOnClass(), service.countWithAnnoOnClass())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(service.countWithAnnoOnInterface(), service.countWithAnnoOnInterface())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(service.enableCacheWithNoCacheCount(bean), service.enableCacheWithNoCacheCount(bean))
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(service.enableCacheWithAnnoOnClass(bean), service.enableCacheWithAnnoOnClass(bean))
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(service.enableCacheWithAnnoOnInterface(bean), service.enableCacheWithAnnoOnInterface(bean))
Valores esperados são iguais, mas o valor retornado por service.count("K1") é diferente: Assert.assertEquals(v1, service.count("K1"))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(v1, v2)
Valores esperados são iguais, mas o valor retornado por service.count("K1") é diferente: Assert.assertEquals(v2, service.count("K1"))
Valores esperados são iguais, mas o valor retornado por service.count("K1") é diferente: Assert.assertEquals(200, service.count("K1"))
Valores esperados são iguais, mas o valor retornado por service.count("K1") é diferente: Assert.assertEquals(200, service.count("K1"))
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(service.count("K1"), service.count("K1"))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(service.count("K1"), service.count("K2"))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.noCacheCount(), bean.noCacheCount())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.staticCount(), bean.staticCount())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.count(), bean.count())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.countWithLocalCache(), bean.countWithLocalCache())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.countWithBoth(), bean.countWithBoth())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.countWithDisabledCache(), bean.countWithDisabledCache())
Valores esperados são iguais, mas o valor retornado por bean.countWithExpire50() é diferente: Assert.assertEquals(x, bean.countWithExpire50())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(x, bean.countWithExpire50())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(x1, x2)
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(x1, x3)
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(x1, x2)
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(x1, x3)
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(x1, x2)
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(x1, x3)
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(x1, x2)
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(x1, x3)
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.countEnabledWithConfigBean(), bean.countEnabledWithConfigBean())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.countDisabledWithConfigBean(), bean.countDisabledWithConfigBean())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.countWithWrongCondition(), bean.countWithWrongCondition())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.count(true), bean.count(true))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.count(false), bean.count(false))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.count(), bean.count1())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.namedCount1_WithNameN1(), bean.namedCount1_WithNameN1())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.namedCount1_WithNameN1(), bean.namedCount2_WithNameN1())
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.namedCount1_WithNameN1(), bean.namedCount_WithNameN2())
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.namedCount_WithNameN2(), bean.namedCount_WithNameN2())
Valores esperados são iguais, mas o valor retornado por bean.count("K1") é diferente: Assert.assertEquals(v1, bean.count("K1"))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(v1, v2)
Valores esperados são iguais, mas o valor retornado por bean.count("K1") é diferente: Assert.assertEquals(v2, bean.count("K1"))
Valores esperados são iguais, mas o valor retornado por bean.count("K1") é diferente: Assert.assertEquals(200, bean.count("K1"))
Valores esperados são iguais, mas o valor retornado por bean.count("K1") é diferente: Assert.assertEquals(200, bean.count("K1"))
Valores esperados são iguais, mas o teste falhou: Assert.assertEquals(bean.count("K1"), bean.count("K1"))
Valores esperados são diferentes, mas o teste falhou: Assert.assertNotEquals(bean.count("K1"), bean.count("K2"))
Objetos esperados e retornados são os mesmos, mas o teste falhou: Assert.assertSame(c, c2)
Valores esperados são iguais, mas o valor retornado por cache.GET("BASE_K1").getResultCode() é diferente: Assert.assertEquals(CacheResultCode.NOT_EXISTS, cache.GET("BASE_K1").getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.PUT("BASE_K1", "V1", 10, TimeUnit.SECONDS).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.SUCCESS, cache.PUT("BASE_K1", "V1", 10, TimeUnit.SECONDS).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.GET("BASE_K1").getResultCode() é diferente: Assert.assertEquals(CacheResultCode.SUCCESS, cache.GET("BASE_K1").getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.GET("BASE_K1").getValue() é diferente: Assert.assertEquals("V1", cache.GET("BASE_K1").getValue())
Valores esperados são iguais, mas o valor retornado por cache.PUT("BASE_K1", "V2", 10, TimeUnit.SECONDS).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.SUCCESS, cache.PUT("BASE_K1", "V2", 10, TimeUnit.SECONDS).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.GET("BASE_K1").getValue() é diferente: Assert.assertEquals("V2", cache.GET("BASE_K1").getValue())
Valores esperados são iguais, mas o valor retornado por cache.REMOVE("BASE_K1").getResultCode() é diferente: Assert.assertEquals(CacheResultCode.SUCCESS, cache.REMOVE("BASE_K1").getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.GET("BASE_K1").getResultCode() é diferente: Assert.assertEquals(CacheResultCode.NOT_EXISTS, cache.GET("BASE_K1").getResultCode())
O valor booleano esperado é true, mas o valor retornado por r.isSuccess() é false: Assert.assertTrue(r.isSuccess())
O valor esperado é null, mas o valor retornado por r.getValue() é diferente: Assert.assertNull(r.getValue())
O valor esperado é null, mas o valor retornado por cache.get(null) é diferente: Assert.assertNull(cache.get(null))
Valores esperados são iguais, mas o valor retornado por cache.GET(null).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.GET(null).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.GET(null).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.GET(null).getMessage())
O valor esperado é null, mas o valor retornado por cache.getAll(null) é diferente: Assert.assertNull(cache.getAll(null))
Valores esperados são iguais, mas o valor retornado por cache.GET_ALL(null).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.GET_ALL(null).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.GET_ALL(null).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.GET_ALL(null).getMessage())
Valores esperados são iguais, mas o valor retornado por cache.PUT(null, "V1").getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.PUT(null, "V1").getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.PUT(null, "V1").getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.PUT(null, "V1").getMessage())
Valores esperados são iguais, mas o valor retornado por cache.PUT(null, "V1", 1, TimeUnit.SECONDS).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.PUT(null, "V1", 1, TimeUnit.SECONDS).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.PUT(null, "V1", 1, TimeUnit.SECONDS).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.PUT(null, "V1", 1, TimeUnit.SECONDS).getMessage())
Valores esperados são iguais, mas o valor retornado por cache.PUT_ALL(null).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.PUT_ALL(null).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.PUT_ALL(null).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.PUT_ALL(null).getMessage())
Valores esperados são iguais, mas o valor retornado por cache.PUT_ALL(null, 1, TimeUnit.SECONDS).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.PUT_ALL(null, 1, TimeUnit.SECONDS).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.PUT_ALL(null, 1, TimeUnit.SECONDS).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.PUT_ALL(null, 1, TimeUnit.SECONDS).getMessage())
Valores esperados são iguais, mas o valor retornado por cache.REMOVE(null).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.REMOVE(null).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.REMOVE(null).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.REMOVE(null).getMessage())
Valores esperados são iguais, mas o valor retornado por cache.REMOVE_ALL(null).getResultCode() é diferente: Assert.assertEquals(CacheResultCode.FAIL, cache.REMOVE_ALL(null).getResultCode())
Valores esperados são iguais, mas o valor retornado por cache.REMOVE_ALL(null).getMessage() é diferente: Assert.assertEquals(CacheResult.MSG_ILLEGAL_ARGUMENT, cache.REMOVE_ALL(null).getMessage())
O valor esperado é null, mas o valor retornado por cache.tryLock(null, 1, TimeUnit.SECONDS) é diferente: Assert.assertNull(cache.tryLock(null, 1, TimeUnit.SECONDS))
O valor booleano esperado é true, mas o valor retornado por r.isSuccess() é false: Assert.assertTrue(r.isSuccess())
Valores esperados são iguais, mas o valor retornado por r.getValues().size() é diferente: Assert.assertEquals(3, r.getValues().size())
O valor booleano esperado é true, mas o valor retornado por r.getValues().get(k1).isSuccess() é false: Assert.assertTrue(r.getValues().get(k1).isSuccess())
Valores esperados são iguais, mas o valor retornado por r.getValues().get(k1).getValue() é diferente: Assert.assertEquals("V1", r.getValues().get(k1).getValue())