eram esperados valores iguais, mas 0 é diferente de result.get("score")
eram esperados valores iguais, mas null é diferente de result.get("entity.0.fullValue")
eram esperados valores iguais, mas null é diferente de result.get("entity.1.fullValue")
eram esperados valores iguais, mas null é diferente de solverConfig
eram esperados valores iguais, mas DomainAccessType.GIZMO é diferente de solverConfig.getDomainAccessType()
eram esperados valores iguais, mas TestdataQuarkusSolution.class é diferente de solverConfig.getSolutionClass()
eram esperados valores iguais, mas Collections.singletonList(TestdataQuarkusEntity.class) é diferente de solverConfig.getEntityClassList()
eram esperados valores iguais, mas TestdataQuarkusConstraintProvider.class é diferente de solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass()
eram esperados valores iguais, mas null é diferente de solverFactory.buildSolver()
eram esperados valores iguais, mas Collections.singletonList(CONSTRAINTS_DRL) é diferente de solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList()
eram esperados valores iguais, mas ConstraintStreamImplType.BAVET é diferente de solverConfig.getScoreDirectorFactoryConfig().getConstraintStreamImplType()
eram esperados valores iguais, mas null é diferente de benchmarkResultDirectory
eram esperados valores iguais, mas true é diferente de Files.isDirectory(benchmarkResultDirectoryPath)
eram esperados valores iguais, mas true é diferente de Files.isRegularFile(benchmarkResultPath)
eram esperados valores iguais, mas false é diferente de xmlPath.getBoolean("plannerBenchmarkResult.solverBenchmarkResult.singleBenchmarkResult.subSingleBenchmarkResult.succeeded")
eram esperados valores iguais, mas 2 é diferente de solverConfig.getEntityClassList().size()
eram esperados valores iguais, mas TestdataQuarkusEntity.class é diferente de solverConfig.getEntityClassList().contains(TestdataQuarkusEntity.class)
eram esperados valores iguais, mas TestdataQuarkusOtherEntity.class é diferente de solverConfig.getEntityClassList().contains(TestdataQuarkusOtherEntity.class)
eram esperados valores iguais, mas 5 é diferente de plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getSolverConfig().getTerminationConfig().getMillisecondsSpentLimit()
eram esperados valores iguais, mas List.of(TestdataQuarkusEntity.class) é diferente de plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getSolverConfig().getEntityClassList()
eram esperados valores iguais, mas TestdataQuarkusSolution.class é diferente de childBenchmarkConfig.getSolverConfig().getSolutionClass()
eram esperados valores iguais, mas null é diferente de childBenchmarkConfig.getSolverConfig().getEntityClassList()
eram esperados valores iguais, mas TestdataQuarkusConstraintProvider.class é diferente de childBenchmarkConfig.getSolverConfig().getScoreDirectorFactoryConfig().getConstraintProviderClass()
eram esperados valores iguais, mas 2 é diferente de plannerBenchmarkConfig.getSolverBenchmarkConfigList().get(0).getSolverConfig().getPhaseConfigList().size()
eram esperados valores iguais, mas 3 é diferente de plannerBenchmarkConfig.getSolverBenchmarkConfigList().get(1).getSolverConfig().getPhaseConfigList().size()
eram esperados valores iguais, mas "The following " + SolverBenchmarkConfig.class.getSimpleName() + " do not " + "have termination configured: [First Fit and Local Search without Termination]. " + "At least one of the properties " + "quarkus.optaplanner.benchmark.solver.termination.spent-limit, " + "quarkus.optaplanner.benchmark.solver.termination.best-score-limit, " + "quarkus.optaplanner.benchmark.solver.termination.unimproved-spent-limit " + "is required if termination is not configured in a solver benchmark and the " + "inherited solver benchmark config.", exception.getMessage() é diferente de exception.getMessage()