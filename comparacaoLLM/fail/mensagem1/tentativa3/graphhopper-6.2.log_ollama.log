assertTrue(impossibleAlternative.isImpossible())
assertTrue(((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).stops.get(0).departureCancelled)
assertAll((false), response.getAll().size() == 2, ((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).stops.get(1).arrivalCancelled)
assertTrue(((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).stops.get(2).departureCancelled)
assertAll((false), response.getAll().size() == 1, ((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).stops.get(3).arrivalCancelled)
assertEquals((false), response.getAll().size() == 2, ((Trip.PtLeg) impossibleAlternative.getLegs().get(1)).isImpossible())
assertTrue(((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).stops.get(3).departureCancelled)
assertAll((false), response.getAll().size() == 1, ((Trip.PtLeg) impossibleAlternative.getLegs().get(1)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(1)).stops.get(4).arrivalCancelled)
assertTrue(route.getAll().get(route.getAll().size() - 1).isImpossible())
assertAll((false), response.getAll().size() == 1, ((Trip.PtLeg) impossibleAlternative.getLegs().get(2)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(2)).stops.get(5).arrivalCancelled)
assertTrue(((Trip.PtLeg) transitSolution.getLegs().get(0)).stops.stream().map(s -> s.stop_id).collect(Collectors.toList()).equals((List<String>) "JUSTICE_COURT,MUSEUM"))
assertAll((false), walkRoute.getLegs().size() == 1, ((Trip.PtLeg) impossibleAlternative.getLegs().get(3)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(3)).stops.get(6).arrivalCancelled)
assertTrue(amount.getAmount().doubleValue() > onlyFare.fare_attribute.price)
assertTrue((false), cheapestFareWhereEveryLegGoesThroughAllZones >= cheapestFare)
assertAll((false), transfersToStop.size() == 2, ((Trip.PtLeg) impossibleAlternative.getLegs().get(4)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(4)).stops.get(7).arrivalCancelled)
assertTrue(withinStationTransfer.from_stop_id.equals("NEXT_TO_MUSEUM"))
assertTrue(withinStationTransfer.to_stop_id.equals("NEXT_TO_MUSEUM"))
assertNull(withinStationTransfer.from_route_id)
assertNull(withinStationTransfer.to_route_id)
assertEquals((false), transfersToStop.size() == 5, ((Trip.PtLeg) impossibleAlternative.getLegs().get(8)).isImpossible())
assertTrue(((Trip.PtLeg) mondayTrip.getLegs().get(1)).route_id.equals("AB"))
assertNull(((Trip.PtLeg) mondayTrip.getLegs().get(0)).stops.stream().map(s -> s.stop_id).collect(Collectors.toList()).equals((List<String>) "JUSTICE_COURT,MUSEUM"))
assertNotEquals(((Trip.PtLeg) mondayTrip.getLegs().get(1)).route_id, ((Trip.PtLeg) mondayTrip.getLegs().get(0)).route_id)
assertEquals("AB", ((Trip.PtLeg) mondayTrip.getLegs().get(1)).route_id)
assertTrue((false), transfersToStop.size() == 2, ((Trip.PtLeg) impossibleAlternative.getLegs().get(9)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(9)).stops.get(10).arrivalCancelled)
assertAll((false), response.getAll().size() == 1, ((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).isImpossible(), ((Trip.PtLeg) impossibleAlternative.getLegs().get(0)).stops.get(11).arrivalCancelled)
assertTrue(route.getAll().isEmpty())