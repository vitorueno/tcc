NotNull(files)
 files.length > 10
NotNull(doc)
NotNull(doc)
NotNull(xmlDoc)
NotNull(doc)
Validate.fail("Should not be reachable")
runner.isInterrupted()
body[0].length() > 0
body[0].contains("<p>Are you still there?")
runner.isInterrupted()
assertEquals(0, body[0].length())
threw
h1.text().equals("outatime")
 thrown
 assertEquals(0, catcher.exceptionCount.get())
catcher.multiThreadExceptions.get().equals(numThreads - 1)
 assertEquals(0, catcher.exceptionCount.get())
fail("Should not be reachable", "A execução falhou por uma causa deliberada")
assertEquals("Hello, World!", p.text())
doc.title().contains("Environment Variables")
 doc.title().contains("Environment Variables")
 thrown
thrown
 assertEquals(404, res.statusCode())
 assertEquals("Webserver Environment Variables", doc.title())
 assertEquals("POST", ihVal("Method", doc))
 assertEquals("gzip", ihVal("Accept-Encoding", doc))
 assertEquals("auth=token", ihVal("Cookie", doc))
 assertEquals("度一下", ihVal("百", doc))
 assertEquals("Jsoup, Jonathan", ihVal("uname", doc))
 assertEquals("application/x-www-form-urlencoded; charset=UTF-8", ihVal("Content-Type", doc))
 assertTrue(ihVal("Content-Type", doc).contains(MULTIPART_FORM_DATA))
 assertTrue(ihVal("Content-Type", doc).contains("boundary"))
 assertEquals("Jsoup, Jonathan", ihVal("uname", doc))
 assertEquals("度一下", ihVal("百", doc))
 assertEquals("hello", ihVal("Random-Header-name", doc))
 assertEquals("cross-site", ihVal("Sec-Fetch-Site", doc))
 assertEquals("cors", ihVal("Sec-Fetch-Mode", doc))
 assertEquals("hello", ihVal("Random-Header-name", doc))
 assertEquals("cross-site", ihVal("Sec-Fetch-Site", doc))
 assertEquals("cors", ihVal("Sec-Fetch-Mode", doc))
 assertEquals("POST", ihVal("Method", doc))
 assertEquals("application/json", ihVal("Content-Type", doc))
 assertEquals("foo=true", ihVal("Query String", doc))
 assertEquals(body, ihVal("Post Data", doc))
 assertEquals("POST", ihVal("Method", doc))
 assertEquals("application/json", ihVal("Content-Type", doc))
 assertEquals(body, ihVal("Post Data", doc))
 assertEquals("POST", ihVal("Method", doc))
 assertEquals("text/plain", ihVal("Content-Type", doc))
 assertEquals(body, ihVal("Post Data", doc))
 assertEquals("POST", ihVal("Method", doc))
 assertEquals("uname=Jsoup&uname=Jonathan&%E7%99%BE=%E5%BA%A6%E4%B8%80%E4%B8%8B", ihVal("Query String", doc))
 assertEquals(body, ihVal("Post Data", doc))
 assertEquals("what=the&what=about+%26+me%3F", ihVal("Query String", doc))
 assertEquals("the, about & me?", ihVal("what", doc))
 assertEquals("Mozilla", ihVal("User-Agent", doc))
 assertEquals("http://example.com", ihVal("Referer", doc))
 assertEquals("PUT", ihVal("Method", doc))
 assertEquals("gzip", ihVal("Accept-Encoding", doc))
 assertEquals("auth=token", ihVal("Cookie", doc))
 assertEquals("4", ihVal("Parts", res))
 assertEquals("application/octet-stream", ihVal("Part secondPart ContentType", res))
 assertEquals("secondPart", ihVal("Part secondPart", res))
 assertEquals(1052, ihVal("firstname", res))
 assertEquals("Soup", ihVal("surname", res))
 assertTrue(doc.title().contains("Environment"))
 assertTrue(doc2.title().contains("Environment"))
 assertTrue(body.contains("Environment"))
 assertTrue(bytes.length > 100)
 assertEquals("asdfg123", cookies.get("token"))
 assertEquals("jhy", cookies.get("uid"))
 assertEquals("token=asdfg123; uid=jhy", ihVal("Cookie", doc))
 assertEquals(0, res.cookies().size())
 assertEquals(echoUrl, doc.location())
 assertEquals("True", ihVal("Cookie: LetMeIn", doc))
 assertEquals("Yes", ihVal("Cookie: DoesItWork", doc))
 assertEquals("deflate", res.header("Content-Encoding"))
 assertEquals("Hello, World!", doc.selectFirst("p").text())
 assertEquals("Something", document.title())
 assertEquals(0, document.select("p").size())
 assertEquals(0, doc.select("p").size())
 assertEquals("Hello, World!", p.text())
 assertEquals(HelloServlet.Url, doc.location())
 thrown
 assertEquals(EchoServlet.Url, doc.location())