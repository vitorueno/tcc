assertEquals("O valor de count não é igual a 1", 1)
assertEquals("O valor de count não é igual a 1", 1)
assertEquals("O valor de count não é igual a 2", 2)
assertEquals("O valor de count não é igual a 3", 3)
assertEquals("O valor de count não é igual a 2", 2)
assertEquals("O valor de count não é igual a 6", 6)
assertNull("O atributo 's' está nulo", "s")
assertNotNull("O objeto 's' não pode ser nulo", s)
assertEquals("O valor do campo 'count' não é igual ao da variável 's'", count, s.getCount())
assertEquals("O valor do campo 'count' não é igual ao resultado de subtrair 1 de 'count'", count - 1, s.getValue())
assertEquals("O valor do campo 'count' não é igual ao resultado de subtrair 1 de 'index'", count - 1, s.getIndex())
assertEquals("O valor do campo 'count' não é igual ao módulo de 'count' pelo valor do campo 'modulusValue'", count % s.getModulusValue(), s.getModulus())
assertEquals("O tipo de conteúdo da variável 'ct' está errado", TEXT_RESULT, response.bodyText().trim())
assertEquals("O tipo de conteúdo da variável 'response' está errado", TEXT_RESULT, response.bodyText().trim())
assertEquals("O tipo de conteúdo da variável 'response' está errado", TEXT_RESULT, response.bodyText().trim())
assertEquals("O tipo de conteúdo da variável 'response' está errado", TEXT_RESULT, response.bodyText().trim())
assertEquals("O valor da variável 'p[2]' não é igual a 3", " three ", p[2])
assertNotNull("A variável 'p[1]' não pode ser nula", p[1])
assertNull("O elemento 'p[3]' está presente", p[3])
assertNull("A variável 'p[1]' não pode ser nula", p[1])
assertNull("O elemento 'p[3]' está presente", p[3])
assertNull("A variável 'p[0]' não pode ser nula", p[0])
assertNull("A variável 'p[1]' não pode ser nula", p[1])
assertNotNull("A variável 'p[2]' não pode ser nula", p[2])
assertNotNull("O objeto 'vtor' não pode ser nulo", vtor)
assertEquals("A configuração de severidade do objeto 'vtor' está errada", 1, vtor.severity)
assertTrue("O objeto 'vtor' não deve validar apenas os perfis padrão por padrão", vtor.isValidateAllProfilesByDefault())
assertNull("O array de violações do objeto 'vtor' está presente", vtor.getViolations())
assertEquals("O tamanho do array de violações do objeto 'vtor' está errado", 2, vtor.getViolations().size())
assertEquals("A variável 'vtor' não deve conter a violação", violation1, vtor.getViolations().get(0))
assertEquals("A variável 'vtor' não deve conter a violação", violation2, vtor.getViolations().get(1))
assertEquals("O tamanho do array de violações do objeto 'vtor' está errado", 2, vtor.getViolations().size())
assertNull("O array de perfis ativos do objeto 'vtor' está presente", vtor.enabledProfiles)
assertEquals("A lista de perfis ativos do objeto 'vtor' está errada", 1, vtor.enabledProfiles.size())
assertEquals("A lista de perfis ativos do objeto 'vtor' está errada", 1, vtor.enabledProfiles.size())
assertNull("O array de violações do objeto 'vtor' está presente", vtor.enabledProfiles)
assertEquals("A lista de perfis ativos do objeto 'vtor' está errada", 2, vtor.enabledProfiles.size())
assertEquals("A lista de violações do objeto 'vtor' está errada", 2, vtor.enabledProfiles.size())
assertEquals("O tamanho da lista de violações é errado", 1, violations.size())
assertNull("A variável 'validate' não pode ser nula", validate)
assertEquals("A lista de violações está errada", 1, violations.size())
assertEquals("A configuração de perfil do objeto 'violations' está errada", "profil1", violations.get(0).getCheck().getProfiles()[0])
assertEquals("O objeto de check do objeto 'violations' não pode ser nulo", ch1, violations.get(0).getCheck())
assertTrue("O objeto 'vtor' deve coincidir com os perfis 'testProfile'", vtor.matchProfiles(new String[] { "testProfile" }))
assertTrue("O objeto 'vtor' deve coincidir com os perfis null", vtor.matchProfiles(null))