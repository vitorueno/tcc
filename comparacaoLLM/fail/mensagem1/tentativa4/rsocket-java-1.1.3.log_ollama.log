assertEquals("A espera-se que o próximo streamId seja 2, mas obteve 4", ex)
assertEquals("A espera-se que o próximo streamId seja 6, mas obteve 4", ex)
assertFalse("O streamId 1 não é antes ou atual do 3", ex)
assertFalse("O streamId 3 não é antes ou atual do 3", ex)
assertTrue("O streamId 1 é antes ou atual do 3", ex)
assertFalse("O streamId 3 não é antes ou atual do 3", ex)
assertFalse("O streamId -1 não é antes ou atual de 2", ex)
assertFalse("O streamId 0 não é antes ou atual de 2", ex)
assertTrue("O streamId 2 é antes ou atual de 2", ex)
assertFalse("O streamId 4 não é antes ou atual de 2", ex)
assertFalse("O streamId 4 não é antes ou atual do 4", ex)
assertTrue("O streamId 4 é antes ou atual do 4", ex)
assertFalse("O streamId -2 não é antes ou atual de 1", ex)
assertFalse("O streamId 0 não é antes ou atual de 1", ex)
assertTrue("O streamId 1 é antes ou atual de 1", ex)
assertEquals("O próximo streamId deve ser 2147483646, mas obteve 2", ex)
assertEquals("O próximo streamId deve ser 2, mas obteve 4", ex)
assertEquals("O próximo streamId deve ser 4, mas obteve 4", ex)
assertEquals("O próximo streamId deve ser 2147483647, mas obteve 4", ex)
assertEquals("O próximo streamId deve ser 1, mas obteve 3", ex)
assertEquals("O próximo streamId deve ser 3, mas obteve 3", ex)
assertEquals("O próximo streamId deve ser 7, mas obteve 11", ex)
assertEquals("O próximo streamId deve ser 11, mas obteve 11", ex)
assertTrue("A estrutura de setupPayload deve honrar a lease", ex)
assertEquals("O intervalo de manutenção deve ser igual ao EXPECTED_KEEP_ALIVE_INTERVAL", ex)
assertEquals("O máximo tempo de manutenção deve ser igual ao EXPECTED_KEEP_ALIVE_MAX_LIFETIME", ex)
assertEquals("O tipo de metadados da frame de setup deve ser igual a METADATA_TYPE", ex)
assertEquals("O tipo de dados da frame de setup deve ser igual a DATA_TYPE", ex)
assertTrue("A estrutura de setupPayload possui metadados", ex)
assertNotNull("O objeto metadata do setupPayload não pode ser nulo", ex)
assertEquals("Os metadados do payload são iguais aos esperados", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertTrue("A estrutura de setupPayload possui metadados", ex)
assertNotNull("O objeto metadata do setupPayload não pode ser nulo", ex)
assertEquals("As bytes lidas dos metadatos devem ser 0", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertTrue("A estrutura de setupPayload possui metadados", ex)
assertNotNull("O objeto metadata do setupPayload não pode ser nulo", ex)
assertEquals("As bytes lidas dos metadatos devem ser 0", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertTrue("A estrutura de setupPayload possui metadados", ex)
assertNotNull("O objeto metadata do setupPayload não pode ser nulo", ex)
assertEquals("As bytes lidas dos metadatos devem ser 0", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertTrue("A estrutura de setupPayload possui metadados", ex)
assertNotNull("O objeto metadata do setupPayload não pode ser nulo", ex)
assertEquals("As bytes lidas dos metadatos devem ser 0", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertEquals("A metade do tipo de extensão da frame deve ser igual a EXTENDED_TYPE", ex)
assertNull("O objeto metadados da frame de extensão não pode ser nulo", ex)
assertEquals("As bytes lidas dos dados devem ser 0", ex)
assertNull("O objeto metadados da request não pode ser nulo", ex)
assertTrue("A estrutura de FrameHeaderCodec possui metadados para a request", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertEquals("As bytes lidas dos metadados devem ser 0", ex)
assertNull("O objeto metadados da request não pode ser nulo", ex)
assertTrue("A estrutura de FrameHeaderCodec possui metadados para a request", ex)
assertEquals("Os dados do payload são iguais aos esperados", ex)
assertEquals("As bytes lidas dos metadatos devem ser 0", ex)
assertNull("O objeto metadados da request não pode ser nulo", ex)