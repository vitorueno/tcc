assertEquals(typeArguments[0], TextRenderData.class)
assertEquals(typeArguments[0], TextRenderData.class)
assertEquals(result.getText(), data.getText())
assertEquals(((HyperlinkTextRenderData) result).getUrl(), ((HyperlinkTextRenderData) data).getUrl())
assertEquals(result.getStyle().getColor(), data.getStyle().getColor())
assertEquals(result.getStyle().getUnderlinePatterns(), data.getStyle().getUnderlinePatterns())
assertEquals(result.getPictureStyle().getWidth(), data.getPictureStyle().getWidth())
assertEquals(result.getPictureStyle().getHeight(), data.getPictureStyle().getHeight())
assertEquals(result.getPictureType(), data.getPictureType())
assertEquals(result.getAltMeta(), data.getAltMeta())
assertEquals(result.getChartTitle(), data.getChartTitle())
assertArrayEquals(result.getCategories(), data.getCategories())
assertEquals(result.getSeriesDatas().get(0).getName(), data.getSeriesDatas().get(0).getName())
assertEquals(result.getSeriesDatas().get(0).getComboType(), data.getSeriesDatas().get(0).getComboType())
assertArrayEquals(result.getMergedDoc(), data.getMergedDoc())
assertEquals(document.getParagraphArray(0).getText(), "面朝大海春暖花开")
assertEquals(document.getParagraphArray(2).getNumID(), document.getParagraphArray(3).getNumID())
assertEquals("日落：日落山花红四海", document.getTables().get(0).getRow(1).getCell(1).getText())
assertEquals(spelForMap.compute("['name']"), "Sayi")
assertEquals(spelForMap.compute("['data']['hello']"), "poi-tl")
assertEquals(spelForBean.compute("name"), "poi-tl")
assertEquals(spelForFunction.compute("#substringStaticMethod('spElFunction', 2)"), "ElFunction")
assertEquals(paragraph.getText(), "lowCase:poi-tlUpcase:POI-TL")
assertEquals(spelForMap.compute("data['hello']"), "poi-tl")
assertEquals(spelForBean.compute("name == 'poi-tl'"), true)
assertEquals(spelForBean.compute("empty?:'这个字段为空'"), "这个字段为空")
assertEquals(spelForBean.compute("sex ? '男' : '女'"), "男")
assertEquals(spelForBean.compute("new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(time)"), "2019-05-20 22:14:10")
assertEquals(spelForBean.compute("new java.text SimpleDateFormat('yyyy-MM-dd hh:mm').format(time)"), "2019-05-20 10:14")
assertEquals(spelForBean.compute("price"), 88880000L)
assertEquals(spelForBean.compute("price + '元'"), "88880000元")
assertEquals(spelForBean.compute("price/1000 + '千元'"), "88880千元")
assertEquals(spelForBean.compute("price/10000 + '万元'"), "8888万元")
assertEquals(spelForBean.compute("dogs[0].name"), "阿黄")
assertEquals(spelForBean.compute("dogs[1].age"), 6)
assertEquals(spelForBean.compute("dogsArr[2].name"), "阿蓝")
assertEquals(paragraph.getText(), "2019-05-20 22:14:10")
assertEquals(Configure.DEFAULT_GRAMER_REGEX, config.getGrammerRegex())
assertNotEquals(Configure.DEFAULT_GRAMER_REGEX, config.getGrammerRegex())