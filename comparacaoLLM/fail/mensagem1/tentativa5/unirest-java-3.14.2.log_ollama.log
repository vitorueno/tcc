assertEquals("Body não foi igual a 'Hey Ma'", body)
assertNull("Não foi possível obter o corpo da resposta", Unirest.post(path).asString().getBody())
assertEquals("Body não foi igual a 'bar', pois foi igual a 'foo'", Unirest.post(path).body("foo").asString().getBody())
assertNull("Não foi possível obter o corpo da resposta", Unirest.get(path).asString().getBody())
assertEquals("Status da resposta é 400, pois está igual a 'bad request'", res.getStatus())
assertEquals("Status da resposta é 400, pois está igual a 'Bad Request'", res.getStatusText())
assertEquals("Corpo da resposta não está presente ou está nulo", Unirest.get(path).asString().getBody())
assertEquals("Body não foi igual a 'Hi', pois foi igual a 'Hey Buddy'", Unirest.get(otherPath).asString().getBody())
assertEquals("Body não foi igual a 'Yeaaaah Buddy'", Unirest.get(path).asString().getBody())
assertEquals("Corpo da resposta está presente e não é nulo", Unirest.get(path).asString().getBody())
assertSame("Resposta não está igual à esperada, pois não está igual à response", response.getBody())
assertSame("Resposta não está igual à esperada", interceptor.response)
assertEquals("Valor não está correto, pois está igual a 'two'", result)
assertEquals("Erro não está presente ou está nulo", err.say)
assertEquals("Valor não está correto, pois está igual a 'cool'", result)
assertTrue("Função foi chamada com sucesso", wasCalled)
assertEquals("URL da requisição não está correta, pois está igual a 'http://localhost/get/cheese/passed?fruit=apples'", sum.getUrl())
assertEquals("Campos da URL não estão presentes ou são nulos", sum.getRawPath())
assertEquals("Método HTTP não está presente ou é errado", sum.getHttpMethod())
assertEquals("Status da resposta é 400, pois está igual a 'bad request'", response.getStatus())
assertEquals("Corpo da resposta está presente e está corretamente formatado como 'oh noes'", response.getStatusText())
assertEquals("Status da resposta é 400, pois está igual a 'bad request'", response.getStatus())
assertEquals("Corpo da resposta não está presente ou está nulo", response.getStatusText())
assertEquals("Body não está presente ou está nulo", Unirest.get(path).asString().getBody())
assertEquals("Valor não está correto, pois está igual a 'Hello World'", Unirest.get(path).asString().getBody())
assertEquals("Valor não está correto, pois está igual a 'Hello World'", new String(body))
assertEquals("Valor não está correto, pois está igual a 'apple'", Unirest.get(path).asJson().getBody().getObject().getString("fruit"))
assertEquals("Valor não está correto, pois está igual a 'apple'", Unirest.get(path).asJson().getBody().getObject().getString("fruit"))
assertEquals("Valor não está correto, pois está igual a 'derp'", pojo.fruit)
assertEquals("Erro não está presente ou está nulo", pojo)
assertEquals("Erro não está presente ou está nulo", pojo)
assertEquals("Valor não está correto, pois está igual a 'foo'", rez.getBody())
assertEquals("Valor não está correto, pois está igual a 'grover'", rez.getHeaders().getFirst("monster"))
assertNull("Corpo da resposta não está presente ou é nulo", rez.getBody())
assertEquals("Valor não está correto, pois está igual a 'grover'", rez.getHeaders().getFirst("monster"))
assertEquals("Status da resposta é 400, pois está igual a 'bad request'", httpResponse.getStatus())
assertEquals("Body da resposta não está presente ou está nulo", httpResponse.getBody())
assertEquals("Status da resposta é 400, pois está igual a 'bad request'", httpResponse.getStatus())
assertEquals("Valor não está correto, pois está igual a 'howdy'", httpResponse.getBody().get(0))
assertTrue("Requisição foi usada corretamente com uma configuração de requisição", requestConfigUsed)
assertTrue("Interceptador foi chamado com sucesso", interceptorCalled)
Assertions.assertEquals("Número de cabeçalhos da requisição não está correto, pois está igual a 1", request.getHeaders().size())
Assertions.assertEquals("Cabeçalho 'name' não está presente ou está nulo", request.getHeaders().get("name").get(0))
Assertions.assertEquals("Cabeçalho 'NAme' não está presente ou está nulo", request.getHeaders().get("NAme").get(0))
Assertions.assertEquals("Cabeçalho 'Name' não está presente ou está nulo", request.getHeaders().get("Name").get(0))