assertEquals("O esperado registerCount não foi encontrado na quantidade de registros realmente existentes", expectedRegisterCount, actualRegisterCount)
assertArrayEquals("As linhas expectadas não estão presentes nas linhas reais", expectedLines, actualLines)
assertEquals("O opcode IGET não é igual ao opcode real gerado", Opcode.IGET, UnreflectionStrategy.getGetOpcode("I", isStatic))
assertEquals("O opcode IGET_BOOLEAN não é igual ao opcode real gerado", Opcode.IGET_BOOLEAN, UnreflectionStrategy.getGetOpcode("Z", isStatic))
assertEquals("O opcode IGET_BYTE não é igual ao opcode real gerado", Opcode.IGET_BYTE, UnreflectionStrategy.getGetOpcode("B", isStatic))
assertEquals("O opcode IGET_CHAR não é igual ao opcode real gerado", Opcode.IGET_CHAR, UnreflectionStrategy.getGetOpcode("C", isStatic))
assertEquals("O opcode IGET_OBJECT não é igual ao opcode real gerado", Opcode.IGET_OBJECT, UnreflectionStrategy.getGetOpcode("Ljava/lang/Object;", isStatic))
assertEquals("O opcode IGET_SHORT não é igual ao opcode real gerado", Opcode.IGET_SHORT, UnreflectionStrategy.getGetOpcode("S", isStatic))
assertEquals("O opcode IGET_WIDE não é igual ao opcode real gerado", Opcode.IGET_WIDE, UnreflectionStrategy.getGetOpcode("J", isStatic))
assertEquals("O opcode IGET_WIDE não é igual ao opcode real gerado", Opcode.IGET_WIDE, UnreflectionStrategy.getGetOpcode("D", isStatic))
assertEquals("Os opcodes SGET, SGET_BOOLEAN, SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são igual aos opcodes reais gerados", Opcode.SGET, UnreflectionStrategy.getGetOpcode("I", isStatic))
assertEquals("Os opcodes SGET_BOOLEAN, SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são igual aos opcodes reais gerados", Opcode.SGET_BOOLEAN, UnreflectionStrategy.getGetOpcode("Z", isStatic))
assertEquals("Os opcoes SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BYTE, UnreflectionStrategy.getGetOpcode("B", isStatic))
assertEquals("Os opcoes SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são igual aos opcodes reais gerados", Opcode.SGET_CHAR, UnreflectionStrategy.getGetOpcode("C", isStatic))
assertEquals("O opcode IGET_OBJECT não é igual ao opcode real gerado", Opcode.IGET_OBJECT, UnreflectionStrategy.getGetOpcode("Ljava/lang/Object;", isStatic))
assertEquals("Os opcodes SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_SHORT, UnreflectionStrategy.getGetOpcode("S", isStatic))
assertEquals("O opcode IGET_WIDE não é igual ao opcode real gerado", Opcode.IGET_WIDE, UnreflectionStrategy.getGetOpcode("J", isStatic))
assertEquals("Os opcoes SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.IGET_WIDE, UnreflectionStrategy.getGetOpcode("D", isStatic))
assertEquals("Os opcoes IGET, IGET_BOOLEAN, IGET_BYTE, IGET_CHAR, IGET_OBJECT, IGET_SHORT, IGET_WIDE, IGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET, UnreflectionStrategy.getGetOpcode("I", isStatic))
assertEquals("Os opcoes SGET_BOOLEAN, SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BOOLEAN, UnreflectionStrategy.getGetOpcode("Z", isStatic))
assertEquals("Os opcoes SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BYTE, UnreflectionStrategy.getGetOpcode("B", isStatic))
assertEquals("Os opcoes SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_CHAR, UnreflectionStrategy.getGetOpcode("C", isStatic))
assertEquals("Os opcoes IGET, IGET_BOOLEAN, IGET_BYTE, IGET_CHAR, IGET_OBJECT, IGET_SHORT, IGET_WIDE, IGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BOOLEAN, UnreflectionStrategy.getGetOpcode("Z", isStatic))
assertEquals("Os opcoes IGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BYTE, UnreflectionStrategy.getGetOpcode("B", isStatic))
assertEquals("Os opcoes IGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_CHAR, UnreflectionStrategy.getGetOpcode("C", isStatic))
assertEquals("O opcode IGET_OBJECT não é igual ao opcode real gerado", Opcode.IGET_OBJECT, UnreflectionStrategy.getGetOpcode("Ljava/lang/Object;", isStatic))
assertEquals("Os opcoes SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_SHORT, UnreflectionStrategy.getGetOpcode("S", isStatic))
assertEquals("O opcode IGET_WIDE não é igual ao opcode real gerado", Opcode.IGET_WIDE, UnreflectionStrategy.getGetOpcode("J", isStatic))
assertEquals("Os opcoes SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.IGET_WIDE, UnreflectionStrategy.getGetOpcode("D", isStatic))
assertEquals("Os opcoes IGET, IGET_BOOLEAN, IGET_BYTE, IGET_CHAR, IGET_OBJECT, IGET_SHORT, IGET_WIDE, IGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET, UnreflectionStrategy.getGetOpcode("I", isStatic))
assertEquals("Os opcoes SGET_BOOLEAN, SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BOOLEAN, UnreflectionStrategy.getGetOpcode("Z", isStatic))
assertEquals("Os opcoes SGET_BYTE, SGET_CHAR, SGET_OBJECT, SGET Short, SGET_WIDE, SGET_WIDE não são iguais aos opcodes reais gerados", Opcode.SGET_BYTE, UnreflectionStrategy.getGetOpcode("B", isStatic))
assertEquals("Os opcoes SGET_CHAR, SGET_OBJECT, SGET_SHORT, SGET WIDE, SGET_WIDE não são iguais aos opcoes reais gerados", Opcode.SGET_CHAR, UnreflectionStrategy.getGetOpcode("C", isStatic))