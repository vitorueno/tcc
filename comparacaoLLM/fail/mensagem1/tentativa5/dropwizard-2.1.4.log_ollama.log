assertNotNull(factory.configureSslContextFactory(new SslContextFactory.Server()), " SSL context factory não pode ser null")
Assertions.assertEquals(ConstraintViolationException.class, throwable.getClass(), "Class da exceção não coincide com o esperado")
Assertions.assertEquals(Collections.singletonMap("color", "orange"), response, "Map de resposta não coincide com o esperado")
Assertions.assertEquals(Collections.singletonMap("message", "stuff!"), response, "Map de resposta não coincide com o esperado")
assertFalse(findEntityClassesFromDirectory.isEmpty(), " lista vazia")
assertEquals(4, findEntityClassesFromDirectory.size(), "Tamanho da lista incorreto")
assertFalse(findEntityClassesFromDirectory.isEmpty(), " lista vazia")
assertEquals(8, findEntityClassesFromDirectory.size(), "Tamanho da lista incorreto")
assertTimeout(Duration.ofSeconds(5L), () -> assertThat(event.getCreatedAt()).isEqualTo(Instant.ofEpochMilli(0)), "O Instanto não coincide com o esperado")
assertTimeout(Duration.ofSeconds(5L), () -> assertThat(task.getDuration()).isEqualTo(Duration.ofSeconds(0)), "Duração da tarefa incorreta")
assertTrue(requestContext.getSecurityContext().isSecure(), "Acesso seguro não é verdadeiro")
assertEquals(http.getAdminContextPath(), environment.getAdminContext().getContextPath(), "Pátios de admin incorreto")
assertEquals(http.getApplicationContextPath(), environment.getApplicationContext().getContextPath(), "Pátios de aplicação incorreta")
assertEquals(http.getAdminContextPath(), environment.getAdminContext().getContextPath(), "Pátios de admin incorreto")
assertEquals(http.getApplicationContextPath(), environment.getApplicationContext().getContextPath(), "Pátios de aplicação incorreta")
assertEquals(OK_STATUS_CODE, getResponseStatusForRequestMethod("GET", false), "Código de resposta incorreto para GET sem autenticação")
assertEquals(OK_STATUS_CODE, getResponseStatusForRequestMethod("POST", true), "Código de resposta incorreto para POST com autenticação")
assertEquals(DISALLOWED_STATUS_CODE, getResponseStatusForRequestMethod("PUT", true), "Código de resposta incorreto para PUT com autenticação")
assertEquals(DISALLOWED_STATUS_CODE, getResponseStatusForRequestMethod("DELETE", false), "Código de resposta incorreto para DELETE sem autenticação")
assertEquals(DISALLOWED_STATUS_CODE, getResponseStatusForRequestMethod("TRACE", false), "Código de resposta incorreto para TRACE sem autenticação")
assertSame(inv, test.getInvocable(), "O invocado não coincide com o esperado")
Assertions.assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), reponse.getStatus(), "Código de resposta incorreto para Bad Request")
assertFalse(Optionals.fromGuavaOptional(com.google.common.base.Optional.absent()).isPresent(), "A Guava Optional contém valor")
assertTrue(Optionals.fromGuavaOptional(com.google.common.base.Optional.of("Foo")).isPresent(), "A Guava Optional não contém valor")
assertEquals(java.util.Optional.of("Foo"), Optionals.fromGuavaOptional(com.google.common.base.Optional.of("Foo")), "Optinal de guava incorreto")
assertFalse(Optionals.toGuavaOptional(java.util.Optional.empty()).isPresent(), "A Guava Optional contém valor")
assertTrue(Optionals.toGuavaOptional(java.util.Optional.of("Foo")).isPresent(), "A Guava Optional não contém valor")
assertEquals(com.google.common.base.Optional.of("Foo"), Optionals.toGuavaOptional(java.util.Optional.of("Foo")), "Optinal de guava incorreto")