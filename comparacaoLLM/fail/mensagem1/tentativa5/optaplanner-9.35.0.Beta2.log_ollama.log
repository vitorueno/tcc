Assertions.assertEquals("0", result.get("score"))
Assertions expectedNotNull(result.get("entity.0.fullValue"))
Assertions expectedNotNull(result.get("entity.1.fullValue"))
assertNotNull(solverConfig)
assertEquals(DomainAccessType.GIZMO, solverConfig.getDomainAccessType())
assertEquals(TestdataQuarkusSolution.class, solverConfig.getSolutionClass())
assertEquals(Collections.singletonList(TestdataQuarkusEntity.class), solverConfig.getEntityClassList())
assertEquals(TestdataQuarkusConstraintProvider.class, solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
assertEquals(3L, solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue())
assertNotNull(solverFactory)
assertNotNull(solverFactory.buildSolver())
assertNotNull(solverConfig)
assertEquals(TestdataQuarkusSolution.class, solverConfig.getSolutionClass())
assertEquals(DomainAccessType.GIZMO, solverConfig.getDomainAccessType())
assertEquals(Collections.singletonList(TestdataQuarkusEntity.class), solverConfig.getEntityClassList())
assertEquals(TestdataQuarkusConstraintProvider.class, solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass())
assertEquals(2L, solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue())
assertNotNull(solverFactory)
assertNotNull(solverFactory.buildSolver())
assertEquals(EnvironmentMode.FULL_ASSERT, solverConfig.getEnvironmentMode())
assertTrue(solverConfig.isFullAssert())
Assertions.assertEquals("Extra Data", solution.getExtraData())
assertNull(constraintStreamImplType)
assertNotNull(solverFactory)
fail("Build should fail", "A execução falhou por uma causa deliberada")
assertNotNull(constraintVerifier)
assertNotNull(benchmarkResultDirectory)
Assertions.assertTrue(Files.isDirectory(benchmarkResultDirectoryPath))
Assertions.assertTrue(Files.isRegularFile(benchmarkResultPath))
Assertions.assertTrue(xmlPath.getBoolean("plannerBenchmarkResult.solverBenchmarkResult.singleBenchmarkResult.subSingleBenchmarkResult.succeeded"))
assertNull(solverConfig.getEntityClassList())
assertNull(plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getEntityClassList())
assertNull(childBenchmarkConfig.getSolverConfig().getEntityClassList())
assertNotNull(constraintVerifier)
Assertions.assertEquals("The following " + SolverBenchmarkConfig.class.getSimpleName() + " do not " + "have termination configured: [First Fit and Local Search without Termination]. " + "At least one of the properties " + "quarkus.optaplanner.benchmark.solver.termination.spent-limit, " + "quarkus.optaplanner.benchmark.solver.termination.best-score-limit, " + "quarkus.optaplanner.benchmark.solver.termination.unimproved-spent-limit " + "is required if termination is not configured in a solver benchmark and the " + "inherited solver benchmark config.", exception.getMessage())