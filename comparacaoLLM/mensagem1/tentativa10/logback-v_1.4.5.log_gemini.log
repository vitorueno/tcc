"consoleAppender não pode ser nulo"
"checker.isErrorFree(0) deve retornar true"
"consoleAppender deve ser nulo"
"checker.isErrorFree(0) deve retornar true"
"consoleAppender deve ser nulo"
"listAppender não pode ser nulo"
"checker.isErrorFree(0) deve retornar true"
"listAppender não pode ser nulo"
"O tamanho da lista listAppender.list deve ser 1"
"O tamanho da lista listAppender.list deve ser 1"
"ae não pode ser nulo"
"O tamanho da lista listAppender.strList deve ser 1"
"O primeiro elemento da lista listAppender.strList deve começar com \"testMethod\""
"o não pode ser nulo"
"aeBack.getResponseHeaderMap() deve ser igual a DummyResponse.DUMMY_DEFAULT_HDEADER_MAP"
"aeBack.getResponseHeader(\"x\") deve ser igual a DummyResponse.DUMMY_DEFAULT_HDEADER_MAP.get(\"x\")"
"aeBack.getResponseHeader(\"headerName1\") deve ser igual a DummyResponse.DUMMY_DEFAULT_HDEADER_MAP.get(\"headerName1\")"
"O tamanho de aeBack.getResponseHeaderNameList() deve ser igual ao tamanho de DummyResponse.DUMMY_DEFAULT_HDEADER_MAP"
"aeBack.getContentLength() deve ser igual a DummyResponse.DUMMY_DEFAULT_CONTENT_COUNT"
"aeBack.getStatusCode() deve ser igual a DummyResponse.DUMMY_DEFAULT_STATUS"
"aeBack.getRequestContent() deve ser igual a DummyRequest.DUMMY_CONTENT_STRING"
"aeBack.getResponseContent() deve ser igual a DummyRequest.DUMMY_RESPONSE_CONTENT_STRING"
"aeBack.getAttribute(\"testKey\") deve ser igual a DummyRequest.DUMMY_DEFAULT_ATTR_MAP.get(\"testKey\")"
"event.getAttribute(\"testKey\") deve ser igual a \"ORIGINAL\""
"ae.getAttribute(key) deve ser igual a val"
"ae.getRequestHeader(key) deve ser igual a val"
"ae.getRequestParameter(key)[0] deve ser igual a val"
"ae.getAttribute(key) deve ser igual a val"
"ae.getRequestHeader(key) deve ser igual a val"
"ae.getRequestParameter(key)[0] deve ser igual a val"
"statsByDay.getLastCount() deve ser igual a 0"
"statsByDay.getLastCount() deve ser igual a 0"
"statsByDay.getLastCount() deve ser igual a 1"
"statsByDay.getLastCount() deve ser igual a 2"
"statsByDay.getLastCount() deve ser igual a 2"
"statsByDay.getLastCount() deve ser igual a 4"
"result deve ser igual a \"hello world\""
"result deve ser igual a \"hello world\""
"event.getRemoteHost() deve ser igual a \"127.0.0.1\""
"event.getServerName() deve ser igual a \"localhost\""
"evaluator.evaluate(ae) deve retornar true"
"evaluator.evaluate(ae) deve retornar true"
"result deve ser igual a Long.toString(event.getServerAdapter().getContentLength())"
"result deve ser igual a converter.cachingDateFormatter.format(event.getTimeStamp())"
"result deve ser igual a \"21/Oct/2022:21:30:20 +1100\""
"result deve ser igual a converter.cachingDateFormatter.format(event.getTimeStamp())"
"result deve ser igual a Integer.toString(request.getLocalPort())"
"result deve ser igual a request.getRemoteHost()"
"result deve ser igual a request.getRemoteAddr()"
"result deve ser igual a request.getRemoteUser()"
"result deve ser igual a request.getAttribute(\"testKey\")"
"result deve ser igual a cookie.getValue()"
"result deve ser igual a request.getHeader(\"headerName1\")"
"result deve ser igual a request.getMethod()"
"result deve ser igual a request.getProtocol()"
"result deve ser igual a request.getRequestURI()"
"result deve ser igual a expected"
"result deve ser igual a request.getHeader(\"headerName1\")"
"result deve ser igual a request.getServerName()"
"result deve ser igual a Integer.toString(event.getServerAdapter().getStatusCode())"
"keySet.size() deve ser igual a 3"
"keySet deve ser igual a witnessSet"
"listAppender.list.size() deve ser igual a expectedCount"
"evaluator.evaluate(ae) deve retornar false"
"evaluator.evaluate(ae) deve retornar true"
"evaluator.evaluate(ae) deve retornar true"
"valve.getScheduledExecutorService() não pode ser nulo"
"TeeFilter.extractNameList(\"a\") deve ser igual a Arrays.asList(new String[] { \"a\" })"
"TeeFilter.extractNameList(\"a, b\") deve ser igual a Arrays.asList(new String[] { \"a\", \"b\" })"
"TeeFilter.extractNameList(\"a; b\") deve ser igual a Arrays.asList(new String[] { \"a\", \"b\" })"
"TeeFilter.extractNameList(\"a; b, c\") deve ser igual a Arrays.asList(new String[] { \"a\", \"b\", \"c\" })"
"TeeFilter.computeActivation(\"somehost\", \"\", \"\") deve retornar true"
"TeeFilter.computeActivation(\"somehost\", null, null) deve retornar true"
"TeeFilter.computeActivation(\"a\", \"a\", null) deve retornar true"
"TeeFilter.computeActivation(\"a\", \"a, b\", null) deve retornar true"
"TeeFilter.computeActivation(\"a\", \"b\", null) deve retornar false"
"TeeFilter.computeActivation(\"a\", \"b, c\", null) deve retornar false"
"TeeFilter.computeActivation(\"a\", null, \"a\") deve retornar false"
"TeeFilter.computeActivation(\"a\", null, \"a, b\") deve retornar false"
"TeeFilter.computeActivation(\"a\", null, \"b\") deve retornar true"
"TeeFilter.computeActivation(\"a\", null, \"b, c\") deve retornar true"
"TeeFilter.computeActivation(\"a\", \"a\", \"a\") deve retornar false"
"TeeFilter.computeActivation(\"a\", \"a\", \"b\") deve retornar true"
"TeeFilter.computeActivation(\"a\", \"b\", \"a\") deve retornar false"
"TeeFilter.computeActivation(\"a\", \"b\", \"b\") deve retornar false"
"byteArrayOutputStream.toByteArray() deve ser igual a expectedBytes"
"Teste falhou"
"condition não pode ser nulo"
"condition.evaluate() deve retornar true"
"condition não pode ser nulo"
"checker.isErrorFree(0) deve retornar true"
"checker.isErrorFree(0) deve retornar true"
"System.getProperty(sysKey) deve ser nulo"
"context.getProperty(dynaKey) deve ser nulo"
"context.getProperty(dynaKey) não pode ser nulo"
"context.getProperty(dynaKey) deve ser nulo"
"context.getProperty(dynaKey) deve ser nulo"
"fileAppender não pode ser nulo"
"consoleAppender não pode ser nulo"

