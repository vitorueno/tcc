"A pontuação esperada é '0', mas a pontuação obtida foi '{result.get("score")}'."
"O valor de 'result.get(\"entity.0.fullValue\")' é nulo."
"O valor de 'result.get(\"entity.1.fullValue\")' é nulo."
"solverConfig é nulo."
"O tipo de acesso ao domínio esperado é 'GIZMO', mas o tipo obtido foi '{solverConfig.getDomainAccessType()}'."
"A classe de solução esperada é 'TestdataQuarkusSolution', mas a classe obtida foi '{solverConfig.getSolutionClass()}'."
"A lista de classes de entidade esperada é '[TestdataQuarkusEntity.class]', mas a lista obtida foi '{solverConfig.getEntityClassList()}'."
"A classe do provedor de restrições esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass()}'."
"O limite de segundos gastos esperado é '3', mas o limite obtido foi '{solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue()}'."
"solverFactory é nulo."
"O Solver criado por solverFactory é nulo."
"solverConfig é nulo."
"A classe de solução esperada é 'TestdataQuarkusSolution', mas a classe obtida foi '{solverConfig.getSolutionClass()}'."
"O tipo de acesso ao domínio esperado é 'GIZMO', mas o tipo obtido foi '{solverConfig.getDomainAccessType()}'."
"A lista de classes de entidade esperada é '[TestdataQuarkusEntity.class]', mas a lista obtida foi '{solverConfig.getEntityClassList()}'."
"A classe do provedor de restrições esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass()}'."
"O limite de segundos gastos esperado é '2', mas o limite obtido foi '{solverConfig.getTerminationConfig().getSecondsSpentLimit().longValue()}'."
"solverFactory é nulo."
"O Solver criado por solverFactory é nulo."
"O modo de ambiente esperado é 'FULL_ASSERT', mas o modo obtido foi '{solverConfig.getEnvironmentMode()}'."
"solverConfig.getDaemon() retornou 'false'."
"A contagem esperada de threads de movimento é '2', mas a contagem obtida foi '{solverConfig.getMoveThreadCount()}'."
"O tipo de acesso ao domínio esperado é 'REFLECTION', mas o tipo obtido foi '{solverConfig.getDomainAccessType()}'."
"O tipo de implementação de fluxo de restrições esperado é nulo, mas o tipo obtido foi '{solverConfig.getScoreDirectorFactoryConfig().getConstraintStreamImplType()}'."
"solverFactory é nulo."
"O limite de tempo gasto esperado é '4 horas', mas o limite obtido foi '{solverConfig.getTerminationConfig().getSpentLimit()}'."
"O limite de tempo gasto sem melhoria esperado é '5 horas', mas o limite obtido foi '{solverConfig.getTerminationConfig().getUnimprovedSpentLimit()}'."
"O limite de pontuação melhor esperado é '0', mas o limite obtido foi '{solverConfig.getTerminationConfig().getBestScoreLimit()}'."
"solverConfig é nulo."
"A classe de solução esperada é 'TestdataQuarkusSolution', mas a classe obtida foi '{solverConfig.getSolutionClass()}'."
"O tipo de acesso ao domínio esperado é 'GIZMO', mas o tipo obtido foi '{solverConfig.getDomainAccessType()}'."
"A lista de classes de entidade esperada é '[TestdataQuarkusEntity.class]', mas a lista obtida foi '{solverConfig.getEntityClassList()}'."
"A classe do provedor de restrições esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass()}'."
"O limite de segundos gastos esperado é nulo, mas o limite obtido foi '{solverConfig.getTerminationConfig().getSecondsSpentLimit()}'."
"solverFactory é nulo."
"O Solver criado por solverFactory é nulo."
"solution é nulo."
"O valor esperado de resp é 'secondsSpentLimit=2', mas o valor obtido foi '{resp}'."
"O valor esperado de resp é 'secondsSpentLimit=9', mas o valor obtido foi '{resp}'."
"solution é nulo."
"O tamanho da lista de entidades esperada é '{entityList.size()}', mas o tamanho obtido foi '{solution.getEntityList().size()}'."
"A construção falhou."
"solverFactory é nulo."
"scoreManager é nulo."
"As fábricas ScoreDirectorFactory de solverFactory e solutionManager são diferentes."
"solverManager é nulo."
"solverFactory e solverManager são diferentes."
"solution é nulo."
"O valor inteiro esperado é '1', mas o valor obtido foi '{solution.getPlanningEntityProperty().testGetIntVariable()}'."
"O valor string esperado é 'A', mas o valor obtido foi '{solution.getPlanningEntityProperty().testGetStringVariable()}'."
"solverFactory é nulo."
"As fábricas ScoreDirectorFactory de solverFactory e solutionManager são diferentes."
"solverManager é nulo."
"solverFactory e solverManager são diferentes."
"solutionManager é nulo."
"solution é nulo."
"A pontuação da solução é negativa."
"A pontuação esperada é '0', mas a pontuação obtida foi '{solution.score.score()}'."
"O valor esperado de 'solverConfigProperties.get(\"termination.bestScoreLimit\")' é '7', mas o valor obtido foi '{solverConfigProperties.get(\"termination.bestScoreLimit\")}'."
"O valor esperado de 'solverConfigProperties.get(\"moveThreadCount\")' é '3', mas o valor obtido foi '{solverConfigProperties.get(\"moveThreadCount\")}'."
"O valor esperado de 'solverManagerProperties.get(\"parallelSolverCount\")' é '10', mas o valor obtido foi '{solverManagerProperties.get(\"parallelSolverCount\")}'."
"A classe do provedor de restrições esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{solverConfig.getScoreDirectorFactoryConfig().getConstraintProviderClass()}'."
"O Solver criado por solverFactory é nulo."
"A lista de DRLs esperada é '[CONSTRAINTS_DRL]', mas a lista obtida foi '{solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList()}'."
"O Solver criado por solverFactory é nulo."
"A lista de DRLs esperada é '[constraints.drl]', mas a lista obtida foi '{solverConfig.getScoreDirectorFactoryConfig().getScoreDrlList()}'."
"O Solver criado por solverFactory é nulo."
"solverFactory é nulo."
"As fábricas ScoreDirectorFactory de solverFactory e solutionManager são diferentes."
"solverManager é nulo."
"solverFactory e solverManager são diferentes."
"scoreManager é nulo."
"solution é nulo."
"A pontuação da solução é negativa."
"O valor esperado de 'solution.getExtraData()' é 'Extra Data', mas o valor obtido foi '{solution.getExtraData()}'."
"O tipo de implementação de fluxo de restrições esperado é 'BAVET', mas o tipo obtido foi '{solverConfig.getScoreDirectorFactoryConfig().getConstraintStreamImplType()}'."
"solverFactory é nulo."
"A construção falhou por uma causa deliberada."
"O tipo de implementação de fluxo de restrições esperado é 'DROOLS', mas o tipo obtido foi '{((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).getConstraintStreamImplType()}'."
"O valor esperado de '((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).isDroolsAlphaNetworkCompilationEnabled()' é '{ConfigUtils.isNativeImage()}', mas o valor obtido foi '{((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).isDroolsAlphaNetworkCompilationEnabled()}'."
"O tipo de implementação de fluxo de restrições esperado é 'BAVET', mas o tipo obtido foi '{((DefaultConstraintVerifier<?, ?, ?>) constraintVerifier).getConstraintStreamImplType()}'."
"benchmarkResultDirectory é nulo."
"O caminho '{benchmarkResultDirectoryPath}' não é um diretório."
"O caminho '{benchmarkResultPath}' não é um arquivo regular."
"O valor booleano esperado de 'xmlPath.getBoolean(\"plannerBenchmarkResult.solverBenchmarkResult.singleBenchmarkResult.subSingleBenchmarkResult.succeeded\")' é 'true', mas o valor obtido foi 'false'."
"A classe de solução esperada é 'TestdataQuarkusSolution', mas a classe obtida foi '{solverConfig.getSolutionClass()}'."
"O tamanho da lista de classes de entidade esperada é '2', mas o tamanho obtido foi '{solverConfig.getEntityClassList().size()}'."
"A lista de classes de entidade não contém 'TestdataQuarkusEntity'."
"A lista de classes de entidade não contém 'TestdataQuarkusOtherEntity'."
"O limite de milissegundos gastos esperado é '5', mas o limite obtido foi '{plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getSolverConfig().getTerminationConfig().getMillisecondsSpentLimit()}'."
"A lista de classes de entidade esperada é '[TestdataQuarkusEntity.class]', mas a lista obtida foi '{plannerBenchmarkConfig.getInheritedSolverBenchmarkConfig().getSolverConfig().getEntityClassList()}'."
"A classe de solução esperada é 'TestdataQuarkusSolution', mas a classe obtida foi '{childBenchmarkConfig.getSolverConfig().getSolutionClass()}'."
"A lista de classes de entidade esperada é nula, mas a lista obtida foi '{childBenchmarkConfig.getSolverConfig().getEntityClassList()}'."
"A classe do provedor de restrições esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{childBenchmarkConfig.getSolverConfig().getScoreDirectorFactoryConfig().getConstraintProviderClass()}'."
"A classe de solução esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{childBenchmarkConfig.getSolverConfig().getSolutionClass()}'."
"A lista de classes de entidade esperada é nula, mas a lista obtida foi '{childBenchmarkConfig.getSolverConfig().getEntityClassList()}'."
"A classe do provedor de restrições esperada é 'TestdataQuarkusConstraintProvider', mas a classe obtida foi '{childBenchmarkConfig.getSolverConfig().getScoreDirectorFactoryConfig().getConstraintProviderClass()}'."
"O tamanho da lista de configurações de fase esperada para a primeira configuração de benchmark do Solver é '2', mas o tamanho obtido foi '{plannerBenchmarkConfig.getSolverBenchmarkConfigList().get(0).getSolverConfig().getPhaseConfigList().size()}'."
"O tamanho da lista de configurações de fase esperada para a segunda configuração de benchmark do Solver é '3', mas o tamanho obtido foi '{plannerBenchmarkConfig.getSolverBenchmarkConfigList().get(1).getSolverConfig().getPhaseConfigList().size()}'."
"As seguintes configurações de SolverBenchmark não possuem terminação configurada: [First Fit and Local Search without Termination]. Pelo menos uma das propriedades quarkus.optaplanner.benchmark.solver.termination.spent-limit, quarkus.optaplanner.benchmark.solver.termination.best-score-limit, quarkus.optaplanner.benchmark.solver.termination.unimproved-spent-limit é necessária se a terminação não estiver configurada em um benchmark do Solver e a configuração de benchmark do Solver herdada."

