"Arrays devem ser idênticos: [buildKey(\"123\")] != [buildKey(new String(\"123\"))]"
"Arrays devem ser idênticos: [buildKey(new byte[] { 1, 2, 3 })] != [buildKey(new byte[] { 1, 2, 3 })]"
"Arrays devem ser idênticos: [buildKey(123)] != [buildKey(123)]"
"Arrays devem ser idênticos: [buildKey(123L)] != [buildKey(123L)]"
"Arrays devem ser idênticos: [buildKey(true)] != [buildKey(true)]"
"Arrays devem ser idênticos: [buildKey(new Date(123))] != [buildKey(new Date(123))]"
"Arrays devem ser idênticos: [buildKey(new Date(123))] != [buildKey(new Date(123))]"
"Arrays devem ser idênticos: [buildKey(c1)] != [buildKey(c2)]"
"Arrays devem ser idênticos: [byteKey] != [c.buildKey(byteKey)]"
"Arrays devem ser idênticos: [strKey.getBytes()] != [c.buildKey(strKey)]"
"Arrays devem ser idênticos: [byteKey] != [c.buildKey(byteKey)]"
"Arrays devem ser idênticos: [strKey.getBytes()] != [c.buildKey(strKey)]"
"Arrays devem ser idênticos: [convertedKey.getBytes()] != [c.buildKey(byteKey)]"
"Arrays devem ser idênticos: [convertedKey.getBytes()] != [c.buildKey(strKey)]"
"Arrays devem ser idênticos: [convertedKey.getBytes()] != [c.buildKey(\"long long long str\")]"
"Arrays devem ser idênticos: [convertedKey.getBytes()] != [c.buildKey(1)]"
"Arrays devem ser idênticos: [strKey.getBytes()] != [c.buildKey(strKey.getBytes())]"
"Arrays devem ser idênticos: [strKey.getBytes()] != [c.buildKey(strKey.getBytes())]"
"Arrays devem ser idênticos: [strKey.getBytes()] != [c.buildKey(strKey.getBytes())]"
"Valores devem ser iguais: target.count() != target.count()"
"Valores devem ser diferentes: service.notCachedCount() == service.notCachedCount()"
"Valores devem ser iguais: service.countWithAnnoOnClass() != service.countWithAnnoOnClass()"
"Valores devem ser iguais: service.countWithAnnoOnInterface() != service.countWithAnnoOnInterface()"
"Valores devem ser diferentes: service.enableCacheWithNoCacheCount(bean) == service.enableCacheWithNoCacheCount(bean)"
"Valores devem ser iguais: service.enableCacheWithAnnoOnClass(bean) != service.enableCacheWithAnnoOnClass(bean)"
"Valores devem ser iguais: service.enableCacheWithAnnoOnInterface(bean) != service.enableCacheWithAnnoOnInterface(bean)"
"Valores devem ser iguais: v1 != service.count(\"K1\")"
"Valores devem ser diferentes: v1 == v2"
"Valores devem ser iguais: v2 != service.count(\"K1\")"
"Valores devem ser iguais: 200 != service.count(\"K1\")"
"Valores devem ser iguais: 200 != service.count(\"K1\")"
"Valores devem ser iguais: service.count(\"K1\") != service.count(\"K1\")"
"Valores devem ser diferentes: service.count(\"K1\") == service.count(\"K2\")"
"Valores devem ser diferentes: bean.noCacheCount() == bean.noCacheCount()"
"Valores devem ser iguais: bean.staticCount() != bean.staticCount()"
"Valores devem ser iguais: bean.count() != bean.count()"
"Valores devem ser iguais: bean.countWithLocalCache() != bean.countWithLocalCache()"
"Valores devem ser iguais: bean.countWithBoth() != bean.countWithBoth()"
"Valores devem ser diferentes: bean.countWithDisabledCache() == bean.countWithDisabledCache()"
"Valores devem ser iguais: x != bean.countWithExpire50()"
"Valores devem ser diferentes: x == bean.countWithExpire50()"
"Valores devem ser diferentes: x1 == x2"
"Valores devem ser iguais: x1 != x3"
"Valores devem ser diferentes: x1 == x2"
"Valores devem ser iguais: x1 != x3"
"Valores devem ser diferentes: x1 == x2"
"Valores devem ser iguais: x1 != x3"
"Valores devem ser diferentes: x1 == x2"
"Valores devem ser iguais: x1 != x3"
"Valores devem ser iguais: bean.countEnabledWithConfigBean() != bean.countEnabledWithConfigBean()"
"Valores devem ser diferentes: bean.countDisabledWithConfigBean() == bean.countDisabledWithConfigBean()"
"Valores devem ser diferentes: bean.countWithWrongCondition() == bean.countWithWrongCondition()"
"Valores devem ser iguais: bean.count(true) != bean.count(true)"
"Valores devem ser diferentes: bean.count(false) == bean.count(false)"
"Valores devem ser diferentes: bean.count() == bean.count1()"
"Valores devem ser iguais: bean.namedCount1_WithNameN1() != bean.namedCount1_WithNameN1()"
"Valores devem ser iguais: bean.namedCount1_WithNameN1() != bean.namedCount2_WithNameN1()"
"Valores devem ser diferentes: bean.namedCount1_WithNameN1() == bean.namedCount_WithNameN2()"
"Valores devem ser iguais: bean.namedCount_WithNameN2() != bean.namedCount_WithNameN2()"
"Valores devem ser iguais: v1 != bean.count(\"K1\")"
"Valores devem ser diferentes: v1 == v2"
"Valores devem ser iguais: v2 != bean.count(\"K1\")"
"Valores devem ser iguais: 200 != bean.count(\"K1\")"
"Valores devem ser iguais: 200 != bean.count(\"K1\")"
"Valores devem ser iguais: bean.count(\"K1\") != bean.count(\"K1\")"
"Valores devem ser diferentes: bean.count(\"K1\") == bean.count(\"K2\")"
"Objetos devem ser idênticos: c != c2"
"Valores devem ser iguais: CacheResultCode.NOT_EXISTS != cache.GET(\"BASE_K1\").getResultCode()"
"Valores devem ser iguais: CacheResultCode.SUCCESS != cache.PUT(\"BASE_K1\", \"V1\", 10, TimeUnit.SECONDS).getResultCode()"
"Valores devem ser iguais: CacheResultCode.SUCCESS != cache.GET(\"BASE_K1\").getResultCode()"
"Valores devem ser iguais: \"V1\" != cache.GET(\"BASE_K1\").getValue()"
"Valores devem ser iguais: CacheResultCode.SUCCESS != cache.PUT(\"BASE_K1\", \"V2\", 10, TimeUnit.SECONDS).getResultCode()"
"Valores devem ser iguais: \"V2\" != cache.GET(\"BASE_K1\").getValue()"
"Valores devem ser iguais: CacheResultCode.SUCCESS != cache.REMOVE(\"BASE_K1\").getResultCode()"
"Valores devem ser iguais: CacheResultCode.NOT_EXISTS != cache.GET(\"BASE_K1\").getResultCode()"
"Condição deve ser verdadeira: !r.isSuccess()"
"Valor deve ser nulo: r.getValue() != null"
"Valor deve ser nulo: cache.get(null) != null"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.GET(null).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.GET(null).getMessage()"
"Valor deve ser nulo: cache.getAll(null) != null"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.GET_ALL(null).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.GET_ALL(null).getMessage()"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.PUT(null, \"V1\").getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.PUT(null, \"V1\").getMessage()"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.PUT(null, \"V1\", 1, TimeUnit.SECONDS).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.PUT(null, \"V1\", 1, TimeUnit.SECONDS).getMessage()"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.PUT_ALL(null).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.PUT_ALL(null).getMessage()"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.PUT_ALL(null, 1, TimeUnit.SECONDS).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.PUT_ALL(null, 1, TimeUnit.SECONDS).getMessage()"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.REMOVE(null).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.REMOVE(null).getMessage()"
"Valores devem ser iguais: CacheResultCode.FAIL != cache.REMOVE_ALL(null).getResultCode()"
"Valores devem ser iguais: CacheResult.MSG_ILLEGAL_ARGUMENT != cache.REMOVE_ALL(null).getMessage()"
"Valor deve ser nulo: cache.tryLock(null, 1, TimeUnit.SECONDS) != null"
"Condição deve ser verdadeira: !r.isSuccess()"
"Valores devem ser iguais: 3 != r.getValues().size()"
"Condição deve ser verdadeira: !r.getValues().get(k1).isSuccess()"
"Valores devem ser iguais: \"V1\" != r.getValues().get(k1).getValue()"

