
Projeto: /home/vitor-otto/opensource/OpenPDF-1.3.30

Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/html/HtmlParserTest.java linha: 112 Método: assertNotNull(doc1, () -> html + " was not parsed successfully")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/html/HTMLTableTest.java linha: 43 Método: assertNotNull(doc, () -> html + " was not parsed successfully")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/html/SAXmyHtmlHandlerTest.java linha: 45 Método: assertNotNull(doc1, () -> is + " was not parsed successfully")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/xml/simpleparser/SimpleXMLParserTest.java linha: 78 Método: Assertions.assertEquals(euro, str, "text content in " + charset)
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/xml/simpleparser/SimpleXMLParserTest.java linha: 84 Método: Assertions.assertTrue(called, "was not called")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/PdfTestBaseTest.java linha: 28 Método: Assertions.assertNotNull(bytes, "There should be some PDF-bytes there.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/PdfTestBaseTest.java linha: 30 Método: Assertions.assertEquals(header, "%PDF-", "This is no PDF.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/PdfSignatureRangeTest.java linha: 37 Método: assertTrue(r.getAcroFields().signatureCoversWholeDocument("Signature1"), "file size: " + pdf.length)
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java linha: 88 Método: assertTrue(p.test(font), "Style " + style)
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java linha: 100 Método: assertEquals(style, font.getCombinedStyle(), "Total style should be the given style: " + style)
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java linha: 101 Método: assertEquals(font.getBaseFontStyle(), style ^ font.getCalculatedStyle(), "Styles should not repeat in" + " Font and BaseFont.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/fonts/FontTest.java linha: 98 Método: assertEquals(style, font.getStyle(), "Style: " + style)
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 59 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 60 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 61 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 62 Método: Assertions.assertEquals("TEST", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 83 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 84 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 85 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 86 Método: Assertions.assertEquals("Demo   Name   Signature   Date  Elizabeth Schultz (Apr 24, 2018) Elizabeth Schultz Apr 24, 2018 Elizabeth Schultz Sue Northrop (Apr 24, 2018) Apr 24, 2018 Sue Northrop", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 108 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 109 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 110 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 111 Método: Assertions.assertEquals("Potato", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 132 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 133 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 134 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 135 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 156 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 157 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 158 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 159 Método: Assertions.assertEquals("Hello, world!\n Goodbye, world!", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 180 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 181 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 182 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 183 Método: Assertions.assertEquals("Potato", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 206 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 207 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 208 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 209 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 230 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 231 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 232 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 233 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 254 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 255 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 256 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 257 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 281 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 282 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 283 Método: Assertions.assertEquals("TEST", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 305 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 306 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 307 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 308 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 329 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 330 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 331 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 332 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 353 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 354 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 355 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 356 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 377 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 378 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 379 Método: Assertions.assertEquals(30, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 380 Método: Assertions.assertEquals("Potato 0", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 401 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 402 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 403 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 404 Método: Assertions.assertEquals("", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 425 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 426 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 427 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 428 Método: Assertions.assertEquals("Issue 6010", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 449 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 450 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 451 Método: Assertions.assertEquals(10, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 452 Método: Assertions.assertEquals("Sample PDF Document\n" + " Robert Maron\n" + " Grzegorz Grudzi´ nski\n" + " February 20, 1999", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 476 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 477 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 478 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 479 Método: Assertions.assertEquals("Mu PD F  a lightweight PDF and XPS viewer", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 500 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 501 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 502 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 503 Método: Assertions.assertEquals("Mu PD F  a lightweight PDF and XPS viewer", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 527 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 528 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 529 Método: Assertions.assertEquals("TEST", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 551 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 552 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 553 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 554 Método: Assertions.assertEquals("", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 575 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 576 Método: Assertions.assertFalse(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report limited permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 577 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 602 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 603 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 604 Método: Assertions.assertEquals("TEST", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 628 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 629 Método: Assertions.assertTrue(isOwnerPasswordUsed(pdfReader), "PdfReader fails to report full permissions.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 630 Método: Assertions.assertEquals(2, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/DecryptAES256R6Test.java linha: 631 Método: Assertions.assertTrue(new PdfTextExtractor(pdfReader).getTextFromPage(1).startsWith("THIS IS A TEST"), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 45 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 46 Método: Assertions.assertTrue(pdfReader.isOpenedWithFullPermissions(), "PdfReader fails to recognize password as owner password.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 47 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 48 Método: Assertions.assertEquals("Some test content", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 53 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 54 Método: Assertions.assertFalse(pdfReader.isOpenedWithFullPermissions(), "PdfReader fails to recognize password as user password.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 55 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 56 Método: Assertions.assertEquals("Some test content", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 83 Método: Assertions.assertTrue(pdfReader.isEncrypted(), "PdfReader fails to report test file to be encrypted.")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 84 Método: Assertions.assertEquals(1, pdfReader.getNumberOfPages(), "PdfReader fails to report the correct number of pages")
Assert com mensagem: /home/vitor-otto/opensource/OpenPDF-1.3.30/openpdf/src/test/java/com/lowagie/text/pdf/EncryptAES256R6Test.java linha: 85 Método: Assertions.assertEquals("TEST", new PdfTextExtractor(pdfReader).getTextFromPage(1), "Wrong text extracted from page 1")
Total asserts: 363
Asserts sem descrição: 248
Asserts com descrição: 115
Assertion Roulette: 183
