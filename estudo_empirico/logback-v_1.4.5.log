
Projeto: /home/vitor-otto/opensource/logback-v_1.4.5

Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 33 Método: assertEquals(0, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 38 Método: assertEquals(0.0, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 45 Método: assertEquals(1.0, statsByDay.getLastCount(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 46 Método: assertEquals(1.0, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 52 Método: assertEquals(1.0, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 57 Método: assertEquals(1.5, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 65 Método: assertEquals(1.5, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/filter/StatsByDayTest.java linha: 72 Método: assertEquals(7.0 / 3, statsByDay.getAverage(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/jetty/JettyBasicTest.java linha: 81 Método: assertNotNull(event, "No events received")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-access/src/test/java/ch/qos/logback/access/jetty/JettyBasicTest.java linha: 113 Método: assertNotNull(event, "No events received")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic-blackbox/src/test/java/ch/qos/logback/classic/blackbox/net/SMTPAppender_GreenTest.java linha: 224 Método: assertTrue(body.contains("DEBUG " + this.getClass().getName() + " - LOGBACK-734"), "actual [" + body + "]")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic-blackbox/src/test/java/ch/qos/logback/classic/blackbox/net/SMTPAppender_GreenTest.java linha: 429 Método: assertTrue(mma.length == 1, "body should not be empty")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic-blackbox/src/test/java/ch/qos/logback/classic/blackbox/net/SMTPAppender_GreenTest.java linha: 468 Método: assertTrue(mma.length == 1, "body should not be empty")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/OutputStreamAppenderTest.java linha: 112 Método: Assertions.assertTrue(result.startsWith(expectedHeader), result)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/OutputStreamAppenderTest.java linha: 115 Método: Assertions.assertTrue(result.endsWith(expectedFooter), result)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/joran/TrivialConfiguratorTest.java linha: 86 Método: Assertions.assertTrue(tsl.list.size() >= 1, tsl.list.size() + " should be greater than or equal to 1")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/joran/util/PropertySetterTest.java linha: 92 Método: assertEquals(33.1d, (double) house.getTemperature(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/PrudentFileAppenderInterruptTest.java linha: 75 Método: Assertions.assertEquals(2, totalLines, "Incorrect number of logged lines")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 56 Método: Assertions.assertTrue(size == 2, "Incorrect number of appenders")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 73 Método: Assertions.assertTrue(app == ta || app == tab, "Bad Appender")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 75 Método: Assertions.assertTrue(size == 2, "Incorrect number of appenders")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 91 Método: Assertions.assertNotNull(a, "Could not find appender")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 92 Método: Assertions.assertTrue(a == testOther, "Wrong appender")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 95 Método: Assertions.assertNotNull(a, "Could not find appender")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 96 Método: Assertions.assertTrue(a == test, "Wrong appender")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 98 Método: Assertions.assertNull(a, "Appender was returned")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 110 Método: Assertions.assertTrue(aai.isAttached(ta), "Appender is not attached")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 111 Método: Assertions.assertTrue(aai.isAttached(tab), "Appender is not attached")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 123 Método: Assertions.assertTrue(tab.isStarted(), "Appender was not started")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 125 Método: Assertions.assertNull(aai.getAppender("test"), "Appender was not removed")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 126 Método: Assertions.assertFalse(tab.isStarted(), "Appender was not stopped")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 138 Método: Assertions.assertTrue(aai.detachAppender(tab), "Appender not detached")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 139 Método: Assertions.assertNull(aai.getAppender("test"), "Appender was not removed")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/spi/AppenderAttachableImplTest.java linha: 140 Método: Assertions.assertFalse(aai.detachAppender(tab), "Appender detach error")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 30 Método: Assertions.assertTrue(it.hasNext(), "No status was added")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 31 Método: Assertions.assertTrue(status.hasChildren(), "hasChilden method reported wrong result")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 51 Método: Assertions.assertTrue(result, "Remove failed")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 52 Método: Assertions.assertFalse(it.hasNext(), "No status was removed")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 53 Método: Assertions.assertFalse(status.hasChildren(), "hasChilden method reported wrong result")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 60 Método: Assertions.assertFalse(result, "Remove result was not false")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 70 Método: Assertions.assertEquals(status.getEffectiveLevel(), Status.ERROR, "effective level misevaluated")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 78 Método: Assertions.assertEquals(status.getEffectiveLevel(), Status.WARN, "effective level misevaluated")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/status/StatusBaseTest.java linha: 88 Método: Assertions.assertEquals(status.getEffectiveLevel(), Status.ERROR, "effective level misevaluated")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/FileAppenderResilienceTest.java linha: 104 Método: Assertions.assertTrue(recoveryCounter > 0, "at least one recovery should have occured")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/FileAppenderResilienceTest.java linha: 105 Método: Assertions.assertTrue(failureCounter > 0, "at least one failure should have occured")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/FileAppenderResilienceTest.java linha: 113 Método: Assertions.assertTrue(failureCounter >= recoveryCounter, errmsg0)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/FileAppenderResilienceTest.java linha: 116 Método: Assertions.assertTrue(failureCounter - recoveryCounter <= 1, errmsg1)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/ContextBaseTest.java linha: 140 Método: Assertions.assertTrue(executingThreads.get(0).isDaemon(), "executing thread should be a daemon thread.")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/appender/FileAppenderTest.java linha: 67 Método: Assertions.assertTrue(file.delete(), "failed to delete " + file.getAbsolutePath())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/appender/FileAppenderTest.java linha: 91 Método: Assertions.assertTrue(file.delete(), "failed to delete " + file.getAbsolutePath())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/appender/FileAppenderTest.java linha: 93 Método: Assertions.assertTrue(parent.delete(), "failed to delete " + parent.getAbsolutePath())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/appender/FileAppenderTest.java linha: 117 Método: Assertions.assertTrue(statusList.size() >= 2, "Expecting status list size to be 2 or larger, but was " + statusList.size())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/appender/FileAppenderTest.java linha: 121 Método: Assertions.assertTrue(msg1.startsWith("Setting \"Append\" property"), "Got message [" + msg1 + "]")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/appender/FileAppenderTest.java linha: 126 Método: Assertions.assertTrue(file.delete(), "failed to delete " + file.getAbsolutePath())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/recovery/RecoveryCoordinatorTest.java linha: 70 Método: assertFalse(rc.isTooSoon(), "recovery should NOT have been needed at " + offset)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/recovery/RecoveryCoordinatorTest.java linha: 68 Método: assertTrue(rc.isTooSoon(), "recovery should've been needed at " + offset)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/rolling/TimeBasedRollingWithArchiveRemoval_Test.java linha: 512 Método: assertTrue(expectedDirCountMin <= dirList.size() && dirList.size() <= expectedDirCountMax, msg)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/rolling/TimeBasedRollingWithArchiveRemoval_Test.java linha: 528 Método: assertTrue(fileListSize <= expectedCount, "file list size " + fileListSize + ", expectedCount=" + expectedCount)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/rolling/RollingFileAppenderTest.java linha: 204 Método: Assertions.assertTrue(containsMatch, "Missing error: " + msg)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/rolling/testUtil/ScaffoldingForRollingTests.java linha: 73 Método: assertTrue(new File(filename).exists(), "File " + filename + " does not exist")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/rolling/testUtil/ScaffoldingForRollingTests.java linha: 119 Método: assertTrue(new File(filename).exists(), "File " + filename + " does not exist")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/rolling/helper/RollingCalendarTest.java linha: 128 Método: Assertions.assertEquals(expected, result.getTime(), "p=" + p)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/AsyncAppenderBaseTest.java linha: 306 Método: Assertions.assertTrue(atLeast <= la.list.size(), atLeast + " <= " + la.list.size())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/util/CharSequenceToRegexMapperTest.java linha: 78 Método: Assertions.assertTrue(s.length() > 0, category + " contains empty strings")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-core/src/test/java/ch/qos/logback/core/util/DatePatternToRegexTest.java linha: 142 Método: assertTrue(expected.matches(regex), "[" + expected + "] does not match regex [" + regex + "]")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/joran/JoranConfiguratorTest.java linha: 340 Método: assertEquals(expected, r, "expected \"" + expected + "\" but got " + r)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/turbo/ReconfigureOnChangeTest.java linha: 306 Método: assertTrue(expected <= effectiveResets && (expected + 2) >= effectiveResets, failMsg)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/PatternLayoutTest.java linha: 96 Método: assertTrue(val.matches(regex), "val=" + val)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/spi/PackagingDataCalculatorTest.java linha: 95 Método: assertTrue(d0 * slackFactor > d1, "computing class packaging data (" + d1 + ") should have been less than " + slackFactor + " times the time it takes to process an exception " + (d0 * slackFactor))
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/spi/LoggingEventSerializationPerfTest.java linha: 105 Método: assertTrue(averageSizeLimit > averageSize, "average size " + averageSize + " should be less than " + averageSizeLimit)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/spi/LoggingEventSerializationPerfTest.java linha: 132 Método: assertTrue(averageSizeLimit > averageSize, "averageSize " + averageSize + " should be less than " + averageSizeLimit)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/layout/TTLLLayoutTest.java linha: 34 Método: assertTrue(resultSuffix.matches("\\[.*\\] INFO ch.qos.logback.classic.layout.TTLLLayoutTest - null"), "[" + resultSuffix + "] did not match regexs")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerTest.java linha: 83 Método: assertNotNull(logger, "Returned logger is null")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerTest.java linha: 84 Método: assertEquals(logger.getName(), Logger.ROOT_LOGGER_NAME, "Return logger isn't named root")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerTest.java linha: 85 Método: assertTrue(logger == lc.root, "logger instances should be indentical")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerContextTest.java linha: 169 Método: assertTrue(sm.getCount() == 1, "StatusManager has recieved too many messages")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/corpusTest/RandomUtilTest.java linha: 47 Método: Assertions.assertEquals(EXPECTED_AVERAGE, avg, 0.3)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerPerfTest.java linha: 218 Método: assertTrue(actual < max, "Exceeded maximum expected time.")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/XThrowableHandlingConverter.java linha: 10 Método: assertNull(this.getNext(), "has next")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/ConverterTest.java linha: 322 Método: assertTrue(buf.length() >= 10, "buf is too short")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/ConverterTest.java linha: 330 Método: assertTrue(Pattern.compile(expectedRegex).matcher(actual).find(), "actual: " + actual)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/MDCConverterTest.java linha: 70 Método: assertTrue(isConform, result + " is not conform")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/ThrowableProxyConverterTest.java linha: 160 Método: assertNull(reader.readLine(), "Unexpected line in stack trace")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/ThrowableProxyConverterTest.java linha: 178 Método: assertNull(reader.readLine(), "Unexpected line in stack trace")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/pattern/XCompositeConverter.java linha: 11 Método: assertNull(this.getNext(), "converter instance has next element")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerSerializationTest.java linha: 116 Método: assertTrue(sizeA < 100, "serialized logger should be less than 100 bytes")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/LoggerSerializationTest.java linha: 118 Método: assertTrue((sizeA - sizeB) < 10, "serialized loggers should be nearly the same size a:" + sizeA + ", sizeB:" + sizeB)
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/net/SyslogAppenderTest.java linha: 176 Método: assertTrue(s.matches(regex), "The string [" + s + "] did not match regex [" + regex + "]")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/rolling/TimeBasedRollingWithConfigFileTest.java linha: 149 Método: assertTrue(eCount >= 4 && eCount > expectedFilenameList.size() / 2, "exitenceCount=" + eCount + ", expectedFilenameList.size=" + expectedFilenameList.size())
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/util/ContextInitializerTest.java linha: 144 Método: assertTrue(statusListenerList.size() == 1, statusListenerList.size() + " should be 1")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/util/ContextInitializerTest.java linha: 147 Método: assertTrue(tsl.list.size() > 0, "expecting at least one event in list")
Assert com mensagem: /home/vitor-otto/opensource/logback-v_1.4.5/logback-classic/src/test/java/ch/qos/logback/classic/util/ContextInitializerTest.java linha: 157 Método: assertTrue(sll.size() == 1, sll.size() + " should be 1")
Total asserts: 1835
Asserts sem descrição: 1743
Asserts com descrição: 92
Assertion Roulette: 1295
