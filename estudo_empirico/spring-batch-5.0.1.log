
Projeto: /home/vitor-otto/opensource/spring-batch-5.0.1

Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/TradeJobFunctionalTests.java linha: 119 Método: assertEquals(customer.getCredit(), rs.getDouble(2), .01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/TaskletJobFunctionalTests.java linha: 58 Método: assertEquals(3.14, doubleValue, 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/CustomerFilterJobFunctionalTests.java linha: 98 Método: assertEquals(customer.getCredit(), rs.getDouble(2), .01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/iosample/TwoJobInstancesPagingFunctionalTests.java linha: 69 Método: assertNotSame(first, second, "The number of records above the threshold did not change")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/domain/trade/CustomerUpdateProcessorTests.java linha: 63 Método: assertNull(processor.process(customerUpdate), "Processor should return null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/domain/trade/CustomerUpdateProcessorTests.java linha: 70 Método: assertNull(processor.process(customerUpdate), "Processor should return null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/domain/trade/CustomerUpdateProcessorTests.java linha: 85 Método: assertNull(processor.process(customerUpdate), "Processor should return null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/JobOperatorFunctionalTests.java linha: 95 Método: assertTrue(runningExecutions.contains(executionId), "Wrong executions: " + runningExecutions + " expected: " + executionId)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/JobOperatorFunctionalTests.java linha: 97 Método: assertTrue(operator.getSummary(executionId).contains(BatchStatus.STARTED.toString()), "Wrong summary: " + operator.getSummary(executionId))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/JobOperatorFunctionalTests.java linha: 110 Método: assertFalse(runningExecutions.contains(executionId), "Wrong executions: " + runningExecutions + " expected: " + executionId)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/JobOperatorFunctionalTests.java linha: 112 Método: assertTrue(operator.getSummary(executionId).contains(BatchStatus.STOPPED.toString()), "Wrong summary: " + operator.getSummary(executionId))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/JobOperatorFunctionalTests.java linha: 151 Método: assertTrue(running, String.format("Jobs not started: [%s] and [%s]", operator.getSummary(exec1), operator.getSummary(exec1)))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/launch/RemoteLauncherTests.java linha: 73 Método: assertTrue(message.contains("NoSuchJobException"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/launch/RemoteLauncherTests.java linha: 102 Método: assertNotSame(executionId, resumedId, "Picked up the same execution after pause and resume")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/launch/RemoteLauncherTests.java linha: 110 Método: assertNotSame(executionId, resumeId2, "Picked up the same execution after pause and resume")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/jmx/JobExecutionNotificationPublisherTests.java linha: 53 Método: assertTrue(message.contains("foo"), "Message does not contain 'foo': ")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/PartitionJdbcJobFunctionalTests.java linha: 67 Método: assertTrue(applicationContext.containsBeanDefinition("outputTestReader"), "Define a prototype bean called 'outputTestReader' to check the output")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/PartitionJdbcJobFunctionalTests.java linha: 86 Método: assertTrue(itemCount > 0, "Input from reader has no entries.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/HeaderFooterSampleFunctionalTests.java linha: 61 Método: assertTrue("input line should correspond to output line", outputReader.readLine().contains(line))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/HeaderFooterSampleFunctionalTests.java linha: 66 Método: assertTrue("OutputReader did not contain the values specified", outputReader.readLine().contains(String.valueOf(itemCount)))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/PartitionFileJobFunctionalTests.java linha: 67 Método: assertTrue(applicationContext.containsBeanDefinition("outputTestReader"), "Define a prototype bean called 'outputTestReader' to check the output")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/PartitionFileJobFunctionalTests.java linha: 86 Método: assertTrue(itemCount > 0, "No entries were available in the input")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/DatabaseShutdownFunctionalTests.java linha: 77 Método: assertFalse(jobExecution.isRunning(), "Timed out waiting for job to end.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-samples/src/test/java/org/springframework/batch/sample/GracefulShutdownFunctionalTests.java linha: 80 Método: assertFalse(jobExecution.isRunning(), "Timed out waiting for job to end.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 68 Método: assertNotNull(chunkProcessor, "ChunkProcessor must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 71 Método: assertNotNull(itemWriter, "ChunkProcessor ItemWriter must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 72 Método: assertTrue(itemWriter instanceof Writer, "Got wrong instance of ItemWriter")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 76 Método: assertNotNull(itemProcessor, "ChunkProcessor ItemWriter must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 77 Método: assertTrue(itemProcessor instanceof Processor, "Got wrong instance of ItemProcessor")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 80 Método: assertNotNull(serviceActivatorFactoryBean, "ServiceActivatorFactoryBean must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 81 Método: assertNotNull(TestUtils.getPropertyValue(serviceActivatorFactoryBean, "outputChannelName"), "Output channel name must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 85 Método: assertNotNull(inputChannel, "Input channel must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 88 Método: assertNotNull(targetMethodName, "Target method name must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 89 Método: assertEquals("handleChunk", targetMethodName, "Target method name must be handleChunk, got: " + targetMethodName)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 94 Método: assertNotNull(targetObject, "Target object must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 106 Método: assertNotNull(chunkProcessor, "ChunkProcessor must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 110 Método: assertNotNull(itemProcessor, "ChunkProcessor ItemWriter must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 111 Método: assertTrue(itemProcessor instanceof PassThroughItemProcessor, "Got wrong instance of ItemProcessor")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 121 Método: assertNotNull(TestUtils.getPropertyValue(itemWriter, "messagingGateway"), "Messaging template must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 123 Método: assertNotNull(TestUtils.getPropertyValue(itemWriter, "replyChannel"), "Reply channel must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 127 Método: assertNotNull(TestUtils.getPropertyValue(remoteChunkingHandlerFactoryBean, "chunkWriter"), "Chunk writer must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 129 Método: assertNotNull(TestUtils.getPropertyValue(remoteChunkingHandlerFactoryBean, "step"), "Step must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 140 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 155 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 170 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 185 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 200 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 215 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 230 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/RemoteChunkingParserTests.java linha: 245 Método: assertTrue(exception.getCause() instanceof IllegalArgumentException, "Nested exception must be of type IllegalArgumentException")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/JobLaunchingGatewayParserTests.java linha: 62 Método: assertEquals(123L, sendTimeout, "Wrong sendTimeout")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/config/xml/JobLaunchingGatewayParserTests.java linha: 75 Método: assertEquals(-1L, sendTimeout, "Wrong sendTimeout")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/chunk/ChunkMessageItemWriterIntegrationTests.java linha: 199 Método: assertTrue(message.contains("wrong job"), "Message does not contain 'wrong job': " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/chunk/ChunkMessageItemWriterIntegrationTests.java linha: 231 Método: assertTrue(message.contains("fail"), "Message does not contain 'fail': " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/chunk/ChunkMessageItemWriterIntegrationTests.java linha: 269 Método: assertTrue(message.toLowerCase().contains("timed out"), "Message did not contain 'timed out': " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/chunk/ChunkMessageItemWriterIntegrationTests.java linha: 302 Método: assertTrue(exitDescription.contains(AsynchronousFailureException.class.getName()), "Exit description does not contain exception type name: " + exitDescription)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/partition/JmsIntegrationTests.java linha: 68 Método: assertEquals(BatchStatus.COMPLETED, jobExecution.getStatus(), jobExecution.getExitStatus().getExitDescription())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingMessageHandlerTests.java linha: 51 Método: assertEquals(1, jobLauncher.jobs.size(), "Wrong job count")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingMessageHandlerTests.java linha: 52 Método: assertEquals("testjob", jobLauncher.jobs.get(0).getName(), "Wrong job name")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingMessageHandlerIntegrationTests.java linha: 71 Método: assertTrue(message.contains("replyChannel"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingMessageHandlerIntegrationTests.java linha: 74 Método: assertNull(executionMessage, "JobExecution message received when no return address set")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingMessageHandlerIntegrationTests.java linha: 91 Método: assertNotNull(executionMessage, "No response received")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingMessageHandlerIntegrationTests.java linha: 93 Método: assertNotNull(execution, "JobExecution not returned")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 88 Método: assertTrue(message.contains("replyChannel"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 91 Método: assertNull(executionMessage, "JobExecution message received when no return address set")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 108 Método: assertNotNull(executionMessage, "No response received")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 110 Método: assertNotNull(execution, "JobExecution not returned")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 121 Método: assertTrue(message.contains("The payload must be of type JobLaunchRequest."), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 124 Método: assertNull(executionMessage, "JobExecution message received when no return address set")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 145 Método: assertNotNull(executionMessage, "No response received")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-integration/src/test/java/org/springframework/batch/integration/launch/JobLaunchingGatewayIntegrationTests.java linha: 148 Método: assertNotNull(execution, "JobExecution not returned")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/ExecutionContextTests.java linha: 50 Método: assertEquals(4.4, context.getDouble("4"), 0)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/ExecutionContextTests.java linha: 51 Método: assertEquals(5.5, context.getDouble("55", 5.5), 0)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/validator/SpringValidatorTests.java linha: 93 Método: assertTrue(message.contains("TestBeanToString"), "message should contain the item#toString() value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/validator/SpringValidatorTests.java linha: 94 Método: assertTrue(message.contains("foo"), "message should contain names of the invalid fields")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/validator/SpringValidatorTests.java linha: 95 Método: assertTrue(message.contains("bar"), "message should contain names of the invalid fields")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/RepositoryItemReaderTests.java linha: 185 Método: assertSame(objectList.get(85), o, "Fetched object should be at index 85 in the current page")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/RepositoryItemReaderTests.java linha: 204 Método: assertSame(objectList.get(0), reader.doRead(), "Fetched object should be the first one in the current page")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 85 Método: assertEquals(TEST_CONTENT, result, "Result returned from reader was not expected value.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 86 Método: assertEquals(10, this.pageRequestContainer.getValue().getPageSize(), "page size was not expected value.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 93 Método: assertNull(reader.read(), "Result returned from reader was not null.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 101 Método: assertEquals(2, this.pageRequestContainer.getValue().getPageSize(), "page size was not expected value.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 195 Método: assertEquals(TEST_CONTENT, result, "Result returned from reader was not expected value.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 196 Método: assertEquals(ARG1, arg1Captor.getValue(), "ARG1 for calling method did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 197 Método: assertEquals(ARG2, arg2Captor.getValue(), "ARG2 for calling method did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 198 Método: assertEquals(ARG3, arg3Captor.getValue(), "ARG3 for calling method did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/RepositoryItemReaderBuilderTests.java linha: 199 Método: assertEquals(10, this.pageRequestContainer.getValue().getPageSize(), "Result Total Pages did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/Neo4jItemReaderBuilderTests.java linha: 65 Método: assertEquals("foo", itemReader.read(), "The expected value was not returned by reader.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/Neo4jItemReaderBuilderTests.java linha: 66 Método: assertEquals("bar", itemReader.read(), "The expected value was not returned by reader.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/Neo4jItemReaderBuilderTests.java linha: 67 Método: assertEquals("baz", itemReader.read(), "The expected value was not returned by reader.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/Neo4jItemReaderBuilderTests.java linha: 81 Método: assertEquals("foo", itemReader.read(), "The expected value was not returned by reader.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/Neo4jItemReaderBuilderTests.java linha: 82 Método: assertNull(itemReader.read(), "The expected value was not should be null.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/Neo4jItemReaderBuilderTests.java linha: 100 Método: assertEquals("foo", itemReader.read(), "The expected value was not returned by reader.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 73 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 88 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 102 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 118 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 136 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 152 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/data/builder/MongoItemReaderBuilderTests.java linha: 165 Método: assertNull(reader.read(), "reader should not return result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/json/JsonFileItemWriterFunctionalTests.java linha: 315 Método: JSONAssert.assertEquals(getContent(expected), getContent(actual), false)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/Jaxb2NamespaceMarshallingTests.java linha: 136 Método: assertTrue(content.contains("<customer>bar</customer>"), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/TransactionalStaxEventItemWriterTests.java linha: 104 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/TransactionalStaxEventItemWriterTests.java linha: 155 Método: assertEquals(1, StringUtils.countOccurrencesOf(content, ("<header/>")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/TransactionalStaxEventItemWriterTests.java linha: 156 Método: assertEquals(1, StringUtils.countOccurrencesOf(content, TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/TransactionalStaxEventItemWriterTests.java linha: 208 Método: assertEquals(1, StringUtils.countOccurrencesOf(content, ("<header/>")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/TransactionalStaxEventItemWriterTests.java linha: 209 Método: assertEquals(1, StringUtils.countOccurrencesOf(content, TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 134 Método: assertTrue(executionContext.containsKey("test.position"), "execution context keys should be prefixed with writer name")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 183 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 193 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 411 Método: assertTrue(content.contains(("<header/>")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 412 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 505 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 517 Método: assertFalse(resource.getFile().exists(), "file should be deleted" + resource)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 561 Método: assertFalse(resource.getFile().exists(), "file should be deleted" + resource)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 581 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 601 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 646 Método: assertFalse(resource.getFile().exists(), "file should be deleted" + resource)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 652 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 666 Método: assertTrue(content.contains(("<root xmlns=\"https://www.springframework.org/test\">")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 668 Método: assertTrue(content.contains(TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 669 Método: assertTrue(content.contains(("</root>")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 685 Método: assertTrue(content.contains(("<ns:root xmlns:ns=\"https://www.springframework.org/test\">")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 687 Método: assertTrue(content.contains(NS_TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 688 Método: assertTrue(content.contains(("</ns:root>")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 689 Método: assertTrue(content.contains(("<ns:root")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 706 Método: assertTrue(content.contains(("<ns:root xmlns:ns=\"https://www.springframework.org/test\" " + "xmlns:foo=\"urn:org.test.foo\">")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 709 Método: assertTrue(content.contains(FOO_TEST_STRING), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 710 Método: assertTrue(content.contains(("</ns:root>")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 711 Método: assertTrue(content.contains(("<ns:root")), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 737 Método: assertEquals("<root xmlns=\"https://www.springframework.org/test\"><item/><item/></root>", content, "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 764 Método: assertEquals("<ns:root xmlns:ns=\"https://www.springframework.org/test\"><ns:item/><ns:item/></ns:root>", content, "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 793 Método: assertEquals("<foo:root xmlns:foo=\"urn:org.test.foo\" xmlns:ns=\"https://www.springframework.org/test\"><ns:item/><ns:item/></foo:root>", content, "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 836 Método: assertEquals("<ns:testroot xmlns:ns=\"https://www.springframework.org/test\"><ns:group><StaxEventItemWriter-testString/></ns:group></ns:testroot>", content, "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 859 Método: assertEquals("<ns:testroot xmlns:ns=\"https://www.springframework.org/test\">" + "<ns:group><StaxEventItemWriter-testString/><StaxEventItemWriter-testString/></ns:group></ns:testroot>", content, "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/StaxEventItemWriterTests.java linha: 882 Método: assertEquals("<ns:testroot xmlns:ns=\"https://www.springframework.org/test\">" + "<preHeader>PRE-HEADER</preHeader><ns:group><subGroup><postHeader>POST-HEADER</postHeader>" + "<StaxEventItemWriter-testString/><StaxEventItemWriter-testString/>" + "<preFooter>PRE-FOOTER</preFooter></subGroup></ns:group><postFooter>POST-FOOTER</postFooter>" + "</ns:testroot>", content, "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/xml/Jaxb2MarshallingTests.java linha: 41 Método: assertTrue(content.contains("<customer>bar</customer>"), "Wrong content: " + content)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/mail/DefaultMailErrorHandlerTests.java linha: 48 Método: assertTrue(message.matches(".*SimpleMailMessage: f.*"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/jms/builder/JmsItemWriterBuilderTests.java linha: 47 Método: assertEquals("foo", argCaptor.getAllValues().get(0), "Expected foo")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/jms/builder/JmsItemWriterBuilderTests.java linha: 48 Método: assertEquals("bar", argCaptor.getAllValues().get(1), "Expected bar")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 64 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 76 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 87 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 98 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 109 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 121 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 132 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 144 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 157 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 170 Método: assertEquals(true, scriptItemProcessor.process("Hello World"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 210 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 223 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/ScriptItemProcessorTests.java linha: 236 Método: assertEquals("SS", scriptItemProcessor.process("ss"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/builder/ScriptItemProcessorBuilderTests.java linha: 64 Método: assertEquals("AA", scriptItemProcessor.process("aa"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/builder/ScriptItemProcessorBuilderTests.java linha: 73 Método: assertEquals(true, scriptItemProcessor.process("Hello World"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/support/builder/ScriptItemProcessorBuilderTests.java linha: 83 Método: assertEquals("BB", scriptItemProcessor.process("bb"), "Incorrect transformed value")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 412 Método: assertEquals(9876.1, bean.getVarDouble(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 413 Método: assertEquals(7890.1, bean.getVarFloat(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 428 Método: assertEquals(bean.getVarString(), "CONVERTED", "Expecting the conversion to have returned \"CONVERTED\"")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 453 Método: assertEquals(bean.getVarInt(), 12, "Expected 12 for varInt")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 454 Método: assertEquals(bean.getVarLong(), 12345L, "Expected 12345 for varLong")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 455 Método: assertEquals(bean.isVarBoolean(), true, "Expected true for varBoolean")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 456 Método: assertEquals(bean.getVarChar(), 'Z', "Expected Z for varChar")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 457 Método: assertEquals(bean.getVarByte(), 123, "Expected A for varByte")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 458 Método: assertEquals(bean.getVarFloat(), 12345F, 1F, "Expected 12345 for varFloat")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 459 Método: assertEquals(bean.getVarDouble(), 12345D, 1D, "Expected 12345 for varDouble")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 460 Método: assertEquals(bean.getVarShort(), 12, "Expected 12 for varShort")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 461 Método: assertEquals(bean.getVarDate().toString(), dateString, "Expected currentDate for varDate")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 462 Método: assertEquals(bean.getVarBigDecimal(), bigDecimal, "Expected 12345 for varBigDecimal")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 463 Método: assertEquals(bean.getVarString(), sampleString, "Expected " + sampleString + " for varString")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 508 Método: assertEquals(9876.1, bean.getValue(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 509 Método: assertEquals(7890.1, bean.getOther(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 529 Método: assertEquals(9876.1, bean.getValue(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/mapping/BeanWrapperFieldSetMapperTests.java linha: 530 Método: assertEquals(7890.1, bean.getOther(), 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/MultiResourceItemReaderIntegrationTests.java linha: 406 Método: assertTrue(true, "empty input doesn't cause an error")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/FlatFileItemWriterTests.java linha: 536 Método: assertTrue(file.exists(), "Test file must exist: " + file)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/FlatFileItemWriterTests.java linha: 537 Método: assertTrue(file.getFile().setReadOnly(), "Test file set to read-only: " + file)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/FlatFileItemWriterTests.java linha: 538 Método: assertFalse(file.getFile().canWrite(), "Should be readonly file: " + file)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/FlatFileItemWriterTests.java linha: 542 Método: assertTrue(message.contains("writable"), "Message does not contain 'writable': " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/FlatFileItemWriterTests.java linha: 821 Método: assertFalse(toBeCreated.exists(), "output file does not exist yet")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/FlatFileItemWriterTests.java linha: 827 Método: assertTrue(toBeCreated.exists(), "output file was created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 35 Método: assertTrue(tokens.readString(0).equals("sfd"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 36 Método: assertTrue(tokens.readString(1).equals("Well,I have no idea what to do in the afternoon"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 37 Método: assertTrue(tokens.readString(2).equals("sFj"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 38 Método: assertTrue(tokens.readString(3).equals("asdf"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 39 Método: assertTrue(tokens.readString(4).equals(""), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 40 Método: assertTrue(tokens.readString(5).equals("as"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 44 Método: assertTrue(tokens.readString(0).equals("First string"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 45 Método: assertTrue(tokens.readString(1).equals(""), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 51 Método: assertTrue(tokens.readString(0).equals(""), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 57 Método: assertTrue(tokens.readString(0).equals(""), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 96 Método: assertTrue(tokens.readString(0).equals("a"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 97 Método: assertTrue(tokens.readString(1).equals("b"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 121 Método: assertTrue(tokens.readString(0).equals("a"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 122 Método: assertTrue(tokens.readString(1).equals("b"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 123 Método: assertTrue(tokens.readString(2).equals("c"), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 124 Método: assertTrue(tokens.readString(3).equals(""), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DelimitedLineTokenizerTests.java linha: 125 Método: assertTrue(tokens.readString(4).equals(""), TOKEN_MATCHES)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DefaultFieldSetTests.java linha: 112 Método: assertEquals(354224, fieldSet.readFloat(5), .001)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DefaultFieldSetTests.java linha: 113 Método: assertEquals(354224, fieldSet.readFloat("Integer"), .001)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DefaultFieldSetTests.java linha: 128 Método: assertEquals(354224, fieldSet.readDouble(5), .001)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DefaultFieldSetTests.java linha: 129 Método: assertEquals(354224, fieldSet.readDouble("Integer"), .001)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DefaultFieldSetTests.java linha: 370 Método: assertTrue(message.contains("dd-MM-yyyy"), "Message did not contain: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/transform/DefaultFieldSetTests.java linha: 378 Método: assertTrue(message.contains("yyyyMMdd"), "Message did not contain: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/HibernateItemWriterTests.java linha: 67 Método: assertTrue(message.contains("SessionFactory"), "Wrong message for exception: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 69 Método: assertNotSame(con1, con2, "shouldn't be the same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 71 Método: assertTrue(csds.shouldClose(con1), "should be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 73 Método: assertTrue(csds.shouldClose(con2), "should be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 79 Método: assertSame(con3, con3_1, "should be same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 80 Método: assertFalse(csds.shouldClose(con3), "should not be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 83 Método: assertSame(con3, con3_2, "should be same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 85 Método: assertNotSame(con3, con4, "shouldn't be same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 87 Método: assertTrue(csds.shouldClose(con3), "should be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 91 Método: assertTrue(csds.shouldClose(con4), "should be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 111 Método: assertSame(con1, con1_1, "should be same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 114 Método: assertSame(con1, con1_2, "should be same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 116 Método: assertNotSame(con1, con2, "shouldn't be same connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 118 Método: assertTrue(csds.shouldClose(con1), "should be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/ExtendedConnectionDataSourceProxyTests.java linha: 122 Método: assertTrue(csds.shouldClose(con2), "should be able to close connection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JpaItemWriterTests.java linha: 66 Método: assertTrue(message.contains("EntityManagerFactory"), "Wrong message for exception: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/H2PagingQueryProviderIntegrationTests.java linha: 67 Método: assertArrayEquals(new String[] { "Spring", "Batch" }, firstPage.toArray(), "firstPage")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/H2PagingQueryProviderIntegrationTests.java linha: 71 Método: assertArrayEquals(new String[] { "Infrastructure" }, secondPage.toArray(), "secondPage")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/SqlPagingQueryProviderFactoryBeanTests.java linha: 87 Método: assertTrue(query.contains("x=y"), "Wrong query: " + query)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/SqlPagingQueryProviderFactoryBeanTests.java linha: 94 Método: assertTrue(query.contains("ASC"), "Wrong query: " + query)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/DerbyPagingQueryProviderTests.java linha: 101 Método: assertTrue(s.contains("id asc"), "Wrong query: " + s)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/DerbyPagingQueryProviderTests.java linha: 113 Método: assertTrue(s.contains("id desc"), "Wrong query: " + s)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/AbstractSqlPagingQueryProviderTests.java linha: 58 Método: assertTrue(s.contains("id asc"), "Wrong query: " + s)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/support/AbstractSqlPagingQueryProviderTests.java linha: 65 Método: assertTrue(s.contains("id desc"), "Wrong query: " + s)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterClassicTests.java linha: 89 Método: assertTrue(exception.getMessage().contains("NamedParameterJdbcTemplate"), "Message does not contain ' NamedParameterJdbcTemplate'.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterClassicTests.java linha: 95 Método: assertTrue(message.toLowerCase().contains("sql"), "Message does not contain 'sql'.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterClassicTests.java linha: 99 Método: assertTrue(exception.getMessage().contains("ItemPreparedStatementSetter"), "Message does not contain 'ItemPreparedStatementSetter'.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterClassicTests.java linha: 122 Método: assertTrue(message.contains("did not update"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 56 Método: assertEquals(2, books.size(), "Books list size must be = 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 57 Método: assertEquals("author 1 - book 1", books.get(0).getName(), "First book must be author 1 - book 1")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 58 Método: assertEquals("author 1 - book 2", books.get(1).getName(), "Second book must be author 1 - book 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 70 Método: assertEquals(2, books.size(), "Books list size must be = 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 71 Método: assertEquals("author 2 - book 1", books.get(0).getName(), "First book must be author 2 - book 1")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 72 Método: assertEquals("author 2 - book 2", books.get(1).getName(), "Second book must be author 2 - book 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 85 Método: assertEquals(2, books.size(), "Books list size must be = 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 86 Método: assertEquals("author 3 - book 1", books.get(0).getName(), "First book must be author 3 - book 1")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 87 Método: assertEquals("author 3 - book 2", books.get(1).getName(), "Second book must be author 3 - book 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 100 Método: assertEquals(2, books.size(), "Books list size must be = 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 101 Método: assertEquals("author 2 - book 1", books.get(0).getName(), "First book must be author 2 - book 1")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 102 Método: assertEquals("author 2 - book 2", books.get(1).getName(), "Second book must be author 2 - book 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 116 Método: assertEquals(2, books.size(), "Books list size must be = 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 117 Método: assertEquals("author 3 - book 1", books.get(0).getName(), "First book must be author 3 - book 1")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/RepositoryItemReaderIntegrationTests.java linha: 118 Método: assertEquals("author 3 - book 2", books.get(1).getName(), "Second book must be author 3 - book 2")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterNamedParameterTests.java linha: 106 Método: assertTrue(message.contains("NamedParameterJdbcTemplate"), "Message does not contain 'NamedParameterJdbcTemplate'.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterNamedParameterTests.java linha: 112 Método: assertTrue(message.contains("sql"), "Message does not contain 'sql'.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/JdbcBatchItemWriterNamedParameterTests.java linha: 179 Método: assertTrue(message.contains("did not update"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/item/util/FileUtilsTests.java linha: 174 Método: assertTrue(message.startsWith("Output file was not created"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/context/SynchronizedAttributeAccessorTests.java linha: 43 Método: assertEquals(accessor.hashCode(), another.hashCode(), "Object.hashCode() contract broken")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/interceptor/RepeatOperationsInterceptorTests.java linha: 109 Método: assertTrue(message.toLowerCase().contains("no result available"), "Wrong exception message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/interceptor/RepeatOperationsInterceptorTests.java linha: 214 Método: assertTrue(message.contains("MethodInvocation"), "Exception message should contain MethodInvocation: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/jms/SynchronousTests.java linha: 161 Método: assertTrue(msgs.contains("foo"), "Foo not on queue")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/jms/SynchronousTests.java linha: 198 Método: assertTrue(session instanceof SessionProxy, "Not a SessionProxy - wrong spring version?")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/jms/SynchronousTests.java linha: 228 Método: assertTrue(msgs.contains("foo"), "Foo not on queue")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/jms/SynchronousTests.java linha: 229 Método: assertTrue(msgs.contains("bar"), "Bar not on queue")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/jms/AsynchronousTests.java linha: 173 Método: assertTrue(msgs.contains("foo"), "Foo not on queue")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 73 Método: assertTrue(count >= 1, "Too few attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 74 Método: assertTrue(count <= 10, "Too many attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 100 Método: assertTrue(count >= 1, "Too few attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 101 Método: assertTrue(count <= 10, "Too many attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 116 Método: assertNotSame(context, context.getParent(), "Nested batch should have new session")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 130 Método: assertTrue(count >= 1, "Too few attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/TaskExecutorRepeatTemplateAsynchronousTests.java linha: 131 Método: assertTrue(count <= 10, "Too many attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/ThrottleLimitResultQueueTests.java linha: 79 Método: assertTrue(t1 - t0 > 50, "Did not block on expect (throttle limit should have been hit): time taken=" + (t1 - t0))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/ChunkedRepeatTests.java linha: 107 Método: assertTrue(count >= 3, "Expected at least 3 chunks but found: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/SimpleRepeatTemplateTests.java linha: 93 Método: assertTrue(count <= 10, "Too many attempts: " + count)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/SimpleRepeatTemplateTests.java linha: 253 Método: assertNotSame(context, context.getParent(), "Nested batch should have new session")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/repeat/support/SimpleRepeatTemplateTests.java linha: 301 Método: assertNotSame(context, context.getParent(), "Nested batch should have new session")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/support/PropertiesConverterTests.java linha: 57 Método: assertTrue(value.contains("key1=value1"), "Wrong value: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/support/PropertiesConverterTests.java linha: 58 Método: assertTrue(value.contains("key2=value2"), "Wrong value: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/support/transaction/TransactionAwareBufferedWriterTests.java linha: 265 Método: assertEquals("Planned failure", message, "Wrong message:  " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/support/transaction/ConcurrentTransactionAwareProxyTests.java linha: 177 Método: assertEquals(innerMax, result.size(), "Wrong number of results in inner task")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/support/transaction/ConcurrentTransactionAwareProxyTests.java linha: 180 Método: assertEquals(innerMax * outerMax, list.size(), "Wrong number of results in aggregate")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/container/jms/BatchMessageListenerContainerTests.java linha: 69 Método: assertTrue(received, "Message not received")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/container/jms/BatchMessageListenerContainerTests.java linha: 89 Método: assertFalse(received, "Message not received")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/container/jms/BatchMessageListenerContainerTests.java linha: 111 Método: assertTrue(received, "Message not received but listener not transactional so this should be true")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-infrastructure/src/test/java/org/springframework/batch/container/jms/BatchMessageListenerContainerTests.java linha: 121 Método: assertTrue(received, "Message not received but listener not transactional so this should be true")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/PartitionStepParserTests.java linha: 143 Método: assertNotNull(job3, "the reference to the job3 configured in the XML file must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/PartitionStepParserTests.java linha: 159 Método: assertNotNull(taskletStep, "the taskletStep wasn't configured with a step. " + "We're trusting that the factory ensured " + "a reference was given.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/PartitionStepParserTests.java linha: 182 Método: assertNotNull(job4, "the reference to the job4 configured in the XML file must not be null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/PartitionStepParserTests.java linha: 199 Método: assertNotNull(taskletStep, "the taskletStep wasn't configured with a step. " + "We're trusting that the factory ensured " + "a reference was given.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StopCustomStatusJobParserTests.java linha: 45 Método: assertEquals("[stop]", stepNamesList.toString(), "Wrong steps executed: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StopCustomStatusJobParserTests.java linha: 61 Método: assertEquals("[s2]", stepNamesList.toString(), "Wrong steps executed: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/SplitInterruptedJobParserTests.java linha: 53 Método: assertTrue(count < 10, "Timed out waiting for job to stop: " + jobExecution)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/SplitInterruptedJobParserTests.java linha: 58 Método: assertTrue(stepNamesList.contains("stop"), "Wrong step names: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/AutoRegisteringStepScopeTests.java linha: 37 Método: assertEquals(1, beans.size(), "StepScope not defined properly")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/AutoRegisteringStepScopeTests.java linha: 45 Método: assertEquals(1, beans.size(), "StepScope not defined properly")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 39 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 42 Método: assertTrue(chunkProcessor instanceof FaultTolerantChunkProcessor<?, ?>, "Wrong processor type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 50 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 53 Método: assertTrue(chunkProcessor instanceof FaultTolerantChunkProcessor<?, ?>, "Wrong processor type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 61 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 64 Método: assertTrue(chunkProcessor instanceof FaultTolerantChunkProcessor<?, ?>, "Wrong processor type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 73 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 76 Método: assertTrue(chunkProcessor instanceof FaultTolerantChunkProcessor<?, ?>, "Wrong processor type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 85 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ParentStepFactoryBeanParserTests.java linha: 88 Método: assertTrue(chunkProcessor instanceof FaultTolerantChunkProcessor<?, ?>, "Wrong processor type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithSimpleTaskJobParserTests.java linha: 79 Método: assertTrue(step instanceof TaskletStep, "Wrong type for step name=" + stepName + ": " + step)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/JobParserExceptionTests.java linha: 51 Método: assertTrue(message.matches(".*Missing state for \\[StateTransition: \\[state=.*s2, pattern=\\*, next=.*s3\\]\\]"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/JobParserExceptionTests.java linha: 62 Método: assertTrue(message.startsWith("Configuration problem: You are using a version of the spring-batch XSD"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/JobParserJobFactoryBeanTests.java linha: 28 Método: assertTrue(factory.isSingleton(), "Expected singleton")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 68 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 71 Método: assertTrue(chunkProcessor instanceof SimpleChunkProcessor, "Wrong processor type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 79 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 87 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 140 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 145 Método: assertFalse(processorTransactional, "Flag not set")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 153 Método: assertNotNull(step, "Step not parsed")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/ChunkElementParserTests.java linha: 165 Método: assertTrue(msg.contains("The field 'processor-transactional' cannot be false if 'reader-transactional"), "Wrong message: " + msg)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithBasicProcessTaskJobParserTests.java linha: 71 Método: assertEquals(10, ci, "wrong chunk-size:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithBasicProcessTaskJobParserTests.java linha: 73 Método: assertEquals(2, ((Set<StepExecutionListener>) listeners).size(), "wrong number of listeners:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithBasicProcessTaskJobParserTests.java linha: 75 Método: assertEquals(1, ((ItemStream[]) streams).length, "wrong number of streams:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 78 Método: assertEquals(10, ci, "wrong chunk-size:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 80 Método: assertEquals(20, sl, "wrong skip-limit:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 82 Método: assertEquals(3, rl, "wrong retry-limit:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 84 Método: assertEquals(100, cc, "wrong cache-capacity:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 85 Método: assertEquals(Propagation.REQUIRED, ReflectionTestUtils.getField(factory, "propagation"), "wrong transaction-attribute:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 87 Método: assertEquals(Isolation.DEFAULT, ReflectionTestUtils.getField(factory, "isolation"), "wrong transaction-attribute:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 89 Método: assertEquals(10, ReflectionTestUtils.getField(factory, "transactionTimeout"), "wrong transaction-attribute:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 91 Método: assertEquals(true, txq, "wrong reader-transactional-queue:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 93 Método: assertEquals(ConcurrentTaskExecutor.class, te.getClass(), "wrong task-executor:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 95 Método: assertEquals(2, ((Set<StepExecutionListener>) listeners).size(), "wrong number of listeners:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 97 Método: assertEquals(2, ((RetryListener[]) retryListeners).length, "wrong number of retry-listeners:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepWithFaultTolerantProcessTaskJobParserTests.java linha: 99 Método: assertEquals(1, ((ItemStream[]) streams).length, "wrong number of streams:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/AutoRegisteringJobScopeTests.java linha: 38 Método: assertEquals(1, beans.size(), "JobScope not defined properly")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/AutoRegisteringJobScopeTests.java linha: 46 Método: assertEquals(1, beans.size(), "JobScope not defined properly")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StopIncompleteJobParserTests.java linha: 45 Método: assertEquals("[fail]", stepNamesList.toString(), "Wrong steps executed: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StopIncompleteJobParserTests.java linha: 61 Método: assertEquals("[s2]", stepNamesList.toString(), "Wrong steps executed: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/SplitDifferentResultsFailSecondJobParserTests.java linha: 40 Método: assertEquals(3, stepNamesList.size(), "Wrong step names: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/SplitDifferentResultsFailSecondJobParserTests.java linha: 41 Método: assertTrue(stepNamesList.contains("s1"), "Wrong step names: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/SplitDifferentResultsFailSecondJobParserTests.java linha: 42 Método: assertTrue(stepNamesList.contains("fail"), "Wrong step names: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepNameTests.java linha: 66 Método: assertFalse(stepNames.isEmpty(), "Job has no steps: " + jobName)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepNameTests.java linha: 69 Método: assertEquals(stepName, registeredName, "Step name not equal to registered value: " + stepName + "!=" + registeredName + ", " + jobName)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/SplitDifferentResultsFailFirstJobParserTests.java linha: 40 Método: assertEquals("[fail, s1]", stepNamesList.toString(), "Wrong step names: " + stepNamesList)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepParserTests.java linha: 91 Método: assertEquals(25, bean.getStartLimit(), "wrong start-limit:")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepParserTests.java linha: 101 Método: assertTrue(beans.containsKey("s1"), "'s1' bean not found")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepParserTests.java linha: 103 Método: assertEquals("s1", s1.getName(), "wrong name")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepParserTests.java linha: 117 Método: assertTrue(beans.containsKey("s1"), "'s1' bean not found")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/xml/StepParserTests.java linha: 129 Método: assertTrue(beans.containsKey("s1"), "'s1' bean not found")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/support/GenericApplicationContextFactoryTests.java linha: 59 Método: assertTrue(context.getId().contains("trivial-context.xml"), "Wrong id: " + context)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/support/GenericApplicationContextFactoryTests.java linha: 78 Método: assertEquals(4, context.getBean("foo", Foo.class).values[1], 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/support/GenericApplicationContextFactoryTests.java linha: 120 Método: assertEquals(4, context.getBean("foo", Foo.class).values[1], 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/support/GenericApplicationContextFactoryTests.java linha: 135 Método: assertEquals(4, context.getBean("foo", Foo.class).values[1], 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/configuration/support/GenericApplicationContextFactoryTests.java linha: 170 Método: assertEquals(4, context.getBean("foo", Foo.class).values[1], 0.01)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 167 Método: assertTrue(execution.toString().contains("read"), "Should contain read count: " + execution.toString())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 168 Método: assertTrue(execution.toString().contains("write"), "Should contain write count: " + execution.toString())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 169 Método: assertTrue(execution.toString().contains("filter"), "Should contain filter count: " + execution.toString())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 170 Método: assertTrue(execution.toString().contains("commit"), "Should contain commit count: " + execution.toString())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 171 Método: assertTrue(execution.toString().contains("rollback"), "Should contain rollback count: " + execution.toString())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 240 Método: assertTrue(new Entity(execution.getId()).hashCode() != execution.hashCode(), "Hash code same as parent")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/StepExecutionTests.java linha: 245 Método: assertTrue(new Entity(execution.getId()).hashCode() != blankExecution.hashCode(), "Hash code not same as parent")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/context/ChunkContextTests.java linha: 59 Método: assertTrue(value.contains("stepContext="), "Wrong toString: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/context/ChunkContextTests.java linha: 60 Método: assertTrue(value.contains("complete=false"), "Wrong toString: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/context/ChunkContextTests.java linha: 61 Método: assertTrue(value.contains("attributes=[]"), "Wrong toString: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/StepScopeProxyTargetClassOverrideIntegrationTests.java linha: 131 Método: assertTrue(((String) TestStep.getContext().getAttribute("parent.class")).matches(CGLIB_PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/StepScopeProxyTargetClassOverrideIntegrationTests.java linha: 140 Método: assertTrue(((String) TestStep.getContext().getAttribute("parent.class")).matches(CGLIB_PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/StepScopeProxyTargetClassOverrideIntegrationTests.java linha: 149 Método: assertTrue(((String) TestStep.getContext().getAttribute("parent.class")).matches(JDK_PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/StepScopeIntegrationTests.java linha: 81 Método: assertTrue(((String) TestStep.getContext().getAttribute("collaborator.class")).matches(PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/StepScopeIntegrationTests.java linha: 95 Método: assertTrue(((String) TestStep.getContext().getAttribute("parent.class")).matches(PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/JobScopeIntegrationTests.java linha: 80 Método: assertTrue(((String) TestJob.getContext().getAttribute("collaborator.class")).matches(PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/scope/JobScopeIntegrationTests.java linha: 94 Método: assertTrue(((String) TestJob.getContext().getAttribute("parent.class")).matches(PROXY_TO_STRING_REGEX), "Scoped proxy not created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/JobParametersBuilderTests.java linha: 95 Método: assertEquals(1, parameters.getDouble("DOUBLE").doubleValue(), 1e-15)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/JobParametersBuilderTests.java linha: 111 Método: assertEquals(1, parameters.getDouble("DOUBLE").doubleValue(), 1e-15)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/repository/JdbcJobRepositoryTests.java linha: 196 Método: assertEquals(1, list.size(), "Timed out waiting for JobExecution to be created")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/repository/JdbcJobRepositoryTests.java linha: 197 Método: assertTrue(list.get(0) instanceof JobExecution, "JobExecution not created in thread: " + list.get(0))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/LdifReaderTests.java linha: 99 Método: assertEquals(expectedLine, actualLine, "Line number " + lineNum + " does not match.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/LdifReaderTests.java linha: 103 Método: assertNull(actualLine, "More lines than expected.  There should not be a line number " + lineNum + ".")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 67 Método: assertEquals("cn=Bjorn Jensen, ou=Accounting, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the second record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 76 Método: assertEquals("cn=Barbara Jensen, ou=Product Development, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the first record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 87 Método: assertEquals("cn=Gern Jensen, ou=Product Testing, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the third record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 97 Método: assertEquals("cn=Barbara Jensen, ou=Product Development, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the first record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 101 Método: assertNull(ldapAttributes, "The second read should have returned null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 110 Método: assertEquals("cn=Barbara Jensen, ou=Product Development, dc=airius, dc=com", this.callbackAttributeName, "The attribute name from the callback handler did not match the  expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 121 Método: assertEquals(1, executionContext.getInt("foo.read.count"), "foo.read.count did not have the expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 131 Método: assertEquals(0, executionContext.size(), "ExecutionContext should have been empty")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 141 Método: assertEquals("Failed to initialize the reader", exception.getMessage(), "IllegalStateException message did not match the expected result.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/MappingLdifReaderBuilderTests.java linha: 154 Método: assertEquals("RecordMapper is required.", exception.getMessage(), "IllegalArgumentException message did not match the expected result.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 64 Método: assertEquals("cn=Bjorn Jensen, ou=Accounting, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the second record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 73 Método: assertEquals("cn=Barbara Jensen, ou=Product Development, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the first record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 83 Método: assertEquals("cn=Gern Jensen, ou=Product Testing, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the third record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 92 Método: assertEquals("cn=Barbara Jensen, ou=Product Development, dc=airius, dc=com", ldapAttributes.getName().toString(), "The attribute name for the first record did not match expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 96 Método: assertNull(ldapAttributes, "The second read should have returned null")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 104 Método: assertEquals("cn=Barbara Jensen, ou=Product Development, dc=airius, dc=com", this.callbackAttributeName, "The attribute name from the callback handler did not match the  expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 115 Método: assertEquals(1, executionContext.getInt("foo.read.count"), "foo.read.count did not have the expected result")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 125 Método: assertEquals(0, executionContext.size(), "ExecutionContext should have been empty")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/test/ldif/builder/LdifReaderBuilderTests.java linha: 135 Método: assertEquals("Failed to initialize the reader", exception.getMessage(), "IllegalStateException message did not match the expected result.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/ExtendedAbstractJobTests.java linha: 117 Método: assertTrue(value.contains("name="), "Should contain name: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/ExtendedAbstractJobTests.java linha: 147 Método: assertTrue(description.contains("FOO"), "Wrong description: " + description)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 40 Método: assertTrue(first.compareTo(second) < 0, "Should be negative")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 41 Método: assertTrue(second.compareTo(first) > 0, "Should be positive")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 48 Método: assertTrue(first.compareTo(second) < 0, "Should be negative")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 49 Método: assertTrue(second.compareTo(first) > 0, "Should be positive")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 56 Método: assertTrue(first.compareTo(second) < 0, "Should be negative")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 57 Método: assertTrue(second.compareTo(first) > 0, "Should be positive")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 64 Método: assertTrue(first.compareTo(second) < 0, "Should be negative")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 65 Método: assertTrue(second.compareTo(first) > 0, "Should be positive")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 72 Método: assertTrue(first.compareTo(second) < 0, "Should be negative")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/FlowExecutionTests.java linha: 73 Método: assertTrue(second.compareTo(first) > 0, "Should be positive")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/StateTransitionTests.java linha: 81 Método: assertTrue(string.contains("Transition"), "Wrong string: " + string)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/StateTransitionTests.java linha: 82 Método: assertTrue(string.contains("start"), "Wrong string: " + string)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/StateTransitionTests.java linha: 83 Método: assertTrue(string.contains("CONTIN???LE"), "Wrong string: " + string)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/StateTransitionTests.java linha: 84 Método: assertTrue(string.contains("next="), "Wrong string: " + string)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/SimpleFlowTests.java linha: 101 Método: assertTrue(message.toLowerCase().contains("next state not found"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/state/SimpleFlowExecutionAggregatorTests.java linha: 40 Método: assertTrue(first.compareTo(second) < 0, "Should be negative")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/flow/support/state/SimpleFlowExecutionAggregatorTests.java linha: 41 Método: assertTrue(second.compareTo(first) > 0, "Should be positive")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/SimpleJobTests.java linha: 358 Método: assertTrue(ex.getMessage().contains("start limit exceeded"), "Wrong message in exception: " + ex.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/job/SimpleJobTests.java linha: 398 Método: assertTrue(exitStatus.getExitDescription().contains("no steps configured"), "Wrong message in execution: " + exitStatus)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/JobExecutionTests.java linha: 192 Método: assertTrue(execution.toString().contains("id="), "JobExecution string does not contain id")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/JobExecutionTests.java linha: 193 Método: assertTrue(execution.toString().contains("foo"), "JobExecution string does not contain name: " + execution)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/JobExecutionTests.java linha: 199 Método: assertTrue(execution.toString().contains("id="), "JobExecution string does not contain id")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/JobExecutionTests.java linha: 200 Método: assertTrue(execution.toString().contains("job="), "JobExecution string does not contain job: " + execution)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/resource/StepExecutionSimpleCompletionPolicyTests.java linha: 61 Método: assertTrue("String does not contain chunk size", msg.contains("chunkSize=2"))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/partition/support/SimpleStepExecutionSplitterTests.java linha: 78 Método: assertNotNull(execution.getId(), "step execution partition is saved")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/partition/support/SimpleStepExecutionSplitterTests.java linha: 165 Método: assertTrue(message.contains("UNKNOWN"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/partition/support/SimpleStepExecutionSplitterTests.java linha: 204 Método: assertTrue(message.contains("STARTED"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/partition/support/SimpleStepExecutionSplitterTests.java linha: 221 Método: assertTrue(message.contains("ABANDONED"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/partition/support/TaskExecutorPartitionHandlerTests.java linha: 84 Método: assertEquals("A Step must be provided.", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/partition/support/TaskExecutorPartitionHandlerTests.java linha: 93 Método: assertTrue(message.contains("Step"), "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/TaskExecutorJobLauncherTests.java linha: 222 Método: assertTrue(exception.getMessage().toLowerCase().contains("repository"), "Message did not contain repository: " + exception.getMessage())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/SimpleJobOperatorTests.java linha: 133 Método: assertTrue(properties.containsKey("a"), "Wrong properties")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/SimpleJobOperatorTests.java linha: 306 Método: assertTrue(names.contains("foo"), "Wrong names: " + names)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 101 Método: assertTrue(StubJobParametersConverter.called, "Injected JobParametersConverter not used instead of default")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 109 Método: assertTrue(StubJobParametersConverter.called, "Injected JobParametersConverter not used instead of default")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 127 Método: assertTrue(errorMessage.contains("At least 2 arguments are required: JobPath/JobClass and jobIdentifier."), "Wrong error message: " + errorMessage)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 137 Método: assertTrue((errorMessage.contains("No bean named 'no-such-job' is defined") || (errorMessage.contains("No bean named 'no-such-job' available"))), "Wrong error message: " + errorMessage)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 242 Método: assertTrue(errorMessage.contains("in the form name=value"), "Wrong error message: " + errorMessage)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 346 Método: assertTrue(errorMessage.contains("No failed or stopped execution found"), "Wrong error message: " + errorMessage)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 378 Método: assertTrue(errorMessage.contains(" No job parameters incrementer found"), "Wrong error message: " + errorMessage)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/launch/support/CommandLineJobRunnerTests.java linha: 398 Método: assertTrue(errorMessage.contains("A JobLauncher must be provided.  Please add one to the configuration."), "Wrong error message: " + errorMessage)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/FaultTolerantStepFactoryBeanRetryTests.java linha: 627 Método: assertEquals("Write error - planned but not skippable.", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/SimpleStepFactoryBeanTests.java linha: 337 Método: assertTrue(writeListener.trail.startsWith("1234"), "Listener order not as expected: " + writeListener.trail)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/SimpleStepFactoryBeanTests.java linha: 460 Método: assertTrue(listenerCalls.contains(type), "Missing listener call: " + type + " from " + listenerCalls)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/FaultTolerantStepFactoryBeanTests.java linha: 464 Método: assertEquals("Ouch!", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/FaultTolerantStepFactoryBeanTests.java linha: 726 Método: assertEquals(3, stepExecution.getSkipCount(), "bad skip count")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/FaultTolerantStepFactoryBeanTests.java linha: 727 Método: assertEquals(2, stepExecution.getReadSkipCount(), "bad read skip count")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/FaultTolerantStepFactoryBeanTests.java linha: 728 Método: assertEquals(1, stepExecution.getWriteSkipCount(), "bad write skip count")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/FaultTolerantStepFactoryBeanTests.java linha: 851 Método: assertTrue(listenerCalls.contains(i), "didn't call listener " + i)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/SkipWrapperTests.java linha: 62 Método: assertTrue(wrapper.toString().contains("foo"), "foo")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/BatchRetryTemplateTests.java linha: 58 Método: assertTrue(context.getClass().getSimpleName().contains("Batch"), "Wrong context type: " + context.getClass().getSimpleName())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/item/AlmostStatefulRetryChunkTests.java linha: 72 Método: assertTrue(count < BACKSTOP_LIMIT, "Backstop reached.  Probably an infinite loop...")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/TaskletStepTests.java linha: 332 Método: assertTrue(description.contains("FOO"), "Description does not include 'FOO': " + description)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/TaskletStepTests.java linha: 632 Método: assertTrue(msg.contains("JobInterruptedException"), "Message does not contain 'JobInterruptedException': " + msg)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/TaskletStepTests.java linha: 716 Método: assertTrue(msg.contains("ResetFailedException"), "Message does not contain ResetFailedException: " + msg)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/StepExecutorInterruptionTests.java linha: 137 Método: assertTrue(count < 1000, "Timed out waiting for step to be interrupted.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/StepExecutorInterruptionTests.java linha: 188 Método: assertTrue(count < 1000, "Timed out waiting for step to be interrupted.")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/StepExecutorInterruptionTests.java linha: 211 Método: assertTrue(locked, "Lock released before it is acquired")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/AsyncTaskletStepTests.java linha: 141 Método: assertTrue(stepExecution.getCommitCount() > processed.size() / 2, "Not enough commits: " + stepExecution.getCommitCount())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/tasklet/AsyncTaskletStepTests.java linha: 143 Método: assertTrue(stepExecution.getCommitCount() <= processed.size() / 2 + throttleLimit + 1, "Too many commits: " + stepExecution.getCommitCount())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/job/JobStepTests.java linha: 105 Método: assertTrue(stepExecution.getExecutionContext().containsKey(JobStep.class.getName() + ".JOB_PARAMETERS"), "Missing job parameters in execution context: " + stepExecution.getExecutionContext())
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/NonAbstractStepTests.java linha: 215 Método: assertTrue(repository.saved.containsKey("beforeStep"), "Execution context modifications made by listener should be persisted")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/NonAbstractStepTests.java linha: 217 Método: assertTrue(repository.saved.containsKey("afterStep"), "Execution context modifications made by listener should be persisted")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/NonAbstractStepTests.java linha: 262 Método: assertTrue(exitDescription.contains("crash"), "Wrong message: " + exitDescription)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/NonAbstractStepTests.java linha: 264 Método: assertTrue(repository.saved.containsKey("afterStep"), "Execution context modifications made by listener should be persisted")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/NonAbstractStepTests.java linha: 300 Método: assertTrue(repository.saved.containsKey("afterStep"), "Execution context modifications made by listener should be persisted")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/step/NonAbstractStepTests.java linha: 324 Método: assertTrue(repository.saved.containsKey("afterStep"), "Execution context modifications made by listener should be persisted")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/JdbcJobInstanceDaoTests.java linha: 82 Método: assertEquals(32, output.length(), "Wrong hash: " + output)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/JdbcJobInstanceDaoTests.java linha: 84 Método: assertEquals(32, value.length(), "Wrong hash: " + value)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/JdbcStepExecutionDaoTests.java linha: 66 Método: assertTrue(retrievedAfterSave.getExitStatus().getExitDescription().length() < stepExecution.getExitStatus().getExitDescription().length(), "Exit description should be truncated")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/JdbcStepExecutionDaoTests.java linha: 73 Método: assertTrue(retrievedAfterUpdate.getExitStatus().getExitDescription().length() < stepExecution.getExitStatus().getExitDescription().length(), "Exit description should be truncated")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/AbstractJobInstanceDaoTests.java linha: 134 Método: assertTrue(jobInstances.get(0).getId() > jobInstances.get(1).getId(), "Last instance should be first on the list")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/AbstractJobInstanceDaoTests.java linha: 155 Método: assertEquals(jobInstances.get(0), lastJobInstance, "Last instance should be first on the list")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/JdbcJobDaoQueryTests.java linha: 82 Método: assertTrue("Query did not contain FOO_:" + query, query.contains("FOO_"))
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 78 Método: assertEquals(1, numStepExecutions, "Should only be one StepExecution but got: " + numStepExecutions)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 79 Método: assertEquals("step1", stepName, "Step name for execution should be step1 but got: " + stepName)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 80 Método: assertEquals(stepExecutionStatus, BatchStatus.STOPPED, "Step execution status should be STOPPED but got: " + stepExecutionStatus)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 82 Método: assertEquals(jobExecutionStatus, BatchStatus.STOPPED, "Job execution status should be STOPPED but got:" + jobExecutionStatus)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 95 Método: assertEquals(2, restartNumStepExecutions, "Should be two StepExecution's on restart but got: " + restartNumStepExecutions)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 101 Método: assertEquals(restartStepExecutionStatus, BatchStatus.COMPLETED, "Step execution status should be COMPLETED but got: " + restartStepExecutionStatus)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/OptimisticLockingFailureTests.java linha: 106 Método: assertEquals(restartJobExecutionStatus, BatchStatus.COMPLETED, "Job execution status should be COMPLETED but got:" + restartJobExecutionStatus)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/repository/dao/AbstractStepExecutionDaoTests.java linha: 301 Método: assertEquals(count, jobExecution.getStepExecutions().size(), "Incorrect size of collection")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/converter/DefaultJobParametersConverterTests.java linha: 128 Método: assertTrue(message.contains("foo"), "Message should contain wrong number: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/converter/DefaultJobParametersConverterTests.java linha: 142 Método: assertTrue(message.contains("1.03"), "Message should contain wrong number: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/converter/DefaultJobParametersConverterTests.java linha: 156 Método: assertTrue(message.contains("foo"), "Message should contain wrong number: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/converter/DefaultJobParametersConverterTests.java linha: 167 Método: assertEquals(1.38, props.getDouble("value"), Double.MIN_VALUE)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/converter/DefaultJobParametersConverterTests.java linha: 177 Método: assertEquals(1.0, props.getDouble("value"), Double.MIN_VALUE)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/converter/DefaultJobParametersConverterTests.java linha: 187 Método: assertEquals(1.0, props.getDouble("value"), Double.MIN_VALUE)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/ExitStatusTests.java linha: 152 Método: assertTrue(description.contains("Foo"), "Wrong description: " + description)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/ExitStatusTests.java linha: 153 Método: assertTrue(description.contains("RuntimeException"), "Wrong description: " + description)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 110 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 135 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 160 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 185 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 210 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 235 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 261 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 286 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 311 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 337 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 375 Método: assertEquals("foo", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 413 Método: assertEquals("foo", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 451 Método: assertEquals("foo", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 464 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 476 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 488 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 500 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 512 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 524 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 536 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/MulticasterBatchListenerTests.java linha: 548 Método: assertEquals("listener error", message, "Wrong message: " + message)
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/JobListenerFactoryBeanTests.java linha: 133 Método: assertTrue(listener instanceof Ordered, "Listener is not of correct type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/StepListenerFactoryBeanTests.java linha: 200 Método: assertTrue(listener instanceof Ordered, "Listener is not of correct type")
Assert com mensagem: /home/vitor-otto/opensource/spring-batch-5.0.1/spring-batch-core/src/test/java/org/springframework/batch/core/listener/StepListenerFactoryBeanTests.java linha: 216 Método: assertTrue(StepListenerFactoryBean.getListener(factory.getProxy()) instanceof StepExecutionListener, "Listener is not of correct type")
Total asserts: 7126
Asserts sem descrição: 6621
Asserts com descrição: 505
Assertion Roulette: 5361
